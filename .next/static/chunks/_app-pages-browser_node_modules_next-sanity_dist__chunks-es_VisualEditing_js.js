"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_next-sanity_dist__chunks-es_VisualEditing_js"],{

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js":
/*!***************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReplaySubject: () => (/* binding */ ReplaySubject)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Subject */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scheduler/dateTimestampProvider */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js\");\n\n\n\nvar ReplaySubject = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(ReplaySubject, _super);\n    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n        if (_bufferSize === void 0) {\n            _bufferSize = Infinity;\n        }\n        if (_windowTime === void 0) {\n            _windowTime = Infinity;\n        }\n        if (_timestampProvider === void 0) {\n            _timestampProvider = _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_1__.dateTimestampProvider;\n        }\n        var _this = _super.call(this) || this;\n        _this._bufferSize = _bufferSize;\n        _this._windowTime = _windowTime;\n        _this._timestampProvider = _timestampProvider;\n        _this._buffer = [];\n        _this._infiniteTimeWindow = true;\n        _this._infiniteTimeWindow = _windowTime === Infinity;\n        _this._bufferSize = Math.max(1, _bufferSize);\n        _this._windowTime = Math.max(1, _windowTime);\n        return _this;\n    }\n    ReplaySubject.prototype.next = function(value) {\n        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        var subscription = this._innerSubscribe(subscriber);\n        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;\n        var copy = _buffer.slice();\n        for(var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2){\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    };\n    ReplaySubject.prototype._trimBuffer = function() {\n        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;\n        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            var now = _timestampProvider.now();\n            var last = 0;\n            for(var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2){\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    };\n    return ReplaySubject;\n}(_Subject__WEBPACK_IMPORTED_MODULE_2__.Subject);\n //# sourceMappingURL=ReplaySubject.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9SZXBsYXlTdWJqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQW9DO0FBSXNDO0FBZ0MxRTtJQUFzQyx3RUFBVTtJQVU5Qyx1QkFDVSxXQUFzQixFQUN0QixXQUFzQixFQUN0QixrQkFBNkQ7UUFGN0Q7WUFBQSxzQkFBc0I7UUFBQTtRQUN0QjtZQUFBLHNCQUFzQjtRQUFBO1FBQ3RCO1lBQUEsd0dBQTZEO1FBQUE7UUFIdkUsWUFLRSxpQkFBTyxTQUlSO1FBUlMsaUJBQVcsR0FBWCxXQUFXLENBQVc7UUFDdEIsaUJBQVcsR0FBWCxXQUFXLENBQVc7UUFDdEIsd0JBQWtCLEdBQWxCLGtCQUFrQixDQUEyQztRQVovRCxhQUFPLEdBQW1CLEVBQUUsQ0FBQztRQUM3Qix5QkFBbUIsR0FBRyxJQUFJLENBQUM7UUFjakMsS0FBSSxDQUFDLG1CQUFtQixHQUFHLFdBQVcsS0FBSyxRQUFRLENBQUM7UUFDcEQsS0FBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxXQUFXLENBQUMsQ0FBQztRQUM1QyxLQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDOztJQUM5QyxDQUFDO0lBRUQsNEJBQUksR0FBSixTQUFLLEtBQVE7UUFDTCxTQUErRSxJQUFJLEVBQWpGLFNBQVMsaUJBQUUsT0FBTyxlQUFFLG1CQUFtQiwyQkFBRSxrQkFBa0IsMEJBQUUsV0FBVyxpQkFBUyxDQUFDO1FBQzFGLElBQUksQ0FBQyxTQUFTLEVBQUU7WUFDZCxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQ3BCLENBQUMsbUJBQW1CLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxHQUFHLEVBQUUsR0FBRyxXQUFXLENBQUMsQ0FBQztTQUM5RTtRQUNELElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUNuQixpQkFBTSxJQUFJLFlBQUMsS0FBSyxDQUFDLENBQUM7SUFDcEIsQ0FBQztJQUdTLGtDQUFVLEdBQXBCLFNBQXFCLFVBQXlCO1FBQzVDLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFbkIsSUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUVoRCxTQUFtQyxJQUFJLEVBQXJDLG1CQUFtQiwyQkFBRSxPQUFPLGFBQVMsQ0FBQztRQUc5QyxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDN0IsSUFBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSSxtQkFBbUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUU7WUFDdkYsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFNLENBQUMsQ0FBQztTQUMvQjtRQUVELElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUV6QyxPQUFPLFlBQVksQ0FBQztJQUN0QixDQUFDO0lBRU8sbUNBQVcsR0FBbkI7UUFDUSxTQUFvRSxJQUFJLEVBQXRFLFdBQVcsbUJBQUUsa0JBQWtCLDBCQUFFLE9BQU8sZUFBRSxtQkFBbUIseUJBQVMsQ0FBQztRQUsvRSxJQUFNLGtCQUFrQixHQUFHLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEVBQUcsV0FBVyxDQUFDO1FBQ3ZFLFdBQVcsR0FBRyxRQUFRLElBQUksa0JBQWtCLEdBQUcsT0FBTyxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxPQUFPLENBQUMsTUFBTSxHQUFHLGtCQUFrQixDQUFDLENBQUM7UUFJeEgsSUFBSSxDQUFDLG1CQUFtQixFQUFFO1lBQ3hCLElBQU0sR0FBRyxHQUFHLGtCQUFrQixDQUFDLEdBQUcsRUFBRSxDQUFDO1lBQ3JDLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQztZQUdiLElBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFLLE9BQU8sQ0FBQyxDQUFDLENBQVksSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBRTtnQkFDM0UsSUFBSSxHQUFHLENBQUMsQ0FBQzthQUNWO1lBQ0QsSUFBSSxJQUFJLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLElBQUksR0FBRyxDQUFDLENBQUMsQ0FBQztTQUNyQztJQUNILENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQ0F6RXFDLDZDQUFPIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9zcmMvaW50ZXJuYWwvUmVwbGF5U3ViamVjdC50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Scheduler.js":
/*!***********************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/Scheduler.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Scheduler: () => (/* binding */ Scheduler)\n/* harmony export */ });\n/* harmony import */ var _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scheduler/dateTimestampProvider */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js\");\n\nvar Scheduler = function() {\n    function Scheduler(schedulerActionCtor, now) {\n        if (now === void 0) {\n            now = Scheduler.now;\n        }\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function(work, delay, state) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    };\n    Scheduler.now = _scheduler_dateTimestampProvider__WEBPACK_IMPORTED_MODULE_0__.dateTimestampProvider.now;\n    return Scheduler;\n}();\n //# sourceMappingURL=Scheduler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9TY2hlZHVsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHMEU7QUFxQjFFO0lBR0UsbUJBQW9CLG1CQUFrQyxFQUFFLEdBQWlDO1FBQWpDO1lBQUEsTUFBb0IsU0FBUyxDQUFDLEdBQUc7UUFBQTtRQUFyRSx3QkFBbUIsR0FBbkIsbUJBQW1CLENBQWU7UUFDcEQsSUFBSSxDQUFDLEdBQUcsR0FBRyxHQUFHLENBQUM7SUFDakIsQ0FBQztJQTZCTSw0QkFBUSxHQUFmLFNBQW1CLElBQW1ELEVBQUUsS0FBaUIsRUFBRSxLQUFTO1FBQTVCO1lBQUEsU0FBaUI7UUFBQTtRQUN2RixPQUFPLElBQUksSUFBSSxDQUFDLG1CQUFtQixDQUFJLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFuQ2EsYUFBRyxHQUFpQixtRkFBcUIsQ0FBQyxHQUFHLENBQUM7SUFvQzlELGdCQUFDO0NBQUE7QUFyQ3FCIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9zcmMvaW50ZXJuYWwvU2NoZWR1bGVyLnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Scheduler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subject.js":
/*!*********************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/Subject.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnonymousSubject: () => (/* binding */ AnonymousSubject),\n/* harmony export */   Subject: () => (/* binding */ Subject)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Observable */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Subscription */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subscription.js\");\n/* harmony import */ var _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/ObjectUnsubscribedError */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js\");\n/* harmony import */ var _util_arrRemove__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/arrRemove */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/arrRemove.js\");\n/* harmony import */ var _util_errorContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/errorContext */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/errorContext.js\");\n\n\n\n\n\n\nvar Subject = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.closed = false;\n        _this.currentObservers = null;\n        _this.observers = [];\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype.lift = function(operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype._throwIfClosed = function() {\n        if (this.closed) {\n            throw new _util_ObjectUnsubscribedError__WEBPACK_IMPORTED_MODULE_1__.ObjectUnsubscribedError();\n        }\n    };\n    Subject.prototype.next = function(value) {\n        var _this = this;\n        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_2__.errorContext)(function() {\n            var e_1, _a;\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                if (!_this.currentObservers) {\n                    _this.currentObservers = Array.from(_this.observers);\n                }\n                try {\n                    for(var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__values)(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()){\n                        var observer = _c.value;\n                        observer.next(value);\n                    }\n                } catch (e_1_1) {\n                    e_1 = {\n                        error: e_1_1\n                    };\n                } finally{\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    } finally{\n                        if (e_1) throw e_1.error;\n                    }\n                }\n            }\n        });\n    };\n    Subject.prototype.error = function(err) {\n        var _this = this;\n        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_2__.errorContext)(function() {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.hasError = _this.isStopped = true;\n                _this.thrownError = err;\n                var observers = _this.observers;\n                while(observers.length){\n                    observers.shift().error(err);\n                }\n            }\n        });\n    };\n    Subject.prototype.complete = function() {\n        var _this = this;\n        (0,_util_errorContext__WEBPACK_IMPORTED_MODULE_2__.errorContext)(function() {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.isStopped = true;\n                var observers = _this.observers;\n                while(observers.length){\n                    observers.shift().complete();\n                }\n            }\n        });\n    };\n    Subject.prototype.unsubscribe = function() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    };\n    Object.defineProperty(Subject.prototype, \"observed\", {\n        get: function() {\n            var _a;\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Subject.prototype._trySubscribe = function(subscriber) {\n        this._throwIfClosed();\n        return _super.prototype._trySubscribe.call(this, subscriber);\n    };\n    Subject.prototype._subscribe = function(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    };\n    Subject.prototype._innerSubscribe = function(subscriber) {\n        var _this = this;\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n        if (hasError || isStopped) {\n            return _Subscription__WEBPACK_IMPORTED_MODULE_3__.EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new _Subscription__WEBPACK_IMPORTED_MODULE_3__.Subscription(function() {\n            _this.currentObservers = null;\n            (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_4__.arrRemove)(observers, subscriber);\n        });\n    };\n    Subject.prototype._checkFinalizedStatuses = function(subscriber) {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n        if (hasError) {\n            subscriber.error(thrownError);\n        } else if (isStopped) {\n            subscriber.complete();\n        }\n    };\n    Subject.prototype.asObservable = function() {\n        var observable = new _Observable__WEBPACK_IMPORTED_MODULE_5__.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function(destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(_Observable__WEBPACK_IMPORTED_MODULE_5__.Observable);\n\nvar AnonymousSubject = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    };\n    AnonymousSubject.prototype.error = function(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    AnonymousSubject.prototype.complete = function() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    AnonymousSubject.prototype._subscribe = function(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : _Subscription__WEBPACK_IMPORTED_MODULE_3__.EMPTY_SUBSCRIPTION;\n    };\n    return AnonymousSubject;\n}(Subject);\n //# sourceMappingURL=Subject.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9TdWJqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUMwQztBQUV3QjtBQUVPO0FBQzVCO0FBQ007QUFTbkQ7SUFBZ0Msa0VBQWE7SUF3QjNDO1FBQUEsWUFFRSxpQkFBTyxTQUNSO1FBMUJELFlBQU0sR0FBRyxLQUFLLENBQUM7UUFFUCxzQkFBZ0IsR0FBeUIsSUFBSSxDQUFDO1FBR3RELGVBQVMsR0FBa0IsRUFBRSxDQUFDO1FBRTlCLGVBQVMsR0FBRyxLQUFLLENBQUM7UUFFbEIsY0FBUSxHQUFHLEtBQUssQ0FBQztRQUVqQixpQkFBVyxHQUFRLElBQUksQ0FBQzs7SUFleEIsQ0FBQztJQUdELHNCQUFJLEdBQUosU0FBUSxRQUF3QjtRQUM5QixJQUFNLE9BQU8sR0FBRyxJQUFJLGdCQUFnQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztRQUNqRCxPQUFPLENBQUMsUUFBUSxHQUFHLFFBQWUsQ0FBQztRQUNuQyxPQUFPLE9BQWMsQ0FBQztJQUN4QixDQUFDO0lBR1MsZ0NBQWMsR0FBeEI7UUFDRSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixNQUFNLElBQUksa0ZBQXVCLEVBQUUsQ0FBQztTQUNyQztJQUNILENBQUM7SUFFRCxzQkFBSSxHQUFKLFNBQUssS0FBUTtRQUFiLGlCQVlDO1FBWEMsZ0VBQVksQ0FBQzs7WUFDWCxLQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLEtBQUksQ0FBQyxTQUFTLEVBQUU7Z0JBQ25CLElBQUksQ0FBQyxLQUFJLENBQUMsZ0JBQWdCLEVBQUU7b0JBQzFCLEtBQUksQ0FBQyxnQkFBZ0IsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDcEQ7O29CQUNELElBQXVCLDhEQUFJLENBQUMsZ0JBQWdCLDRDQUFFO3dCQUF6QyxJQUFNLFFBQVE7d0JBQ2pCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7cUJBQ3RCOzs7Ozs7Ozs7Ozs7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELHVCQUFLLEdBQUwsU0FBTSxHQUFRO1FBQWQsaUJBWUM7UUFYQyxnRUFBWSxDQUFDO1lBQ1gsS0FBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1lBQ3RCLElBQUksQ0FBQyxLQUFJLENBQUMsU0FBUyxFQUFFO2dCQUNuQixLQUFJLENBQUMsUUFBUSxHQUFHLEtBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO2dCQUN0QyxLQUFJLENBQUMsV0FBVyxHQUFHLEdBQUcsQ0FBQztnQkFDZixhQUFTLEdBQUssS0FBSSxVQUFULENBQVU7Z0JBQzNCLE1BQU8sU0FBUyxDQUFDLE1BQU0sQ0FBRTtvQkFDdkIsU0FBUyxDQUFDLEtBQUssRUFBRyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztpQkFDL0I7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELDBCQUFRLEdBQVI7UUFBQSxpQkFXQztRQVZDLGdFQUFZLENBQUM7WUFDWCxLQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDdEIsSUFBSSxDQUFDLEtBQUksQ0FBQyxTQUFTLEVBQUU7Z0JBQ25CLEtBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDO2dCQUNkLGFBQVMsR0FBSyxLQUFJLFVBQVQsQ0FBVTtnQkFDM0IsTUFBTyxTQUFTLENBQUMsTUFBTSxDQUFFO29CQUN2QixTQUFTLENBQUMsS0FBSyxFQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7aUJBQy9CO2FBQ0Y7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCw2QkFBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUNwQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFLLENBQUM7SUFDakQsQ0FBQztJQUVELHNCQUFJLDZCQUFRO2FBQVo7O1lBQ0UsT0FBTyxXQUFJLENBQUMsZUFBUyxvQ0FBRSxVQUFTLENBQUMsQ0FBQztRQUNwQyxDQUFDOzs7T0FBQTtJQUdTLCtCQUFhLEdBQXZCLFNBQXdCLFVBQXlCO1FBQy9DLElBQUksQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN0QixPQUFPLGlCQUFNLGFBQWEsWUFBQyxVQUFVLENBQUMsQ0FBQztJQUN6QyxDQUFDO0lBR1MsNEJBQVUsR0FBcEIsU0FBcUIsVUFBeUI7UUFDNUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3RCLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxVQUFVLENBQUMsQ0FBQztRQUN6QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUdTLGlDQUFlLEdBQXpCLFNBQTBCLFVBQTJCO1FBQXJELGlCQVdDO1FBVk8sU0FBcUMsSUFBSSxFQUF2QyxRQUFRLGdCQUFFLFNBQVMsaUJBQUUsU0FBUyxlQUFTLENBQUM7UUFDaEQsSUFBSSxRQUFRLElBQUksU0FBUyxFQUFFO1lBQ3pCLE9BQU8sNkRBQWtCLENBQUM7U0FDM0I7UUFDRCxJQUFJLENBQUMsZ0JBQWdCLEdBQUcsSUFBSSxDQUFDO1FBQzdCLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDM0IsT0FBTyxJQUFJLHVEQUFZLENBQUM7WUFDdEIsS0FBSSxDQUFDLGdCQUFnQixHQUFHLElBQUksQ0FBQztZQUM3QiwwREFBUyxDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNuQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFHUyx5Q0FBdUIsR0FBakMsU0FBa0MsVUFBMkI7UUFDckQsU0FBdUMsSUFBSSxFQUF6QyxRQUFRLGdCQUFFLFdBQVcsbUJBQUUsU0FBUyxlQUFTLENBQUM7UUFDbEQsSUFBSSxRQUFRLEVBQUU7WUFDWixVQUFVLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO1NBQy9CLE1BQU0sSUFBSSxTQUFTLEVBQUU7WUFDcEIsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3ZCO0lBQ0gsQ0FBQztJQVFELDhCQUFZLEdBQVo7UUFDRSxJQUFNLFVBQVUsR0FBUSxJQUFJLG1EQUFVLEVBQUssQ0FBQztRQUM1QyxVQUFVLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztRQUN6QixPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBeEhNLGNBQU0sR0FBNEIsU0FBSSxXQUF3QixFQUFFLE1BQXFCO1FBQzFGLE9BQU8sSUFBSSxnQkFBZ0IsQ0FBSSxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDdEQsQ0FBQyxDQUFDO0lBdUhKLGNBQUM7Q0FBQSxDQTdJK0IsbURBQVU7QUFBdEI7QUFrSnBCO0lBQXlDLDJFQUFVO0lBQ2pELDBCQUVTLFdBQXlCLEVBQ2hDLE1BQXNCO1FBSHhCLFlBS0UsaUJBQU8sU0FFUjtRQUxRLGlCQUFXLEdBQVgsV0FBVyxDQUFjO1FBSWhDLEtBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztJQUN2QixDQUFDO0lBRUQsK0JBQUksR0FBSixTQUFLLEtBQVE7O1FBQ1gsZ0JBQUksQ0FBQyxpQkFBVyxvQ0FBRSxVQUFJLDZDQUFHLEtBQUssQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxnQ0FBSyxHQUFMLFNBQU0sR0FBUTs7UUFDWixnQkFBSSxDQUFDLGlCQUFXLG9DQUFFLFdBQUssNkNBQUcsR0FBRyxDQUFDLENBQUM7SUFDakMsQ0FBQztJQUVELG1DQUFRLEdBQVI7O1FBQ0UsZ0JBQUksQ0FBQyxpQkFBVyxvQ0FBRSxjQUFRLDRDQUFJLENBQUM7SUFDakMsQ0FBQztJQUdTLHFDQUFVLEdBQXBCLFNBQXFCLFVBQXlCOztRQUM1QyxPQUFPLGdCQUFJLENBQUMsWUFBTSxvQ0FBRSxTQUFTLENBQUMsV0FBVSxDQUFDLGtDQUFJLDZEQUFrQixDQUFDO0lBQ2xFLENBQUM7SUFDSCx1QkFBQztBQUFELENBQUMsQ0ExQndDLE9BQU8iLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL3NyYy9pbnRlcm5hbC9TdWJqZWN0LnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/observable/defer.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defer: () => (/* binding */ defer)\n/* harmony export */ });\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var _innerFrom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n\n\nfunction defer(observableFactory) {\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function(subscriber) {\n        (0,_innerFrom__WEBPACK_IMPORTED_MODULE_1__.innerFrom)(observableFactory()).subscribe(subscriber);\n    });\n} //# sourceMappingURL=defer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vYnNlcnZhYmxlL2RlZmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUVIO0FBa0RsQyxTQUFVLEtBQUssQ0FBaUMsaUJBQTBCO0lBQzlFLE9BQU8sSUFBSSxtREFBVSxDQUFxQixTQUFDLFVBQVU7UUFDbkQscURBQVMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ3ZELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvb2JzZXJ2YWJsZS9kZWZlci50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/observable/empty.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EMPTY: () => (/* binding */ EMPTY),\n/* harmony export */   empty: () => (/* binding */ empty)\n/* harmony export */ });\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n\nvar EMPTY = new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function(subscriber) {\n    return subscriber.complete();\n});\nfunction empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(function(subscriber) {\n        return scheduler.schedule(function() {\n            return subscriber.complete();\n        });\n    });\n} //# sourceMappingURL=empty.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vYnNlcnZhYmxlL2VtcHR5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQWlFcEMsSUFBTSxLQUFLLEdBQUcsSUFBSSxtREFBVSxDQUFRLFNBQUMsVUFBVTtJQUFLLGlCQUFVLENBQUMsUUFBUSxFQUFFO0FBQXJCLENBQXFCLENBQUMsQ0FBQztBQU81RSxTQUFVLEtBQUssQ0FBQyxTQUF5QjtJQUM3QyxPQUFPLFNBQVMsQ0FBQyxDQUFDLENBQUMsY0FBYyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDdkQsQ0FBQztBQUVELFNBQVMsY0FBYyxDQUFDLFNBQXdCO0lBQzlDLE9BQU8sSUFBSSxtREFBVSxDQUFRLFNBQUMsVUFBVTtRQUFLLGdCQUFTLENBQUMsUUFBUSxDQUFDO1lBQU0saUJBQVUsQ0FBQyxRQUFRLEVBQUU7UUFBckIsQ0FBcUIsQ0FBQztJQUEvQyxDQUErQyxDQUFDLENBQUM7QUFDaEcsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvb2JzZXJ2YWJsZS9lbXB0eS50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromEvent: () => (/* binding */ fromEvent)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../observable/innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../Observable */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Observable.js\");\n/* harmony import */ var _operators_mergeMap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../operators/mergeMap */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var _util_isArrayLike__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/isArrayLike */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js\");\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isFunction */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/isFunction.js\");\n/* harmony import */ var _util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/mapOneOrManyArgs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js\");\n\n\n\n\n\n\n\nvar nodeEventEmitterMethods = [\n    'addListener',\n    'removeListener'\n];\nvar eventTargetMethods = [\n    'addEventListener',\n    'removeEventListener'\n];\nvar jqueryMethods = [\n    'on',\n    'off'\n];\nfunction fromEvent(target, eventName, options, resultSelector) {\n    if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe((0,_util_mapOneOrManyArgs__WEBPACK_IMPORTED_MODULE_1__.mapOneOrManyArgs)(resultSelector));\n    }\n    var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__read)(isEventTarget(target) ? eventTargetMethods.map(function(methodName) {\n        return function(handler) {\n            return target[methodName](eventName, handler, options);\n        };\n    }) : isNodeStyleEventEmitter(target) ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName)) : isJQueryStyleEventEmitter(target) ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName)) : [], 2), add = _a[0], remove = _a[1];\n    if (!add) {\n        if ((0,_util_isArrayLike__WEBPACK_IMPORTED_MODULE_3__.isArrayLike)(target)) {\n            return (0,_operators_mergeMap__WEBPACK_IMPORTED_MODULE_4__.mergeMap)(function(subTarget) {\n                return fromEvent(subTarget, eventName, options);\n            })((0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_5__.innerFrom)(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new _Observable__WEBPACK_IMPORTED_MODULE_6__.Observable(function(subscriber) {\n        var handler = function() {\n            var args = [];\n            for(var _i = 0; _i < arguments.length; _i++){\n                args[_i] = arguments[_i];\n            }\n            return subscriber.next(1 < args.length ? args : args[0]);\n        };\n        add(handler);\n        return function() {\n            return remove(handler);\n        };\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return function(methodName) {\n        return function(handler) {\n            return target[methodName](eventName, handler);\n        };\n    };\n}\nfunction isNodeStyleEventEmitter(target) {\n    return (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target.addListener) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target.on) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target.off);\n}\nfunction isEventTarget(target) {\n    return (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target.addEventListener) && (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(target.removeEventListener);\n} //# sourceMappingURL=fromEvent.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vYnNlcnZhYmxlL2Zyb21FdmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBb0Q7QUFDVDtBQUNNO0FBQ0M7QUFDRjtBQUNZO0FBRzVELElBQU0sdUJBQXVCLEdBQUc7SUFBQyxhQUFhO0lBQUUsZ0JBQWdCO0NBQVUsQ0FBQztBQUMzRSxJQUFNLGtCQUFrQixHQUFHO0lBQUMsa0JBQWtCO0lBQUUscUJBQXFCO0NBQVUsQ0FBQztBQUNoRixJQUFNLGFBQWEsR0FBRztJQUFDLElBQUk7SUFBRSxLQUFLO0NBQVUsQ0FBQztBQWtPdkMsU0FBVSxTQUFTLENBQ3ZCLE1BQVcsRUFDWCxTQUFpQixFQUNqQixPQUF3RCxFQUN4RCxjQUFzQztJQUV0QyxJQUFJLDREQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdkIsY0FBYyxHQUFHLE9BQU8sQ0FBQztRQUN6QixPQUFPLEdBQUcsU0FBUyxDQUFDO0tBQ3JCO0lBQ0QsSUFBSSxjQUFjLEVBQUU7UUFDbEIsT0FBTyxTQUFTLENBQUksTUFBTSxFQUFFLFNBQVMsRUFBRSxPQUErQixDQUFDLENBQUMsSUFBSSxDQUFDLHdFQUFnQixDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUM7S0FDaEg7SUFTSyx1REFFSixhQUFhLENBQUMsTUFBTSxDQUFDLEdBQ2pCLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxTQUFDLFVBQVU7UUFBSyxnQkFBQyxPQUFZO1lBQUssYUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLFNBQVMsRUFBRSxPQUFPLEVBQUUsT0FBK0IsQ0FBQztRQUF2RSxDQUF1RTtJQUF6RixDQUF5RixDQUFDLEdBRW5JLHVCQUF1QixDQUFDLE1BQU0sQ0FBQyxHQUM3Qix1QkFBdUIsQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsTUFBTSxFQUFFLFNBQVMsQ0FBQyxDQUFDLEdBQ3ZFLHlCQUF5QixDQUFDLE1BQU0sQ0FBQyxHQUNqQyxhQUFhLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLE1BQU0sRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUM3RCxFQUFFLE1BVEQsR0FBRyxVQUFFLE1BQU0sUUFTVixDQUFDO0lBT1QsSUFBSSxDQUFDLEdBQUcsRUFBRTtRQUNSLElBQUksOERBQVcsQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUN2QixPQUFPLDZEQUFRLENBQUMsU0FBQyxTQUFjO2dCQUFLLGdCQUFTLENBQUMsU0FBUyxFQUFFLFNBQVMsRUFBRSxPQUErQixDQUFDO1lBQWhFLENBQWdFLENBQUMsQ0FDbkcsZ0VBQVMsQ0FBQyxNQUFNLENBQUMsQ0FDRCxDQUFDO1NBQ3BCO0tBQ0Y7SUFJRCxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxJQUFJLFNBQVMsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0tBQzdDO0lBRUQsT0FBTyxJQUFJLG1EQUFVLENBQUksU0FBQyxVQUFVO1FBSWxDLElBQU0sT0FBTyxHQUFHO1lBQUMsY0FBYztnQkFBZCxVQUFjLEVBQWQscUJBQWMsRUFBZCxJQUFjO2dCQUFkLHlCQUFjOztZQUFLLGlCQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUFqRCxDQUFpRCxDQUFDO1FBRXRGLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUViLE9BQU87WUFBTSxhQUFPLENBQUMsT0FBTyxDQUFDO1FBQWhCLENBQWdCLENBQUM7SUFDaEMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDO0FBU0QsU0FBUyx1QkFBdUIsQ0FBQyxNQUFXLEVBQUUsU0FBaUI7SUFDN0QsT0FBTyxTQUFDLFVBQWtCO1FBQUssZ0JBQUMsT0FBWTtZQUFLLGFBQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDO1FBQXRDLENBQXNDO0lBQXhELENBQXdELENBQUM7QUFDMUYsQ0FBQztBQU9ELFNBQVMsdUJBQXVCLENBQUMsTUFBVztJQUMxQyxPQUFPLDREQUFVLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLDREQUFVLENBQUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzdFLENBQUM7QUFPRCxTQUFTLHlCQUF5QixDQUFDLE1BQVc7SUFDNUMsT0FBTyw0REFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsSUFBSSw0REFBVSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN6RCxDQUFDO0FBT0QsU0FBUyxhQUFhLENBQUMsTUFBVztJQUNoQyxPQUFPLDREQUFVLENBQUMsTUFBTSxDQUFDLGdCQUFnQixDQUFDLElBQUksNERBQVUsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUN2RixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9vYnNlcnZhYmxlL2Zyb21FdmVudC50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/observable/merge.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   merge: () => (/* binding */ merge)\n/* harmony export */ });\n/* harmony import */ var _operators_mergeAll__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../operators/mergeAll */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js\");\n/* harmony import */ var _innerFrom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n/* harmony import */ var _empty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./empty */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var _util_args__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/args */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/args.js\");\n/* harmony import */ var _from__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./from */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n\n\n\n\n\nfunction merge() {\n    var args = [];\n    for(var _i = 0; _i < arguments.length; _i++){\n        args[_i] = arguments[_i];\n    }\n    var scheduler = (0,_util_args__WEBPACK_IMPORTED_MODULE_0__.popScheduler)(args);\n    var concurrent = (0,_util_args__WEBPACK_IMPORTED_MODULE_0__.popNumber)(args, Infinity);\n    var sources = args;\n    return !sources.length ? _empty__WEBPACK_IMPORTED_MODULE_1__.EMPTY : sources.length === 1 ? (0,_innerFrom__WEBPACK_IMPORTED_MODULE_2__.innerFrom)(sources[0]) : (0,_operators_mergeAll__WEBPACK_IMPORTED_MODULE_3__.mergeAll)(concurrent)((0,_from__WEBPACK_IMPORTED_MODULE_4__.from)(sources, scheduler));\n} //# sourceMappingURL=merge.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vYnNlcnZhYmxlL21lcmdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUVpRDtBQUNUO0FBQ1I7QUFDdUI7QUFDekI7QUFtRnhCLFNBQVUsS0FBSztJQUFDLGNBQThEO1FBQTlELFVBQThELEVBQTlELHFCQUE4RCxFQUE5RCxJQUE4RDtRQUE5RCx5QkFBOEQ7O0lBQ2xGLElBQU0sU0FBUyxHQUFHLHdEQUFZLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckMsSUFBTSxVQUFVLEdBQUcscURBQVMsQ0FBQyxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDN0MsSUFBTSxPQUFPLEdBQUcsSUFBa0MsQ0FBQztJQUNuRCxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FFbEIseUNBQUssR0FDTCxPQUFPLENBQUMsTUFBTSxLQUFLLENBQUMsR0FFcEIscURBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FFckIsNkRBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQywyQ0FBSSxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQyxDQUFDO0FBQ3JELENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL29ic2VydmFibGUvbWVyZ2UudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bufferCount: () => (/* binding */ bufferCount)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n/* harmony import */ var _util_arrRemove__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/arrRemove */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/arrRemove.js\");\n\n\n\n\nfunction bufferCount(bufferSize, startBufferEvery) {\n    if (startBufferEvery === void 0) {\n        startBufferEvery = null;\n    }\n    startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;\n    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function(source, subscriber) {\n        var buffers = [];\n        var count = 0;\n        source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, function(value) {\n            var e_1, _a, e_2, _b;\n            var toEmit = null;\n            if (count++ % startBufferEvery === 0) {\n                buffers.push([]);\n            }\n            try {\n                for(var buffers_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()){\n                    var buffer = buffers_1_1.value;\n                    buffer.push(value);\n                    if (bufferSize <= buffer.length) {\n                        toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];\n                        toEmit.push(buffer);\n                    }\n                }\n            } catch (e_1_1) {\n                e_1 = {\n                    error: e_1_1\n                };\n            } finally{\n                try {\n                    if (buffers_1_1 && !buffers_1_1.done && (_a = buffers_1.return)) _a.call(buffers_1);\n                } finally{\n                    if (e_1) throw e_1.error;\n                }\n            }\n            if (toEmit) {\n                try {\n                    for(var toEmit_1 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()){\n                        var buffer = toEmit_1_1.value;\n                        (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_3__.arrRemove)(buffers, buffer);\n                        subscriber.next(buffer);\n                    }\n                } catch (e_2_1) {\n                    e_2 = {\n                        error: e_2_1\n                    };\n                } finally{\n                    try {\n                        if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return)) _b.call(toEmit_1);\n                    } finally{\n                        if (e_2) throw e_2.error;\n                    }\n                }\n            }\n        }, function() {\n            var e_3, _a;\n            try {\n                for(var buffers_2 = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__values)(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()){\n                    var buffer = buffers_2_1.value;\n                    subscriber.next(buffer);\n                }\n            } catch (e_3_1) {\n                e_3 = {\n                    error: e_3_1\n                };\n            } finally{\n                try {\n                    if (buffers_2_1 && !buffers_2_1.done && (_a = buffers_2.return)) _a.call(buffers_2);\n                } finally{\n                    if (e_3) throw e_3.error;\n                }\n            }\n            subscriber.complete();\n        }, undefined, function() {\n            buffers = null;\n        }));\n    });\n} //# sourceMappingURL=bufferCount.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvYnVmZmVyQ291bnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ3VDO0FBQ3lCO0FBQ2xCO0FBcUR4QyxTQUFVLFdBQVcsQ0FBSSxVQUFrQixFQUFFLGdCQUFzQztJQUF0QztRQUFBLHVCQUFzQztJQUFBO0lBR3ZGLGdCQUFnQixHQUFHLGdCQUFnQixhQUFoQixnQkFBZ0IsY0FBaEIsZ0JBQWdCLEdBQUksVUFBVSxDQUFDO0lBRWxELE9BQU8sbURBQU8sQ0FBQyxTQUFDLE1BQU0sRUFBRSxVQUFVO1FBQ2hDLElBQUksT0FBTyxHQUFVLEVBQUUsQ0FBQztRQUN4QixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFFZCxNQUFNLENBQUMsU0FBUyxDQUNkLDZFQUF3QixDQUN0QixVQUFVLEVBQ1YsU0FBQyxLQUFLOztZQUNKLElBQUksTUFBTSxHQUFpQixJQUFJLENBQUM7WUFLaEMsSUFBSSxLQUFLLEVBQUUsR0FBRyxnQkFBaUIsS0FBSyxDQUFDLEVBQUU7Z0JBQ3JDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7YUFDbEI7O2dCQUdELElBQXFCLHVFQUFPLHFGQUFFO29CQUF6QixJQUFNLE1BQU07b0JBQ2YsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztvQkFNbkIsSUFBSSxVQUFVLElBQUksTUFBTSxDQUFDLE1BQU0sRUFBRTt3QkFDL0IsTUFBTSxHQUFHLE1BQU0sYUFBTixNQUFNLGNBQU4sTUFBTSxHQUFJLEVBQUUsQ0FBQzt3QkFDdEIsTUFBTSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztxQkFDckI7aUJBQ0Y7Ozs7Ozs7Ozs7OztZQUVELElBQUksTUFBTSxFQUFFOztvQkFJVixJQUFxQixxRUFBTSxnRkFBRTt3QkFBeEIsSUFBTSxNQUFNO3dCQUNmLDBEQUFTLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO3dCQUMzQixVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO3FCQUN6Qjs7Ozs7Ozs7Ozs7O2FBQ0Y7UUFDSCxDQUFDLEVBQ0Q7OztnQkFHRSxJQUFxQix1RUFBTyxxRkFBRTtvQkFBekIsSUFBTSxNQUFNO29CQUNmLFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ3pCOzs7Ozs7Ozs7Ozs7WUFDRCxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUVELFNBQVMsRUFDVDtZQUVFLE9BQU8sR0FBRyxJQUFLLENBQUM7UUFDbEIsQ0FBQyxDQUNGLENBQ0YsQ0FBQztJQUNKLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvb3BlcmF0b3JzL2J1ZmZlckNvdW50LnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concatMap: () => (/* binding */ concatMap)\n/* harmony export */ });\n/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeMap */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isFunction */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/isFunction.js\");\n\n\nfunction concatMap(project, resultSelector) {\n    return (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(resultSelector) ? (0,_mergeMap__WEBPACK_IMPORTED_MODULE_1__.mergeMap)(project, resultSelector, 1) : (0,_mergeMap__WEBPACK_IMPORTED_MODULE_1__.mergeMap)(project, 1);\n} //# sourceMappingURL=concatMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvY29uY2F0TWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUVVO0FBNEUxQyxTQUFVLFNBQVMsQ0FDdkIsT0FBdUMsRUFDdkMsY0FBNkc7SUFFN0csT0FBTyw0REFBVSxDQUFDLGNBQWMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxtREFBUSxDQUFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLG1EQUFRLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQ2xHLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL29wZXJhdG9ycy9jb25jYXRNYXAudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeAll: () => (/* binding */ mergeAll)\n/* harmony export */ });\n/* harmony import */ var _mergeMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mergeMap */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\");\n/* harmony import */ var _util_identity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/identity */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/identity.js\");\n\n\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Infinity;\n    }\n    return (0,_mergeMap__WEBPACK_IMPORTED_MODULE_0__.mergeMap)(_util_identity__WEBPACK_IMPORTED_MODULE_1__.identity, concurrent);\n} //# sourceMappingURL=mergeAll.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvbWVyZ2VBbGwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQ007QUE4RHRDLFNBQVUsUUFBUSxDQUFpQyxVQUE2QjtJQUE3QjtRQUFBLHFCQUE2QjtJQUFBO0lBQ3BGLE9BQU8sbURBQVEsQ0FBQyxvREFBUSxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ3hDLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL29wZXJhdG9ycy9tZXJnZUFsbC50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeInternals: () => (/* binding */ mergeInternals)\n/* harmony export */ });\n/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n/* harmony import */ var _util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/executeSchedule */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n\n\n\nfunction mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    var buffer = [];\n    var active = 0;\n    var index = 0;\n    var isComplete = false;\n    var checkComplete = function() {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    var outerNext = function(value) {\n        return active < concurrent ? doInnerSub(value) : buffer.push(value);\n    };\n    var doInnerSub = function(value) {\n        expand && subscriber.next(value);\n        active++;\n        var innerComplete = false;\n        (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_0__.innerFrom)(project(value, index++)).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, function(innerValue) {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            } else {\n                subscriber.next(innerValue);\n            }\n        }, function() {\n            innerComplete = true;\n        }, undefined, function() {\n            if (innerComplete) {\n                try {\n                    active--;\n                    var _loop_1 = function() {\n                        var bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            (0,_util_executeSchedule__WEBPACK_IMPORTED_MODULE_2__.executeSchedule)(subscriber, innerSubScheduler, function() {\n                                return doInnerSub(bufferedValue);\n                            });\n                        } else {\n                            doInnerSub(bufferedValue);\n                        }\n                    };\n                    while(buffer.length && active < concurrent){\n                        _loop_1();\n                    }\n                    checkComplete();\n                } catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, outerNext, function() {\n        isComplete = true;\n        checkComplete();\n    }));\n    return function() {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n} //# sourceMappingURL=mergeInternals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvbWVyZ2VJbnRlcm5hbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNvRDtBQUdNO0FBQ007QUFlMUQsU0FBVSxjQUFjLENBQzVCLE1BQXFCLEVBQ3JCLFVBQXlCLEVBQ3pCLE9BQXdELEVBQ3hELFVBQWtCLEVBQ2xCLFlBQXNDLEVBQ3RDLE1BQWdCLEVBQ2hCLGlCQUFpQyxFQUNqQyxtQkFBZ0M7SUFHaEMsSUFBTSxNQUFNLEdBQVEsRUFBRSxDQUFDO0lBRXZCLElBQUksTUFBTSxHQUFHLENBQUMsQ0FBQztJQUVmLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQztJQUVkLElBQUksVUFBVSxHQUFHLEtBQUssQ0FBQztJQUt2QixJQUFNLGFBQWEsR0FBRztRQUlwQixJQUFJLFVBQVUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDM0MsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDO1NBQ3ZCO0lBQ0gsQ0FBQyxDQUFDO0lBR0YsSUFBTSxTQUFTLEdBQUcsU0FBQyxLQUFRO1FBQUssYUFBTyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQTlELENBQThELENBQUM7SUFFL0YsSUFBTSxVQUFVLEdBQUcsU0FBQyxLQUFRO1FBSTFCLE1BQU0sSUFBSSxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQVksQ0FBQyxDQUFDO1FBSXhDLE1BQU0sRUFBRSxDQUFDO1FBS1QsSUFBSSxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBRzFCLGdFQUFTLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUMxQyw2RUFBd0IsQ0FDdEIsVUFBVSxFQUNWLFNBQUMsVUFBVTtZQUdULFlBQVksYUFBWixZQUFZLHVCQUFaLFlBQVksQ0FBRyxVQUFVLENBQUMsQ0FBQztZQUUzQixJQUFJLE1BQU0sRUFBRTtnQkFHVixTQUFTLENBQUMsVUFBaUIsQ0FBQyxDQUFDO2FBQzlCLE1BQU07Z0JBRUwsVUFBVSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQzthQUM3QjtRQUNILENBQUMsRUFDRDtZQUdFLGFBQWEsR0FBRyxJQUFJLENBQUM7UUFDdkIsQ0FBQyxFQUVELFNBQVMsRUFDVDtZQUlFLElBQUksYUFBYSxFQUFFO2dCQUtqQixJQUFJO29CQUlGLE1BQU0sRUFBRSxDQUFDOzt3QkFNUCxJQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsS0FBSyxFQUFHLENBQUM7d0JBSXRDLElBQUksaUJBQWlCLEVBQUU7NEJBQ3JCLHNFQUFlLENBQUMsVUFBVSxFQUFFLGlCQUFpQixFQUFFO2dDQUFNLGlCQUFVLENBQUMsYUFBYSxDQUFDOzRCQUF6QixDQUF5QixDQUFDLENBQUM7eUJBQ2pGLE1BQU07NEJBQ0wsVUFBVSxDQUFDLGFBQWEsQ0FBQyxDQUFDO3lCQUMzQjs7b0JBVEgsTUFBTyxNQUFNLENBQUMsTUFBTSxJQUFJLE1BQU0sR0FBRyxVQUFVOztxQkFVMUM7b0JBRUQsYUFBYSxFQUFFLENBQUM7aUJBQ2pCLENBQUMsT0FBTyxHQUFHLEVBQUU7b0JBQ1osVUFBVSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztpQkFDdkI7YUFDRjtRQUNILENBQUMsQ0FDRixDQUNGLENBQUM7SUFDSixDQUFDLENBQUM7SUFHRixNQUFNLENBQUMsU0FBUyxDQUNkLDZFQUF3QixDQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUU7UUFFOUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUNsQixhQUFhLEVBQUUsQ0FBQztJQUNsQixDQUFDLENBQUMsQ0FDSCxDQUFDO0lBSUYsT0FBTztRQUNMLG1CQUFtQixhQUFuQixtQkFBbUIsdUJBQW5CLG1CQUFtQixFQUFJLENBQUM7SUFDMUIsQ0FBQyxDQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvb3BlcmF0b3JzL21lcmdlSW50ZXJuYWxzLnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeMap: () => (/* binding */ mergeMap)\n/* harmony export */ });\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _mergeInternals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mergeInternals */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js\");\n/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isFunction */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/isFunction.js\");\n\n\n\n\n\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) {\n        concurrent = Infinity;\n    }\n    if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(resultSelector)) {\n        return mergeMap(function(a, i) {\n            return (0,_map__WEBPACK_IMPORTED_MODULE_1__.map)(function(b, ii) {\n                return resultSelector(a, b, i, ii);\n            })((0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_2__.innerFrom)(project(a, i)));\n        }, concurrent);\n    } else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_3__.operate)(function(source, subscriber) {\n        return (0,_mergeInternals__WEBPACK_IMPORTED_MODULE_4__.mergeInternals)(source, subscriber, project, concurrent);\n    });\n} //# sourceMappingURL=mergeMap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvbWVyZ2VNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQzRCO0FBQ3dCO0FBQ2I7QUFDVztBQUNGO0FBNkUxQyxTQUFVLFFBQVEsQ0FDdEIsT0FBdUMsRUFDdkMsY0FBd0gsRUFDeEgsVUFBNkI7SUFBN0I7UUFBQSxxQkFBNkI7SUFBQTtJQUU3QixJQUFJLDREQUFVLENBQUMsY0FBYyxDQUFDLEVBQUU7UUFFOUIsT0FBTyxRQUFRLENBQUMsU0FBQyxDQUFDLEVBQUUsQ0FBQztZQUFLLGdEQUFHLENBQUMsU0FBQyxDQUFNLEVBQUUsRUFBVTtnQkFBSyxxQkFBYyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztZQUEzQixDQUEyQixDQUFDLENBQUMsZ0VBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFBbEYsQ0FBa0YsRUFBRSxVQUFVLENBQUMsQ0FBQztLQUMzSCxNQUFNLElBQUksT0FBTyxjQUFjLEtBQUssUUFBUSxFQUFFO1FBQzdDLFVBQVUsR0FBRyxjQUFjLENBQUM7S0FDN0I7SUFFRCxPQUFPLG1EQUFPLENBQUMsU0FBQyxNQUFNLEVBQUUsVUFBVTtRQUFLLHNFQUFjLENBQUMsTUFBTSxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsVUFBVSxDQUFDO0lBQXZELENBQXVELENBQUMsQ0FBQztBQUNsRyxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvbWVyZ2VNYXAudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/share.js":
/*!*****************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/share.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   share: () => (/* binding */ share)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subject */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var _Subscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Subscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subscriber.js\");\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n\n\n\n\n\nfunction share(options) {\n    if (options === void 0) {\n        options = {};\n    }\n    var _a = options.connector, connector = _a === void 0 ? function() {\n        return new _Subject__WEBPACK_IMPORTED_MODULE_0__.Subject();\n    } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;\n    return function(wrapperSource) {\n        var connection;\n        var resetConnection;\n        var subject;\n        var refCount = 0;\n        var hasCompleted = false;\n        var hasErrored = false;\n        var cancelReset = function() {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        var reset = function() {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        var resetAndUnsubscribe = function() {\n            var conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function(source, subscriber) {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            var dest = subject = subject !== null && subject !== void 0 ? subject : connector();\n            subscriber.add(function() {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection && refCount > 0) {\n                connection = new _Subscriber__WEBPACK_IMPORTED_MODULE_2__.SafeSubscriber({\n                    next: function(value) {\n                        return dest.next(value);\n                    },\n                    error: function(err) {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: function() {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    }\n                });\n                (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_3__.innerFrom)(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on) {\n    var args = [];\n    for(var _i = 2; _i < arguments.length; _i++){\n        args[_i - 2] = arguments[_i];\n    }\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    var onSubscriber = new _Subscriber__WEBPACK_IMPORTED_MODULE_2__.SafeSubscriber({\n        next: function() {\n            onSubscriber.unsubscribe();\n            reset();\n        }\n    });\n    return (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_3__.innerFrom)(on.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__read)(args)))).subscribe(onSubscriber);\n} //# sourceMappingURL=share.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvc2hhcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFvRDtBQUNmO0FBQ1U7QUFHUjtBQXdJakMsU0FBVSxLQUFLLENBQUksT0FBNEI7SUFBNUI7UUFBQSxZQUE0QjtJQUFBO0lBQzNDLFNBQWdILE9BQU8sVUFBckYsRUFBbEMsU0FBUyxtQkFBRztRQUFNLFdBQUksNkNBQU8sRUFBSztJQUFoQixDQUFnQixPQUFFLEtBQTRFLE9BQU8sYUFBaEUsRUFBbkIsWUFBWSxtQkFBRyxJQUFJLE9BQUUsS0FBdUQsT0FBTyxnQkFBeEMsRUFBdEIsZUFBZSxtQkFBRyxJQUFJLE9BQUUsS0FBK0IsT0FBTyxvQkFBWixFQUExQixtQkFBbUIsbUJBQUcsSUFBSSxNQUFhO0lBVWhJLE9BQU8sU0FBQyxhQUFhO1FBQ25CLElBQUksVUFBeUMsQ0FBQztRQUM5QyxJQUFJLGVBQXlDLENBQUM7UUFDOUMsSUFBSSxPQUFtQyxDQUFDO1FBQ3hDLElBQUksUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNqQixJQUFJLFlBQVksR0FBRyxLQUFLLENBQUM7UUFDekIsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBRXZCLElBQU0sV0FBVyxHQUFHO1lBQ2xCLGVBQWUsYUFBZixlQUFlLHVCQUFmLGVBQWUsQ0FBRSxXQUFXLEVBQUUsQ0FBQztZQUMvQixlQUFlLEdBQUcsU0FBUyxDQUFDO1FBQzlCLENBQUMsQ0FBQztRQUdGLElBQU0sS0FBSyxHQUFHO1lBQ1osV0FBVyxFQUFFLENBQUM7WUFDZCxVQUFVLEdBQUcsT0FBTyxHQUFHLFNBQVMsQ0FBQztZQUNqQyxZQUFZLEdBQUcsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUNwQyxDQUFDLENBQUM7UUFDRixJQUFNLG1CQUFtQixHQUFHO1lBRzFCLElBQU0sSUFBSSxHQUFHLFVBQVUsQ0FBQztZQUN4QixLQUFLLEVBQUUsQ0FBQztZQUNSLElBQUksYUFBSixJQUFJLHVCQUFKLElBQUksQ0FBRSxXQUFXLEVBQUUsQ0FBQztRQUN0QixDQUFDLENBQUM7UUFFRixPQUFPLG1EQUFPLENBQU8sU0FBQyxNQUFNLEVBQUUsVUFBVTtZQUN0QyxRQUFRLEVBQUUsQ0FBQztZQUNYLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxZQUFZLEVBQUU7Z0JBQ2hDLFdBQVcsRUFBRSxDQUFDO2FBQ2Y7WUFNRCxJQUFNLElBQUksR0FBRyxPQUFRLEdBQUcsT0FBTyxhQUFQLE9BQU8sY0FBUCxPQUFPLEdBQUksU0FBUyxFQUFFLENBQUM7WUFPL0MsVUFBVSxDQUFDLEdBQUcsQ0FBQztnQkFDYixRQUFRLEVBQUUsQ0FBQztnQkFLWCxJQUFJLFFBQVEsS0FBSyxDQUFDLElBQUksQ0FBQyxVQUFVLElBQUksQ0FBQyxZQUFZLEVBQUU7b0JBQ2xELGVBQWUsR0FBRyxXQUFXLENBQUMsbUJBQW1CLEVBQUUsbUJBQW1CLENBQUMsQ0FBQztpQkFDekU7WUFDSCxDQUFDLENBQUMsQ0FBQztZQUlILElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7WUFFM0IsSUFDRSxDQUFDLFVBQVUsSUFJWCxRQUFRLEdBQUcsQ0FBQyxFQUNaO2dCQU1BLFVBQVUsR0FBRyxJQUFJLHVEQUFjLENBQUM7b0JBQzlCLElBQUksRUFBRSxTQUFDLEtBQUs7d0JBQUssV0FBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7b0JBQWhCLENBQWdCO29CQUNqQyxLQUFLLEVBQUUsU0FBQyxHQUFHO3dCQUNULFVBQVUsR0FBRyxJQUFJLENBQUM7d0JBQ2xCLFdBQVcsRUFBRSxDQUFDO3dCQUNkLGVBQWUsR0FBRyxXQUFXLENBQUMsS0FBSyxFQUFFLFlBQVksRUFBRSxHQUFHLENBQUMsQ0FBQzt3QkFDeEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztvQkFDbEIsQ0FBQztvQkFDRCxRQUFRLEVBQUU7d0JBQ1IsWUFBWSxHQUFHLElBQUksQ0FBQzt3QkFDcEIsV0FBVyxFQUFFLENBQUM7d0JBQ2QsZUFBZSxHQUFHLFdBQVcsQ0FBQyxLQUFLLEVBQUUsZUFBZSxDQUFDLENBQUM7d0JBQ3RELElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztvQkFDbEIsQ0FBQztpQkFDRixDQUFDLENBQUM7Z0JBQ0gsZ0VBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7YUFDekM7UUFDSCxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsQ0FBQztJQUNwQixDQUFDLENBQUM7QUFDSixDQUFDO0FBRUQsU0FBUyxXQUFXLENBQ2xCLEtBQWlCLEVBQ2pCLEVBQW9EO0lBQ3BELGNBQVU7UUFBVixVQUFVLEVBQVYscUJBQVUsRUFBVixJQUFVO1FBQVYsNkJBQVU7O0lBRVYsSUFBSSxFQUFFLEtBQUssSUFBSSxFQUFFO1FBQ2YsS0FBSyxFQUFFLENBQUM7UUFDUixPQUFPO0tBQ1I7SUFFRCxJQUFJLEVBQUUsS0FBSyxLQUFLLEVBQUU7UUFDaEIsT0FBTztLQUNSO0lBRUQsSUFBTSxZQUFZLEdBQUcsSUFBSSx1REFBYyxDQUFDO1FBQ3RDLElBQUksRUFBRTtZQUNKLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUMzQixLQUFLLEVBQUUsQ0FBQztRQUNWLENBQUM7S0FDRixDQUFDLENBQUM7SUFFSCxPQUFPLGdFQUFTLENBQUMsRUFBRSxzSEFBSSxJQUFJLElBQUUsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDeEQsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvb3BlcmF0b3JzL3NoYXJlLnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   shareReplay: () => (/* binding */ shareReplay)\n/* harmony export */ });\n/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ReplaySubject */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n/* harmony import */ var _share__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./share */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\");\n\n\nfunction shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var _a, _b, _c;\n    var bufferSize;\n    var refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        _a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler;\n    } else {\n        bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;\n    }\n    return (0,_share__WEBPACK_IMPORTED_MODULE_0__.share)({\n        connector: function() {\n            return new _ReplaySubject__WEBPACK_IMPORTED_MODULE_1__.ReplaySubject(bufferSize, windowTime, scheduler);\n        },\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount\n    });\n} //# sourceMappingURL=shareReplay.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvc2hhcmVSZXBsYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBRWpCO0FBd0oxQixTQUFVLFdBQVcsQ0FDekIsa0JBQStDLEVBQy9DLFVBQW1CLEVBQ25CLFNBQXlCOztJQUV6QixJQUFJLFVBQWtCLENBQUM7SUFDdkIsSUFBSSxRQUFRLEdBQUcsS0FBSyxDQUFDO0lBQ3JCLElBQUksa0JBQWtCLElBQUksT0FBTyxrQkFBa0IsS0FBSyxRQUFRLEVBQUU7UUFDN0QsS0FBOEUsa0JBQWtCLFdBQTNFLEVBQXJCLFVBQVUsbUJBQUcsUUFBUSxPQUFFLEtBQXVELGtCQUFrQixXQUFwRCxFQUFyQixVQUFVLG1CQUFHLFFBQVEsT0FBRSxLQUFnQyxrQkFBa0IsU0FBbEMsRUFBaEIsUUFBUSxtQkFBRyxLQUFLLE9BQUUsU0FBUyxHQUFLLGtCQUFrQixVQUF2QixDQUF3QjtLQUNyRyxNQUFNO1FBQ0wsVUFBVSxHQUFHLGtCQUFtQixhQUFsQixrQkFBa0IsY0FBbEIsa0JBQWtCLEdBQUksUUFBUSxDQUFXO0tBQ3hEO0lBQ0QsT0FBTyw2Q0FBSyxDQUFJO1FBQ2QsU0FBUyxFQUFFO1lBQU0sV0FBSSx5REFBYSxDQUFDLFVBQVUsRUFBRSxVQUFVLEVBQUUsU0FBUyxDQUFDO1FBQXBELENBQW9EO1FBQ3JFLFlBQVksRUFBRSxJQUFJO1FBQ2xCLGVBQWUsRUFBRSxLQUFLO1FBQ3RCLG1CQUFtQixFQUFFLFFBQVE7S0FDOUIsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvb3BlcmF0b3JzL3NoYXJlUmVwbGF5LnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/take.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/take.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   take: () => (/* binding */ take)\n/* harmony export */ });\n/* harmony import */ var _observable_empty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observable/empty */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n\n\n\nfunction take(count) {\n    return count <= 0 ? function() {\n        return _observable_empty__WEBPACK_IMPORTED_MODULE_0__.EMPTY;\n    } : (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)(function(source, subscriber) {\n        var seen = 0;\n        source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.createOperatorSubscriber)(subscriber, function(value) {\n            if (++seen <= count) {\n                subscriber.next(value);\n                if (count <= seen) {\n                    subscriber.complete();\n                }\n            }\n        }));\n    });\n} //# sourceMappingURL=take.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvdGFrZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQzRDO0FBQ0w7QUFDeUI7QUE0QzFELFNBQVUsSUFBSSxDQUFJLEtBQWE7SUFDbkMsT0FBTyxLQUFLLElBQUksQ0FBQyxHQUViO1FBQU0sMkRBQUs7SUFBTCxDQUFLLEdBQ1gsbURBQU8sQ0FBQyxTQUFDLE1BQU0sRUFBRSxVQUFVO1FBQ3pCLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQztRQUNiLE1BQU0sQ0FBQyxTQUFTLENBQ2QsNkVBQXdCLENBQUMsVUFBVSxFQUFFLFNBQUMsS0FBSztZQUl6QyxJQUFJLEVBQUUsSUFBSSxJQUFJLEtBQUssRUFBRTtnQkFDbkIsVUFBVSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFJdkIsSUFBSSxLQUFLLElBQUksSUFBSSxFQUFFO29CQUNqQixVQUFVLENBQUMsUUFBUSxFQUFFLENBQUM7aUJBQ3ZCO2FBQ0Y7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQyxDQUFDLENBQUM7QUFDVCxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvdGFrZS50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js":
/*!*********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   takeUntil: () => (/* binding */ takeUntil)\n/* harmony export */ });\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n/* harmony import */ var _observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../observable/innerFrom */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js\");\n/* harmony import */ var _util_noop__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/noop */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/noop.js\");\n\n\n\n\nfunction takeUntil(notifier) {\n    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function(source, subscriber) {\n        (0,_observable_innerFrom__WEBPACK_IMPORTED_MODULE_1__.innerFrom)(notifier).subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_2__.createOperatorSubscriber)(subscriber, function() {\n            return subscriber.complete();\n        }, _util_noop__WEBPACK_IMPORTED_MODULE_3__.noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n} //# sourceMappingURL=takeUntil.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvdGFrZVVudGlsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ3VDO0FBQ3lCO0FBQ1o7QUFDaEI7QUF5QzlCLFNBQVUsU0FBUyxDQUFJLFFBQThCO0lBQ3pELE9BQU8sbURBQU8sQ0FBQyxTQUFDLE1BQU0sRUFBRSxVQUFVO1FBQ2hDLGdFQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsU0FBUyxDQUFDLDZFQUF3QixDQUFDLFVBQVUsRUFBRTtZQUFNLGlCQUFVLENBQUMsUUFBUSxFQUFFO1FBQXJCLENBQXFCLEVBQUUsNENBQUksQ0FBQyxDQUFDLENBQUM7UUFDdkcsQ0FBQyxVQUFVLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDckQsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvdGFrZVVudGlsLnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/Action.js":
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/Action.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Action: () => (/* binding */ Action)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Subscription__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Subscription */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subscription.js\");\n\n\nvar Action = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function(state, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return this;\n    };\n    return Action;\n}(_Subscription__WEBPACK_IMPORTED_MODULE_1__.Subscription);\n //# sourceMappingURL=Action.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvQWN0aW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFDK0M7QUFpQi9DO0lBQStCLGlFQUFZO0lBQ3pDLGdCQUFZLFNBQW9CLEVBQUUsSUFBbUQ7ZUFDbkYsaUJBQU87SUFDVCxDQUFDO0lBV00seUJBQVEsR0FBZixTQUFnQixLQUFTLEVBQUUsS0FBaUI7UUFBakI7WUFBQSxTQUFpQjtRQUFBO1FBQzFDLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUNILGFBQUM7QUFBRCxDQUFDLENBakI4Qix1REFBWSIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9zcmMvaW50ZXJuYWwvc2NoZWR1bGVyL0FjdGlvbi50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/Action.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsapAction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/AsapAction.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsapAction: () => (/* binding */ AsapAction)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _AsyncAction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AsyncAction */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js\");\n/* harmony import */ var _immediateProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./immediateProvider */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/immediateProvider.js\");\n\n\n\nvar AsapAction = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsapAction, _super);\n    function AsapAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        return _this;\n    }\n    AsapAction.prototype.requestAsyncId = function(scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay !== null && delay > 0) {\n            return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);\n        }\n        scheduler.actions.push(this);\n        return scheduler._scheduled || (scheduler._scheduled = _immediateProvider__WEBPACK_IMPORTED_MODULE_1__.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, undefined)));\n    };\n    AsapAction.prototype.recycleAsyncId = function(scheduler, id, delay) {\n        var _a;\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay != null ? delay > 0 : this.delay > 0) {\n            return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);\n        }\n        var actions = scheduler.actions;\n        if (id != null && ((_a = actions[actions.length - 1]) === null || _a === void 0 ? void 0 : _a.id) !== id) {\n            _immediateProvider__WEBPACK_IMPORTED_MODULE_1__.immediateProvider.clearImmediate(id);\n            if (scheduler._scheduled === id) {\n                scheduler._scheduled = undefined;\n            }\n        }\n        return undefined;\n    };\n    return AsapAction;\n}(_AsyncAction__WEBPACK_IMPORTED_MODULE_2__.AsyncAction);\n //# sourceMappingURL=AsapAction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvQXNhcEFjdGlvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QztBQUdZO0FBR3hEO0lBQW1DLHFFQUFjO0lBQy9DLG9CQUFzQixTQUF3QixFQUFZLElBQW1EO1FBQTdHLFlBQ0Usa0JBQU0sU0FBUyxFQUFFLElBQUksQ0FBQyxTQUN2QjtRQUZxQixlQUFTLEdBQVQsU0FBUyxDQUFlO1FBQVksVUFBSSxHQUFKLElBQUksQ0FBK0M7O0lBRTdHLENBQUM7SUFFUyxtQ0FBYyxHQUF4QixTQUF5QixTQUF3QixFQUFFLEVBQWdCLEVBQUUsS0FBaUI7UUFBakI7WUFBQSxTQUFpQjtRQUFBO1FBRXBGLElBQUksS0FBSyxLQUFLLElBQUksSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO1lBQy9CLE9BQU8saUJBQU0sY0FBYyxZQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDbkQ7UUFFRCxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUk3QixPQUFPLFNBQVMsQ0FBQyxVQUFVLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxHQUFHLGlFQUFpQixDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsU0FBUyxFQUFDLENBQUMsQ0FBQztJQUNwSSxDQUFDO0lBRVMsbUNBQWMsR0FBeEIsU0FBeUIsU0FBd0IsRUFBRSxFQUFnQixFQUFFLEtBQWlCOztRQUFqQjtZQUFBLFNBQWlCO1FBQUE7UUFJcEYsSUFBSSxLQUFLLElBQUksSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLENBQUMsRUFBRTtZQUM5QyxPQUFPLGlCQUFNLGNBQWMsWUFBQyxTQUFTLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxDQUFDO1NBQ25EO1FBSU8sV0FBTyxHQUFLLFNBQVMsUUFBZCxDQUFlO1FBQzlCLElBQUksRUFBRSxJQUFJLElBQUksSUFBSSxjQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxFQUFFLDBDQUFFLFFBQU8sRUFBRSxFQUFFO1lBQ3hELGlFQUFpQixDQUFDLGNBQWMsQ0FBQyxFQUFFLENBQUMsQ0FBQztZQUNyQyxJQUFJLFNBQVMsQ0FBQyxVQUFVLEtBQUssRUFBRSxFQUFFO2dCQUMvQixTQUFTLENBQUMsVUFBVSxHQUFHLFNBQVMsQ0FBQzthQUNsQztTQUNGO1FBRUQsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUNILGlCQUFDO0FBQUQsQ0FBQyxDQXRDa0MscURBQVciLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL3NjaGVkdWxlci9Bc2FwQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsapAction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsapScheduler.js":
/*!*************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/AsapScheduler.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsapScheduler: () => (/* binding */ AsapScheduler)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsyncScheduler */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js\");\n\n\nvar AsapScheduler = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsapScheduler, _super);\n    function AsapScheduler() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AsapScheduler.prototype.flush = function(action) {\n        this._active = true;\n        var flushId = this._scheduled;\n        this._scheduled = undefined;\n        var actions = this.actions;\n        var error;\n        action = action || actions.shift();\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }while ((action = actions[0]) && action.id === flushId && actions.shift());\n        this._active = false;\n        if (error) {\n            while((action = actions[0]) && action.id === flushId && actions.shift()){\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsapScheduler;\n}(_AsyncScheduler__WEBPACK_IMPORTED_MODULE_1__.AsyncScheduler);\n //# sourceMappingURL=AsapScheduler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvQXNhcFNjaGVkdWxlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ2tEO0FBRWxEO0lBQW1DLHdFQUFjO0lBQWpEOztJQWtDQSxDQUFDO0lBakNRLDZCQUFLLEdBQVosU0FBYSxNQUF5QjtRQUNwQyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQVVwQixJQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDO1FBRXBCLFdBQU8sR0FBSyxJQUFJLFFBQVQsQ0FBVTtRQUN6QixJQUFJLEtBQVUsQ0FBQztRQUNmLE1BQU0sR0FBRyxNQUFNLElBQUksT0FBTyxDQUFDLEtBQUssRUFBRyxDQUFDO1FBRXBDLEdBQUc7WUFDRCxJQUFJLEtBQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUU7Z0JBQ3hELE1BQU07YUFDUDtTQUNGLE9BQVEsQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLEVBQUMsQ0FBRSxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRTtRQUU1RSxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUVyQixJQUFJLEtBQUssRUFBRTtZQUNULE1BQU8sQ0FBQyxNQUFNLEdBQUcsT0FBTyxDQUFDLEVBQUMsQ0FBRSxJQUFJLE1BQU0sQ0FBQyxFQUFFLEtBQUssT0FBTyxJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBRTtnQkFDeEUsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO2FBQ3RCO1lBQ0QsTUFBTSxLQUFLLENBQUM7U0FDYjtJQUNILENBQUM7SUFDSCxvQkFBQztBQUFELENBQUMsQ0FsQ2tDLDJEQUFjIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9zY2hlZHVsZXIvQXNhcFNjaGVkdWxlci50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsapScheduler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js":
/*!***********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncAction: () => (/* binding */ AsyncAction)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Action__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Action */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/Action.js\");\n/* harmony import */ var _intervalProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./intervalProvider */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js\");\n/* harmony import */ var _util_arrRemove__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/arrRemove */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/arrRemove.js\");\n\n\n\n\nvar AsyncAction = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function(state, delay) {\n        var _a;\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function(scheduler, _id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        return _intervalProvider__WEBPACK_IMPORTED_MODULE_1__.intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function(_scheduler, id, delay) {\n        if (delay === void 0) {\n            delay = 0;\n        }\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            _intervalProvider__WEBPACK_IMPORTED_MODULE_1__.intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        } else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function(state, _delay) {\n        var errored = false;\n        var errorValue;\n        try {\n            this.work(state);\n        } catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype.unsubscribe = function() {\n        if (!this.closed) {\n            var _a = this, id = _a.id, scheduler = _a.scheduler;\n            var actions = scheduler.actions;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            (0,_util_arrRemove__WEBPACK_IMPORTED_MODULE_2__.arrRemove)(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            _super.prototype.unsubscribe.call(this);\n        }\n    };\n    return AsyncAction;\n}(_Action__WEBPACK_IMPORTED_MODULE_3__.Action);\n //# sourceMappingURL=AsyncAction.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvQXN5bmNBY3Rpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtDO0FBSW9CO0FBQ1I7QUFHOUM7SUFBb0Msc0VBQVM7SUFPM0MscUJBQXNCLFNBQXlCLEVBQVksSUFBbUQ7UUFBOUcsWUFDRSxrQkFBTSxTQUFTLEVBQUUsSUFBSSxDQUFDLFNBQ3ZCO1FBRnFCLGVBQVMsR0FBVCxTQUFTLENBQWdCO1FBQVksVUFBSSxHQUFKLElBQUksQ0FBK0M7UUFGcEcsYUFBTyxHQUFZLEtBQUssQ0FBQzs7SUFJbkMsQ0FBQztJQUVNLDhCQUFRLEdBQWYsU0FBZ0IsS0FBUyxFQUFFLEtBQWlCOztRQUFqQjtZQUFBLFNBQWlCO1FBQUE7UUFDMUMsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUdELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBRW5CLElBQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUM7UUFDbkIsSUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztRQXVCakMsSUFBSSxFQUFFLElBQUksSUFBSSxFQUFFO1lBQ2QsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLFNBQVMsRUFBRSxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDckQ7UUFJRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztRQUVwQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUVuQixJQUFJLENBQUMsRUFBRSxHQUFHLFVBQUksQ0FBQyxRQUFFLDZCQUFJLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxFQUFFLEVBQUUsS0FBSyxDQUFDLENBQUM7UUFFcEUsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBRVMsb0NBQWMsR0FBeEIsU0FBeUIsU0FBeUIsRUFBRSxHQUFpQixFQUFFLEtBQWlCO1FBQWpCO1lBQUEsU0FBaUI7UUFBQTtRQUN0RixPQUFPLCtEQUFnQixDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUVTLG9DQUFjLEdBQXhCLFNBQXlCLFVBQTBCLEVBQUUsRUFBZ0IsRUFBRSxLQUF3QjtRQUF4QjtZQUFBLFNBQXdCO1FBQUE7UUFFN0YsSUFBSSxLQUFLLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEtBQUssS0FBSyxJQUFJLElBQUksQ0FBQyxPQUFPLEtBQUssS0FBSyxFQUFFO1lBQ25FLE9BQU8sRUFBRSxDQUFDO1NBQ1g7UUFHRCxJQUFJLEVBQUUsSUFBSSxJQUFJLEVBQUU7WUFDZCwrREFBZ0IsQ0FBQyxhQUFhLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDcEM7UUFFRCxPQUFPLFNBQVMsQ0FBQztJQUNuQixDQUFDO0lBTU0sNkJBQU8sR0FBZCxTQUFlLEtBQVEsRUFBRSxLQUFhO1FBQ3BDLElBQUksSUFBSSxDQUFDLE1BQU0sRUFBRTtZQUNmLE9BQU8sSUFBSSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztTQUNsRDtRQUVELElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzFDLElBQUksS0FBSyxFQUFFO1lBQ1QsT0FBTyxLQUFLLENBQUM7U0FDZCxNQUFNLElBQUksSUFBSSxDQUFDLE9BQU8sS0FBSyxLQUFLLElBQUksSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLEVBQUU7WUFjcEQsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsSUFBSSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUM5RDtJQUNILENBQUM7SUFFUyw4QkFBUSxHQUFsQixTQUFtQixLQUFRLEVBQUUsTUFBYztRQUN6QyxJQUFJLE9BQU8sR0FBWSxLQUFLLENBQUM7UUFDN0IsSUFBSSxVQUFlLENBQUM7UUFDcEIsSUFBSTtZQUNGLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDbEIsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUNWLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFJZixVQUFVLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksS0FBSyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7U0FDdEU7UUFDRCxJQUFJLE9BQU8sRUFBRTtZQUNYLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztZQUNuQixPQUFPLFVBQVUsQ0FBQztTQUNuQjtJQUNILENBQUM7SUFFRCxpQ0FBVyxHQUFYO1FBQ0UsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDVixTQUFvQixJQUFJLEVBQXRCLEVBQUUsVUFBRSxTQUFTLGVBQVMsQ0FBQztZQUN2QixXQUFPLEdBQUssU0FBUyxRQUFkLENBQWU7WUFFOUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSyxDQUFDO1lBQ2hELElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBRXJCLDBEQUFTLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3pCLElBQUksRUFBRSxJQUFJLElBQUksRUFBRTtnQkFDZCxJQUFJLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsU0FBUyxFQUFFLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQzthQUNwRDtZQUVELElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSyxDQUFDO1lBQ25CLGlCQUFNLFdBQVcsV0FBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQUNILGtCQUFDO0FBQUQsQ0FBQyxDQTlJbUMsMkNBQU0iLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL3NjaGVkdWxlci9Bc3luY0FjdGlvbi50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js":
/*!**************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncScheduler: () => (/* binding */ AsyncScheduler)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _Scheduler__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Scheduler */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Scheduler.js\");\n\n\nvar AsyncScheduler = function(_super) {\n    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) {\n            now = _Scheduler__WEBPACK_IMPORTED_MODULE_1__.Scheduler.now;\n        }\n        var _this = _super.call(this, SchedulerAction, now) || this;\n        _this.actions = [];\n        _this._active = false;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function(action) {\n        var actions = this.actions;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this._active = true;\n        do {\n            if (error = action.execute(action.state, action.delay)) {\n                break;\n            }\n        }while (action = actions.shift());\n        this._active = false;\n        if (error) {\n            while(action = actions.shift()){\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(_Scheduler__WEBPACK_IMPORTED_MODULE_1__.Scheduler);\n //# sourceMappingURL=AsyncScheduler.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvQXN5bmNTY2hlZHVsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5QztBQUt6QztJQUFvQyx5RUFBUztJQWtCM0Msd0JBQVksZUFBOEIsRUFBRSxHQUFpQztRQUFqQztZQUFBLE1BQW9CLGlEQUFTLENBQUMsR0FBRztRQUFBO1FBQTdFLFlBQ0Usa0JBQU0sZUFBZSxFQUFFLEdBQUcsQ0FBQyxTQUM1QjtRQW5CTSxhQUFPLEdBQTRCLEVBQUUsQ0FBQztRQU90QyxhQUFPLEdBQVksS0FBSyxDQUFDOztJQVloQyxDQUFDO0lBRU0sOEJBQUssR0FBWixTQUFhLE1BQXdCO1FBQzNCLFdBQU8sR0FBSyxJQUFJLFFBQVQsQ0FBVTtRQUV6QixJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztZQUNyQixPQUFPO1NBQ1I7UUFFRCxJQUFJLEtBQVUsQ0FBQztRQUNmLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBRXBCLEdBQUc7WUFDRCxJQUFJLEtBQU0sR0FBRyxNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUU7Z0JBQ3hELE1BQU07YUFDUDtTQUNGLE9BQVMsQ0FBRCxLQUFPLEdBQUcsT0FBTyxDQUFDLEtBQUssRUFBRyxDQUFDLENBQUU7UUFFdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFFckIsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFRLENBQUQsS0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLEVBQUcsQ0FBQztnQkFDaEMsTUFBTSxDQUFDLFdBQVcsRUFBRSxDQUFDO2FBQ3RCO1lBQ0QsTUFBTSxLQUFLLENBQUM7U0FDYjtJQUNILENBQUM7SUFDSCxxQkFBQztBQUFELENBQUMsQ0FoRG1DLGlEQUFTIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9zY2hlZHVsZXIvQXN5bmNTY2hlZHVsZXIudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/asap.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/asap.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asap: () => (/* binding */ asap),\n/* harmony export */   asapScheduler: () => (/* binding */ asapScheduler)\n/* harmony export */ });\n/* harmony import */ var _AsapAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AsapAction */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsapAction.js\");\n/* harmony import */ var _AsapScheduler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AsapScheduler */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/AsapScheduler.js\");\n\n\nvar asapScheduler = new _AsapScheduler__WEBPACK_IMPORTED_MODULE_0__.AsapScheduler(_AsapAction__WEBPACK_IMPORTED_MODULE_1__.AsapAction);\nvar asap = asapScheduler; //# sourceMappingURL=asap.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvYXNhcC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ007QUFxQ3pDLElBQU0sYUFBYSxHQUFHLElBQUkseURBQWEsQ0FBQyxtREFBVSxDQUFDLENBQUM7QUFLcEQsSUFBTSxJQUFJLEdBQUcsYUFBYSxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9zY2hlZHVsZXIvYXNhcC50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/asap.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dateTimestampProvider: () => (/* binding */ dateTimestampProvider)\n/* harmony export */ });\nvar dateTimestampProvider = {\n    now: function() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined\n}; //# sourceMappingURL=dateTimestampProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvZGF0ZVRpbWVzdGFtcFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFNTyxJQUFNLHFCQUFxQixHQUEwQjtJQUMxRCxHQUFHO1FBR0QsT0FBTyxDQUFDLHFCQUFxQixDQUFDLFFBQVEsSUFBSSxLQUFJLENBQUMsR0FBSSxFQUFFLENBQUM7SUFDeEQsQ0FBQztJQUNELFFBQVEsRUFBRSxTQUFTO0NBQ3BCLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL3NjaGVkdWxlci9kYXRlVGltZXN0YW1wUHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/immediateProvider.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/immediateProvider.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   immediateProvider: () => (/* binding */ immediateProvider)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n/* harmony import */ var _util_Immediate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/Immediate */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/Immediate.js\");\n\n\nvar setImmediate = _util_Immediate__WEBPACK_IMPORTED_MODULE_0__.Immediate.setImmediate, clearImmediate = _util_Immediate__WEBPACK_IMPORTED_MODULE_0__.Immediate.clearImmediate;\nvar immediateProvider = {\n    setImmediate: function() {\n        var args = [];\n        for(var _i = 0; _i < arguments.length; _i++){\n            args[_i] = arguments[_i];\n        }\n        var delegate = immediateProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate).apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(args)));\n    },\n    clearImmediate: function(handle) {\n        var delegate = immediateProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);\n    },\n    delegate: undefined\n}; //# sourceMappingURL=immediateProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvaW1tZWRpYXRlUHJvdmlkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE4QztBQUV0QyxnQkFBWSxHQUFxQixzREFBUyxhQUE5QixFQUFFLGNBQWMsR0FBSyxzREFBUyxlQUFkLENBQWU7QUFnQjVDLElBQU0saUJBQWlCLEdBQXNCO0lBR2xELFlBQVk7UUFBQyxjQUFPO1lBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOztRQUNWLFlBQVEsR0FBSyxpQkFBaUIsU0FBdEIsQ0FBdUI7UUFDdkMsT0FBTyxDQUFDLFFBQVEsY0FBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxpQkFBZ0IsYUFBWSxDQUFDLHFIQUFJLElBQUksSUFBRTtJQUMzRCxDQUFDO0lBQ0QsY0FBYyxFQUFkLFNBQWUsTUFBTTtRQUNYLFlBQVEsR0FBSyxpQkFBaUIsU0FBdEIsQ0FBdUI7UUFDdkMsT0FBTyxDQUFDLFNBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxtQkFBa0IsZUFBYyxDQUFDLE1BQWMsQ0FBQyxDQUFDO0lBQ3JFLENBQUM7SUFDRCxRQUFRLEVBQUUsU0FBUztDQUNwQixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC9zY2hlZHVsZXIvaW1tZWRpYXRlUHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/immediateProvider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js":
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   intervalProvider: () => (/* binding */ intervalProvider)\n/* harmony export */ });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"(app-pages-browser)/./node_modules/tslib/tslib.es6.mjs\");\n\nvar intervalProvider = {\n    setInterval: function(handler, timeout) {\n        var args = [];\n        for(var _i = 2; _i < arguments.length; _i++){\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = intervalProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval.apply(delegate, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([\n                handler,\n                timeout\n            ], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(args)));\n        }\n        return setInterval.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArray)([\n            handler,\n            timeout\n        ], (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__read)(args)));\n    },\n    clearInterval: function(handle) {\n        var delegate = intervalProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined\n}; //# sourceMappingURL=intervalProvider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9zY2hlZHVsZXIvaW50ZXJ2YWxQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFlTyxJQUFNLGdCQUFnQixHQUFxQjtJQUdoRCxXQUFXLEVBQVgsU0FBWSxPQUFtQixFQUFFLE9BQWdCO1FBQUUsY0FBTztZQUFQLFVBQU8sRUFBUCxxQkFBTyxFQUFQLElBQU87WUFBUCw2QkFBTzs7UUFDaEQsWUFBUSxHQUFLLGdCQUFnQixTQUFyQixDQUFzQjtRQUN0QyxJQUFJLFFBQVEsYUFBUixRQUFRLHVCQUFSLFFBQVEsQ0FBRSxXQUFXLEVBQUU7WUFDekIsT0FBTyxRQUFRLENBQUMsV0FBVyxPQUFwQixRQUFRO2dCQUFhLE9BQU87Z0JBQUUsT0FBTzthQUFBLGdEQUFLLElBQUksSUFBRTtTQUN4RDtRQUNELE9BQU8sV0FBVztZQUFDLE9BQU87WUFBRSxPQUFPO1NBQUEsZ0RBQUssSUFBSSxJQUFFO0lBQ2hELENBQUM7SUFDRCxhQUFhLEVBQWIsU0FBYyxNQUFNO1FBQ1YsWUFBUSxHQUFLLGdCQUFnQixTQUFyQixDQUFzQjtRQUN0QyxPQUFPLENBQUMsU0FBUSxhQUFSLFFBQVEsdUJBQVIsUUFBUSxDQUFFLGtCQUFpQixjQUFhLENBQUMsTUFBYyxDQUFDLENBQUM7SUFDbkUsQ0FBQztJQUNELFFBQVEsRUFBRSxTQUFTO0NBQ3BCLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL3NjaGVkdWxlci9pbnRlcnZhbFByb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/Immediate.js":
/*!****************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/util/Immediate.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Immediate: () => (/* binding */ Immediate),\n/* harmony export */   TestTools: () => (/* binding */ TestTools)\n/* harmony export */ });\nvar nextHandle = 1;\nvar resolved;\nvar activeHandles = {};\nfunction findAndClearHandle(handle) {\n    if (handle in activeHandles) {\n        delete activeHandles[handle];\n        return true;\n    }\n    return false;\n}\nvar Immediate = {\n    setImmediate: function(cb) {\n        var handle = nextHandle++;\n        activeHandles[handle] = true;\n        if (!resolved) {\n            resolved = Promise.resolve();\n        }\n        resolved.then(function() {\n            return findAndClearHandle(handle) && cb();\n        });\n        return handle;\n    },\n    clearImmediate: function(handle) {\n        findAndClearHandle(handle);\n    }\n};\nvar TestTools = {\n    pending: function() {\n        return Object.keys(activeHandles).length;\n    }\n}; //# sourceMappingURL=Immediate.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC91dGlsL0ltbWVkaWF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQztBQUVuQixJQUFJLFFBQXNCLENBQUM7QUFDM0IsSUFBTSxhQUFhLEdBQTJCLEVBQUUsQ0FBQztBQU9qRCxTQUFTLGtCQUFrQixDQUFDLE1BQWM7SUFDeEMsSUFBSSxNQUFNLElBQUksYUFBYSxFQUFFO1FBQzNCLE9BQU8sYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzdCLE9BQU8sSUFBSSxDQUFDO0tBQ2I7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFLTSxJQUFNLFNBQVMsR0FBRztJQUN2QixZQUFZLEVBQVosU0FBYSxFQUFjO1FBQ3pCLElBQU0sTUFBTSxHQUFHLFVBQVUsRUFBRSxDQUFDO1FBQzVCLGFBQWEsQ0FBQyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUM7UUFDN0IsSUFBSSxDQUFDLFFBQVEsRUFBRTtZQUNiLFFBQVEsR0FBRyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7U0FDOUI7UUFDRCxRQUFRLENBQUMsSUFBSSxDQUFDO1lBQU0seUJBQWtCLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxFQUFFO1FBQWxDLENBQWtDLENBQUMsQ0FBQztRQUN4RCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0lBRUQsY0FBYyxFQUFkLFNBQWUsTUFBYztRQUMzQixrQkFBa0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM3QixDQUFDO0NBQ0YsQ0FBQztBQUtLLElBQU0sU0FBUyxHQUFHO0lBQ3ZCLE9BQU87UUFDTCxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsTUFBTSxDQUFDO0lBQzNDLENBQUM7Q0FDRixDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL3NyYy9pbnRlcm5hbC91dGlsL0ltbWVkaWF0ZS50cyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/Immediate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js":
/*!******************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ObjectUnsubscribedError: () => (/* binding */ ObjectUnsubscribedError)\n/* harmony export */ });\n/* harmony import */ var _createErrorClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createErrorClass */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js\");\n\nvar ObjectUnsubscribedError = (0,_createErrorClass__WEBPACK_IMPORTED_MODULE_0__.createErrorClass)(_c = function(_super) {\n    return function ObjectUnsubscribedErrorImpl() {\n        _super(this);\n        this.name = 'ObjectUnsubscribedError';\n        this.message = 'object unsubscribed';\n    };\n}); //# sourceMappingURL=ObjectUnsubscribedError.js.map\n_c1 = ObjectUnsubscribedError;\nvar _c, _c1;\n$RefreshReg$(_c, \"ObjectUnsubscribedError$createErrorClass\");\n$RefreshReg$(_c1, \"ObjectUnsubscribedError\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC91dGlsL09iamVjdFVuc3Vic2NyaWJlZEVycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNEO0FBcUIvQyxJQUFNLHVCQUF1QixHQUFnQyxtRUFBZ0IsTUFDbEYsU0FBQyxNQUFNO0lBQ0wsZ0JBQVMsMkJBQTJCO1FBQ2xDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNiLElBQUksQ0FBQyxJQUFJLEdBQUcseUJBQXlCLENBQUM7UUFDdEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxxQkFBcUIsQ0FBQztJQUN2QyxDQUFDO0FBSkQsQ0FJQyxDQUNKLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvc3JjL2ludGVybmFsL3V0aWwvT2JqZWN0VW5zdWJzY3JpYmVkRXJyb3IudHMiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/native.js":
/*!******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/native.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nvar randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  randomUUID\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGlFQUFlO0FBQ2Y7QUFDQSxDQUFDIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvbmF0aXZlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByYW5kb21VVUlEID0gdHlwZW9mIGNyeXB0byAhPT0gJ3VuZGVmaW5lZCcgJiYgY3J5cHRvLnJhbmRvbVVVSUQgJiYgY3J5cHRvLnJhbmRvbVVVSUQuYmluZChjcnlwdG8pO1xuZXhwb3J0IGRlZmF1bHQge1xuICByYW5kb21VVUlEXG59OyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/native.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcmVnZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWMsRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLGdCQUFnQixFQUFFLFVBQVUsR0FBRyw4RUFBOEUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0NyYWNrZWQvRnJvbnQtZW5kL3N0YXJ0dXAvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9yZWdleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLThdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMHxmZmZmZmZmZi1mZmZmLWZmZmYtZmZmZi1mZmZmZmZmZmZmZmYpJC9pOyJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/regex.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvcm5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0NyYWNrZWQvRnJvbnQtZW5kL3N0YXJ0dXAvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci9ybmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVW5pcXVlIElEIGNyZWF0aW9uIHJlcXVpcmVzIGEgaGlnaCBxdWFsaXR5IHJhbmRvbSAjIGdlbmVyYXRvci4gSW4gdGhlIGJyb3dzZXIgd2UgdGhlcmVmb3JlXG4vLyByZXF1aXJlIHRoZSBjcnlwdG8gQVBJIGFuZCBkbyBub3Qgc3VwcG9ydCBidWlsdC1pbiBmYWxsYmFjayB0byBsb3dlciBxdWFsaXR5IHJhbmRvbSBudW1iZXJcbi8vIGdlbmVyYXRvcnMgKGxpa2UgTWF0aC5yYW5kb20oKSkuXG5cbnZhciBnZXRSYW5kb21WYWx1ZXM7XG52YXIgcm5kczggPSBuZXcgVWludDhBcnJheSgxNik7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBybmcoKSB7XG4gIC8vIGxhenkgbG9hZCBzbyB0aGF0IGVudmlyb25tZW50cyB0aGF0IG5lZWQgdG8gcG9seWZpbGwgaGF2ZSBhIGNoYW5jZSB0byBkbyBzb1xuICBpZiAoIWdldFJhbmRvbVZhbHVlcykge1xuICAgIC8vIGdldFJhbmRvbVZhbHVlcyBuZWVkcyB0byBiZSBpbnZva2VkIGluIGEgY29udGV4dCB3aGVyZSBcInRoaXNcIiBpcyBhIENyeXB0byBpbXBsZW1lbnRhdGlvbi5cbiAgICBnZXRSYW5kb21WYWx1ZXMgPSB0eXBlb2YgY3J5cHRvICE9PSAndW5kZWZpbmVkJyAmJiBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzICYmIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pO1xuICAgIGlmICghZ2V0UmFuZG9tVmFsdWVzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyeXB0by5nZXRSYW5kb21WYWx1ZXMoKSBub3Qgc3VwcG9ydGVkLiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkI2dldHJhbmRvbXZhbHVlcy1ub3Qtc3VwcG9ydGVkJyk7XG4gICAgfVxuICB9XG4gIHJldHVybiBnZXRSYW5kb21WYWx1ZXMocm5kczgpO1xufSJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/rng.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   unsafeStringify: () => (/* binding */ unsafeStringify)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQzs7QUFFckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixTQUFTO0FBQ3pCO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLHdEQUFRO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxTQUFTIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvc3RyaW5naWZ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlLmpzJztcblxuLyoqXG4gKiBDb252ZXJ0IGFycmF5IG9mIDE2IGJ5dGUgdmFsdWVzIHRvIFVVSUQgc3RyaW5nIGZvcm1hdCBvZiB0aGUgZm9ybTpcbiAqIFhYWFhYWFhYLVhYWFgtWFhYWC1YWFhYLVhYWFhYWFhYWFhYWFxuICovXG52YXIgYnl0ZVRvSGV4ID0gW107XG5mb3IgKHZhciBpID0gMDsgaSA8IDI1NjsgKytpKSB7XG4gIGJ5dGVUb0hleC5wdXNoKChpICsgMHgxMDApLnRvU3RyaW5nKDE2KS5zbGljZSgxKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICAvLyBOb3RlOiBCZSBjYXJlZnVsIGVkaXRpbmcgdGhpcyBjb2RlISAgSXQncyBiZWVuIHR1bmVkIGZvciBwZXJmb3JtYW5jZVxuICAvLyBhbmQgd29ya3MgaW4gd2F5cyB5b3UgbWF5IG5vdCBleHBlY3QuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdXVpZGpzL3V1aWQvcHVsbC80MzRcbiAgLy9cbiAgLy8gTm90ZSB0byBmdXR1cmUtc2VsZjogTm8sIHlvdSBjYW4ndCByZW1vdmUgdGhlIGB0b0xvd2VyQ2FzZSgpYCBjYWxsLlxuICAvLyBSRUY6IGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZC9wdWxsLzY3NyNpc3N1ZWNvbW1lbnQtMTc1NzM1MTM1MVxuICByZXR1cm4gKGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgM11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA0XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDVdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA3XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDhdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgOV1dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxMl1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxM11dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAxNV1dKS50b0xvd2VyQ2FzZSgpO1xufVxuZnVuY3Rpb24gc3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICB2YXIgdXVpZCA9IHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCk7XG4gIC8vIENvbnNpc3RlbmN5IGNoZWNrIGZvciB2YWxpZCBVVUlELiAgSWYgdGhpcyB0aHJvd3MsIGl0J3MgbGlrZWx5IGR1ZSB0byBvbmVcbiAgLy8gb2YgdGhlIGZvbGxvd2luZzpcbiAgLy8gLSBPbmUgb3IgbW9yZSBpbnB1dCBhcnJheSB2YWx1ZXMgZG9uJ3QgbWFwIHRvIGEgaGV4IG9jdGV0IChsZWFkaW5nIHRvXG4gIC8vIFwidW5kZWZpbmVkXCIgaW4gdGhlIHV1aWQpXG4gIC8vIC0gSW52YWxpZCBpbnB1dCB2YWx1ZXMgZm9yIHRoZSBSRkMgYHZlcnNpb25gIG9yIGB2YXJpYW50YCBmaWVsZHNcbiAgaWYgKCF2YWxpZGF0ZSh1dWlkKSkge1xuICAgIHRocm93IFR5cGVFcnJvcignU3RyaW5naWZpZWQgVVVJRCBpcyBpbnZhbGlkJyk7XG4gIH1cbiAgcmV0dXJuIHV1aWQ7XG59XG5leHBvcnQgZGVmYXVsdCBzdHJpbmdpZnk7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/stringify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/native.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  if (_native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID && !buf && !options) {\n    return _native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdjQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpQztBQUNOO0FBQ3NCO0FBQ2pEO0FBQ0EsTUFBTSxrREFBTTtBQUNaLFdBQVcsa0RBQU07QUFDakI7QUFDQTtBQUNBLCtDQUErQywrQ0FBRzs7QUFFbEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyw4REFBZTtBQUN4QjtBQUNBLGlFQUFlLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0NyYWNrZWQvRnJvbnQtZW5kL3N0YXJ0dXAvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tYnJvd3Nlci92NC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbmF0aXZlIGZyb20gJy4vbmF0aXZlLmpzJztcbmltcG9ydCBybmcgZnJvbSAnLi9ybmcuanMnO1xuaW1wb3J0IHsgdW5zYWZlU3RyaW5naWZ5IH0gZnJvbSAnLi9zdHJpbmdpZnkuanMnO1xuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHJuZHMgPSBvcHRpb25zLnJhbmRvbSB8fCAob3B0aW9ucy5ybmcgfHwgcm5nKSgpO1xuXG4gIC8vIFBlciA0LjQsIHNldCBiaXRzIGZvciB2ZXJzaW9uIGFuZCBgY2xvY2tfc2VxX2hpX2FuZF9yZXNlcnZlZGBcbiAgcm5kc1s2XSA9IHJuZHNbNl0gJiAweDBmIHwgMHg0MDtcbiAgcm5kc1s4XSA9IHJuZHNbOF0gJiAweDNmIHwgMHg4MDtcblxuICAvLyBDb3B5IGJ5dGVzIHRvIGJ1ZmZlciwgaWYgcHJvdmlkZWRcbiAgaWYgKGJ1Zikge1xuICAgIG9mZnNldCA9IG9mZnNldCB8fCAwO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG4gICAgcmV0dXJuIGJ1ZjtcbiAgfVxuICByZXR1cm4gdW5zYWZlU3RyaW5naWZ5KHJuZHMpO1xufVxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/regex.js\");\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDL0I7QUFDQSxxQ0FBcUMsaURBQUs7QUFDMUM7QUFDQSxpRUFBZSxRQUFRIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLWJyb3dzZXIvdmFsaWRhdGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuZnVuY3Rpb24gdmFsaWRhdGUodXVpZCkge1xuICByZXR1cm4gdHlwZW9mIHV1aWQgPT09ICdzdHJpbmcnICYmIFJFR0VYLnRlc3QodXVpZCk7XG59XG5leHBvcnQgZGVmYXVsdCB2YWxpZGF0ZTsiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/uuid/dist/esm-browser/validate.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/xstate/actors/dist/xstate-actors.development.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEmptyActor: () => (/* binding */ createEmptyActor),\n/* harmony export */   fromCallback: () => (/* binding */ fromCallback),\n/* harmony export */   fromEventObservable: () => (/* binding */ fromEventObservable),\n/* harmony export */   fromObservable: () => (/* binding */ fromObservable),\n/* harmony export */   fromPromise: () => (/* binding */ fromPromise),\n/* harmony export */   fromTransition: () => (/* binding */ fromTransition)\n/* harmony export */ });\n/* harmony import */ var _dist_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dist/raise-1db27a82.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\n\n/**\n * Represents an actor created by `fromTransition`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromTransition,\n *   createActor,\n *   type AnyActorSystem\n * } from 'xstate';\n *\n * //* The actor's stored context.\n * type Context = {\n *   // The current count.\n *   count: number;\n *   // The amount to increase `count` by.\n *   step: number;\n * };\n * // The events the actor receives.\n * type Event = { type: 'increment' };\n * // The actor's input.\n * type Input = { step?: number };\n *\n * // Actor logic that increments `count` by `step` when it receives an event of\n * // type `increment`.\n * const logic = fromTransition<Context, Event, AnyActorSystem, Input>(\n *   (state, event, actorScope) => {\n *     actorScope.self;\n *     //         ^? TransitionActorRef<Context, Event>\n *\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + state.step\n *       };\n *     }\n *     return state;\n *   },\n *   ({ input, self }) => {\n *     self;\n *     // ^? TransitionActorRef<Context, Event>\n *\n *     return {\n *       count: 0,\n *       step: input.step ?? 1\n *     };\n *   }\n * );\n *\n * const actor = createActor(logic, { input: { step: 10 } });\n * //    ^? TransitionActorRef<Context, Event>\n * ```\n *\n * @see {@link fromTransition}\n */\n\n/**\n * Returns actor logic given a transition function and its initial state.\n *\n * A “transition function” is a function that takes the current `state` and\n * received `event` object as arguments, and returns the next state, similar to\n * a reducer.\n *\n * Actors created from transition logic (“transition actors”) can:\n *\n * - Receive events\n * - Emit snapshots of its state\n *\n * The transition function’s `state` is used as its transition actor’s\n * `context`.\n *\n * Note that the \"state\" for a transition function is provided by the initial\n * state argument, and is not the same as the State object of an actor or a\n * state within a machine configuration.\n *\n * @example\n *\n * ```ts\n * const transitionLogic = fromTransition(\n *   (state, event) => {\n *     if (event.type === 'increment') {\n *       return {\n *         ...state,\n *         count: state.count + 1\n *       };\n *     }\n *     return state;\n *   },\n *   { count: 0 }\n * );\n *\n * const transitionActor = createActor(transitionLogic);\n * transitionActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * transitionActor.start();\n * // => {\n * //   status: 'active',\n * //   context: { count: 0 },\n * //   ...\n * // }\n *\n * transitionActor.send({ type: 'increment' });\n * // => {\n * //   status: 'active',\n * //   context: { count: 1 },\n * //   ...\n * // }\n * ```\n *\n * @param transition The transition function used to describe the transition\n *   logic. It should return the next state given the current state and event.\n *   It receives the following arguments:\n *\n *   - `state` - the current state.\n *   - `event` - the received event.\n *   - `actorScope` - the actor scope object, with properties like `self` and\n *       `system`.\n *\n * @param initialContext The initial state of the transition function, either an\n *   object representing the state, or a function which returns a state object.\n *   If a function, it will receive as its only argument an object with the\n *   following properties:\n *\n *   - `input` - the `input` provided to its parent transition actor.\n *   - `self` - a reference to its parent transition actor.\n *\n * @returns Actor logic\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromTransition(transition, initialContext) {\n  return {\n    config: transition,\n    transition: (snapshot, event, actorScope) => {\n      return {\n        ...snapshot,\n        context: transition(snapshot.context, event, actorScope)\n      };\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: typeof initialContext === 'function' ? initialContext({\n          input\n        }) : initialContext\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n}\n\nconst instanceStates = /* #__PURE__ */new WeakMap();\n\n/**\n * Represents an actor created by `fromCallback`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromCallback, createActor } from 'xstate';\n *\n * // The events the actor receives.\n * type Event = { type: 'someEvent' };\n * // The actor's input.\n * type Input = { name: string };\n *\n * // Actor logic that logs whenever it receives an event of type `someEvent`.\n * const logic = fromCallback<Event, Input>(({ self, input, receive }) => {\n *   self;\n *   // ^? CallbackActorRef<Event, Input>\n *\n *   receive((event) => {\n *     if (event.type === 'someEvent') {\n *       console.log(`${input.name}: received \"someEvent\" event`);\n *       // logs 'myActor: received \"someEvent\" event'\n *     }\n *   });\n * });\n *\n * const actor = createActor(logic, { input: { name: 'myActor' } });\n * //    ^? CallbackActorRef<Event, Input>\n * ```\n *\n * @see {@link fromCallback}\n */\n\n/**\n * An actor logic creator which returns callback logic as defined by a callback\n * function.\n *\n * @remarks\n * Useful for subscription-based or other free-form logic that can send events\n * back to the parent actor.\n *\n * Actors created from callback logic (“callback actors”) can:\n *\n * - Receive events via the `receive` function\n * - Send events to the parent actor via the `sendBack` function\n *\n * Callback actors are a bit different from other actors in that they:\n *\n * - Do not work with `onDone`\n * - Do not produce a snapshot using `.getSnapshot()`\n * - Do not emit values when used with `.subscribe()`\n * - Can not be stopped with `.stop()`\n *\n * @example\n *\n * ```typescript\n * const callbackLogic = fromCallback(({ sendBack, receive }) => {\n *   let lockStatus = 'unlocked';\n *\n *   const handler = (event) => {\n *     if (lockStatus === 'locked') {\n *       return;\n *     }\n *     sendBack(event);\n *   };\n *\n *   receive((event) => {\n *     if (event.type === 'lock') {\n *       lockStatus = 'locked';\n *     } else if (event.type === 'unlock') {\n *       lockStatus = 'unlocked';\n *     }\n *   });\n *\n *   document.body.addEventListener('click', handler);\n *\n *   return () => {\n *     document.body.removeEventListener('click', handler);\n *   };\n * });\n * ```\n *\n * @param callback - The callback function used to describe the callback logic\n *   The callback function is passed an object with the following properties:\n *\n *   - `receive` - A function that can send events back to the parent actor; the\n *       listener is then called whenever events are received by the callback\n *       actor\n *   - `sendBack` - A function that can send events back to the parent actor\n *   - `input` - Data that was provided to the callback actor\n *   - `self` - The parent actor of the callback actor\n *   - `system` - The actor system to which the callback actor belongs The callback\n *       function can (optionally) return a cleanup function, which is called\n *       when the actor is stopped.\n *\n * @returns Callback logic\n * @see {@link CallbackLogicFunction} for more information about the callback function and its object argument\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromCallback(callback) {\n  const logic = {\n    config: callback,\n    start: (state, actorScope) => {\n      const {\n        self,\n        system,\n        emit\n      } = actorScope;\n      const callbackState = {\n        receivers: undefined,\n        dispose: undefined\n      };\n      instanceStates.set(self, callbackState);\n      callbackState.dispose = callback({\n        input: state.input,\n        system,\n        self,\n        sendBack: event => {\n          if (self.getSnapshot().status === 'stopped') {\n            return;\n          }\n          if (self._parent) {\n            system._relay(self, self._parent, event);\n          }\n        },\n        receive: listener => {\n          callbackState.receivers ??= new Set();\n          callbackState.receivers.add(listener);\n        },\n        emit\n      });\n    },\n    transition: (state, event, actorScope) => {\n      const callbackState = instanceStates.get(actorScope.self);\n      if (event.type === _dist_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X) {\n        state = {\n          ...state,\n          status: 'stopped',\n          error: undefined\n        };\n        callbackState.dispose?.();\n        return state;\n      }\n      callbackState.receivers?.forEach(receiver => receiver(event));\n      return state;\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst XSTATE_OBSERVABLE_NEXT = 'xstate.observable.next';\nconst XSTATE_OBSERVABLE_ERROR = 'xstate.observable.error';\nconst XSTATE_OBSERVABLE_COMPLETE = 'xstate.observable.complete';\n\n/**\n * Represents an actor created by `fromObservable` or `fromEventObservable`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * // The type of the value observed by the actor's logic.\n * type Context = number;\n * // The actor's input.\n * type Input = { period?: number };\n *\n * // Actor logic that observes a number incremented every `input.period`\n * // milliseconds (default: 1_000).\n * const logic = fromObservable<Context, Input>(({ input, self }) => {\n *   self;\n *   // ^? ObservableActorRef<Event, Input>\n *\n *   return interval(input.period ?? 1_000);\n * });\n *\n * const actor = createActor(logic, { input: { period: 2_000 } });\n * //    ^? ObservableActorRef<Event, Input>\n * ```\n *\n * @see {@link fromObservable}\n * @see {@link fromEventObservable}\n */\n\n/**\n * Observable actor logic is described by an observable stream of values. Actors\n * created from observable logic (“observable actors”) can:\n *\n * - Emit snapshots of the observable’s emitted value\n *\n * The observable’s emitted value is used as its observable actor’s `context`.\n *\n * Sending events to observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import { fromObservable, createActor } from 'xstate';\n * import { interval } from 'rxjs';\n *\n * const logic = fromObservable((obj) => interval(1000));\n *\n * const actor = createActor(logic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot.context);\n * });\n *\n * actor.start();\n * // At every second:\n * // Logs 0\n * // Logs 1\n * // Logs 2\n * // ...\n * ```\n *\n * @param observableCreator A function that creates an observable. It receives\n *   one argument, an object with the following properties:\n *\n *   - `input` - Data that was provided to the observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the observable actor belongs\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n * @see {@link https://rxjs.dev} for documentation on RxJS Observable and observable creators.\n * @see {@link Subscribable} interface in XState, which is based on and compatible with RxJS Observable.\n */\nfunction fromObservable(observableCreator) {\n  // TODO: add event types\n  const logic = {\n    config: observableCreator,\n    transition: (snapshot, event) => {\n      if (snapshot.status !== 'active') {\n        return snapshot;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_NEXT:\n          {\n            const newSnapshot = {\n              ...snapshot,\n              context: event.data\n            };\n            return newSnapshot;\n          }\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...snapshot,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...snapshot,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case _dist_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          snapshot._subscription.unsubscribe();\n          return {\n            ...snapshot,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return snapshot;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = observableCreator({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_NEXT,\n            data: value\n          });\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...state\n    }) => state,\n    restoreSnapshot: state => ({\n      ...state,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\n/**\n * Creates event observable logic that listens to an observable that delivers\n * event objects.\n *\n * Event observable actor logic is described by an observable stream of\n * {@link https://stately.ai/docs/transitions#event-objects | event objects}.\n * Actors created from event observable logic (“event observable actors”) can:\n *\n * - Implicitly send events to its parent actor\n * - Emit snapshots of its emitted event objects\n *\n * Sending events to event observable actors will have no effect.\n *\n * @example\n *\n * ```ts\n * import {\n *   fromEventObservable,\n *   Subscribable,\n *   EventObject,\n *   createMachine,\n *   createActor\n * } from 'xstate';\n * import { fromEvent } from 'rxjs';\n *\n * const mouseClickLogic = fromEventObservable(\n *   () => fromEvent(document.body, 'click') as Subscribable<EventObject>\n * );\n *\n * const canvasMachine = createMachine({\n *   invoke: {\n *     // Will send mouse `click` events to the canvas actor\n *     src: mouseClickLogic\n *   }\n * });\n *\n * const canvasActor = createActor(canvasMachine);\n * canvasActor.start();\n * ```\n *\n * @param lazyObservable A function that creates an observable that delivers\n *   event objects. It receives one argument, an object with the following\n *   properties:\n *\n *   - `input` - Data that was provided to the event observable actor\n *   - `self` - The parent actor\n *   - `system` - The actor system to which the event observable actor belongs.\n *\n *   It should return a {@link Subscribable}, which is compatible with an RxJS\n *   Observable, although RxJS is not required to create them.\n */\nfunction fromEventObservable(lazyObservable) {\n  // TODO: event types\n  const logic = {\n    config: lazyObservable,\n    transition: (state, event) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_OBSERVABLE_ERROR:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined,\n            _subscription: undefined\n          };\n        case XSTATE_OBSERVABLE_COMPLETE:\n          return {\n            ...state,\n            status: 'done',\n            input: undefined,\n            _subscription: undefined\n          };\n        case _dist_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          state._subscription.unsubscribe();\n          return {\n            ...state,\n            status: 'stopped',\n            input: undefined,\n            _subscription: undefined\n          };\n        default:\n          return state;\n      }\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        context: undefined,\n        input,\n        _subscription: undefined\n      };\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      if (state.status === 'done') {\n        // Do not restart a completed observable\n        return;\n      }\n      state._subscription = lazyObservable({\n        input: state.input,\n        system,\n        self,\n        emit\n      }).subscribe({\n        next: value => {\n          if (self._parent) {\n            system._relay(self, self._parent, value);\n          }\n        },\n        error: err => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_ERROR,\n            data: err\n          });\n        },\n        complete: () => {\n          system._relay(self, self, {\n            type: XSTATE_OBSERVABLE_COMPLETE\n          });\n        }\n      });\n    },\n    getPersistedSnapshot: ({\n      _subscription,\n      ...snapshot\n    }) => snapshot,\n    restoreSnapshot: snapshot => ({\n      ...snapshot,\n      _subscription: undefined\n    })\n  };\n  return logic;\n}\n\nconst XSTATE_PROMISE_RESOLVE = 'xstate.promise.resolve';\nconst XSTATE_PROMISE_REJECT = 'xstate.promise.reject';\n\n/**\n * Represents an actor created by `fromPromise`.\n *\n * The type of `self` within the actor's logic.\n *\n * @example\n *\n * ```ts\n * import { fromPromise, createActor } from 'xstate';\n *\n * // The actor's resolved output\n * type Output = string;\n * // The actor's input.\n * type Input = { message: string };\n *\n * // Actor logic that fetches the url of an image of a cat saying `input.message`.\n * const logic = fromPromise<Output, Input>(async ({ input, self }) => {\n *   self;\n *   // ^? PromiseActorRef<Output, Input>\n *\n *   const data = await fetch(\n *     `https://cataas.com/cat/says/${input.message}`\n *   );\n *   const url = await data.json();\n *   return url;\n * });\n *\n * const actor = createActor(logic, { input: { message: 'hello world' } });\n * //    ^? PromiseActorRef<Output, Input>\n * ```\n *\n * @see {@link fromPromise}\n */\n\nconst controllerMap = new WeakMap();\n\n/**\n * An actor logic creator which returns promise logic as defined by an async\n * process that resolves or rejects after some time.\n *\n * Actors created from promise actor logic (“promise actors”) can:\n *\n * - Emit the resolved value of the promise\n * - Output the resolved value of the promise\n *\n * Sending events to promise actors will have no effect.\n *\n * @example\n *\n * ```ts\n * const promiseLogic = fromPromise(async () => {\n *   const result = await fetch('https://example.com/...').then((data) =>\n *     data.json()\n *   );\n *\n *   return result;\n * });\n *\n * const promiseActor = createActor(promiseLogic);\n * promiseActor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n * promiseActor.start();\n * // => {\n * //   output: undefined,\n * //   status: 'active'\n * //   ...\n * // }\n *\n * // After promise resolves\n * // => {\n * //   output: { ... },\n * //   status: 'done',\n * //   ...\n * // }\n * ```\n *\n * @param promiseCreator A function which returns a Promise, and accepts an\n *   object with the following properties:\n *\n *   - `input` - Data that was provided to the promise actor\n *   - `self` - The parent actor of the promise actor\n *   - `system` - The actor system to which the promise actor belongs\n *\n * @see {@link https://stately.ai/docs/input | Input docs} for more information about how input is passed\n */\nfunction fromPromise(promiseCreator) {\n  const logic = {\n    config: promiseCreator,\n    transition: (state, event, scope) => {\n      if (state.status !== 'active') {\n        return state;\n      }\n      switch (event.type) {\n        case XSTATE_PROMISE_RESOLVE:\n          {\n            const resolvedValue = event.data;\n            return {\n              ...state,\n              status: 'done',\n              output: resolvedValue,\n              input: undefined\n            };\n          }\n        case XSTATE_PROMISE_REJECT:\n          return {\n            ...state,\n            status: 'error',\n            error: event.data,\n            input: undefined\n          };\n        case _dist_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.X:\n          {\n            controllerMap.get(scope.self)?.abort();\n            return {\n              ...state,\n              status: 'stopped',\n              input: undefined\n            };\n          }\n        default:\n          return state;\n      }\n    },\n    start: (state, {\n      self,\n      system,\n      emit\n    }) => {\n      // TODO: determine how to allow customizing this so that promises\n      // can be restarted if necessary\n      if (state.status !== 'active') {\n        return;\n      }\n      const controller = new AbortController();\n      controllerMap.set(self, controller);\n      const resolvedPromise = Promise.resolve(promiseCreator({\n        input: state.input,\n        system,\n        self,\n        signal: controller.signal,\n        emit\n      }));\n      resolvedPromise.then(response => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_RESOLVE,\n          data: response\n        });\n      }, errorData => {\n        if (self.getSnapshot().status !== 'active') {\n          return;\n        }\n        controllerMap.delete(self);\n        system._relay(self, self, {\n          type: XSTATE_PROMISE_REJECT,\n          data: errorData\n        });\n      });\n    },\n    getInitialSnapshot: (_, input) => {\n      return {\n        status: 'active',\n        output: undefined,\n        error: undefined,\n        input\n      };\n    },\n    getPersistedSnapshot: snapshot => snapshot,\n    restoreSnapshot: snapshot => snapshot\n  };\n  return logic;\n}\n\nconst emptyLogic = fromTransition(_ => undefined, undefined);\nfunction createEmptyActor() {\n  return (0,_dist_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(emptyLogic);\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/xstate/dev/dist/xstate-dev.development.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   devToolsAdapter: () => (/* binding */ devToolsAdapter),\n/* harmony export */   getGlobal: () => (/* binding */ getGlobal),\n/* harmony export */   registerService: () => (/* binding */ registerService)\n/* harmony export */ });\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/globalThis\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof __webpack_require__.g !== 'undefined') {\n    return __webpack_require__.g;\n  }\n  {\n    console.warn('XState could not find a global object in this environment. Please let the maintainers know and raise an issue here: https://github.com/statelyai/xstate/issues');\n  }\n}\nfunction getDevTools() {\n  const w = getGlobal();\n  if (w.__xstate__) {\n    return w.__xstate__;\n  }\n  return undefined;\n}\nfunction registerService(service) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n}\nconst devToolsAdapter = service => {\n  if (typeof window === 'undefined') {\n    return;\n  }\n  const devTools = getDevTools();\n  if (devTools) {\n    devTools.register(service);\n  }\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy94c3RhdGUvZGV2L2Rpc3QveHN0YXRlLWRldi5kZXZlbG9wbWVudC5lc20uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscUJBQU07QUFDbkIsV0FBVyxxQkFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVEIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy94c3RhdGUvZGV2L2Rpc3QveHN0YXRlLWRldi5kZXZlbG9wbWVudC5lc20uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gRnJvbSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9nbG9iYWxUaGlzXG5mdW5jdGlvbiBnZXRHbG9iYWwoKSB7XG4gIGlmICh0eXBlb2YgZ2xvYmFsVGhpcyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZ2xvYmFsVGhpcztcbiAgfVxuICBpZiAodHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHNlbGY7XG4gIH1cbiAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgcmV0dXJuIHdpbmRvdztcbiAgfVxuICBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm4gZ2xvYmFsO1xuICB9XG4gIHtcbiAgICBjb25zb2xlLndhcm4oJ1hTdGF0ZSBjb3VsZCBub3QgZmluZCBhIGdsb2JhbCBvYmplY3QgaW4gdGhpcyBlbnZpcm9ubWVudC4gUGxlYXNlIGxldCB0aGUgbWFpbnRhaW5lcnMga25vdyBhbmQgcmFpc2UgYW4gaXNzdWUgaGVyZTogaHR0cHM6Ly9naXRodWIuY29tL3N0YXRlbHlhaS94c3RhdGUvaXNzdWVzJyk7XG4gIH1cbn1cbmZ1bmN0aW9uIGdldERldlRvb2xzKCkge1xuICBjb25zdCB3ID0gZ2V0R2xvYmFsKCk7XG4gIGlmICh3Ll9feHN0YXRlX18pIHtcbiAgICByZXR1cm4gdy5fX3hzdGF0ZV9fO1xuICB9XG4gIHJldHVybiB1bmRlZmluZWQ7XG59XG5mdW5jdGlvbiByZWdpc3RlclNlcnZpY2Uoc2VydmljZSkge1xuICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgY29uc3QgZGV2VG9vbHMgPSBnZXREZXZUb29scygpO1xuICBpZiAoZGV2VG9vbHMpIHtcbiAgICBkZXZUb29scy5yZWdpc3RlcihzZXJ2aWNlKTtcbiAgfVxufVxuY29uc3QgZGV2VG9vbHNBZGFwdGVyID0gc2VydmljZSA9PiB7XG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybjtcbiAgfVxuICBjb25zdCBkZXZUb29scyA9IGdldERldlRvb2xzKCk7XG4gIGlmIChkZXZUb29scykge1xuICAgIGRldlRvb2xzLnJlZ2lzdGVyKHNlcnZpY2UpO1xuICB9XG59O1xuXG5leHBvcnQgeyBkZXZUb29sc0FkYXB0ZXIsIGdldEdsb2JhbCwgcmVnaXN0ZXJTZXJ2aWNlIH07XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/log-ef30c65f.development.esm.js":
/*!******************************************************************!*\
  !*** ./node_modules/xstate/dist/log-ef30c65f.development.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   S: () => (/* binding */ SpecialTargets),\n/* harmony export */   a: () => (/* binding */ assign),\n/* harmony export */   b: () => (/* binding */ enqueueActions),\n/* harmony export */   c: () => (/* binding */ sendTo),\n/* harmony export */   e: () => (/* binding */ emit),\n/* harmony export */   f: () => (/* binding */ forwardTo),\n/* harmony export */   l: () => (/* binding */ log),\n/* harmony export */   s: () => (/* binding */ sendParent)\n/* harmony export */ });\n/* harmony import */ var _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./raise-1db27a82.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n\n\nfunction createSpawner(actorScope, {\n  machine,\n  context\n}, event, spawnedChildren) {\n  const spawn = (src, options = {}) => {\n    const {\n      systemId,\n      input\n    } = options;\n    if (typeof src === 'string') {\n      const logic = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.z)(machine, src);\n      if (!logic) {\n        throw new Error(`Actor logic '${src}' not implemented in machine '${machine.id}'`);\n      }\n      const actorRef = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)(logic, {\n        id: options.id,\n        parent: actorScope.self,\n        syncSnapshot: options.syncSnapshot,\n        input: typeof input === 'function' ? input({\n          context,\n          event,\n          self: actorScope.self\n        }) : input,\n        src,\n        systemId\n      });\n      spawnedChildren[actorRef.id] = actorRef;\n      return actorRef;\n    } else {\n      const actorRef = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.A)(src, {\n        id: options.id,\n        parent: actorScope.self,\n        syncSnapshot: options.syncSnapshot,\n        input: options.input,\n        src,\n        systemId\n      });\n      return actorRef;\n    }\n  };\n  return (src, options) => {\n    const actorRef = spawn(src, options); // TODO: fix types\n    spawnedChildren[actorRef.id] = actorRef;\n    actorScope.defer(() => {\n      if (actorRef._processingStatus === _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.T.Stopped) {\n        return;\n      }\n      actorRef.start();\n    });\n    return actorRef;\n  };\n}\n\nfunction resolveAssign(actorScope, snapshot, actionArgs, actionParams, {\n  assignment\n}) {\n  if (!snapshot.context) {\n    throw new Error('Cannot assign to undefined `context`. Ensure that `context` is defined in the machine config.');\n  }\n  const spawnedChildren = {};\n  const assignArgs = {\n    context: snapshot.context,\n    event: actionArgs.event,\n    spawn: createSpawner(actorScope, snapshot, actionArgs.event, spawnedChildren),\n    self: actorScope.self,\n    system: actorScope.system\n  };\n  let partialUpdate = {};\n  if (typeof assignment === 'function') {\n    partialUpdate = assignment(assignArgs, actionParams);\n  } else {\n    for (const key of Object.keys(assignment)) {\n      const propAssignment = assignment[key];\n      partialUpdate[key] = typeof propAssignment === 'function' ? propAssignment(assignArgs, actionParams) : propAssignment;\n    }\n  }\n  const updatedContext = Object.assign({}, snapshot.context, partialUpdate);\n  return [(0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.U)(snapshot, {\n    context: updatedContext,\n    children: Object.keys(spawnedChildren).length ? {\n      ...snapshot.children,\n      ...spawnedChildren\n    } : snapshot.children\n  }), undefined, undefined];\n}\n/**\n * Updates the current context of the machine.\n *\n * @example\n *\n * ```ts\n * import { createMachine, assign } from 'xstate';\n *\n * const countMachine = createMachine({\n *   context: {\n *     count: 0,\n *     message: ''\n *   },\n *   on: {\n *     inc: {\n *       actions: assign({\n *         count: ({ context }) => context.count + 1\n *       })\n *     },\n *     updateMessage: {\n *       actions: assign(({ context, event }) => {\n *         return {\n *           message: event.message.trim()\n *         };\n *       })\n *     }\n *   }\n * });\n * ```\n *\n * @param assignment An object that represents the partial context to update, or\n *   a function that returns an object that represents the partial context to\n *   update.\n */\nfunction assign(assignment) {\n  if (_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `assign()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function assign(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  assign.type = 'xstate.assign';\n  assign.assignment = assignment;\n  assign.resolve = resolveAssign;\n  return assign;\n}\n\nfunction resolveEmit(_, snapshot, args, actionParams, {\n  event: eventOrExpr\n}) {\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  return [snapshot, {\n    event: resolvedEvent\n  }, undefined];\n}\nfunction executeEmit(actorScope, {\n  event\n}) {\n  actorScope.defer(() => actorScope.emit(event));\n}\n/**\n * Emits an event to event handlers registered on the actor via `actor.on(event,\n * handler)`.\n *\n * @example\n *\n * ```ts\n * import { emit } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     something: {\n *       actions: emit({\n *         type: 'emitted',\n *         some: 'data'\n *       })\n *     }\n *   }\n *   // ...\n * });\n *\n * const actor = createActor(machine).start();\n *\n * actor.on('emitted', (event) => {\n *   console.log(event);\n * });\n *\n * actor.send({ type: 'something' });\n * // logs:\n * // {\n * //   type: 'emitted',\n * //   some: 'data'\n * // }\n * ```\n */\nfunction emit(/** The event to emit, or an expression that returns an event to emit. */\neventOrExpr) {\n  if (_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `emit()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function emit(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  emit.type = 'xstate.emit';\n  emit.event = eventOrExpr;\n  emit.resolve = resolveEmit;\n  emit.execute = executeEmit;\n  return emit;\n}\n\n/**\n * @remarks\n * `T | unknown` reduces to `unknown` and that can be problematic when it comes\n * to contextual typing. It especially is a problem when the union has a\n * function member, like here:\n *\n * ```ts\n * declare function test(\n *   cbOrVal: ((arg: number) => unknown) | unknown\n * ): void;\n * test((arg) => {}); // oops, implicit any\n * ```\n *\n * This type can be used to avoid this problem. This union represents the same\n * value space as `unknown`.\n */\n\n// https://github.com/microsoft/TypeScript/issues/23182#issuecomment-379091887\n\n// @TODO: Replace with native `NoInfer` when TS issue gets fixed:\n// https://github.com/microsoft/TypeScript/pull/57673\n\n/** @deprecated Use the built-in `NoInfer` type instead */\n\n/** The full definition of an event, with a string `type`. */\n\n/**\n * The string or object representing the state value relative to the parent\n * state node.\n *\n * @remarks\n * - For a child atomic state node, this is a string, e.g., `\"pending\"`.\n * - For complex state nodes, this is an object, e.g., `{ success:\n *   \"someChildState\" }`.\n */\n\n/** @deprecated Use `AnyMachineSnapshot` instead */\n\n// TODO: possibly refactor this somehow, use even a simpler type, and maybe even make `machine.options` private or something\n/** @ignore */\n\nlet SpecialTargets = /*#__PURE__*/function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n  return SpecialTargets;\n}({});\n\n/** @deprecated Use `AnyActor` instead. */\n\n// Based on RxJS types\n\n// TODO: in v6, this should only accept AnyActorLogic, like ActorRefFromLogic\n\n/** @deprecated Use `Actor<T>` instead. */\n\n/**\n * Represents logic which can be used by an actor.\n *\n * @template TSnapshot - The type of the snapshot.\n * @template TEvent - The type of the event object.\n * @template TInput - The type of the input.\n * @template TSystem - The type of the actor system.\n */\n\n/** @deprecated */\n\n// TODO: cover all that can be actually returned\n\nfunction resolveSendTo(actorScope, snapshot, args, actionParams, {\n  to,\n  event: eventOrExpr,\n  id,\n  delay\n}, extra) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with sendTo; use sendTo({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  const resolvedTarget = typeof to === 'function' ? to(args, actionParams) : to;\n  let targetActorRef;\n  if (typeof resolvedTarget === 'string') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    if (resolvedTarget === SpecialTargets.Parent) {\n      targetActorRef = actorScope.self._parent;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-enum-comparison\n    else if (resolvedTarget === SpecialTargets.Internal) {\n      targetActorRef = actorScope.self;\n    } else if (resolvedTarget.startsWith('#_')) {\n      // SCXML compatibility: https://www.w3.org/TR/scxml/#SCXMLEventProcessor\n      // #_invokeid. If the target is the special term '#_invokeid', where invokeid is the invokeid of an SCXML session that the sending session has created by <invoke>, the Processor must add the event to the external queue of that session.\n      targetActorRef = snapshot.children[resolvedTarget.slice(2)];\n    } else {\n      targetActorRef = extra.deferredActorIds?.includes(resolvedTarget) ? resolvedTarget : snapshot.children[resolvedTarget];\n    }\n    if (!targetActorRef) {\n      throw new Error(`Unable to send event to actor '${resolvedTarget}' from machine '${snapshot.machine.id}'.`);\n    }\n  } else {\n    targetActorRef = resolvedTarget || actorScope.self;\n  }\n  return [snapshot, {\n    to: targetActorRef,\n    targetId: typeof resolvedTarget === 'string' ? resolvedTarget : undefined,\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction retryResolveSendTo(_, snapshot, params) {\n  if (typeof params.to === 'string') {\n    params.to = snapshot.children[params.to];\n  }\n}\nfunction executeSendTo(actorScope, params) {\n  // this forms an outgoing events queue\n  // thanks to that the recipient actors are able to read the *updated* snapshot value of the sender\n  actorScope.defer(() => {\n    const {\n      to,\n      event,\n      delay,\n      id\n    } = params;\n    if (typeof delay === 'number') {\n      actorScope.system.scheduler.schedule(actorScope.self, to, event, delay, id);\n      return;\n    }\n    actorScope.system._relay(actorScope.self,\n    // at this point, in a deferred task, it should already be mutated by retryResolveSendTo\n    // if it initially started as a string\n    to, event.type === _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.W ? (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.Y)(actorScope.self.id, event.data) : event);\n  });\n}\n/**\n * Sends an event to an actor.\n *\n * @param actor The `ActorRef` to send the event to.\n * @param event The event to send, or an expression that evaluates to the event\n *   to send\n * @param options Send action options\n *\n *   - `id` - The unique send event identifier (used with `cancel()`).\n *   - `delay` - The number of milliseconds to delay the sending of the event.\n */\nfunction sendTo(to, eventOrExpr, options) {\n  if (_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.V) {\n    console.warn('Custom actions should not call `sendTo()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function sendTo(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  sendTo.type = 'xstate.sendTo';\n  sendTo.to = to;\n  sendTo.event = eventOrExpr;\n  sendTo.id = options?.id;\n  sendTo.delay = options?.delay;\n  sendTo.resolve = resolveSendTo;\n  sendTo.retryResolve = retryResolveSendTo;\n  sendTo.execute = executeSendTo;\n  return sendTo;\n}\n\n/**\n * Sends an event to this machine's parent.\n *\n * @param event The event to send to the parent machine.\n * @param options Options to pass into the send event.\n */\nfunction sendParent(event, options) {\n  return sendTo(SpecialTargets.Parent, event, options);\n}\n/**\n * Forwards (sends) an event to the `target` actor.\n *\n * @param target The target actor to forward the event to.\n * @param options Options to pass into the send action creator.\n */\nfunction forwardTo(target, options) {\n  if ((!target || typeof target === 'function')) {\n    const originalTarget = target;\n    target = (...args) => {\n      const resolvedTarget = typeof originalTarget === 'function' ? originalTarget(...args) : originalTarget;\n      if (!resolvedTarget) {\n        throw new Error(`Attempted to forward event to undefined actor. This risks an infinite loop in the sender.`);\n      }\n      return resolvedTarget;\n    };\n  }\n  return sendTo(target, ({\n    event\n  }) => event, options);\n}\n\nfunction resolveEnqueueActions(actorScope, snapshot, args, actionParams, {\n  collect\n}) {\n  const actions = [];\n  const enqueue = function enqueue(action) {\n    actions.push(action);\n  };\n  enqueue.assign = (...args) => {\n    actions.push(assign(...args));\n  };\n  enqueue.cancel = (...args) => {\n    actions.push((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.M)(...args));\n  };\n  enqueue.raise = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay`\n    actions.push((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.O)(...args));\n  };\n  enqueue.sendTo = (...args) => {\n    // for some reason it fails to infer `TDelay` from `...args` here and picks its default (`never`)\n    // then it fails to typecheck that because `...args` use `string` in place of `TDelay\n    actions.push(sendTo(...args));\n  };\n  enqueue.sendParent = (...args) => {\n    actions.push(sendParent(...args));\n  };\n  enqueue.spawnChild = (...args) => {\n    actions.push((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.P)(...args));\n  };\n  enqueue.stopChild = (...args) => {\n    actions.push((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.R)(...args));\n  };\n  enqueue.emit = (...args) => {\n    actions.push(emit(...args));\n  };\n  collect({\n    context: args.context,\n    event: args.event,\n    enqueue,\n    check: guard => (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.e)(guard, snapshot.context, args.event, snapshot),\n    self: actorScope.self,\n    system: actorScope.system\n  }, actionParams);\n  return [snapshot, undefined, actions];\n}\n/**\n * Creates an action object that will execute actions that are queued by the\n * `enqueue(action)` function.\n *\n * @example\n *\n * ```ts\n * import { createMachine, enqueueActions } from 'xstate';\n *\n * const machine = createMachine({\n *   entry: enqueueActions(({ enqueue, check }) => {\n *     enqueue.assign({ count: 0 });\n *\n *     if (check('someGuard')) {\n *       enqueue.assign({ count: 1 });\n *     }\n *\n *     enqueue('someAction');\n *   })\n * });\n * ```\n */\nfunction enqueueActions(collect) {\n  function enqueueActions(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  enqueueActions.type = 'xstate.enqueueActions';\n  enqueueActions.collect = collect;\n  enqueueActions.resolve = resolveEnqueueActions;\n  return enqueueActions;\n}\n\nfunction resolveLog(_, snapshot, actionArgs, actionParams, {\n  value,\n  label\n}) {\n  return [snapshot, {\n    value: typeof value === 'function' ? value(actionArgs, actionParams) : value,\n    label\n  }, undefined];\n}\nfunction executeLog({\n  logger\n}, {\n  value,\n  label\n}) {\n  if (label) {\n    logger(label, value);\n  } else {\n    logger(value);\n  }\n}\n/**\n * @param expr The expression function to evaluate which will be logged. Takes\n *   in 2 arguments:\n *\n *   - `ctx` - the current state context\n *   - `event` - the event that caused this action to be executed.\n *\n * @param label The label to give to the logged expression.\n */\nfunction log(value = ({\n  context,\n  event\n}) => ({\n  context,\n  event\n}), label) {\n  function log(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  log.type = 'xstate.log';\n  log.value = value;\n  log.label = label;\n  log.resolve = resolveLog;\n  log.execute = executeLog;\n  return log;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/log-ef30c65f.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js":
/*!********************************************************************!*\
  !*** ./node_modules/xstate/dist/raise-1db27a82.development.esm.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   $: () => (/* binding */ $$ACTOR_TYPE),\n/* harmony export */   A: () => (/* binding */ createActor),\n/* harmony export */   B: () => (/* binding */ Actor),\n/* harmony export */   C: () => (/* binding */ interpret),\n/* harmony export */   D: () => (/* binding */ and),\n/* harmony export */   E: () => (/* binding */ not),\n/* harmony export */   F: () => (/* binding */ or),\n/* harmony export */   G: () => (/* binding */ stateIn),\n/* harmony export */   H: () => (/* binding */ isMachineSnapshot),\n/* harmony export */   I: () => (/* binding */ getAllOwnEventDescriptors),\n/* harmony export */   J: () => (/* binding */ matchesState),\n/* harmony export */   K: () => (/* binding */ pathToStateValue),\n/* harmony export */   L: () => (/* binding */ toObserver),\n/* harmony export */   M: () => (/* binding */ cancel),\n/* harmony export */   N: () => (/* binding */ NULL_EVENT),\n/* harmony export */   O: () => (/* binding */ raise),\n/* harmony export */   P: () => (/* binding */ spawnChild),\n/* harmony export */   Q: () => (/* binding */ stop),\n/* harmony export */   R: () => (/* binding */ stopChild),\n/* harmony export */   S: () => (/* binding */ STATE_DELIMITER),\n/* harmony export */   T: () => (/* binding */ ProcessingStatus),\n/* harmony export */   U: () => (/* binding */ cloneMachineSnapshot),\n/* harmony export */   V: () => (/* binding */ executingCustomAction),\n/* harmony export */   W: () => (/* binding */ XSTATE_ERROR),\n/* harmony export */   X: () => (/* binding */ XSTATE_STOP),\n/* harmony export */   Y: () => (/* binding */ createErrorActorEvent),\n/* harmony export */   a: () => (/* binding */ toTransitionConfigArray),\n/* harmony export */   b: () => (/* binding */ formatTransition),\n/* harmony export */   c: () => (/* binding */ createInvokeId),\n/* harmony export */   d: () => (/* binding */ formatInitialTransition),\n/* harmony export */   e: () => (/* binding */ evaluateGuard),\n/* harmony export */   f: () => (/* binding */ formatTransitions),\n/* harmony export */   g: () => (/* binding */ getDelayedTransitions),\n/* harmony export */   h: () => (/* binding */ getCandidates),\n/* harmony export */   i: () => (/* binding */ getAllStateNodes),\n/* harmony export */   j: () => (/* binding */ getStateNodes),\n/* harmony export */   k: () => (/* binding */ createMachineSnapshot),\n/* harmony export */   l: () => (/* binding */ isInFinalState),\n/* harmony export */   m: () => (/* binding */ mapValues),\n/* harmony export */   n: () => (/* binding */ macrostep),\n/* harmony export */   o: () => (/* binding */ transitionNode),\n/* harmony export */   p: () => (/* binding */ resolveActionsAndContext),\n/* harmony export */   q: () => (/* binding */ createInitEvent),\n/* harmony export */   r: () => (/* binding */ resolveStateValue),\n/* harmony export */   s: () => (/* binding */ microstep),\n/* harmony export */   t: () => (/* binding */ toArray),\n/* harmony export */   u: () => (/* binding */ getInitialStateNodes),\n/* harmony export */   v: () => (/* binding */ toStatePath),\n/* harmony export */   w: () => (/* binding */ isStateId),\n/* harmony export */   x: () => (/* binding */ getStateNodeByPath),\n/* harmony export */   y: () => (/* binding */ getPersistedSnapshot),\n/* harmony export */   z: () => (/* binding */ resolveReferencedActor)\n/* harmony export */ });\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\nclass Mailbox {\n  constructor(_process) {\n    this._process = _process;\n    this._active = false;\n    this._current = null;\n    this._last = null;\n  }\n  start() {\n    this._active = true;\n    this.flush();\n  }\n  clear() {\n    // we can't set _current to null because we might be currently processing\n    // and enqueue following clear shouldnt start processing the enqueued item immediately\n    if (this._current) {\n      this._current.next = null;\n      this._last = this._current;\n    }\n  }\n  enqueue(event) {\n    const enqueued = {\n      value: event,\n      next: null\n    };\n    if (this._current) {\n      this._last.next = enqueued;\n      this._last = enqueued;\n      return;\n    }\n    this._current = enqueued;\n    this._last = enqueued;\n    if (this._active) {\n      this.flush();\n    }\n  }\n  flush() {\n    while (this._current) {\n      // atm the given _process is responsible for implementing proper try/catch handling\n      // we assume here that this won't throw in a way that can affect this mailbox\n      const consumed = this._current;\n      this._process(consumed.value);\n      this._current = consumed.next;\n    }\n    this._last = null;\n  }\n}\n\nconst STATE_DELIMITER = '.';\nconst TARGETLESS_KEY = '';\nconst NULL_EVENT = '';\nconst STATE_IDENTIFIER = '#';\nconst WILDCARD = '*';\nconst XSTATE_INIT = 'xstate.init';\nconst XSTATE_ERROR = 'xstate.error';\nconst XSTATE_STOP = 'xstate.stop';\n\n/**\n * Returns an event that represents an implicit event that is sent after the\n * specified `delay`.\n *\n * @param delayRef The delay in milliseconds\n * @param id The state node ID where this event is handled\n */\nfunction createAfterEvent(delayRef, id) {\n  return {\n    type: `xstate.after.${delayRef}.${id}`\n  };\n}\n\n/**\n * Returns an event that represents that a final state node has been reached in\n * the parent state node.\n *\n * @param id The final state node's parent state node `id`\n * @param output The data to pass into the event\n */\nfunction createDoneStateEvent(id, output) {\n  return {\n    type: `xstate.done.state.${id}`,\n    output\n  };\n}\n\n/**\n * Returns an event that represents that an invoked service has terminated.\n *\n * An invoked service is terminated when it has reached a top-level final state\n * node, but not when it is canceled.\n *\n * @param invokeId The invoked service ID\n * @param output The data to pass into the event\n */\nfunction createDoneActorEvent(invokeId, output) {\n  return {\n    type: `xstate.done.actor.${invokeId}`,\n    output,\n    actorId: invokeId\n  };\n}\nfunction createErrorActorEvent(id, error) {\n  return {\n    type: `xstate.error.actor.${id}`,\n    error,\n    actorId: id\n  };\n}\nfunction createInitEvent(input) {\n  return {\n    type: XSTATE_INIT,\n    input\n  };\n}\n\n/**\n * This function makes sure that unhandled errors are thrown in a separate\n * macrotask. It allows those errors to be detected by global error handlers and\n * reported to bug tracking services without interrupting our own stack of\n * execution.\n *\n * @param err Error to be thrown\n */\nfunction reportUnhandledError(err) {\n  setTimeout(() => {\n    throw err;\n  });\n}\n\nconst symbolObservable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n\nfunction matchesState(parentStateId, childStateId) {\n  const parentStateValue = toStateValue(parentStateId);\n  const childStateValue = toStateValue(childStateId);\n  if (typeof childStateValue === 'string') {\n    if (typeof parentStateValue === 'string') {\n      return childStateValue === parentStateValue;\n    }\n\n    // Parent more specific than child\n    return false;\n  }\n  if (typeof parentStateValue === 'string') {\n    return parentStateValue in childStateValue;\n  }\n  return Object.keys(parentStateValue).every(key => {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction toStatePath(stateId) {\n  if (isArray(stateId)) {\n    return stateId;\n  }\n  const result = [];\n  let segment = '';\n  for (let i = 0; i < stateId.length; i++) {\n    const char = stateId.charCodeAt(i);\n    switch (char) {\n      // \\\n      case 92:\n        // consume the next character\n        segment += stateId[i + 1];\n        // and skip over it\n        i++;\n        continue;\n      // .\n      case 46:\n        result.push(segment);\n        segment = '';\n        continue;\n    }\n    segment += stateId[i];\n  }\n  result.push(segment);\n  return result;\n}\nfunction toStateValue(stateValue) {\n  if (isMachineSnapshot(stateValue)) {\n    return stateValue.value;\n  }\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n  const statePath = toStatePath(stateValue);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n  const value = {};\n  let marker = value;\n  for (let i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      const previous = marker;\n      marker = {};\n      previous[statePath[i]] = marker;\n    }\n  }\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  const result = {};\n  const collectionKeys = Object.keys(collection);\n  for (let i = 0; i < collectionKeys.length; i++) {\n    const key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n  return result;\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n  return toArrayStrict(value);\n}\nfunction resolveOutput(mapper, context, event, self) {\n  if (typeof mapper === 'function') {\n    return mapper({\n      context,\n      event,\n      self\n    });\n  }\n  if (!!mapper && typeof mapper === 'object' && Object.values(mapper).some(val => typeof val === 'function')) {\n    console.warn(`Dynamically mapping values to individual properties is deprecated. Use a single function that returns the mapped object instead.\\nFound object containing properties whose values are possibly mapping functions: ${Object.entries(mapper).filter(([, value]) => typeof value === 'function').map(([key, value]) => `\\n - ${key}: ${value.toString().replace(/\\n\\s*/g, '')}`).join('')}`);\n  }\n  return mapper;\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n}\nfunction isErrorActorEvent(event) {\n  return event.type.startsWith('xstate.error.actor');\n}\nfunction toTransitionConfigArray(configLike) {\n  return toArrayStrict(configLike).map(transitionLike => {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string') {\n      return {\n        target: transitionLike\n      };\n    }\n    return transitionLike;\n  });\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n  return toArray(target);\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  const isObserver = typeof nextHandler === 'object';\n  const self = isObserver ? nextHandler : undefined;\n  return {\n    next: (isObserver ? nextHandler.next : nextHandler)?.bind(self),\n    error: (isObserver ? nextHandler.error : errorHandler)?.bind(self),\n    complete: (isObserver ? nextHandler.complete : completionHandler)?.bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return `${index}.${stateNodeId}`;\n}\nfunction resolveReferencedActor(machine, src) {\n  const match = src.match(/^xstate\\.invoke\\.(\\d+)\\.(.*)/);\n  if (!match) {\n    return machine.implementations.actors[src];\n  }\n  const [, indexStr, nodeId] = match;\n  const node = machine.getStateNodeById(nodeId);\n  const invokeConfig = node.config.invoke;\n  return (Array.isArray(invokeConfig) ? invokeConfig[indexStr] : invokeConfig).src;\n}\nfunction getAllOwnEventDescriptors(snapshot) {\n  return [...new Set([...snapshot._nodes.flatMap(sn => sn.ownEvents)])];\n}\n\nfunction createScheduledEventId(actorRef, id) {\n  return `${actorRef.sessionId}.${id}`;\n}\nlet idCounter = 0;\nfunction createSystem(rootActor, options) {\n  const children = new Map();\n  const keyedActors = new Map();\n  const reverseKeyedActors = new WeakMap();\n  const inspectionObservers = new Set();\n  const timerMap = {};\n  const {\n    clock,\n    logger\n  } = options;\n  const scheduler = {\n    schedule: (source, target, event, delay, id = Math.random().toString(36).slice(2)) => {\n      const scheduledEvent = {\n        source,\n        target,\n        event,\n        delay,\n        id,\n        startedAt: Date.now()\n      };\n      const scheduledEventId = createScheduledEventId(source, id);\n      system._snapshot._scheduledEvents[scheduledEventId] = scheduledEvent;\n      const timeout = clock.setTimeout(() => {\n        delete timerMap[scheduledEventId];\n        delete system._snapshot._scheduledEvents[scheduledEventId];\n        system._relay(source, target, event);\n      }, delay);\n      timerMap[scheduledEventId] = timeout;\n    },\n    cancel: (source, id) => {\n      const scheduledEventId = createScheduledEventId(source, id);\n      const timeout = timerMap[scheduledEventId];\n      delete timerMap[scheduledEventId];\n      delete system._snapshot._scheduledEvents[scheduledEventId];\n      if (timeout !== undefined) {\n        clock.clearTimeout(timeout);\n      }\n    },\n    cancelAll: actorRef => {\n      for (const scheduledEventId in system._snapshot._scheduledEvents) {\n        const scheduledEvent = system._snapshot._scheduledEvents[scheduledEventId];\n        if (scheduledEvent.source === actorRef) {\n          scheduler.cancel(actorRef, scheduledEvent.id);\n        }\n      }\n    }\n  };\n  const sendInspectionEvent = event => {\n    if (!inspectionObservers.size) {\n      return;\n    }\n    const resolvedInspectionEvent = {\n      ...event,\n      rootId: rootActor.sessionId\n    };\n    inspectionObservers.forEach(observer => observer.next?.(resolvedInspectionEvent));\n  };\n  const system = {\n    _snapshot: {\n      _scheduledEvents: (options?.snapshot && options.snapshot.scheduler) ?? {}\n    },\n    _bookId: () => `x:${idCounter++}`,\n    _register: (sessionId, actorRef) => {\n      children.set(sessionId, actorRef);\n      return sessionId;\n    },\n    _unregister: actorRef => {\n      children.delete(actorRef.sessionId);\n      const systemId = reverseKeyedActors.get(actorRef);\n      if (systemId !== undefined) {\n        keyedActors.delete(systemId);\n        reverseKeyedActors.delete(actorRef);\n      }\n    },\n    get: systemId => {\n      return keyedActors.get(systemId);\n    },\n    _set: (systemId, actorRef) => {\n      const existing = keyedActors.get(systemId);\n      if (existing && existing !== actorRef) {\n        throw new Error(`Actor with system ID '${systemId}' already exists.`);\n      }\n      keyedActors.set(systemId, actorRef);\n      reverseKeyedActors.set(actorRef, systemId);\n    },\n    inspect: observerOrFn => {\n      const observer = toObserver(observerOrFn);\n      inspectionObservers.add(observer);\n      return {\n        unsubscribe() {\n          inspectionObservers.delete(observer);\n        }\n      };\n    },\n    _sendInspectionEvent: sendInspectionEvent,\n    _relay: (source, target, event) => {\n      system._sendInspectionEvent({\n        type: '@xstate.event',\n        sourceRef: source,\n        actorRef: target,\n        event\n      });\n      target._send(event);\n    },\n    scheduler,\n    getSnapshot: () => {\n      return {\n        _scheduledEvents: {\n          ...system._snapshot._scheduledEvents\n        }\n      };\n    },\n    start: () => {\n      const scheduledEvents = system._snapshot._scheduledEvents;\n      system._snapshot._scheduledEvents = {};\n      for (const scheduledId in scheduledEvents) {\n        const {\n          source,\n          target,\n          event,\n          delay,\n          id\n        } = scheduledEvents[scheduledId];\n        scheduler.schedule(source, target, event, delay, id);\n      }\n    },\n    _clock: clock,\n    _logger: logger\n  };\n  return system;\n}\n\nlet executingCustomAction = false;\nconst $$ACTOR_TYPE = 1;\n\n// those values are currently used by @xstate/react directly so it's important to keep the assigned values in sync\nlet ProcessingStatus = /*#__PURE__*/function (ProcessingStatus) {\n  ProcessingStatus[ProcessingStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  ProcessingStatus[ProcessingStatus[\"Running\"] = 1] = \"Running\";\n  ProcessingStatus[ProcessingStatus[\"Stopped\"] = 2] = \"Stopped\";\n  return ProcessingStatus;\n}({});\nconst defaultOptions = {\n  clock: {\n    setTimeout: (fn, ms) => {\n      return setTimeout(fn, ms);\n    },\n    clearTimeout: id => {\n      return clearTimeout(id);\n    }\n  },\n  logger: console.log.bind(console),\n  devTools: false\n};\n\n/**\n * An Actor is a running process that can receive events, send events and change\n * its behavior based on the events it receives, which can cause effects outside\n * of the actor. When you run a state machine, it becomes an actor.\n */\nclass Actor {\n  /**\n   * Creates a new actor instance for the given logic with the provided options,\n   * if any.\n   *\n   * @param logic The logic to create an actor from\n   * @param options Actor options\n   */\n  constructor(logic, options) {\n    this.logic = logic;\n    /** The current internal state of the actor. */\n    this._snapshot = void 0;\n    /**\n     * The clock that is responsible for setting and clearing timeouts, such as\n     * delayed events and transitions.\n     */\n    this.clock = void 0;\n    this.options = void 0;\n    /** The unique identifier for this actor relative to its parent. */\n    this.id = void 0;\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this.observers = new Set();\n    this.eventListeners = new Map();\n    this.logger = void 0;\n    /** @internal */\n    this._processingStatus = ProcessingStatus.NotStarted;\n    // Actor Ref\n    this._parent = void 0;\n    /** @internal */\n    this._syncSnapshot = void 0;\n    this.ref = void 0;\n    // TODO: add typings for system\n    this._actorScope = void 0;\n    this._systemId = void 0;\n    /** The globally unique process ID for this invocation. */\n    this.sessionId = void 0;\n    /** The system to which this actor belongs. */\n    this.system = void 0;\n    this._doneEvent = void 0;\n    this.src = void 0;\n    // array of functions to defer\n    this._deferred = [];\n    const resolvedOptions = {\n      ...defaultOptions,\n      ...options\n    };\n    const {\n      clock,\n      logger,\n      parent,\n      syncSnapshot,\n      id,\n      systemId,\n      inspect\n    } = resolvedOptions;\n    this.system = parent ? parent.system : createSystem(this, {\n      clock,\n      logger\n    });\n    if (inspect && !parent) {\n      // Always inspect at the system-level\n      this.system.inspect(toObserver(inspect));\n    }\n    this.sessionId = this.system._bookId();\n    this.id = id ?? this.sessionId;\n    this.logger = options?.logger ?? this.system._logger;\n    this.clock = options?.clock ?? this.system._clock;\n    this._parent = parent;\n    this._syncSnapshot = syncSnapshot;\n    this.options = resolvedOptions;\n    this.src = resolvedOptions.src ?? logic;\n    this.ref = this;\n    this._actorScope = {\n      self: this,\n      id: this.id,\n      sessionId: this.sessionId,\n      logger: this.logger,\n      defer: fn => {\n        this._deferred.push(fn);\n      },\n      system: this.system,\n      stopChild: child => {\n        if (child._parent !== this) {\n          throw new Error(`Cannot stop child actor ${child.id} of ${this.id} because it is not a child`);\n        }\n        child._stop();\n      },\n      emit: emittedEvent => {\n        const listeners = this.eventListeners.get(emittedEvent.type);\n        const wildcardListener = this.eventListeners.get('*');\n        if (!listeners && !wildcardListener) {\n          return;\n        }\n        const allListeners = [...(listeners ? listeners.values() : []), ...(wildcardListener ? wildcardListener.values() : [])];\n        for (const handler of allListeners) {\n          handler(emittedEvent);\n        }\n      },\n      actionExecutor: action => {\n        const exec = () => {\n          this._actorScope.system._sendInspectionEvent({\n            type: '@xstate.action',\n            actorRef: this,\n            action: {\n              type: action.type,\n              params: action.params\n            }\n          });\n          if (!action.exec) {\n            return;\n          }\n          const saveExecutingCustomAction = executingCustomAction;\n          try {\n            executingCustomAction = true;\n            action.exec(action.info, action.params);\n          } finally {\n            executingCustomAction = saveExecutingCustomAction;\n          }\n        };\n        if (this._processingStatus === ProcessingStatus.Running) {\n          exec();\n        } else {\n          this._deferred.push(exec);\n        }\n      }\n    };\n\n    // Ensure that the send method is bound to this Actor instance\n    // if destructured\n    this.send = this.send.bind(this);\n    this.system._sendInspectionEvent({\n      type: '@xstate.actor',\n      actorRef: this\n    });\n    if (systemId) {\n      this._systemId = systemId;\n      this.system._set(systemId, this);\n    }\n    this._initState(options?.snapshot ?? options?.state);\n    if (systemId && this._snapshot.status !== 'active') {\n      this.system._unregister(this);\n    }\n  }\n  _initState(persistedState) {\n    try {\n      this._snapshot = persistedState ? this.logic.restoreSnapshot ? this.logic.restoreSnapshot(persistedState, this._actorScope) : persistedState : this.logic.getInitialSnapshot(this._actorScope, this.options?.input);\n    } catch (err) {\n      // if we get here then it means that we assign a value to this._snapshot that is not of the correct type\n      // we can't get the true `TSnapshot & { status: 'error'; }`, it's impossible\n      // so right now this is a lie of sorts\n      this._snapshot = {\n        status: 'error',\n        output: undefined,\n        error: err\n      };\n    }\n  }\n  update(snapshot, event) {\n    // Update state\n    this._snapshot = snapshot;\n\n    // Execute deferred effects\n    let deferredFn;\n    while (deferredFn = this._deferred.shift()) {\n      try {\n        deferredFn();\n      } catch (err) {\n        // this error can only be caught when executing *initial* actions\n        // it's the only time when we call actions provided by the user through those deferreds\n        // when the actor is already running we always execute them synchronously while transitioning\n        // no \"builtin deferred\" should actually throw an error since they are either safe\n        // or the control flow is passed through the mailbox and errors should be caught by the `_process` used by the mailbox\n        this._deferred.length = 0;\n        this._snapshot = {\n          ...snapshot,\n          status: 'error',\n          error: err\n        };\n      }\n    }\n    switch (this._snapshot.status) {\n      case 'active':\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        break;\n      case 'done':\n        // next observers are meant to be notified about done snapshots\n        // this can be seen as something that is different from how observable work\n        // but with observables `complete` callback is called without any arguments\n        // it's more ergonomic for XState to treat a done snapshot as a \"next\" value\n        // and the completion event as something that is separate,\n        // something that merely follows emitting that done snapshot\n        for (const observer of this.observers) {\n          try {\n            observer.next?.(snapshot);\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n        }\n        this._stopProcedure();\n        this._complete();\n        this._doneEvent = createDoneActorEvent(this.id, this._snapshot.output);\n        if (this._parent) {\n          this.system._relay(this, this._parent, this._doneEvent);\n        }\n        break;\n      case 'error':\n        this._error(this._snapshot.error);\n        break;\n    }\n    this.system._sendInspectionEvent({\n      type: '@xstate.snapshot',\n      actorRef: this,\n      event,\n      snapshot\n    });\n  }\n\n  /**\n   * Subscribe an observer to an actor’s snapshot values.\n   *\n   * @remarks\n   * The observer will receive the actor’s snapshot value when it is emitted.\n   * The observer can be:\n   *\n   * - A plain function that receives the latest snapshot, or\n   * - An observer object whose `.next(snapshot)` method receives the latest\n   *   snapshot\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as a plain function\n   * const subscription = actor.subscribe((snapshot) => {\n   *   console.log(snapshot);\n   * });\n   * ```\n   *\n   * @example\n   *\n   * ```ts\n   * // Observer as an object\n   * const subscription = actor.subscribe({\n   *   next(snapshot) {\n   *     console.log(snapshot);\n   *   },\n   *   error(err) {\n   *     // ...\n   *   },\n   *   complete() {\n   *     // ...\n   *   }\n   * });\n   * ```\n   *\n   * The return value of `actor.subscribe(observer)` is a subscription object\n   * that has an `.unsubscribe()` method. You can call\n   * `subscription.unsubscribe()` to unsubscribe the observer:\n   *\n   * @example\n   *\n   * ```ts\n   * const subscription = actor.subscribe((snapshot) => {\n   *   // ...\n   * });\n   *\n   * // Unsubscribe the observer\n   * subscription.unsubscribe();\n   * ```\n   *\n   * When the actor is stopped, all of its observers will automatically be\n   * unsubscribed.\n   *\n   * @param observer - Either a plain function that receives the latest\n   *   snapshot, or an observer object whose `.next(snapshot)` method receives\n   *   the latest snapshot\n   */\n\n  subscribe(nextListenerOrObserver, errorListener, completeListener) {\n    const observer = toObserver(nextListenerOrObserver, errorListener, completeListener);\n    if (this._processingStatus !== ProcessingStatus.Stopped) {\n      this.observers.add(observer);\n    } else {\n      switch (this._snapshot.status) {\n        case 'done':\n          try {\n            observer.complete?.();\n          } catch (err) {\n            reportUnhandledError(err);\n          }\n          break;\n        case 'error':\n          {\n            const err = this._snapshot.error;\n            if (!observer.error) {\n              reportUnhandledError(err);\n            } else {\n              try {\n                observer.error(err);\n              } catch (err) {\n                reportUnhandledError(err);\n              }\n            }\n            break;\n          }\n      }\n    }\n    return {\n      unsubscribe: () => {\n        this.observers.delete(observer);\n      }\n    };\n  }\n  on(type, handler) {\n    let listeners = this.eventListeners.get(type);\n    if (!listeners) {\n      listeners = new Set();\n      this.eventListeners.set(type, listeners);\n    }\n    const wrappedHandler = handler.bind(undefined);\n    listeners.add(wrappedHandler);\n    return {\n      unsubscribe: () => {\n        listeners.delete(wrappedHandler);\n      }\n    };\n  }\n\n  /** Starts the Actor from the initial state */\n  start() {\n    if (this._processingStatus === ProcessingStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n    if (this._syncSnapshot) {\n      this.subscribe({\n        next: snapshot => {\n          if (snapshot.status === 'active') {\n            this.system._relay(this, this._parent, {\n              type: `xstate.snapshot.${this.id}`,\n              snapshot\n            });\n          }\n        },\n        error: () => {}\n      });\n    }\n    this.system._register(this.sessionId, this);\n    if (this._systemId) {\n      this.system._set(this._systemId, this);\n    }\n    this._processingStatus = ProcessingStatus.Running;\n\n    // TODO: this isn't correct when rehydrating\n    const initEvent = createInitEvent(this.options.input);\n    this.system._sendInspectionEvent({\n      type: '@xstate.event',\n      sourceRef: this._parent,\n      actorRef: this,\n      event: initEvent\n    });\n    const status = this._snapshot.status;\n    switch (status) {\n      case 'done':\n        // a state machine can be \"done\" upon initialization (it could reach a final state using initial microsteps)\n        // we still need to complete observers, flush deferreds etc\n        this.update(this._snapshot, initEvent);\n        // TODO: rethink cleanup of observers, mailbox, etc\n        return this;\n      case 'error':\n        this._error(this._snapshot.error);\n        return this;\n    }\n    if (!this._parent) {\n      this.system.start();\n    }\n    if (this.logic.start) {\n      try {\n        this.logic.start(this._snapshot, this._actorScope);\n      } catch (err) {\n        this._snapshot = {\n          ...this._snapshot,\n          status: 'error',\n          error: err\n        };\n        this._error(err);\n        return this;\n      }\n    }\n\n    // TODO: this notifies all subscribers but usually this is redundant\n    // there is no real change happening here\n    // we need to rethink if this needs to be refactored\n    this.update(this._snapshot, initEvent);\n    if (this.options.devTools) {\n      this.attachDevTools();\n    }\n    this.mailbox.start();\n    return this;\n  }\n  _process(event) {\n    let nextState;\n    let caughtError;\n    try {\n      nextState = this.logic.transition(this._snapshot, event, this._actorScope);\n    } catch (err) {\n      // we wrap it in a box so we can rethrow it later even if falsy value gets caught here\n      caughtError = {\n        err\n      };\n    }\n    if (caughtError) {\n      const {\n        err\n      } = caughtError;\n      this._snapshot = {\n        ...this._snapshot,\n        status: 'error',\n        error: err\n      };\n      this._error(err);\n      return;\n    }\n    this.update(nextState, event);\n    if (event.type === XSTATE_STOP) {\n      this._stopProcedure();\n      this._complete();\n    }\n  }\n  _stop() {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      return this;\n    }\n    this.mailbox.clear();\n    if (this._processingStatus === ProcessingStatus.NotStarted) {\n      this._processingStatus = ProcessingStatus.Stopped;\n      return this;\n    }\n    this.mailbox.enqueue({\n      type: XSTATE_STOP\n    });\n    return this;\n  }\n\n  /** Stops the Actor and unsubscribe all listeners. */\n  stop() {\n    if (this._parent) {\n      throw new Error('A non-root actor cannot be stopped directly.');\n    }\n    return this._stop();\n  }\n  _complete() {\n    for (const observer of this.observers) {\n      try {\n        observer.complete?.();\n      } catch (err) {\n        reportUnhandledError(err);\n      }\n    }\n    this.observers.clear();\n  }\n  _reportError(err) {\n    if (!this.observers.size) {\n      if (!this._parent) {\n        reportUnhandledError(err);\n      }\n      return;\n    }\n    let reportError = false;\n    for (const observer of this.observers) {\n      const errorListener = observer.error;\n      reportError ||= !errorListener;\n      try {\n        errorListener?.(err);\n      } catch (err2) {\n        reportUnhandledError(err2);\n      }\n    }\n    this.observers.clear();\n    if (reportError) {\n      reportUnhandledError(err);\n    }\n  }\n  _error(err) {\n    this._stopProcedure();\n    this._reportError(err);\n    if (this._parent) {\n      this.system._relay(this, this._parent, createErrorActorEvent(this.id, err));\n    }\n  }\n  // TODO: atm children don't belong entirely to the actor so\n  // in a way - it's not even super aware of them\n  // so we can't stop them from here but we really should!\n  // right now, they are being stopped within the machine's transition\n  // but that could throw and leave us with \"orphaned\" active actors\n  _stopProcedure() {\n    if (this._processingStatus !== ProcessingStatus.Running) {\n      // Actor already stopped; do nothing\n      return this;\n    }\n\n    // Cancel all delayed events\n    this.system.scheduler.cancelAll(this);\n\n    // TODO: mailbox.reset\n    this.mailbox.clear();\n    // TODO: after `stop` we must prepare ourselves for receiving events again\n    // events sent *after* stop signal must be queued\n    // it seems like this should be the common behavior for all of our consumers\n    // so perhaps this should be unified somehow for all of them\n    this.mailbox = new Mailbox(this._process.bind(this));\n    this._processingStatus = ProcessingStatus.Stopped;\n    this.system._unregister(this);\n    return this;\n  }\n\n  /** @internal */\n  _send(event) {\n    if (this._processingStatus === ProcessingStatus.Stopped) {\n      // do nothing\n      {\n        const eventString = JSON.stringify(event);\n        console.warn(`Event \"${event.type}\" was sent to stopped actor \"${this.id} (${this.sessionId})\". This actor has already reached its final state, and will not transition.\\nEvent: ${eventString}`);\n      }\n      return;\n    }\n    this.mailbox.enqueue(event);\n  }\n\n  /**\n   * Sends an event to the running Actor to trigger a transition.\n   *\n   * @param event The event to send\n   */\n  send(event) {\n    if (typeof event === 'string') {\n      throw new Error(`Only event objects may be sent to actors; use .send({ type: \"${event}\" }) instead`);\n    }\n    this.system._relay(undefined, this, event);\n  }\n  attachDevTools() {\n    const {\n      devTools\n    } = this.options;\n    if (devTools) {\n      const resolvedDevToolsAdapter = typeof devTools === 'function' ? devTools : _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.devToolsAdapter;\n      resolvedDevToolsAdapter(this);\n    }\n  }\n  toJSON() {\n    return {\n      xstate$$type: $$ACTOR_TYPE,\n      id: this.id\n    };\n  }\n\n  /**\n   * Obtain the internal state of the actor, which can be persisted.\n   *\n   * @remarks\n   * The internal state can be persisted from any actor, not only machines.\n   *\n   * Note that the persisted state is not the same as the snapshot from\n   * {@link Actor.getSnapshot}. Persisted state represents the internal state of\n   * the actor, while snapshots represent the actor's last emitted value.\n   *\n   * Can be restored with {@link ActorOptions.state}\n   * @see https://stately.ai/docs/persistence\n   */\n\n  getPersistedSnapshot(options) {\n    return this.logic.getPersistedSnapshot(this._snapshot, options);\n  }\n  [symbolObservable]() {\n    return this;\n  }\n\n  /**\n   * Read an actor’s snapshot synchronously.\n   *\n   * @remarks\n   * The snapshot represent an actor's last emitted value.\n   *\n   * When an actor receives an event, its internal state may change. An actor\n   * may emit a snapshot when a state transition occurs.\n   *\n   * Note that some actors, such as callback actors generated with\n   * `fromCallback`, will not emit snapshots.\n   * @see {@link Actor.subscribe} to subscribe to an actor’s snapshot values.\n   * @see {@link Actor.getPersistedSnapshot} to persist the internal state of an actor (which is more than just a snapshot).\n   */\n  getSnapshot() {\n    if (!this._snapshot) {\n      throw new Error(`Snapshot can't be read while the actor initializes itself`);\n    }\n    return this._snapshot;\n  }\n}\n/**\n * Creates a new actor instance for the given actor logic with the provided\n * options, if any.\n *\n * @remarks\n * When you create an actor from actor logic via `createActor(logic)`, you\n * implicitly create an actor system where the created actor is the root actor.\n * Any actors spawned from this root actor and its descendants are part of that\n * actor system.\n * @example\n *\n * ```ts\n * import { createActor } from 'xstate';\n * import { someActorLogic } from './someActorLogic.ts';\n *\n * // Creating the actor, which implicitly creates an actor system with itself as the root actor\n * const actor = createActor(someActorLogic);\n *\n * actor.subscribe((snapshot) => {\n *   console.log(snapshot);\n * });\n *\n * // Actors must be started by calling `actor.start()`, which will also start the actor system.\n * actor.start();\n *\n * // Actors can receive events\n * actor.send({ type: 'someEvent' });\n *\n * // You can stop root actors by calling `actor.stop()`, which will also stop the actor system and all actors in that system.\n * actor.stop();\n * ```\n *\n * @param logic - The actor logic to create an actor from. For a state machine\n *   actor logic creator, see {@link createMachine}. Other actor logic creators\n *   include {@link fromCallback}, {@link fromEventObservable},\n *   {@link fromObservable}, {@link fromPromise}, and {@link fromTransition}.\n * @param options - Actor options\n */\nfunction createActor(logic, ...[options]) {\n  return new Actor(logic, options);\n}\n\n/**\n * Creates a new Interpreter instance for the given machine with the provided\n * options, if any.\n *\n * @deprecated Use `createActor` instead\n * @alias\n */\nconst interpret = createActor;\n\n/**\n * @deprecated Use `Actor` instead.\n * @alias\n */\n\nfunction resolveCancel(_, snapshot, actionArgs, actionParams, {\n  sendId\n}) {\n  const resolvedSendId = typeof sendId === 'function' ? sendId(actionArgs, actionParams) : sendId;\n  return [snapshot, {\n    sendId: resolvedSendId\n  }, undefined];\n}\nfunction executeCancel(actorScope, params) {\n  actorScope.defer(() => {\n    actorScope.system.scheduler.cancel(actorScope.self, params.sendId);\n  });\n}\n/**\n * Cancels a delayed `sendTo(...)` action that is waiting to be executed. The\n * canceled `sendTo(...)` action will not send its event or execute, unless the\n * `delay` has already elapsed before `cancel(...)` is called.\n *\n * @example\n *\n * ```ts\n * import { createMachine, sendTo, cancel } from 'xstate';\n *\n * const machine = createMachine({\n *   // ...\n *   on: {\n *     sendEvent: {\n *       actions: sendTo(\n *         'some-actor',\n *         { type: 'someEvent' },\n *         {\n *           id: 'some-id',\n *           delay: 1000\n *         }\n *       )\n *     },\n *     cancelEvent: {\n *       actions: cancel('some-id')\n *     }\n *   }\n * });\n * ```\n *\n * @param sendId The `id` of the `sendTo(...)` action to cancel.\n */\nfunction cancel(sendId) {\n  function cancel(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  cancel.type = 'xstate.cancel';\n  cancel.sendId = sendId;\n  cancel.resolve = resolveCancel;\n  cancel.execute = executeCancel;\n  return cancel;\n}\n\nfunction resolveSpawn(actorScope, snapshot, actionArgs, _actionParams, {\n  id,\n  systemId,\n  src,\n  input,\n  syncSnapshot\n}) {\n  const logic = typeof src === 'string' ? resolveReferencedActor(snapshot.machine, src) : src;\n  const resolvedId = typeof id === 'function' ? id(actionArgs) : id;\n  let actorRef;\n  let resolvedInput = undefined;\n  if (logic) {\n    resolvedInput = typeof input === 'function' ? input({\n      context: snapshot.context,\n      event: actionArgs.event,\n      self: actorScope.self\n    }) : input;\n    actorRef = createActor(logic, {\n      id: resolvedId,\n      src,\n      parent: actorScope.self,\n      syncSnapshot,\n      systemId,\n      input: resolvedInput\n    });\n  }\n  if (!actorRef) {\n    console.warn(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions,@typescript-eslint/no-base-to-string\n    `Actor type '${src}' not found in machine '${actorScope.id}'.`);\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children: {\n      ...snapshot.children,\n      [resolvedId]: actorRef\n    }\n  }), {\n    id,\n    systemId,\n    actorRef,\n    src,\n    input: resolvedInput\n  }, undefined];\n}\nfunction executeSpawn(actorScope, {\n  actorRef\n}) {\n  if (!actorRef) {\n    return;\n  }\n  actorScope.defer(() => {\n    if (actorRef._processingStatus === ProcessingStatus.Stopped) {\n      return;\n    }\n    actorRef.start();\n  });\n}\nfunction spawnChild(...[src, {\n  id,\n  systemId,\n  input,\n  syncSnapshot = false\n} = {}]) {\n  function spawnChild(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  spawnChild.type = 'xstate.spawnChild';\n  spawnChild.id = id;\n  spawnChild.systemId = systemId;\n  spawnChild.src = src;\n  spawnChild.input = input;\n  spawnChild.syncSnapshot = syncSnapshot;\n  spawnChild.resolve = resolveSpawn;\n  spawnChild.execute = executeSpawn;\n  return spawnChild;\n}\n\nfunction resolveStop(_, snapshot, args, actionParams, {\n  actorRef\n}) {\n  const actorRefOrString = typeof actorRef === 'function' ? actorRef(args, actionParams) : actorRef;\n  const resolvedActorRef = typeof actorRefOrString === 'string' ? snapshot.children[actorRefOrString] : actorRefOrString;\n  let children = snapshot.children;\n  if (resolvedActorRef) {\n    children = {\n      ...children\n    };\n    delete children[resolvedActorRef.id];\n  }\n  return [cloneMachineSnapshot(snapshot, {\n    children\n  }), resolvedActorRef, undefined];\n}\nfunction executeStop(actorScope, actorRef) {\n  if (!actorRef) {\n    return;\n  }\n\n  // we need to eagerly unregister it here so a new actor with the same systemId can be registered immediately\n  // since we defer actual stopping of the actor but we don't defer actor creations (and we can't do that)\n  // this could throw on `systemId` collision, for example, when dealing with reentering transitions\n  actorScope.system._unregister(actorRef);\n\n  // this allows us to prevent an actor from being started if it gets stopped within the same macrostep\n  // this can happen, for example, when the invoking state is being exited immediately by an always transition\n  if (actorRef._processingStatus !== ProcessingStatus.Running) {\n    actorScope.stopChild(actorRef);\n    return;\n  }\n  // stopping a child enqueues a stop event in the child actor's mailbox\n  // we need for all of the already enqueued events to be processed before we stop the child\n  // the parent itself might want to send some events to a child (for example from exit actions on the invoking state)\n  // and we don't want to ignore those events\n  actorScope.defer(() => {\n    actorScope.stopChild(actorRef);\n  });\n}\n/**\n * Stops a child actor.\n *\n * @param actorRef The actor to stop.\n */\nfunction stopChild(actorRef) {\n  function stop(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  stop.type = 'xstate.stopChild';\n  stop.actorRef = actorRef;\n  stop.resolve = resolveStop;\n  stop.execute = executeStop;\n  return stop;\n}\n\n/**\n * Stops a child actor.\n *\n * @deprecated Use `stopChild(...)` instead\n * @alias\n */\nconst stop = stopChild;\n\nfunction checkStateIn(snapshot, _, {\n  stateValue\n}) {\n  if (typeof stateValue === 'string' && isStateId(stateValue)) {\n    const target = snapshot.machine.getStateNodeById(stateValue);\n    return snapshot._nodes.some(sn => sn === target);\n  }\n  return snapshot.matches(stateValue);\n}\nfunction stateIn(stateValue) {\n  function stateIn() {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  stateIn.check = checkStateIn;\n  stateIn.stateValue = stateValue;\n  return stateIn;\n}\nfunction checkNot(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return !evaluateGuard(guards[0], context, event, snapshot);\n}\n\n/**\n * Higher-order guard that evaluates to `true` if the `guard` passed to it\n * evaluates to `false`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, not } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => false\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: not('someNamedGuard'),\n *       actions: () => {\n *         // will be executed if guard in `not(...)`\n *         // evaluates to `false`\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard\n */\nfunction not(guard) {\n  function not(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  not.check = checkNot;\n  not.guards = [guard];\n  return not;\n}\nfunction checkAnd(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.every(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if all `guards` passed to it\n * evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, and } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: and([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if all guards in `and(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction and(guards) {\n  function and(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  and.check = checkAnd;\n  and.guards = guards;\n  return and;\n}\nfunction checkOr(snapshot, {\n  context,\n  event\n}, {\n  guards\n}) {\n  return guards.some(guard => evaluateGuard(guard, context, event, snapshot));\n}\n\n/**\n * Higher-order guard that evaluates to `true` if any of the `guards` passed to\n * it evaluate to `true`.\n *\n * @category Guards\n * @example\n *\n * ```ts\n * import { setup, or } from 'xstate';\n *\n * const machine = setup({\n *   guards: {\n *     someNamedGuard: () => true\n *   }\n * }).createMachine({\n *   on: {\n *     someEvent: {\n *       guard: or([({ context }) => context.value > 0, 'someNamedGuard']),\n *       actions: () => {\n *         // will be executed if any of the guards in `or(...)`\n *         // evaluate to true\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * @returns A guard action object\n */\nfunction or(guards) {\n  function or(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  or.check = checkOr;\n  or.guards = guards;\n  return or;\n}\n\n// TODO: throw on cycles (depth check should be enough)\nfunction evaluateGuard(guard, context, event, snapshot) {\n  const {\n    machine\n  } = snapshot;\n  const isInline = typeof guard === 'function';\n  const resolved = isInline ? guard : machine.implementations.guards[typeof guard === 'string' ? guard : guard.type];\n  if (!isInline && !resolved) {\n    throw new Error(`Guard '${typeof guard === 'string' ? guard : guard.type}' is not implemented.'.`);\n  }\n  if (typeof resolved !== 'function') {\n    return evaluateGuard(resolved, context, event, snapshot);\n  }\n  const guardArgs = {\n    context,\n    event\n  };\n  const guardParams = isInline || typeof guard === 'string' ? undefined : 'params' in guard ? typeof guard.params === 'function' ? guard.params({\n    context,\n    event\n  }) : guard.params : undefined;\n  if (!('check' in resolved)) {\n    // the existing type of `.guards` assumes non-nullable `TExpressionGuard`\n    // inline guards expect `TExpressionGuard` to be set to `undefined`\n    // it's fine to cast this here, our logic makes sure that we call those 2 \"variants\" correctly\n    return resolved(guardArgs, guardParams);\n  }\n  const builtinGuard = resolved;\n  return builtinGuard.check(snapshot, guardArgs, resolved // this holds all params\n  );\n}\n\nconst isAtomicStateNode = stateNode => stateNode.type === 'atomic' || stateNode.type === 'final';\nfunction getChildren(stateNode) {\n  return Object.values(stateNode.states).filter(sn => sn.type !== 'history');\n}\nfunction getProperAncestors(stateNode, toStateNode) {\n  const ancestors = [];\n  if (toStateNode === stateNode) {\n    return ancestors;\n  }\n\n  // add all ancestors\n  let m = stateNode.parent;\n  while (m && m !== toStateNode) {\n    ancestors.push(m);\n    m = m.parent;\n  }\n  return ancestors;\n}\nfunction getAllStateNodes(stateNodes) {\n  const nodeSet = new Set(stateNodes);\n  const adjList = getAdjList(nodeSet);\n\n  // add descendants\n  for (const s of nodeSet) {\n    // if previously active, add existing child nodes\n    if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n      getInitialStateNodesWithTheirAncestors(s).forEach(sn => nodeSet.add(sn));\n    } else {\n      if (s.type === 'parallel') {\n        for (const child of getChildren(s)) {\n          if (child.type === 'history') {\n            continue;\n          }\n          if (!nodeSet.has(child)) {\n            const initialStates = getInitialStateNodesWithTheirAncestors(child);\n            for (const initialStateNode of initialStates) {\n              nodeSet.add(initialStateNode);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // add all ancestors\n  for (const s of nodeSet) {\n    let m = s.parent;\n    while (m) {\n      nodeSet.add(m);\n      m = m.parent;\n    }\n  }\n  return nodeSet;\n}\nfunction getValueFromAdj(baseNode, adjList) {\n  const childStateNodes = adjList.get(baseNode);\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n  if (baseNode.type === 'compound') {\n    const childStateNode = childStateNodes[0];\n    if (childStateNode) {\n      if (isAtomicStateNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n  const stateValue = {};\n  for (const childStateNode of childStateNodes) {\n    stateValue[childStateNode.key] = getValueFromAdj(childStateNode, adjList);\n  }\n  return stateValue;\n}\nfunction getAdjList(stateNodes) {\n  const adjList = new Map();\n  for (const s of stateNodes) {\n    if (!adjList.has(s)) {\n      adjList.set(s, []);\n    }\n    if (s.parent) {\n      if (!adjList.has(s.parent)) {\n        adjList.set(s.parent, []);\n      }\n      adjList.get(s.parent).push(s);\n    }\n  }\n  return adjList;\n}\nfunction getStateValue(rootNode, stateNodes) {\n  const config = getAllStateNodes(stateNodes);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction isInFinalState(stateNodeSet, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(s => s.type === 'final' && stateNodeSet.has(s));\n  }\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(sn => isInFinalState(stateNodeSet, sn));\n  }\n  return stateNode.type === 'final';\n}\nconst isStateId = str => str[0] === STATE_IDENTIFIER;\nfunction getCandidates(stateNode, receivedEventType) {\n  const candidates = stateNode.transitions.get(receivedEventType) || [...stateNode.transitions.keys()].filter(eventDescriptor => {\n    // check if transition is a wildcard transition,\n    // which matches any non-transient events\n    if (eventDescriptor === WILDCARD) {\n      return true;\n    }\n    if (!eventDescriptor.endsWith('.*')) {\n      return false;\n    }\n    if (/.*\\*.+/.test(eventDescriptor)) {\n      console.warn(`Wildcards can only be the last token of an event descriptor (e.g., \"event.*\") or the entire event descriptor (\"*\"). Check the \"${eventDescriptor}\" event.`);\n    }\n    const partialEventTokens = eventDescriptor.split('.');\n    const eventTokens = receivedEventType.split('.');\n    for (let tokenIndex = 0; tokenIndex < partialEventTokens.length; tokenIndex++) {\n      const partialEventToken = partialEventTokens[tokenIndex];\n      const eventToken = eventTokens[tokenIndex];\n      if (partialEventToken === '*') {\n        const isLastToken = tokenIndex === partialEventTokens.length - 1;\n        if (!isLastToken) {\n          console.warn(`Infix wildcards in transition events are not allowed. Check the \"${eventDescriptor}\" transition.`);\n        }\n        return isLastToken;\n      }\n      if (partialEventToken !== eventToken) {\n        return false;\n      }\n    }\n    return true;\n  }).sort((a, b) => b.length - a.length).flatMap(key => stateNode.transitions.get(key));\n  return candidates;\n}\n\n/** All delayed transitions from the config. */\nfunction getDelayedTransitions(stateNode) {\n  const afterConfig = stateNode.config.after;\n  if (!afterConfig) {\n    return [];\n  }\n  const mutateEntryExit = delay => {\n    const afterEvent = createAfterEvent(delay, stateNode.id);\n    const eventType = afterEvent.type;\n    stateNode.entry.push(raise(afterEvent, {\n      id: eventType,\n      delay\n    }));\n    stateNode.exit.push(cancel(eventType));\n    return eventType;\n  };\n  const delayedTransitions = Object.keys(afterConfig).flatMap(delay => {\n    const configTransition = afterConfig[delay];\n    const resolvedTransition = typeof configTransition === 'string' ? {\n      target: configTransition\n    } : configTransition;\n    const resolvedDelay = Number.isNaN(+delay) ? delay : +delay;\n    const eventType = mutateEntryExit(resolvedDelay);\n    return toArray(resolvedTransition).map(transition => ({\n      ...transition,\n      event: eventType,\n      delay: resolvedDelay\n    }));\n  });\n  return delayedTransitions.map(delayedTransition => {\n    const {\n      delay\n    } = delayedTransition;\n    return {\n      ...formatTransition(stateNode, delayedTransition.event, delayedTransition),\n      delay\n    };\n  });\n}\nfunction formatTransition(stateNode, descriptor, transitionConfig) {\n  const normalizedTarget = normalizeTarget(transitionConfig.target);\n  const reenter = transitionConfig.reenter ?? false;\n  const target = resolveTarget(stateNode, normalizedTarget);\n\n  // TODO: should this be part of a lint rule instead?\n  if (transitionConfig.cond) {\n    throw new Error(`State \"${stateNode.id}\" has declared \\`cond\\` for one of its transitions. This property has been renamed to \\`guard\\`. Please update your code.`);\n  }\n  const transition = {\n    ...transitionConfig,\n    actions: toArray(transitionConfig.actions),\n    guard: transitionConfig.guard,\n    target,\n    source: stateNode,\n    reenter,\n    eventType: descriptor,\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: target ? target.map(t => `#${t.id}`) : undefined\n    })\n  };\n  return transition;\n}\nfunction formatTransitions(stateNode) {\n  const transitions = new Map();\n  if (stateNode.config.on) {\n    for (const descriptor of Object.keys(stateNode.config.on)) {\n      if (descriptor === NULL_EVENT) {\n        throw new Error('Null events (\"\") cannot be specified as a transition key. Use `always: { ... }` instead.');\n      }\n      const transitionsConfig = stateNode.config.on[descriptor];\n      transitions.set(descriptor, toTransitionConfigArray(transitionsConfig).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  if (stateNode.config.onDone) {\n    const descriptor = `xstate.done.state.${stateNode.id}`;\n    transitions.set(descriptor, toTransitionConfigArray(stateNode.config.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n  }\n  for (const invokeDef of stateNode.invoke) {\n    if (invokeDef.onDone) {\n      const descriptor = `xstate.done.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onDone).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onError) {\n      const descriptor = `xstate.error.actor.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onError).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n    if (invokeDef.onSnapshot) {\n      const descriptor = `xstate.snapshot.${invokeDef.id}`;\n      transitions.set(descriptor, toTransitionConfigArray(invokeDef.onSnapshot).map(t => formatTransition(stateNode, descriptor, t)));\n    }\n  }\n  for (const delayedTransition of stateNode.after) {\n    let existing = transitions.get(delayedTransition.eventType);\n    if (!existing) {\n      existing = [];\n      transitions.set(delayedTransition.eventType, existing);\n    }\n    existing.push(delayedTransition);\n  }\n  return transitions;\n}\nfunction formatInitialTransition(stateNode, _target) {\n  const resolvedTarget = typeof _target === 'string' ? stateNode.states[_target] : _target ? stateNode.states[_target.target] : undefined;\n  if (!resolvedTarget && _target) {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-base-to-string\n    `Initial state node \"${_target}\" not found on parent state node #${stateNode.id}`);\n  }\n  const transition = {\n    source: stateNode,\n    actions: !_target || typeof _target === 'string' ? [] : toArray(_target.actions),\n    eventType: null,\n    reenter: false,\n    target: resolvedTarget ? [resolvedTarget] : [],\n    toJSON: () => ({\n      ...transition,\n      source: `#${stateNode.id}`,\n      target: resolvedTarget ? [`#${resolvedTarget.id}`] : []\n    })\n  };\n  return transition;\n}\nfunction resolveTarget(stateNode, targets) {\n  if (targets === undefined) {\n    // an undefined target signals that the state node should not transition from that state when receiving that event\n    return undefined;\n  }\n  return targets.map(target => {\n    if (typeof target !== 'string') {\n      return target;\n    }\n    if (isStateId(target)) {\n      return stateNode.machine.getStateNodeById(target);\n    }\n    const isInternalTarget = target[0] === STATE_DELIMITER;\n    // If internal target is defined on machine,\n    // do not include machine key on target\n    if (isInternalTarget && !stateNode.parent) {\n      return getStateNodeByPath(stateNode, target.slice(1));\n    }\n    const resolvedTarget = isInternalTarget ? stateNode.key + target : target;\n    if (stateNode.parent) {\n      try {\n        const targetStateNode = getStateNodeByPath(stateNode.parent, resolvedTarget);\n        return targetStateNode;\n      } catch (err) {\n        throw new Error(`Invalid transition definition for state node '${stateNode.id}':\\n${err.message}`);\n      }\n    } else {\n      throw new Error(`Invalid target: \"${target}\" is not a valid target from the root node. Did you mean \".${target}\"?`);\n    }\n  });\n}\nfunction resolveHistoryDefaultTransition(stateNode) {\n  const normalizedTarget = normalizeTarget(stateNode.config.target);\n  if (!normalizedTarget) {\n    return stateNode.parent.initial;\n  }\n  return {\n    target: normalizedTarget.map(t => typeof t === 'string' ? getStateNodeByPath(stateNode.parent, t) : t)\n  };\n}\nfunction isHistoryNode(stateNode) {\n  return stateNode.type === 'history';\n}\nfunction getInitialStateNodesWithTheirAncestors(stateNode) {\n  const states = getInitialStateNodes(stateNode);\n  for (const initialState of states) {\n    for (const ancestor of getProperAncestors(initialState, stateNode)) {\n      states.add(ancestor);\n    }\n  }\n  return states;\n}\nfunction getInitialStateNodes(stateNode) {\n  const set = new Set();\n  function iter(descStateNode) {\n    if (set.has(descStateNode)) {\n      return;\n    }\n    set.add(descStateNode);\n    if (descStateNode.type === 'compound') {\n      iter(descStateNode.initial.target[0]);\n    } else if (descStateNode.type === 'parallel') {\n      for (const child of getChildren(descStateNode)) {\n        iter(child);\n      }\n    }\n  }\n  iter(stateNode);\n  return set;\n}\n/** Returns the child state node from its relative `stateKey`, or throws. */\nfunction getStateNode(stateNode, stateKey) {\n  if (isStateId(stateKey)) {\n    return stateNode.machine.getStateNodeById(stateKey);\n  }\n  if (!stateNode.states) {\n    throw new Error(`Unable to retrieve child state '${stateKey}' from '${stateNode.id}'; no child states exist.`);\n  }\n  const result = stateNode.states[stateKey];\n  if (!result) {\n    throw new Error(`Child state '${stateKey}' does not exist on '${stateNode.id}'`);\n  }\n  return result;\n}\n\n/**\n * Returns the relative state node from the given `statePath`, or throws.\n *\n * @param statePath The string or string array relative path to the state node.\n */\nfunction getStateNodeByPath(stateNode, statePath) {\n  if (typeof statePath === 'string' && isStateId(statePath)) {\n    try {\n      return stateNode.machine.getStateNodeById(statePath);\n    } catch {\n      // try individual paths\n      // throw e;\n    }\n  }\n  const arrayStatePath = toStatePath(statePath).slice();\n  let currentStateNode = stateNode;\n  while (arrayStatePath.length) {\n    const key = arrayStatePath.shift();\n    if (!key.length) {\n      break;\n    }\n    currentStateNode = getStateNode(currentStateNode, key);\n  }\n  return currentStateNode;\n}\n\n/**\n * Returns the state nodes represented by the current state value.\n *\n * @param stateValue The state value or State instance\n */\nfunction getStateNodes(stateNode, stateValue) {\n  if (typeof stateValue === 'string') {\n    const childStateNode = stateNode.states[stateValue];\n    if (!childStateNode) {\n      throw new Error(`State '${stateValue}' does not exist on '${stateNode.id}'`);\n    }\n    return [stateNode, childStateNode];\n  }\n  const childStateKeys = Object.keys(stateValue);\n  const childStateNodes = childStateKeys.map(subStateKey => getStateNode(stateNode, subStateKey)).filter(Boolean);\n  return [stateNode.machine.root, stateNode].concat(childStateNodes, childStateKeys.reduce((allSubStateNodes, subStateKey) => {\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    if (!subStateNode) {\n      return allSubStateNodes;\n    }\n    const subStateNodes = getStateNodes(subStateNode, stateValue[subStateKey]);\n    return allSubStateNodes.concat(subStateNodes);\n  }, []));\n}\nfunction transitionAtomicNode(stateNode, stateValue, snapshot, event) {\n  const childStateNode = getStateNode(stateNode, stateValue);\n  const next = childStateNode.next(snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionCompoundNode(stateNode, stateValue, snapshot, event) {\n  const subStateKeys = Object.keys(stateValue);\n  const childStateNode = getStateNode(stateNode, subStateKeys[0]);\n  const next = transitionNode(childStateNode, stateValue[subStateKeys[0]], snapshot, event);\n  if (!next || !next.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return next;\n}\nfunction transitionParallelNode(stateNode, stateValue, snapshot, event) {\n  const allInnerTransitions = [];\n  for (const subStateKey of Object.keys(stateValue)) {\n    const subStateValue = stateValue[subStateKey];\n    if (!subStateValue) {\n      continue;\n    }\n    const subStateNode = getStateNode(stateNode, subStateKey);\n    const innerTransitions = transitionNode(subStateNode, subStateValue, snapshot, event);\n    if (innerTransitions) {\n      allInnerTransitions.push(...innerTransitions);\n    }\n  }\n  if (!allInnerTransitions.length) {\n    return stateNode.next(snapshot, event);\n  }\n  return allInnerTransitions;\n}\nfunction transitionNode(stateNode, stateValue, snapshot, event) {\n  // leaf node\n  if (typeof stateValue === 'string') {\n    return transitionAtomicNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // compound node\n  if (Object.keys(stateValue).length === 1) {\n    return transitionCompoundNode(stateNode, stateValue, snapshot, event);\n  }\n\n  // parallel node\n  return transitionParallelNode(stateNode, stateValue, snapshot, event);\n}\nfunction getHistoryNodes(stateNode) {\n  return Object.keys(stateNode.states).map(key => stateNode.states[key]).filter(sn => sn.type === 'history');\n}\nfunction isDescendant(childStateNode, parentStateNode) {\n  let marker = childStateNode;\n  while (marker.parent && marker.parent !== parentStateNode) {\n    marker = marker.parent;\n  }\n  return marker.parent === parentStateNode;\n}\nfunction hasIntersection(s1, s2) {\n  const set1 = new Set(s1);\n  const set2 = new Set(s2);\n  for (const item of set1) {\n    if (set2.has(item)) {\n      return true;\n    }\n  }\n  for (const item of set2) {\n    if (set1.has(item)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction removeConflictingTransitions(enabledTransitions, stateNodeSet, historyValue) {\n  const filteredTransitions = new Set();\n  for (const t1 of enabledTransitions) {\n    let t1Preempted = false;\n    const transitionsToRemove = new Set();\n    for (const t2 of filteredTransitions) {\n      if (hasIntersection(computeExitSet([t1], stateNodeSet, historyValue), computeExitSet([t2], stateNodeSet, historyValue))) {\n        if (isDescendant(t1.source, t2.source)) {\n          transitionsToRemove.add(t2);\n        } else {\n          t1Preempted = true;\n          break;\n        }\n      }\n    }\n    if (!t1Preempted) {\n      for (const t3 of transitionsToRemove) {\n        filteredTransitions.delete(t3);\n      }\n      filteredTransitions.add(t1);\n    }\n  }\n  return Array.from(filteredTransitions);\n}\nfunction findLeastCommonAncestor(stateNodes) {\n  const [head, ...tail] = stateNodes;\n  for (const ancestor of getProperAncestors(head, undefined)) {\n    if (tail.every(sn => isDescendant(sn, ancestor))) {\n      return ancestor;\n    }\n  }\n}\nfunction getEffectiveTargetStates(transition, historyValue) {\n  if (!transition.target) {\n    return [];\n  }\n  const targets = new Set();\n  for (const targetNode of transition.target) {\n    if (isHistoryNode(targetNode)) {\n      if (historyValue[targetNode.id]) {\n        for (const node of historyValue[targetNode.id]) {\n          targets.add(node);\n        }\n      } else {\n        for (const node of getEffectiveTargetStates(resolveHistoryDefaultTransition(targetNode), historyValue)) {\n          targets.add(node);\n        }\n      }\n    } else {\n      targets.add(targetNode);\n    }\n  }\n  return [...targets];\n}\nfunction getTransitionDomain(transition, historyValue) {\n  const targetStates = getEffectiveTargetStates(transition, historyValue);\n  if (!targetStates) {\n    return;\n  }\n  if (!transition.reenter && targetStates.every(target => target === transition.source || isDescendant(target, transition.source))) {\n    return transition.source;\n  }\n  const lca = findLeastCommonAncestor(targetStates.concat(transition.source));\n  if (lca) {\n    return lca;\n  }\n\n  // at this point we know that it's a root transition since LCA couldn't be found\n  if (transition.reenter) {\n    return;\n  }\n  return transition.source.machine.root;\n}\nfunction computeExitSet(transitions, stateNodeSet, historyValue) {\n  const statesToExit = new Set();\n  for (const t of transitions) {\n    if (t.target?.length) {\n      const domain = getTransitionDomain(t, historyValue);\n      if (t.reenter && t.source === domain) {\n        statesToExit.add(domain);\n      }\n      for (const stateNode of stateNodeSet) {\n        if (isDescendant(stateNode, domain)) {\n          statesToExit.add(stateNode);\n        }\n      }\n    }\n  }\n  return [...statesToExit];\n}\nfunction areStateNodeCollectionsEqual(prevStateNodes, nextStateNodeSet) {\n  if (prevStateNodes.length !== nextStateNodeSet.size) {\n    return false;\n  }\n  for (const node of prevStateNodes) {\n    if (!nextStateNodeSet.has(node)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/** https://www.w3.org/TR/scxml/#microstepProcedure */\nfunction microstep(transitions, currentSnapshot, actorScope, event, isInitial, internalQueue) {\n  if (!transitions.length) {\n    return currentSnapshot;\n  }\n  const mutStateNodeSet = new Set(currentSnapshot._nodes);\n  let historyValue = currentSnapshot.historyValue;\n  const filteredTransitions = removeConflictingTransitions(transitions, mutStateNodeSet, historyValue);\n  let nextState = currentSnapshot;\n\n  // Exit states\n  if (!isInitial) {\n    [nextState, historyValue] = exitStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, historyValue, internalQueue, actorScope.actionExecutor);\n  }\n\n  // Execute transition content\n  nextState = resolveActionsAndContext(nextState, event, actorScope, filteredTransitions.flatMap(t => t.actions), internalQueue, undefined);\n\n  // Enter states\n  nextState = enterStates(nextState, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial);\n  const nextStateNodes = [...mutStateNodeSet];\n  if (nextState.status === 'done') {\n    nextState = resolveActionsAndContext(nextState, event, actorScope, nextStateNodes.sort((a, b) => b.order - a.order).flatMap(state => state.exit), internalQueue, undefined);\n  }\n\n  // eslint-disable-next-line no-useless-catch\n  try {\n    if (historyValue === currentSnapshot.historyValue && areStateNodeCollectionsEqual(currentSnapshot._nodes, mutStateNodeSet)) {\n      return nextState;\n    }\n    return cloneMachineSnapshot(nextState, {\n      _nodes: nextStateNodes,\n      historyValue\n    });\n  } catch (e) {\n    // TODO: Refactor this once proper error handling is implemented.\n    // See https://github.com/statelyai/rfcs/pull/4\n    throw e;\n  }\n}\nfunction getMachineOutput(snapshot, event, actorScope, rootNode, rootCompletionNode) {\n  if (rootNode.output === undefined) {\n    return;\n  }\n  const doneStateEvent = createDoneStateEvent(rootCompletionNode.id, rootCompletionNode.output !== undefined && rootCompletionNode.parent ? resolveOutput(rootCompletionNode.output, snapshot.context, event, actorScope.self) : undefined);\n  return resolveOutput(rootNode.output, snapshot.context, doneStateEvent, actorScope.self);\n}\nfunction enterStates(currentSnapshot, event, actorScope, filteredTransitions, mutStateNodeSet, internalQueue, historyValue, isInitial) {\n  let nextSnapshot = currentSnapshot;\n  const statesToEnter = new Set();\n  // those are states that were directly targeted or indirectly targeted by the explicit target\n  // in other words, those are states for which initial actions should be executed\n  // when we target `#deep_child` initial actions of its ancestors shouldn't be executed\n  const statesForDefaultEntry = new Set();\n  computeEntrySet(filteredTransitions, historyValue, statesForDefaultEntry, statesToEnter);\n\n  // In the initial state, the root state node is \"entered\".\n  if (isInitial) {\n    statesForDefaultEntry.add(currentSnapshot.machine.root);\n  }\n  const completedNodes = new Set();\n  for (const stateNodeToEnter of [...statesToEnter].sort((a, b) => a.order - b.order)) {\n    mutStateNodeSet.add(stateNodeToEnter);\n    const actions = [];\n\n    // Add entry actions\n    actions.push(...stateNodeToEnter.entry);\n    for (const invokeDef of stateNodeToEnter.invoke) {\n      actions.push(spawnChild(invokeDef.src, {\n        ...invokeDef,\n        syncSnapshot: !!invokeDef.onSnapshot\n      }));\n    }\n    if (statesForDefaultEntry.has(stateNodeToEnter)) {\n      const initialActions = stateNodeToEnter.initial.actions;\n      actions.push(...initialActions);\n    }\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, actions, internalQueue, stateNodeToEnter.invoke.map(invokeDef => invokeDef.id));\n    if (stateNodeToEnter.type === 'final') {\n      const parent = stateNodeToEnter.parent;\n      let ancestorMarker = parent?.type === 'parallel' ? parent : parent?.parent;\n      let rootCompletionNode = ancestorMarker || stateNodeToEnter;\n      if (parent?.type === 'compound') {\n        internalQueue.push(createDoneStateEvent(parent.id, stateNodeToEnter.output !== undefined ? resolveOutput(stateNodeToEnter.output, nextSnapshot.context, event, actorScope.self) : undefined));\n      }\n      while (ancestorMarker?.type === 'parallel' && !completedNodes.has(ancestorMarker) && isInFinalState(mutStateNodeSet, ancestorMarker)) {\n        completedNodes.add(ancestorMarker);\n        internalQueue.push(createDoneStateEvent(ancestorMarker.id));\n        rootCompletionNode = ancestorMarker;\n        ancestorMarker = ancestorMarker.parent;\n      }\n      if (ancestorMarker) {\n        continue;\n      }\n      nextSnapshot = cloneMachineSnapshot(nextSnapshot, {\n        status: 'done',\n        output: getMachineOutput(nextSnapshot, event, actorScope, nextSnapshot.machine.root, rootCompletionNode)\n      });\n    }\n  }\n  return nextSnapshot;\n}\nfunction computeEntrySet(transitions, historyValue, statesForDefaultEntry, statesToEnter) {\n  for (const t of transitions) {\n    const domain = getTransitionDomain(t, historyValue);\n    for (const s of t.target || []) {\n      if (!isHistoryNode(s) && (\n      // if the target is different than the source then it will *definitely* be entered\n      t.source !== s ||\n      // we know that the domain can't lie within the source\n      // if it's different than the source then it's outside of it and it means that the target has to be entered as well\n      t.source !== domain ||\n      // reentering transitions always enter the target, even if it's the source itself\n      t.reenter)) {\n        statesToEnter.add(s);\n        statesForDefaultEntry.add(s);\n      }\n      addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n    }\n    const targetStates = getEffectiveTargetStates(t, historyValue);\n    for (const s of targetStates) {\n      const ancestors = getProperAncestors(s, domain);\n      if (domain?.type === 'parallel') {\n        ancestors.push(domain);\n      }\n      addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, !t.source.parent && t.reenter ? undefined : domain);\n    }\n  }\n}\nfunction addDescendantStatesToEnter(stateNode, historyValue, statesForDefaultEntry, statesToEnter) {\n  if (isHistoryNode(stateNode)) {\n    if (historyValue[stateNode.id]) {\n      const historyStateNodes = historyValue[stateNode.id];\n      for (const s of historyStateNodes) {\n        statesToEnter.add(s);\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyStateNodes) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    } else {\n      const historyDefaultTransition = resolveHistoryDefaultTransition(stateNode);\n      for (const s of historyDefaultTransition.target) {\n        statesToEnter.add(s);\n        if (historyDefaultTransition === stateNode.parent?.initial) {\n          statesForDefaultEntry.add(stateNode.parent);\n        }\n        addDescendantStatesToEnter(s, historyValue, statesForDefaultEntry, statesToEnter);\n      }\n      for (const s of historyDefaultTransition.target) {\n        addProperAncestorStatesToEnter(s, stateNode.parent, statesToEnter, historyValue, statesForDefaultEntry);\n      }\n    }\n  } else {\n    if (stateNode.type === 'compound') {\n      const [initialState] = stateNode.initial.target;\n      if (!isHistoryNode(initialState)) {\n        statesToEnter.add(initialState);\n        statesForDefaultEntry.add(initialState);\n      }\n      addDescendantStatesToEnter(initialState, historyValue, statesForDefaultEntry, statesToEnter);\n      addProperAncestorStatesToEnter(initialState, stateNode, statesToEnter, historyValue, statesForDefaultEntry);\n    } else {\n      if (stateNode.type === 'parallel') {\n        for (const child of getChildren(stateNode).filter(sn => !isHistoryNode(sn))) {\n          if (![...statesToEnter].some(s => isDescendant(s, child))) {\n            if (!isHistoryNode(child)) {\n              statesToEnter.add(child);\n              statesForDefaultEntry.add(child);\n            }\n            addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n          }\n        }\n      }\n    }\n  }\n}\nfunction addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, ancestors, reentrancyDomain) {\n  for (const anc of ancestors) {\n    if (!reentrancyDomain || isDescendant(anc, reentrancyDomain)) {\n      statesToEnter.add(anc);\n    }\n    if (anc.type === 'parallel') {\n      for (const child of getChildren(anc).filter(sn => !isHistoryNode(sn))) {\n        if (![...statesToEnter].some(s => isDescendant(s, child))) {\n          statesToEnter.add(child);\n          addDescendantStatesToEnter(child, historyValue, statesForDefaultEntry, statesToEnter);\n        }\n      }\n    }\n  }\n}\nfunction addProperAncestorStatesToEnter(stateNode, toStateNode, statesToEnter, historyValue, statesForDefaultEntry) {\n  addAncestorStatesToEnter(statesToEnter, historyValue, statesForDefaultEntry, getProperAncestors(stateNode, toStateNode));\n}\nfunction exitStates(currentSnapshot, event, actorScope, transitions, mutStateNodeSet, historyValue, internalQueue, _actionExecutor) {\n  let nextSnapshot = currentSnapshot;\n  const statesToExit = computeExitSet(transitions, mutStateNodeSet, historyValue);\n  statesToExit.sort((a, b) => b.order - a.order);\n  let changedHistory;\n\n  // From SCXML algorithm: https://www.w3.org/TR/scxml/#exitStates\n  for (const exitStateNode of statesToExit) {\n    for (const historyNode of getHistoryNodes(exitStateNode)) {\n      let predicate;\n      if (historyNode.history === 'deep') {\n        predicate = sn => isAtomicStateNode(sn) && isDescendant(sn, exitStateNode);\n      } else {\n        predicate = sn => {\n          return sn.parent === exitStateNode;\n        };\n      }\n      changedHistory ??= {\n        ...historyValue\n      };\n      changedHistory[historyNode.id] = Array.from(mutStateNodeSet).filter(predicate);\n    }\n  }\n  for (const s of statesToExit) {\n    nextSnapshot = resolveActionsAndContext(nextSnapshot, event, actorScope, [...s.exit, ...s.invoke.map(def => stopChild(def.id))], internalQueue, undefined);\n    mutStateNodeSet.delete(s);\n  }\n  return [nextSnapshot, changedHistory || historyValue];\n}\nfunction getAction(machine, actionType) {\n  return machine.implementations.actions[actionType];\n}\nfunction resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, extra, retries) {\n  const {\n    machine\n  } = currentSnapshot;\n  let intermediateSnapshot = currentSnapshot;\n  for (const action of actions) {\n    const isInline = typeof action === 'function';\n    const resolvedAction = isInline ? action :\n    // the existing type of `.actions` assumes non-nullable `TExpressionAction`\n    // it's fine to cast this here to get a common type and lack of errors in the rest of the code\n    // our logic below makes sure that we call those 2 \"variants\" correctly\n\n    getAction(machine, typeof action === 'string' ? action : action.type);\n    const actionArgs = {\n      context: intermediateSnapshot.context,\n      event,\n      self: actorScope.self,\n      system: actorScope.system\n    };\n    const actionParams = isInline || typeof action === 'string' ? undefined : 'params' in action ? typeof action.params === 'function' ? action.params({\n      context: intermediateSnapshot.context,\n      event\n    }) : action.params : undefined;\n    if (!resolvedAction || !('resolve' in resolvedAction)) {\n      actorScope.actionExecutor({\n        type: typeof action === 'string' ? action : typeof action === 'object' ? action.type : action.name || '(anonymous)',\n        info: actionArgs,\n        params: actionParams,\n        exec: resolvedAction\n      });\n      continue;\n    }\n    const builtinAction = resolvedAction;\n    const [nextState, params, actions] = builtinAction.resolve(actorScope, intermediateSnapshot, actionArgs, actionParams, resolvedAction,\n    // this holds all params\n    extra);\n    intermediateSnapshot = nextState;\n    if ('retryResolve' in builtinAction) {\n      retries?.push([builtinAction, params]);\n    }\n    if ('execute' in builtinAction) {\n      actorScope.actionExecutor({\n        type: builtinAction.type,\n        info: actionArgs,\n        params,\n        exec: builtinAction.execute.bind(null, actorScope, params)\n      });\n    }\n    if (actions) {\n      intermediateSnapshot = resolveAndExecuteActionsWithContext(intermediateSnapshot, event, actorScope, actions, extra, retries);\n    }\n  }\n  return intermediateSnapshot;\n}\nfunction resolveActionsAndContext(currentSnapshot, event, actorScope, actions, internalQueue, deferredActorIds) {\n  const retries = deferredActorIds ? [] : undefined;\n  const nextState = resolveAndExecuteActionsWithContext(currentSnapshot, event, actorScope, actions, {\n    internalQueue,\n    deferredActorIds\n  }, retries);\n  retries?.forEach(([builtinAction, params]) => {\n    builtinAction.retryResolve(actorScope, nextState, params);\n  });\n  return nextState;\n}\nfunction macrostep(snapshot, event, actorScope, internalQueue) {\n  if (event.type === WILDCARD) {\n    throw new Error(`An event cannot have the wildcard type ('${WILDCARD}')`);\n  }\n  let nextSnapshot = snapshot;\n  const microstates = [];\n  function addMicrostate(microstate, event, transitions) {\n    actorScope.system._sendInspectionEvent({\n      type: '@xstate.microstep',\n      actorRef: actorScope.self,\n      event,\n      snapshot: microstate,\n      _transitions: transitions\n    });\n    microstates.push(microstate);\n  }\n\n  // Handle stop event\n  if (event.type === XSTATE_STOP) {\n    nextSnapshot = cloneMachineSnapshot(stopChildren(nextSnapshot, event, actorScope), {\n      status: 'stopped'\n    });\n    addMicrostate(nextSnapshot, event, []);\n    return {\n      snapshot: nextSnapshot,\n      microstates\n    };\n  }\n  let nextEvent = event;\n\n  // Assume the state is at rest (no raised events)\n  // Determine the next state based on the next microstep\n  if (nextEvent.type !== XSTATE_INIT) {\n    const currentEvent = nextEvent;\n    const isErr = isErrorActorEvent(currentEvent);\n    const transitions = selectTransitions(currentEvent, nextSnapshot);\n    if (isErr && !transitions.length) {\n      // TODO: we should likely only allow transitions selected by very explicit descriptors\n      // `*` shouldn't be matched, likely `xstate.error.*` shouldnt be either\n      // similarly `xstate.error.actor.*` and `xstate.error.actor.todo.*` have to be considered too\n      nextSnapshot = cloneMachineSnapshot(snapshot, {\n        status: 'error',\n        error: currentEvent.error\n      });\n      addMicrostate(nextSnapshot, currentEvent, []);\n      return {\n        snapshot: nextSnapshot,\n        microstates\n      };\n    }\n    nextSnapshot = microstep(transitions, snapshot, actorScope, nextEvent, false,\n    // isInitial\n    internalQueue);\n    addMicrostate(nextSnapshot, currentEvent, transitions);\n  }\n  let shouldSelectEventlessTransitions = true;\n  while (nextSnapshot.status === 'active') {\n    let enabledTransitions = shouldSelectEventlessTransitions ? selectEventlessTransitions(nextSnapshot, nextEvent) : [];\n\n    // eventless transitions should always be selected after selecting *regular* transitions\n    // by assigning `undefined` to `previousState` we ensure that `shouldSelectEventlessTransitions` gets always computed to true in such a case\n    const previousState = enabledTransitions.length ? nextSnapshot : undefined;\n    if (!enabledTransitions.length) {\n      if (!internalQueue.length) {\n        break;\n      }\n      nextEvent = internalQueue.shift();\n      enabledTransitions = selectTransitions(nextEvent, nextSnapshot);\n    }\n    nextSnapshot = microstep(enabledTransitions, nextSnapshot, actorScope, nextEvent, false, internalQueue);\n    shouldSelectEventlessTransitions = nextSnapshot !== previousState;\n    addMicrostate(nextSnapshot, nextEvent, enabledTransitions);\n  }\n  if (nextSnapshot.status !== 'active') {\n    stopChildren(nextSnapshot, nextEvent, actorScope);\n  }\n  return {\n    snapshot: nextSnapshot,\n    microstates\n  };\n}\nfunction stopChildren(nextState, event, actorScope) {\n  return resolveActionsAndContext(nextState, event, actorScope, Object.values(nextState.children).map(child => stopChild(child)), [], undefined);\n}\nfunction selectTransitions(event, nextState) {\n  return nextState.machine.getTransitionData(nextState, event);\n}\nfunction selectEventlessTransitions(nextState, event) {\n  const enabledTransitionSet = new Set();\n  const atomicStates = nextState._nodes.filter(isAtomicStateNode);\n  for (const stateNode of atomicStates) {\n    loop: for (const s of [stateNode].concat(getProperAncestors(stateNode, undefined))) {\n      if (!s.always) {\n        continue;\n      }\n      for (const transition of s.always) {\n        if (transition.guard === undefined || evaluateGuard(transition.guard, nextState.context, event, nextState)) {\n          enabledTransitionSet.add(transition);\n          break loop;\n        }\n      }\n    }\n  }\n  return removeConflictingTransitions(Array.from(enabledTransitionSet), new Set(nextState._nodes), nextState.historyValue);\n}\n\n/**\n * Resolves a partial state value with its full representation in the state\n * node's machine.\n *\n * @param stateValue The partial state value to resolve.\n */\nfunction resolveStateValue(rootNode, stateValue) {\n  const allStateNodes = getAllStateNodes(getStateNodes(rootNode, stateValue));\n  return getStateValue(rootNode, [...allStateNodes]);\n}\n\nfunction isMachineSnapshot(value) {\n  return !!value && typeof value === 'object' && 'machine' in value && 'value' in value;\n}\nconst machineSnapshotMatches = function matches(testValue) {\n  return matchesState(testValue, this.value);\n};\nconst machineSnapshotHasTag = function hasTag(tag) {\n  return this.tags.has(tag);\n};\nconst machineSnapshotCan = function can(event) {\n  if (!this.machine) {\n    console.warn(`state.can(...) used outside of a machine-created State object; this will always return false.`);\n  }\n  const transitionData = this.machine.getTransitionData(this, event);\n  return !!transitionData?.length &&\n  // Check that at least one transition is not forbidden\n  transitionData.some(t => t.target !== undefined || t.actions.length);\n};\nconst machineSnapshotToJSON = function toJSON() {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    getMeta,\n    toJSON,\n    can,\n    hasTag,\n    matches,\n    ...jsonValues\n  } = this;\n  return {\n    ...jsonValues,\n    tags: Array.from(tags)\n  };\n};\nconst machineSnapshotGetMeta = function getMeta() {\n  return this._nodes.reduce((acc, stateNode) => {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n    return acc;\n  }, {});\n};\nfunction createMachineSnapshot(config, machine) {\n  return {\n    status: config.status,\n    output: config.output,\n    error: config.error,\n    machine,\n    context: config.context,\n    _nodes: config._nodes,\n    value: getStateValue(machine.root, config._nodes),\n    tags: new Set(config._nodes.flatMap(sn => sn.tags)),\n    children: config.children,\n    historyValue: config.historyValue || {},\n    matches: machineSnapshotMatches,\n    hasTag: machineSnapshotHasTag,\n    can: machineSnapshotCan,\n    getMeta: machineSnapshotGetMeta,\n    toJSON: machineSnapshotToJSON\n  };\n}\nfunction cloneMachineSnapshot(snapshot, config = {}) {\n  return createMachineSnapshot({\n    ...snapshot,\n    ...config\n  }, snapshot.machine);\n}\nfunction getPersistedSnapshot(snapshot, options) {\n  const {\n    _nodes: nodes,\n    tags,\n    machine,\n    children,\n    context,\n    can,\n    hasTag,\n    matches,\n    getMeta,\n    toJSON,\n    ...jsonValues\n  } = snapshot;\n  const childrenJson = {};\n  for (const id in children) {\n    const child = children[id];\n    if (typeof child.src !== 'string' && (!options || !('__unsafeAllowInlineActors' in options))) {\n      throw new Error('An inline child actor cannot be persisted.');\n    }\n    childrenJson[id] = {\n      snapshot: child.getPersistedSnapshot(options),\n      src: child.src,\n      systemId: child._systemId,\n      syncSnapshot: child._syncSnapshot\n    };\n  }\n  const persisted = {\n    ...jsonValues,\n    context: persistContext(context),\n    children: childrenJson\n  };\n  return persisted;\n}\nfunction persistContext(contextPart) {\n  let copy;\n  for (const key in contextPart) {\n    const value = contextPart[key];\n    if (value && typeof value === 'object') {\n      if ('sessionId' in value && 'send' in value && 'ref' in value) {\n        copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n          ...contextPart\n        };\n        copy[key] = {\n          xstate$$type: $$ACTOR_TYPE,\n          id: value.id\n        };\n      } else {\n        const result = persistContext(value);\n        if (result !== value) {\n          copy ??= Array.isArray(contextPart) ? contextPart.slice() : {\n            ...contextPart\n          };\n          copy[key] = result;\n        }\n      }\n    }\n  }\n  return copy ?? contextPart;\n}\n\nfunction resolveRaise(_, snapshot, args, actionParams, {\n  event: eventOrExpr,\n  id,\n  delay\n}, {\n  internalQueue\n}) {\n  const delaysMap = snapshot.machine.implementations.delays;\n  if (typeof eventOrExpr === 'string') {\n    throw new Error(\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    `Only event objects may be used with raise; use raise({ type: \"${eventOrExpr}\" }) instead`);\n  }\n  const resolvedEvent = typeof eventOrExpr === 'function' ? eventOrExpr(args, actionParams) : eventOrExpr;\n  let resolvedDelay;\n  if (typeof delay === 'string') {\n    const configDelay = delaysMap && delaysMap[delay];\n    resolvedDelay = typeof configDelay === 'function' ? configDelay(args, actionParams) : configDelay;\n  } else {\n    resolvedDelay = typeof delay === 'function' ? delay(args, actionParams) : delay;\n  }\n  if (typeof resolvedDelay !== 'number') {\n    internalQueue.push(resolvedEvent);\n  }\n  return [snapshot, {\n    event: resolvedEvent,\n    id,\n    delay: resolvedDelay\n  }, undefined];\n}\nfunction executeRaise(actorScope, params) {\n  const {\n    event,\n    delay,\n    id\n  } = params;\n  if (typeof delay === 'number') {\n    actorScope.defer(() => {\n      const self = actorScope.self;\n      actorScope.system.scheduler.schedule(self, self, event, delay, id);\n    });\n    return;\n  }\n}\n/**\n * Raises an event. This places the event in the internal event queue, so that\n * the event is immediately consumed by the machine in the current step.\n *\n * @param eventType The event to raise.\n */\nfunction raise(eventOrExpr, options) {\n  if (executingCustomAction) {\n    console.warn('Custom actions should not call `raise()` directly, as it is not imperative. See https://stately.ai/docs/actions#built-in-actions for more details.');\n  }\n  function raise(_args, _params) {\n    {\n      throw new Error(`This isn't supposed to be called`);\n    }\n  }\n  raise.type = 'xstate.raise';\n  raise.event = eventOrExpr;\n  raise.id = options?.id;\n  raise.delay = options?.delay;\n  raise.resolve = resolveRaise;\n  raise.execute = executeRaise;\n  return raise;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/xstate/dist/xstate.development.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Actor: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.B),\n/* harmony export */   SimulatedClock: () => (/* binding */ SimulatedClock),\n/* harmony export */   SpecialTargets: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.S),\n/* harmony export */   StateMachine: () => (/* binding */ StateMachine),\n/* harmony export */   StateNode: () => (/* binding */ StateNode),\n/* harmony export */   __unsafe_getAllOwnEventDescriptors: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.I),\n/* harmony export */   and: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.D),\n/* harmony export */   assertEvent: () => (/* binding */ assertEvent),\n/* harmony export */   assign: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.a),\n/* harmony export */   cancel: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.M),\n/* harmony export */   createActor: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A),\n/* harmony export */   createEmptyActor: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.createEmptyActor),\n/* harmony export */   createMachine: () => (/* binding */ createMachine),\n/* harmony export */   emit: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.e),\n/* harmony export */   enqueueActions: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.b),\n/* harmony export */   forwardTo: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.f),\n/* harmony export */   fromCallback: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromCallback),\n/* harmony export */   fromEventObservable: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromEventObservable),\n/* harmony export */   fromObservable: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromObservable),\n/* harmony export */   fromPromise: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromPromise),\n/* harmony export */   fromTransition: () => (/* reexport safe */ _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__.fromTransition),\n/* harmony export */   getInitialSnapshot: () => (/* binding */ getInitialSnapshot),\n/* harmony export */   getNextSnapshot: () => (/* binding */ getNextSnapshot),\n/* harmony export */   getStateNodes: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j),\n/* harmony export */   initialTransition: () => (/* binding */ initialTransition),\n/* harmony export */   interpret: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.C),\n/* harmony export */   isMachineSnapshot: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.H),\n/* harmony export */   log: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.l),\n/* harmony export */   matchesState: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.J),\n/* harmony export */   not: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.E),\n/* harmony export */   or: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.F),\n/* harmony export */   pathToStateValue: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.K),\n/* harmony export */   raise: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.O),\n/* harmony export */   sendParent: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.s),\n/* harmony export */   sendTo: () => (/* reexport safe */ _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.c),\n/* harmony export */   setup: () => (/* binding */ setup),\n/* harmony export */   spawnChild: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.P),\n/* harmony export */   stateIn: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.G),\n/* harmony export */   stop: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.Q),\n/* harmony export */   stopChild: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.R),\n/* harmony export */   toObserver: () => (/* reexport safe */ _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.L),\n/* harmony export */   toPromise: () => (/* binding */ toPromise),\n/* harmony export */   transition: () => (/* binding */ transition),\n/* harmony export */   waitFor: () => (/* binding */ waitFor)\n/* harmony export */ });\n/* harmony import */ var _actors_dist_xstate_actors_development_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../actors/dist/xstate-actors.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./raise-1db27a82.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var _log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./log-ef30c65f.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dist/log-ef30c65f.development.esm.js\");\n/* harmony import */ var _dev_dist_xstate_dev_development_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dev/dist/xstate-dev.development.esm.js */ \"(app-pages-browser)/./node_modules/xstate/dev/dist/xstate-dev.development.esm.js\");\n\n\n\n\n\n\n\n/**\n * Asserts that the given event object is of the specified type or types. Throws\n * an error if the event object is not of the specified types.\n *\n * @example\n *\n * ```ts\n * // ...\n * entry: ({ event }) => {\n *   assertEvent(event, 'doNothing');\n *   // event is { type: 'doNothing' }\n * },\n * // ...\n * exit: ({ event }) => {\n *   assertEvent(event, 'greet');\n *   // event is { type: 'greet'; message: string }\n *\n *   assertEvent(event, ['greet', 'notify']);\n *   // event is { type: 'greet'; message: string }\n *   // or { type: 'notify'; message: string; level: 'info' | 'error' }\n * },\n * ```\n */\nfunction assertEvent(event, type) {\n  const types = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(type);\n  if (!types.includes(event.type)) {\n    const typesText = types.length === 1 ? `type \"${types[0]}\"` : `one of types \"${types.join('\", \"')}\"`;\n    throw new Error(`Expected event ${JSON.stringify(event)} to have ${typesText}`);\n  }\n}\n\nconst cache = new WeakMap();\nfunction memo(object, key, fn) {\n  let memoizedData = cache.get(object);\n  if (!memoizedData) {\n    memoizedData = {\n      [key]: fn()\n    };\n    cache.set(object, memoizedData);\n  } else if (!(key in memoizedData)) {\n    memoizedData[key] = fn();\n  }\n  return memoizedData[key];\n}\n\nconst EMPTY_OBJECT = {};\nconst toSerializableAction = action => {\n  if (typeof action === 'string') {\n    return {\n      type: action\n    };\n  }\n  if (typeof action === 'function') {\n    if ('resolve' in action) {\n      return {\n        type: action.type\n      };\n    }\n    return {\n      type: action.name\n    };\n  }\n  return action;\n};\nclass StateNode {\n  constructor(/** The raw config used to create the machine. */\n  config, options) {\n    this.config = config;\n    /**\n     * The relative key of the state node, which represents its location in the\n     * overall state value.\n     */\n    this.key = void 0;\n    /** The unique ID of the state node. */\n    this.id = void 0;\n    /**\n     * The type of this state node:\n     *\n     * - `'atomic'` - no child state nodes\n     * - `'compound'` - nested child state nodes (XOR)\n     * - `'parallel'` - orthogonal nested child state nodes (AND)\n     * - `'history'` - history state node\n     * - `'final'` - final state node\n     */\n    this.type = void 0;\n    /** The string path from the root machine node to this node. */\n    this.path = void 0;\n    /** The child state nodes. */\n    this.states = void 0;\n    /**\n     * The type of history on this state node. Can be:\n     *\n     * - `'shallow'` - recalls only top-level historical state value\n     * - `'deep'` - recalls historical state value at all levels\n     */\n    this.history = void 0;\n    /** The action(s) to be executed upon entering the state node. */\n    this.entry = void 0;\n    /** The action(s) to be executed upon exiting the state node. */\n    this.exit = void 0;\n    /** The parent state node. */\n    this.parent = void 0;\n    /** The root machine node. */\n    this.machine = void 0;\n    /**\n     * The meta data associated with this state node, which will be returned in\n     * State instances.\n     */\n    this.meta = void 0;\n    /**\n     * The output data sent with the \"xstate.done.state._id_\" event if this is a\n     * final state node.\n     */\n    this.output = void 0;\n    /**\n     * The order this state node appears. Corresponds to the implicit document\n     * order.\n     */\n    this.order = -1;\n    this.description = void 0;\n    this.tags = [];\n    this.transitions = void 0;\n    this.always = void 0;\n    this.parent = options._parent;\n    this.key = options._key;\n    this.machine = options._machine;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.id = this.config.id || [this.machine.id, ...this.path].join(_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.S);\n    this.type = this.config.type || (this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.description = this.config.description;\n    this.order = this.machine.idMap.size;\n    this.machine.idMap.set(this.id, this);\n    this.states = this.config.states ? (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.config.states, (stateConfig, key) => {\n      const stateNode = new StateNode(stateConfig, {\n        _parent: this,\n        _key: key,\n        _machine: this.machine\n      });\n      return stateNode;\n    }) : EMPTY_OBJECT;\n    if (this.type === 'compound' && !this.config.initial) {\n      throw new Error(`No initial state specified for compound state node \"#${this.id}\". Try adding { initial: \"${Object.keys(this.states)[0]}\" } to the state config.`);\n    }\n\n    // History config\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this.entry = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.entry).slice();\n    this.exit = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.exit).slice();\n    this.meta = this.config.meta;\n    this.output = this.type === 'final' || !this.parent ? this.config.output : undefined;\n    this.tags = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(config.tags).slice();\n  }\n\n  /** @internal */\n  _initialize() {\n    this.transitions = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.f)(this);\n    if (this.config.always) {\n      this.always = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.a)(this.config.always).map(t => (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.b)(this, _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.N, t));\n    }\n    Object.keys(this.states).forEach(key => {\n      this.states[key]._initialize();\n    });\n  }\n\n  /** The well-structured state node definition. */\n  get definition() {\n    return {\n      id: this.id,\n      key: this.key,\n      version: this.machine.version,\n      type: this.type,\n      initial: this.initial ? {\n        target: this.initial.target,\n        source: this,\n        actions: this.initial.actions.map(toSerializableAction),\n        eventType: null,\n        reenter: false,\n        toJSON: () => ({\n          target: this.initial.target.map(t => `#${t.id}`),\n          source: `#${this.id}`,\n          actions: this.initial.actions.map(toSerializableAction),\n          eventType: null\n        })\n      } : undefined,\n      history: this.history,\n      states: (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.m)(this.states, state => {\n        return state.definition;\n      }),\n      on: this.on,\n      transitions: [...this.transitions.values()].flat().map(t => ({\n        ...t,\n        actions: t.actions.map(toSerializableAction)\n      })),\n      entry: this.entry.map(toSerializableAction),\n      exit: this.exit.map(toSerializableAction),\n      meta: this.meta,\n      order: this.order || -1,\n      output: this.output,\n      invoke: this.invoke,\n      description: this.description,\n      tags: this.tags\n    };\n  }\n\n  /** @internal */\n  toJSON() {\n    return this.definition;\n  }\n\n  /** The logic invoked as actors by this state node. */\n  get invoke() {\n    return memo(this, 'invoke', () => (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.t)(this.config.invoke).map((invokeConfig, i) => {\n      const {\n        src,\n        systemId\n      } = invokeConfig;\n      const resolvedId = invokeConfig.id ?? (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.id, i);\n      const sourceName = typeof src === 'string' ? src : `xstate.invoke.${(0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.c)(this.id, i)}`;\n      return {\n        ...invokeConfig,\n        src: sourceName,\n        id: resolvedId,\n        systemId: systemId,\n        toJSON() {\n          const {\n            onDone,\n            onError,\n            ...invokeDefValues\n          } = invokeConfig;\n          return {\n            ...invokeDefValues,\n            type: 'xstate.invoke',\n            src: sourceName,\n            id: resolvedId\n          };\n        }\n      };\n    }));\n  }\n\n  /** The mapping of events to transitions. */\n  get on() {\n    return memo(this, 'on', () => {\n      const transitions = this.transitions;\n      return [...transitions].flatMap(([descriptor, t]) => t.map(t => [descriptor, t])).reduce((map, [descriptor, transition]) => {\n        map[descriptor] = map[descriptor] || [];\n        map[descriptor].push(transition);\n        return map;\n      }, {});\n    });\n  }\n  get after() {\n    return memo(this, 'delayedTransitions', () => (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(this));\n  }\n  get initial() {\n    return memo(this, 'initial', () => (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(this, this.config.initial));\n  }\n\n  /** @internal */\n  next(snapshot, event) {\n    const eventType = event.type;\n    const actions = [];\n    let selectedTransition;\n    const candidates = memo(this, `candidates-${eventType}`, () => (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.h)(this, eventType));\n    for (const candidate of candidates) {\n      const {\n        guard\n      } = candidate;\n      const resolvedContext = snapshot.context;\n      let guardPassed = false;\n      try {\n        guardPassed = !guard || (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.e)(guard, resolvedContext, event, snapshot);\n      } catch (err) {\n        const guardType = typeof guard === 'string' ? guard : typeof guard === 'object' ? guard.type : undefined;\n        throw new Error(`Unable to evaluate guard ${guardType ? `'${guardType}' ` : ''}in transition for event '${eventType}' in state node '${this.id}':\\n${err.message}`);\n      }\n      if (guardPassed) {\n        actions.push(...candidate.actions);\n        selectedTransition = candidate;\n        break;\n      }\n    }\n    return selectedTransition ? [selectedTransition] : undefined;\n  }\n\n  /** All the event types accepted by this state node and its descendants. */\n  get events() {\n    return memo(this, 'events', () => {\n      const {\n        states\n      } = this;\n      const events = new Set(this.ownEvents);\n      if (states) {\n        for (const stateId of Object.keys(states)) {\n          const state = states[stateId];\n          if (state.states) {\n            for (const event of state.events) {\n              events.add(`${event}`);\n            }\n          }\n        }\n      }\n      return Array.from(events);\n    });\n  }\n\n  /**\n   * All the events that have transitions directly from this state node.\n   *\n   * Excludes any inert events.\n   */\n  get ownEvents() {\n    const events = new Set([...this.transitions.keys()].filter(descriptor => {\n      return this.transitions.get(descriptor).some(transition => !(!transition.target && !transition.actions.length && !transition.reenter));\n    }));\n    return Array.from(events);\n  }\n}\n\nconst STATE_IDENTIFIER = '#';\nclass StateMachine {\n  constructor(/** The raw config used to create the machine. */\n  config, implementations) {\n    this.config = config;\n    /** The machine's own version. */\n    this.version = void 0;\n    this.schemas = void 0;\n    this.implementations = void 0;\n    /** @internal */\n    this.__xstatenode = true;\n    /** @internal */\n    this.idMap = new Map();\n    this.root = void 0;\n    this.id = void 0;\n    this.states = void 0;\n    this.events = void 0;\n    this.id = config.id || '(machine)';\n    this.implementations = {\n      actors: implementations?.actors ?? {},\n      actions: implementations?.actions ?? {},\n      delays: implementations?.delays ?? {},\n      guards: implementations?.guards ?? {}\n    };\n    this.version = this.config.version;\n    this.schemas = this.config.schemas;\n    this.transition = this.transition.bind(this);\n    this.getInitialSnapshot = this.getInitialSnapshot.bind(this);\n    this.getPersistedSnapshot = this.getPersistedSnapshot.bind(this);\n    this.restoreSnapshot = this.restoreSnapshot.bind(this);\n    this.start = this.start.bind(this);\n    this.root = new StateNode(config, {\n      _key: this.id,\n      _machine: this\n    });\n    this.root._initialize();\n    this.states = this.root.states; // TODO: remove!\n    this.events = this.root.events;\n    if (!('output' in this.root) && Object.values(this.states).some(state => state.type === 'final' && 'output' in state)) {\n      console.warn('Missing `machine.output` declaration (top-level final state with output detected)');\n    }\n  }\n\n  /**\n   * Clones this state machine with the provided implementations and merges the\n   * `context` (if provided).\n   *\n   * @param implementations Options (`actions`, `guards`, `actors`, `delays`,\n   *   `context`) to recursively merge with the existing options.\n   * @returns A new `StateMachine` instance with the provided implementations.\n   */\n  provide(implementations) {\n    const {\n      actions,\n      guards,\n      actors,\n      delays\n    } = this.implementations;\n    return new StateMachine(this.config, {\n      actions: {\n        ...actions,\n        ...implementations.actions\n      },\n      guards: {\n        ...guards,\n        ...implementations.guards\n      },\n      actors: {\n        ...actors,\n        ...implementations.actors\n      },\n      delays: {\n        ...delays,\n        ...implementations.delays\n      }\n    });\n  }\n  resolveState(config) {\n    const resolvedStateValue = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.r)(this.root, config.value);\n    const nodeSet = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.i)((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j)(this.root, resolvedStateValue));\n    return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      _nodes: [...nodeSet],\n      context: config.context || {},\n      children: {},\n      status: (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.l)(nodeSet, this.root) ? 'done' : config.status || 'active',\n      output: config.output,\n      error: config.error,\n      historyValue: config.historyValue\n    }, this);\n  }\n\n  /**\n   * Determines the next snapshot given the current `snapshot` and received\n   * `event`. Calculates a full macrostep from all microsteps.\n   *\n   * @param snapshot The current snapshot\n   * @param event The received event\n   */\n  transition(snapshot, event, actorScope) {\n    return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(snapshot, event, actorScope, []).snapshot;\n  }\n\n  /**\n   * Determines the next state given the current `state` and `event`. Calculates\n   * a microstep.\n   *\n   * @param state The current state\n   * @param event The received event\n   */\n  microstep(snapshot, event, actorScope) {\n    return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(snapshot, event, actorScope, []).microstates;\n  }\n  getTransitionData(snapshot, event) {\n    return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.o)(this.root, snapshot.value, snapshot, event) || [];\n  }\n\n  /**\n   * The initial state _before_ evaluating any microsteps. This \"pre-initial\"\n   * state is provided to initial actions executed in the initial state.\n   */\n  getPreInitialState(actorScope, initEvent, internalQueue) {\n    const {\n      context\n    } = this.config;\n    const preInitial = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      context: typeof context !== 'function' && context ? context : {},\n      _nodes: [this.root],\n      children: {},\n      status: 'active'\n    }, this);\n    if (typeof context === 'function') {\n      const assignment = ({\n        spawn,\n        event,\n        self\n      }) => context({\n        spawn,\n        input: event.input,\n        self\n      });\n      return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.p)(preInitial, initEvent, actorScope, [(0,_log_ef30c65f_development_esm_js__WEBPACK_IMPORTED_MODULE_2__.a)(assignment)], internalQueue, undefined);\n    }\n    return preInitial;\n  }\n\n  /**\n   * Returns the initial `State` instance, with reference to `self` as an\n   * `ActorRef`.\n   */\n  getInitialSnapshot(actorScope, input) {\n    const initEvent = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.q)(input); // TODO: fix;\n    const internalQueue = [];\n    const preInitialState = this.getPreInitialState(actorScope, initEvent, internalQueue);\n    const nextState = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.s)([{\n      target: [...(0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.u)(this.root)],\n      source: this.root,\n      reenter: true,\n      actions: [],\n      eventType: null,\n      toJSON: null // TODO: fix\n    }], preInitialState, actorScope, initEvent, true, internalQueue);\n    const {\n      snapshot: macroState\n    } = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.n)(nextState, initEvent, actorScope, internalQueue);\n    return macroState;\n  }\n  start(snapshot) {\n    Object.values(snapshot.children).forEach(child => {\n      if (child.getSnapshot().status === 'active') {\n        child.start();\n      }\n    });\n  }\n  getStateNodeById(stateId) {\n    const fullPath = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.v)(stateId);\n    const relativePath = fullPath.slice(1);\n    const resolvedStateId = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.w)(fullPath[0]) ? fullPath[0].slice(STATE_IDENTIFIER.length) : fullPath[0];\n    const stateNode = this.idMap.get(resolvedStateId);\n    if (!stateNode) {\n      throw new Error(`Child state node '#${resolvedStateId}' does not exist on machine '${this.id}'`);\n    }\n    return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.x)(stateNode, relativePath);\n  }\n  get definition() {\n    return this.root.definition;\n  }\n  toJSON() {\n    return this.definition;\n  }\n  getPersistedSnapshot(snapshot, options) {\n    return (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.y)(snapshot, options);\n  }\n  restoreSnapshot(snapshot, _actorScope) {\n    const children = {};\n    const snapshotChildren = snapshot.children;\n    Object.keys(snapshotChildren).forEach(actorId => {\n      const actorData = snapshotChildren[actorId];\n      const childState = actorData.snapshot;\n      const src = actorData.src;\n      const logic = typeof src === 'string' ? (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.z)(this, src) : src;\n      if (!logic) {\n        return;\n      }\n      const actorRef = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(logic, {\n        id: actorId,\n        parent: _actorScope.self,\n        syncSnapshot: actorData.syncSnapshot,\n        snapshot: childState,\n        src,\n        systemId: actorData.systemId\n      });\n      children[actorId] = actorRef;\n    });\n    const restoredSnapshot = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.k)({\n      ...snapshot,\n      children,\n      _nodes: Array.from((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.i)((0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.j)(this.root, snapshot.value)))\n    }, this);\n    const seen = new Set();\n    function reviveContext(contextPart, children) {\n      if (seen.has(contextPart)) {\n        return;\n      }\n      seen.add(contextPart);\n      for (const key in contextPart) {\n        const value = contextPart[key];\n        if (value && typeof value === 'object') {\n          if ('xstate$$type' in value && value.xstate$$type === _raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.$) {\n            contextPart[key] = children[value.id];\n            continue;\n          }\n          reviveContext(value, children);\n        }\n      }\n    }\n    reviveContext(restoredSnapshot.context, children);\n    return restoredSnapshot;\n  }\n}\n\n/**\n * Creates a state machine (statechart) with the given configuration.\n *\n * The state machine represents the pure logic of a state machine actor.\n *\n * @example\n *\n * ```ts\n * import { createMachine } from 'xstate';\n *\n * const lightMachine = createMachine({\n *   id: 'light',\n *   initial: 'green',\n *   states: {\n *     green: {\n *       on: {\n *         TIMER: { target: 'yellow' }\n *       }\n *     },\n *     yellow: {\n *       on: {\n *         TIMER: { target: 'red' }\n *       }\n *     },\n *     red: {\n *       on: {\n *         TIMER: { target: 'green' }\n *       }\n *     }\n *   }\n * });\n *\n * const lightActor = createActor(lightMachine);\n * lightActor.start();\n *\n * lightActor.send({ type: 'TIMER' });\n * ```\n *\n * @param config The state machine configuration.\n * @param options DEPRECATED: use `setup({ ... })` or `machine.provide({ ... })`\n *   to provide machine implementations instead.\n */\nfunction createMachine(config, implementations) {\n  return new StateMachine(config, implementations);\n}\n\n/** @internal */\nfunction createInertActorScope(actorLogic) {\n  const self = (0,_raise_1db27a82_development_esm_js__WEBPACK_IMPORTED_MODULE_1__.A)(actorLogic);\n  const inertActorScope = {\n    self,\n    defer: () => {},\n    id: '',\n    logger: () => {},\n    sessionId: '',\n    stopChild: () => {},\n    system: self.system,\n    emit: () => {},\n    actionExecutor: () => {}\n  };\n  return inertActorScope;\n}\n\n/** @deprecated Use `initialTransition(…)` instead. */\nfunction getInitialSnapshot(actorLogic, ...[input]) {\n  const actorScope = createInertActorScope(actorLogic);\n  return actorLogic.getInitialSnapshot(actorScope, input);\n}\n\n/**\n * Determines the next snapshot for the given `actorLogic` based on the given\n * `snapshot` and `event`.\n *\n * If the `snapshot` is `undefined`, the initial snapshot of the `actorLogic` is\n * used.\n *\n * @deprecated Use `transition(…)` instead.\n * @example\n *\n * ```ts\n * import { getNextSnapshot } from 'xstate';\n * import { trafficLightMachine } from './trafficLightMachine.ts';\n *\n * const nextSnapshot = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   undefined, // snapshot (or initial state if undefined)\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot.value);\n * // => 'yellow'\n *\n * const nextSnapshot2 = getNextSnapshot(\n *   trafficLightMachine, // actor logic\n *   nextSnapshot, // snapshot\n *   { type: 'TIMER' }\n * ); // event object\n *\n * console.log(nextSnapshot2.value);\n * // =>'red'\n * ```\n */\nfunction getNextSnapshot(actorLogic, snapshot, event) {\n  const inertActorScope = createInertActorScope(actorLogic);\n  inertActorScope.self._snapshot = snapshot;\n  return actorLogic.transition(snapshot, event, inertActorScope);\n}\n\n// at the moment we allow extra actors - ones that are not specified by `children`\n// this could be reconsidered in the future\n\nfunction setup({\n  schemas,\n  actors,\n  actions,\n  guards,\n  delays\n}) {\n  return {\n    createMachine: config => createMachine({\n      ...config,\n      schemas\n    }, {\n      actors,\n      actions,\n      guards,\n      delays\n    })\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\n\n// eslint-disable-next-line @typescript-eslint/no-unsafe-declaration-merging\nclass SimulatedClock {\n  constructor() {\n    this.timeouts = new Map();\n    this._now = 0;\n    this._id = 0;\n    this._flushing = false;\n    this._flushingInvalidated = false;\n  }\n  now() {\n    return this._now;\n  }\n  getId() {\n    return this._id++;\n  }\n  setTimeout(fn, timeout) {\n    this._flushingInvalidated = this._flushing;\n    const id = this.getId();\n    this.timeouts.set(id, {\n      start: this.now(),\n      timeout,\n      fn\n    });\n    return id;\n  }\n  clearTimeout(id) {\n    this._flushingInvalidated = this._flushing;\n    this.timeouts.delete(id);\n  }\n  set(time) {\n    if (this._now > time) {\n      throw new Error('Unable to travel back in time');\n    }\n    this._now = time;\n    this.flushTimeouts();\n  }\n  flushTimeouts() {\n    if (this._flushing) {\n      this._flushingInvalidated = true;\n      return;\n    }\n    this._flushing = true;\n    const sorted = [...this.timeouts].sort(([_idA, timeoutA], [_idB, timeoutB]) => {\n      const endA = timeoutA.start + timeoutA.timeout;\n      const endB = timeoutB.start + timeoutB.timeout;\n      return endB > endA ? -1 : 1;\n    });\n    for (const [id, timeout] of sorted) {\n      if (this._flushingInvalidated) {\n        this._flushingInvalidated = false;\n        this._flushing = false;\n        this.flushTimeouts();\n        return;\n      }\n      if (this.now() - timeout.start >= timeout.timeout) {\n        this.timeouts.delete(id);\n        timeout.fn.call(null);\n      }\n    }\n    this._flushing = false;\n  }\n  increment(ms) {\n    this._now += ms;\n    this.flushTimeouts();\n  }\n}\n\n/**\n * Returns a promise that resolves to the `output` of the actor when it is done.\n *\n * @example\n *\n * ```ts\n * const machine = createMachine({\n *   // ...\n *   output: {\n *     count: 42\n *   }\n * });\n *\n * const actor = createActor(machine);\n *\n * actor.start();\n *\n * const output = await toPromise(actor);\n *\n * console.log(output);\n * // logs { count: 42 }\n * ```\n */\nfunction toPromise(actor) {\n  return new Promise((resolve, reject) => {\n    actor.subscribe({\n      complete: () => {\n        resolve(actor.getSnapshot().output);\n      },\n      error: reject\n    });\n  });\n}\n\n/**\n * Given actor `logic`, a `snapshot`, and an `event`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute.\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction transition(logic, snapshot, event) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.transition(snapshot, event, actorScope);\n  return [nextSnapshot, executableActions];\n}\n\n/**\n * Given actor `logic` and optional `input`, returns a tuple of the\n * `nextSnapshot` and `actions` to execute from the initial transition (no\n * previous state).\n *\n * This is a pure function that does not execute `actions`.\n */\nfunction initialTransition(logic, ...[input]) {\n  const executableActions = [];\n  const actorScope = createInertActorScope(logic);\n  actorScope.actionExecutor = action => {\n    executableActions.push(action);\n  };\n  const nextSnapshot = logic.getInitialSnapshot(actorScope, input);\n  return [nextSnapshot, executableActions];\n}\n\nconst defaultWaitForOptions = {\n  timeout: Infinity // much more than 10 seconds\n};\n\n/**\n * Subscribes to an actor ref and waits for its emitted value to satisfy a\n * predicate, and then resolves with that value. Will throw if the desired state\n * is not reached after an optional timeout. (defaults to Infinity).\n *\n * @example\n *\n * ```js\n * const state = await waitFor(someService, (state) => {\n *   return state.hasTag('loaded');\n * });\n *\n * state.hasTag('loaded'); // true\n * ```\n *\n * @param actorRef The actor ref to subscribe to\n * @param predicate Determines if a value matches the condition to wait for\n * @param options\n * @returns A promise that eventually resolves to the emitted value that matches\n *   the condition\n */\nfunction waitFor(actorRef, predicate, options) {\n  const resolvedOptions = {\n    ...defaultWaitForOptions,\n    ...options\n  };\n  return new Promise((res, rej) => {\n    const {\n      signal\n    } = resolvedOptions;\n    if (signal?.aborted) {\n      // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n      rej(signal.reason);\n      return;\n    }\n    let done = false;\n    if (resolvedOptions.timeout < 0) {\n      console.error('`timeout` passed to `waitFor` is negative and it will reject its internal promise immediately.');\n    }\n    const handle = resolvedOptions.timeout === Infinity ? undefined : setTimeout(() => {\n      dispose();\n      rej(new Error(`Timeout of ${resolvedOptions.timeout} ms exceeded`));\n    }, resolvedOptions.timeout);\n    const dispose = () => {\n      clearTimeout(handle);\n      done = true;\n      sub?.unsubscribe();\n      if (abortListener) {\n        signal.removeEventListener('abort', abortListener);\n      }\n    };\n    function checkEmitted(emitted) {\n      if (predicate(emitted)) {\n        dispose();\n        res(emitted);\n      }\n    }\n\n    /**\n     * If the `signal` option is provided, this will be the listener for its\n     * `abort` event\n     */\n    let abortListener;\n    // eslint-disable-next-line prefer-const\n    let sub; // avoid TDZ when disposing synchronously\n\n    // See if the current snapshot already matches the predicate\n    checkEmitted(actorRef.getSnapshot());\n    if (done) {\n      return;\n    }\n\n    // only define the `abortListener` if the `signal` option is provided\n    if (signal) {\n      abortListener = () => {\n        dispose();\n        // XState does not \"own\" the signal, so we should reject with its reason (if any)\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(signal.reason);\n      };\n      signal.addEventListener('abort', abortListener);\n    }\n    sub = actorRef.subscribe({\n      next: checkEmitted,\n      error: err => {\n        dispose();\n        // eslint-disable-next-line @typescript-eslint/prefer-promise-reject-errors\n        rej(err);\n      },\n      complete: () => {\n        dispose();\n        rej(new Error(`Actor terminated without satisfying predicate`));\n      }\n    });\n    if (done) {\n      sub.unsubscribe();\n    }\n  });\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DRAFTS_PREFIX: () => (/* binding */ DRAFTS_PREFIX),\n/* harmony export */   createEditUrl: () => (/* binding */ createEditUrl),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   getPublishedId: () => (/* binding */ getPublishedId),\n/* harmony export */   jsonPath: () => (/* binding */ jsonPath),\n/* harmony export */   jsonPathToStudioPath: () => (/* binding */ jsonPathToStudioPath),\n/* harmony export */   parseJsonPath: () => (/* binding */ parseJsonPath),\n/* harmony export */   reKeySegment: () => (/* binding */ reKeySegment),\n/* harmony export */   resolveEditInfo: () => (/* binding */ resolveEditInfo),\n/* harmony export */   resolveMapping: () => (/* binding */ resolveMapping),\n/* harmony export */   resolveStudioBaseRoute: () => (/* binding */ resolveStudioBaseRoute),\n/* harmony export */   studioPath: () => (/* binding */ studioPath),\n/* harmony export */   studioPathToJsonPath: () => (/* binding */ studioPathToJsonPath),\n/* harmony export */   toString: () => (/* binding */ toString),\n/* harmony export */   walkMap: () => (/* binding */ walkMap)\n/* harmony export */ });\nconst rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/, reIndexTuple = /^\\d*:\\d*$/;\nfunction isIndexSegment(segment) {\n  return typeof segment == \"number\" || typeof segment == \"string\" && /^\\[\\d+\\]$/.test(segment);\n}\nfunction isKeySegment(segment) {\n  return typeof segment == \"string\" ? reKeySegment.test(segment.trim()) : typeof segment == \"object\" && \"_key\" in segment;\n}\nfunction isIndexTuple(segment) {\n  if (typeof segment == \"string\" && reIndexTuple.test(segment))\n    return !0;\n  if (!Array.isArray(segment) || segment.length !== 2)\n    return !1;\n  const [from, to] = segment;\n  return (typeof from == \"number\" || from === \"\") && (typeof to == \"number\" || to === \"\");\n}\nfunction get(obj, path, defaultVal) {\n  const select = typeof path == \"string\" ? fromString(path) : path;\n  if (!Array.isArray(select))\n    throw new Error(\"Path must be an array or a string\");\n  let acc = obj;\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i];\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc[segment];\n    }\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc))\n        return defaultVal;\n      acc = acc.find((item) => item._key === segment._key);\n    }\n    if (typeof segment == \"string\" && (acc = typeof acc == \"object\" && acc !== null ? acc[segment] : void 0), typeof acc > \"u\")\n      return defaultVal;\n  }\n  return acc;\n}\nfunction toString(path) {\n  if (!Array.isArray(path))\n    throw new Error(\"Path is not an array\");\n  return path.reduce((target, segment, i) => {\n    const segmentType = typeof segment;\n    if (segmentType === \"number\")\n      return `${target}[${segment}]`;\n    if (segmentType === \"string\")\n      return `${target}${i === 0 ? \"\" : \".\"}${segment}`;\n    if (isKeySegment(segment) && segment._key)\n      return `${target}[_key==\"${segment._key}\"]`;\n    if (Array.isArray(segment)) {\n      const [from, to] = segment;\n      return `${target}[${from}:${to}]`;\n    }\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``);\n  }, \"\");\n}\nfunction fromString(path) {\n  if (typeof path != \"string\")\n    throw new Error(\"Path is not a string\");\n  const segments = path.match(rePropName);\n  if (!segments)\n    throw new Error(\"Invalid path string\");\n  return segments.map(parsePathSegment);\n}\nfunction parsePathSegment(segment) {\n  return isIndexSegment(segment) ? parseIndexSegment(segment) : isKeySegment(segment) ? parseKeySegment(segment) : isIndexTuple(segment) ? parseIndexTupleSegment(segment) : segment;\n}\nfunction parseIndexSegment(segment) {\n  return Number(segment.replace(/[^\\d]/g, \"\"));\n}\nfunction parseKeySegment(segment) {\n  return { _key: segment.match(reKeySegment)[1] };\n}\nfunction parseIndexTupleSegment(segment) {\n  const [from, to] = segment.split(\":\").map((seg) => seg === \"\" ? seg : Number(seg));\n  return [from, to];\n}\nvar studioPath = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  fromString,\n  get,\n  isIndexSegment,\n  isIndexTuple,\n  isKeySegment,\n  reKeySegment,\n  toString\n});\nconst DRAFTS_PREFIX = \"drafts.\";\nfunction getPublishedId(id) {\n  return id.startsWith(DRAFTS_PREFIX) ? id.slice(DRAFTS_PREFIX.length) : id;\n}\nconst ESCAPE = {\n  \"\\f\": \"\\\\f\",\n  \"\\n\": \"\\\\n\",\n  \"\\r\": \"\\\\r\",\n  \"\t\": \"\\\\t\",\n  \"'\": \"\\\\'\",\n  \"\\\\\": \"\\\\\\\\\"\n}, UNESCAPE = {\n  \"\\\\f\": \"\\f\",\n  \"\\\\n\": `\n`,\n  \"\\\\r\": \"\\r\",\n  \"\\\\t\": \"\t\",\n  \"\\\\'\": \"'\",\n  \"\\\\\\\\\": \"\\\\\"\n};\nfunction jsonPath(path) {\n  return `$${path.map((segment) => typeof segment == \"string\" ? `['${segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => ESCAPE[match])}']` : typeof segment == \"number\" ? `[${segment}]` : segment._key !== \"\" ? `[?(@._key=='${segment._key.replace(/['\\\\]/g, (match) => ESCAPE[match])}')]` : `[${segment._index}]`).join(\"\")}`;\n}\nfunction parseJsonPath(path) {\n  const parsed = [], parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g;\n  let match;\n  for (; (match = parseRe.exec(path)) !== null; ) {\n    if (match[1] !== void 0) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => UNESCAPE[m]);\n      parsed.push(key);\n      continue;\n    }\n    if (match[2] !== void 0) {\n      parsed.push(parseInt(match[2], 10));\n      continue;\n    }\n    if (match[3] !== void 0) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => UNESCAPE[m]);\n      parsed.push({\n        _key,\n        _index: -1\n      });\n      continue;\n    }\n  }\n  return parsed;\n}\nfunction jsonPathToStudioPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._key !== \"\")\n      return { _key: segment._key };\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction studioPathToJsonPath(path) {\n  return (typeof path == \"string\" ? fromString(path) : path).map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (Array.isArray(segment))\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`);\n    if (isContentSourceMapParsedPathKeyedSegment(segment))\n      return segment;\n    if (segment._key)\n      return { _key: segment._key, _index: -1 };\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction isContentSourceMapParsedPathKeyedSegment(segment) {\n  return typeof segment == \"object\" && \"_key\" in segment && \"_index\" in segment;\n}\nfunction jsonPathToMappingPath(path) {\n  return path.map((segment) => {\n    if (typeof segment == \"string\" || typeof segment == \"number\")\n      return segment;\n    if (segment._index !== -1)\n      return segment._index;\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`);\n  });\n}\nfunction resolveMapping(resultPath, csm) {\n  if (!csm?.mappings)\n    return;\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath));\n  if (csm.mappings[resultMappingPath] !== void 0)\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: \"\"\n    };\n  const mappings = Object.entries(csm.mappings).filter(([key]) => resultMappingPath.startsWith(key)).sort(([key1], [key2]) => key2.length - key1.length);\n  if (mappings.length == 0)\n    return;\n  const [matchedPath, mapping] = mappings[0], pathSuffix = resultMappingPath.substring(matchedPath.length);\n  return { mapping, matchedPath, pathSuffix };\n}\nfunction isArray(value) {\n  return value !== null && Array.isArray(value);\n}\nfunction isRecord(value) {\n  return typeof value == \"object\" && value !== null;\n}\nfunction walkMap(value, mappingFn, path = []) {\n  if (isArray(value))\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v._key;\n        if (typeof _key == \"string\")\n          return walkMap(v, mappingFn, path.concat({ _key, _index: idx }));\n      }\n      return walkMap(v, mappingFn, path.concat(idx));\n    });\n  if (isRecord(value)) {\n    if (value._type === \"block\" || value._type === \"span\") {\n      const result = { ...value };\n      return value._type === \"block\" ? result.children = walkMap(value.children, mappingFn, path.concat(\"children\")) : value._type === \"span\" && (result.text = walkMap(value.text, mappingFn, path.concat(\"text\"))), result;\n    }\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))])\n    );\n  }\n  return mappingFn(value, path);\n}\nfunction createEditUrl(options) {\n  const {\n    baseUrl,\n    workspace: _workspace = \"default\",\n    tool: _tool = \"default\",\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset\n  } = options;\n  if (!baseUrl)\n    throw new Error(\"baseUrl is required\");\n  if (!path)\n    throw new Error(\"path is required\");\n  if (!_id)\n    throw new Error(\"id is required\");\n  if (baseUrl !== \"/\" && baseUrl.endsWith(\"/\"))\n    throw new Error(\"baseUrl must not end with a slash\");\n  const workspace = _workspace === \"default\" ? void 0 : _workspace, tool = _tool === \"default\" ? void 0 : _tool, id = getPublishedId(_id), stringifiedPath = Array.isArray(path) ? toString(jsonPathToStudioPath(path)) : path, searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath\n  });\n  workspace && searchParams.set(\"workspace\", workspace), tool && searchParams.set(\"tool\", tool), projectId && searchParams.set(\"projectId\", projectId), dataset && searchParams.set(\"dataset\", dataset), _id.startsWith(DRAFTS_PREFIX) && searchParams.set(\"isDraft\", \"\");\n  const segments = [baseUrl === \"/\" ? \"\" : baseUrl];\n  workspace && segments.push(workspace);\n  const routerParams = [\n    \"mode=presentation\",\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`\n  ];\n  return tool && routerParams.push(`tool=${tool}`), segments.push(\"intent\", \"edit\", `${routerParams.join(\";\")}?${searchParams}`), segments.join(\"/\");\n}\nfunction resolveEditInfo(options) {\n  const { resultSourceMap: csm, resultPath } = options, { mapping, pathSuffix } = resolveMapping(resultPath, csm) || {};\n  if (!mapping || mapping.source.type === \"literal\" || mapping.source.type === \"unknown\")\n    return;\n  const sourceDoc = csm.documents[mapping.source.document], sourcePath = csm.paths[mapping.source.path];\n  if (sourceDoc && sourcePath) {\n    const { baseUrl, workspace, tool } = resolveStudioBaseRoute(\n      typeof options.studioUrl == \"function\" ? options.studioUrl(sourceDoc) : options.studioUrl\n    );\n    if (!baseUrl)\n      return;\n    const { _id, _type, _projectId, _dataset } = sourceDoc;\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset\n    };\n  }\n}\nfunction resolveStudioBaseRoute(studioUrl) {\n  let baseUrl = typeof studioUrl == \"string\" ? studioUrl : studioUrl.baseUrl;\n  return baseUrl !== \"/\" && (baseUrl = baseUrl.replace(/\\/$/, \"\")), typeof studioUrl == \"string\" ? { baseUrl } : { ...studioUrl, baseUrl };\n}\n\n//# sourceMappingURL=resolveEditInfo.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L19jaHVua3MtZXMvcmVzb2x2ZUVkaXRJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsbUJBQW1CO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE9BQU8sR0FBRyxRQUFRO0FBQ2xDO0FBQ0EsZ0JBQWdCLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxRQUFRO0FBQ3REO0FBQ0EsZ0JBQWdCLE9BQU8sVUFBVSxhQUFhO0FBQzlDO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTyxHQUFHLEtBQUssR0FBRyxHQUFHO0FBQ3JDO0FBQ0Esa0RBQWtELHdCQUF3QjtBQUMxRSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0RBQXdELDREQUE0RCx1Q0FBdUMsUUFBUSwwQ0FBMEMseURBQXlELFdBQVcsZUFBZSxhQUFhO0FBQzFUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyx1Q0FBdUM7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0EsdUNBQXVDLHdCQUF3QjtBQUMvRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELHdCQUF3QjtBQUN0RjtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsdUNBQXVDLHdCQUF3QjtBQUMvRCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsd0JBQXdCO0FBQy9ELEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsbUJBQW1CO0FBQ3hFO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsR0FBRztBQUNiLFlBQVksS0FBSztBQUNqQixZQUFZLG9DQUFvQztBQUNoRDtBQUNBLDJDQUEyQyxLQUFLLHVDQUF1QyxvQkFBb0IsR0FBRyxHQUFHLGFBQWE7QUFDOUg7QUFDQTtBQUNBLFVBQVUsbUNBQW1DLGFBQWEsc0JBQXNCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwyQkFBMkI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1DQUFtQztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUdBQXFHLFVBQVUsSUFBSTtBQUNuSDtBQWlCRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9Ac2FuaXR5L2NsaWVudC9kaXN0L19jaHVua3MtZXMvcmVzb2x2ZUVkaXRJbmZvLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlUHJvcE5hbWUgPSAvW14uW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JCkpL2csIHJlS2V5U2VnbWVudCA9IC9fa2V5XFxzKj09XFxzKlsnXCJdKC4qKVsnXCJdLywgcmVJbmRleFR1cGxlID0gL15cXGQqOlxcZCokLztcbmZ1bmN0aW9uIGlzSW5kZXhTZWdtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWdtZW50ID09IFwibnVtYmVyXCIgfHwgdHlwZW9mIHNlZ21lbnQgPT0gXCJzdHJpbmdcIiAmJiAvXlxcW1xcZCtcXF0kLy50ZXN0KHNlZ21lbnQpO1xufVxuZnVuY3Rpb24gaXNLZXlTZWdtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgPyByZUtleVNlZ21lbnQudGVzdChzZWdtZW50LnRyaW0oKSkgOiB0eXBlb2Ygc2VnbWVudCA9PSBcIm9iamVjdFwiICYmIFwiX2tleVwiIGluIHNlZ21lbnQ7XG59XG5mdW5jdGlvbiBpc0luZGV4VHVwbGUoc2VnbWVudCkge1xuICBpZiAodHlwZW9mIHNlZ21lbnQgPT0gXCJzdHJpbmdcIiAmJiByZUluZGV4VHVwbGUudGVzdChzZWdtZW50KSlcbiAgICByZXR1cm4gITA7XG4gIGlmICghQXJyYXkuaXNBcnJheShzZWdtZW50KSB8fCBzZWdtZW50Lmxlbmd0aCAhPT0gMilcbiAgICByZXR1cm4gITE7XG4gIGNvbnN0IFtmcm9tLCB0b10gPSBzZWdtZW50O1xuICByZXR1cm4gKHR5cGVvZiBmcm9tID09IFwibnVtYmVyXCIgfHwgZnJvbSA9PT0gXCJcIikgJiYgKHR5cGVvZiB0byA9PSBcIm51bWJlclwiIHx8IHRvID09PSBcIlwiKTtcbn1cbmZ1bmN0aW9uIGdldChvYmosIHBhdGgsIGRlZmF1bHRWYWwpIHtcbiAgY29uc3Qgc2VsZWN0ID0gdHlwZW9mIHBhdGggPT0gXCJzdHJpbmdcIiA/IGZyb21TdHJpbmcocGF0aCkgOiBwYXRoO1xuICBpZiAoIUFycmF5LmlzQXJyYXkoc2VsZWN0KSlcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXRoIG11c3QgYmUgYW4gYXJyYXkgb3IgYSBzdHJpbmdcIik7XG4gIGxldCBhY2MgPSBvYmo7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgc2VsZWN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3Qgc2VnbWVudCA9IHNlbGVjdFtpXTtcbiAgICBpZiAoaXNJbmRleFNlZ21lbnQoc2VnbWVudCkpIHtcbiAgICAgIGlmICghQXJyYXkuaXNBcnJheShhY2MpKVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbDtcbiAgICAgIGFjYyA9IGFjY1tzZWdtZW50XTtcbiAgICB9XG4gICAgaWYgKGlzS2V5U2VnbWVudChzZWdtZW50KSkge1xuICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGFjYykpXG4gICAgICAgIHJldHVybiBkZWZhdWx0VmFsO1xuICAgICAgYWNjID0gYWNjLmZpbmQoKGl0ZW0pID0+IGl0ZW0uX2tleSA9PT0gc2VnbWVudC5fa2V5KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgJiYgKGFjYyA9IHR5cGVvZiBhY2MgPT0gXCJvYmplY3RcIiAmJiBhY2MgIT09IG51bGwgPyBhY2Nbc2VnbWVudF0gOiB2b2lkIDApLCB0eXBlb2YgYWNjID4gXCJ1XCIpXG4gICAgICByZXR1cm4gZGVmYXVsdFZhbDtcbiAgfVxuICByZXR1cm4gYWNjO1xufVxuZnVuY3Rpb24gdG9TdHJpbmcocGF0aCkge1xuICBpZiAoIUFycmF5LmlzQXJyYXkocGF0aCkpXG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUGF0aCBpcyBub3QgYW4gYXJyYXlcIik7XG4gIHJldHVybiBwYXRoLnJlZHVjZSgodGFyZ2V0LCBzZWdtZW50LCBpKSA9PiB7XG4gICAgY29uc3Qgc2VnbWVudFR5cGUgPSB0eXBlb2Ygc2VnbWVudDtcbiAgICBpZiAoc2VnbWVudFR5cGUgPT09IFwibnVtYmVyXCIpXG4gICAgICByZXR1cm4gYCR7dGFyZ2V0fVske3NlZ21lbnR9XWA7XG4gICAgaWYgKHNlZ21lbnRUeXBlID09PSBcInN0cmluZ1wiKVxuICAgICAgcmV0dXJuIGAke3RhcmdldH0ke2kgPT09IDAgPyBcIlwiIDogXCIuXCJ9JHtzZWdtZW50fWA7XG4gICAgaWYgKGlzS2V5U2VnbWVudChzZWdtZW50KSAmJiBzZWdtZW50Ll9rZXkpXG4gICAgICByZXR1cm4gYCR7dGFyZ2V0fVtfa2V5PT1cIiR7c2VnbWVudC5fa2V5fVwiXWA7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoc2VnbWVudCkpIHtcbiAgICAgIGNvbnN0IFtmcm9tLCB0b10gPSBzZWdtZW50O1xuICAgICAgcmV0dXJuIGAke3RhcmdldH1bJHtmcm9tfToke3RvfV1gO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIHBhdGggc2VnbWVudCBcXGAke0pTT04uc3RyaW5naWZ5KHNlZ21lbnQpfVxcYGApO1xuICB9LCBcIlwiKTtcbn1cbmZ1bmN0aW9uIGZyb21TdHJpbmcocGF0aCkge1xuICBpZiAodHlwZW9mIHBhdGggIT0gXCJzdHJpbmdcIilcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJQYXRoIGlzIG5vdCBhIHN0cmluZ1wiKTtcbiAgY29uc3Qgc2VnbWVudHMgPSBwYXRoLm1hdGNoKHJlUHJvcE5hbWUpO1xuICBpZiAoIXNlZ21lbnRzKVxuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcGF0aCBzdHJpbmdcIik7XG4gIHJldHVybiBzZWdtZW50cy5tYXAocGFyc2VQYXRoU2VnbWVudCk7XG59XG5mdW5jdGlvbiBwYXJzZVBhdGhTZWdtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIGlzSW5kZXhTZWdtZW50KHNlZ21lbnQpID8gcGFyc2VJbmRleFNlZ21lbnQoc2VnbWVudCkgOiBpc0tleVNlZ21lbnQoc2VnbWVudCkgPyBwYXJzZUtleVNlZ21lbnQoc2VnbWVudCkgOiBpc0luZGV4VHVwbGUoc2VnbWVudCkgPyBwYXJzZUluZGV4VHVwbGVTZWdtZW50KHNlZ21lbnQpIDogc2VnbWVudDtcbn1cbmZ1bmN0aW9uIHBhcnNlSW5kZXhTZWdtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIE51bWJlcihzZWdtZW50LnJlcGxhY2UoL1teXFxkXS9nLCBcIlwiKSk7XG59XG5mdW5jdGlvbiBwYXJzZUtleVNlZ21lbnQoc2VnbWVudCkge1xuICByZXR1cm4geyBfa2V5OiBzZWdtZW50Lm1hdGNoKHJlS2V5U2VnbWVudClbMV0gfTtcbn1cbmZ1bmN0aW9uIHBhcnNlSW5kZXhUdXBsZVNlZ21lbnQoc2VnbWVudCkge1xuICBjb25zdCBbZnJvbSwgdG9dID0gc2VnbWVudC5zcGxpdChcIjpcIikubWFwKChzZWcpID0+IHNlZyA9PT0gXCJcIiA/IHNlZyA6IE51bWJlcihzZWcpKTtcbiAgcmV0dXJuIFtmcm9tLCB0b107XG59XG52YXIgc3R1ZGlvUGF0aCA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBmcm9tU3RyaW5nLFxuICBnZXQsXG4gIGlzSW5kZXhTZWdtZW50LFxuICBpc0luZGV4VHVwbGUsXG4gIGlzS2V5U2VnbWVudCxcbiAgcmVLZXlTZWdtZW50LFxuICB0b1N0cmluZ1xufSk7XG5jb25zdCBEUkFGVFNfUFJFRklYID0gXCJkcmFmdHMuXCI7XG5mdW5jdGlvbiBnZXRQdWJsaXNoZWRJZChpZCkge1xuICByZXR1cm4gaWQuc3RhcnRzV2l0aChEUkFGVFNfUFJFRklYKSA/IGlkLnNsaWNlKERSQUZUU19QUkVGSVgubGVuZ3RoKSA6IGlkO1xufVxuY29uc3QgRVNDQVBFID0ge1xuICBcIlxcZlwiOiBcIlxcXFxmXCIsXG4gIFwiXFxuXCI6IFwiXFxcXG5cIixcbiAgXCJcXHJcIjogXCJcXFxcclwiLFxuICBcIlx0XCI6IFwiXFxcXHRcIixcbiAgXCInXCI6IFwiXFxcXCdcIixcbiAgXCJcXFxcXCI6IFwiXFxcXFxcXFxcIlxufSwgVU5FU0NBUEUgPSB7XG4gIFwiXFxcXGZcIjogXCJcXGZcIixcbiAgXCJcXFxcblwiOiBgXG5gLFxuICBcIlxcXFxyXCI6IFwiXFxyXCIsXG4gIFwiXFxcXHRcIjogXCJcdFwiLFxuICBcIlxcXFwnXCI6IFwiJ1wiLFxuICBcIlxcXFxcXFxcXCI6IFwiXFxcXFwiXG59O1xuZnVuY3Rpb24ganNvblBhdGgocGF0aCkge1xuICByZXR1cm4gYCQke3BhdGgubWFwKChzZWdtZW50KSA9PiB0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiID8gYFsnJHtzZWdtZW50LnJlcGxhY2UoL1tcXGZcXG5cXHJcXHQnXFxcXF0vZywgKG1hdGNoKSA9PiBFU0NBUEVbbWF0Y2hdKX0nXWAgOiB0eXBlb2Ygc2VnbWVudCA9PSBcIm51bWJlclwiID8gYFske3NlZ21lbnR9XWAgOiBzZWdtZW50Ll9rZXkgIT09IFwiXCIgPyBgWz8oQC5fa2V5PT0nJHtzZWdtZW50Ll9rZXkucmVwbGFjZSgvWydcXFxcXS9nLCAobWF0Y2gpID0+IEVTQ0FQRVttYXRjaF0pfScpXWAgOiBgWyR7c2VnbWVudC5faW5kZXh9XWApLmpvaW4oXCJcIil9YDtcbn1cbmZ1bmN0aW9uIHBhcnNlSnNvblBhdGgocGF0aCkge1xuICBjb25zdCBwYXJzZWQgPSBbXSwgcGFyc2VSZSA9IC9cXFsnKC4qPyknXFxdfFxcWyhcXGQrKVxcXXxcXFtcXD9cXChAXFwuX2tleT09JyguKj8pJ1xcKVxcXS9nO1xuICBsZXQgbWF0Y2g7XG4gIGZvciAoOyAobWF0Y2ggPSBwYXJzZVJlLmV4ZWMocGF0aCkpICE9PSBudWxsOyApIHtcbiAgICBpZiAobWF0Y2hbMV0gIT09IHZvaWQgMCkge1xuICAgICAgY29uc3Qga2V5ID0gbWF0Y2hbMV0ucmVwbGFjZSgvXFxcXChcXFxcfGZ8bnxyfHR8JykvZywgKG0pID0+IFVORVNDQVBFW21dKTtcbiAgICAgIHBhcnNlZC5wdXNoKGtleSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgaWYgKG1hdGNoWzJdICE9PSB2b2lkIDApIHtcbiAgICAgIHBhcnNlZC5wdXNoKHBhcnNlSW50KG1hdGNoWzJdLCAxMCkpO1xuICAgICAgY29udGludWU7XG4gICAgfVxuICAgIGlmIChtYXRjaFszXSAhPT0gdm9pZCAwKSB7XG4gICAgICBjb25zdCBfa2V5ID0gbWF0Y2hbM10ucmVwbGFjZSgvXFxcXChcXFxcJykvZywgKG0pID0+IFVORVNDQVBFW21dKTtcbiAgICAgIHBhcnNlZC5wdXNoKHtcbiAgICAgICAgX2tleSxcbiAgICAgICAgX2luZGV4OiAtMVxuICAgICAgfSk7XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHBhcnNlZDtcbn1cbmZ1bmN0aW9uIGpzb25QYXRoVG9TdHVkaW9QYXRoKHBhdGgpIHtcbiAgcmV0dXJuIHBhdGgubWFwKChzZWdtZW50KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHNlZ21lbnQgPT0gXCJudW1iZXJcIilcbiAgICAgIHJldHVybiBzZWdtZW50O1xuICAgIGlmIChzZWdtZW50Ll9rZXkgIT09IFwiXCIpXG4gICAgICByZXR1cm4geyBfa2V5OiBzZWdtZW50Ll9rZXkgfTtcbiAgICBpZiAoc2VnbWVudC5faW5kZXggIT09IC0xKVxuICAgICAgcmV0dXJuIHNlZ21lbnQuX2luZGV4O1xuICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBzZWdtZW50OiR7SlNPTi5zdHJpbmdpZnkoc2VnbWVudCl9YCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gc3R1ZGlvUGF0aFRvSnNvblBhdGgocGF0aCkge1xuICByZXR1cm4gKHR5cGVvZiBwYXRoID09IFwic3RyaW5nXCIgPyBmcm9tU3RyaW5nKHBhdGgpIDogcGF0aCkubWFwKChzZWdtZW50KSA9PiB7XG4gICAgaWYgKHR5cGVvZiBzZWdtZW50ID09IFwic3RyaW5nXCIgfHwgdHlwZW9mIHNlZ21lbnQgPT0gXCJudW1iZXJcIilcbiAgICAgIHJldHVybiBzZWdtZW50O1xuICAgIGlmIChBcnJheS5pc0FycmF5KHNlZ21lbnQpKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbmRleFR1cGxlIHNlZ21lbnRzIGFyZW4ndCBzdXBwb3J0ZWQ6JHtKU09OLnN0cmluZ2lmeShzZWdtZW50KX1gKTtcbiAgICBpZiAoaXNDb250ZW50U291cmNlTWFwUGFyc2VkUGF0aEtleWVkU2VnbWVudChzZWdtZW50KSlcbiAgICAgIHJldHVybiBzZWdtZW50O1xuICAgIGlmIChzZWdtZW50Ll9rZXkpXG4gICAgICByZXR1cm4geyBfa2V5OiBzZWdtZW50Ll9rZXksIF9pbmRleDogLTEgfTtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYGludmFsaWQgc2VnbWVudDoke0pTT04uc3RyaW5naWZ5KHNlZ21lbnQpfWApO1xuICB9KTtcbn1cbmZ1bmN0aW9uIGlzQ29udGVudFNvdXJjZU1hcFBhcnNlZFBhdGhLZXllZFNlZ21lbnQoc2VnbWVudCkge1xuICByZXR1cm4gdHlwZW9mIHNlZ21lbnQgPT0gXCJvYmplY3RcIiAmJiBcIl9rZXlcIiBpbiBzZWdtZW50ICYmIFwiX2luZGV4XCIgaW4gc2VnbWVudDtcbn1cbmZ1bmN0aW9uIGpzb25QYXRoVG9NYXBwaW5nUGF0aChwYXRoKSB7XG4gIHJldHVybiBwYXRoLm1hcCgoc2VnbWVudCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiIHx8IHR5cGVvZiBzZWdtZW50ID09IFwibnVtYmVyXCIpXG4gICAgICByZXR1cm4gc2VnbWVudDtcbiAgICBpZiAoc2VnbWVudC5faW5kZXggIT09IC0xKVxuICAgICAgcmV0dXJuIHNlZ21lbnQuX2luZGV4O1xuICAgIHRocm93IG5ldyBFcnJvcihgaW52YWxpZCBzZWdtZW50OiR7SlNPTi5zdHJpbmdpZnkoc2VnbWVudCl9YCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gcmVzb2x2ZU1hcHBpbmcocmVzdWx0UGF0aCwgY3NtKSB7XG4gIGlmICghY3NtPy5tYXBwaW5ncylcbiAgICByZXR1cm47XG4gIGNvbnN0IHJlc3VsdE1hcHBpbmdQYXRoID0ganNvblBhdGgoanNvblBhdGhUb01hcHBpbmdQYXRoKHJlc3VsdFBhdGgpKTtcbiAgaWYgKGNzbS5tYXBwaW5nc1tyZXN1bHRNYXBwaW5nUGF0aF0gIT09IHZvaWQgMClcbiAgICByZXR1cm4ge1xuICAgICAgbWFwcGluZzogY3NtLm1hcHBpbmdzW3Jlc3VsdE1hcHBpbmdQYXRoXSxcbiAgICAgIG1hdGNoZWRQYXRoOiByZXN1bHRNYXBwaW5nUGF0aCxcbiAgICAgIHBhdGhTdWZmaXg6IFwiXCJcbiAgICB9O1xuICBjb25zdCBtYXBwaW5ncyA9IE9iamVjdC5lbnRyaWVzKGNzbS5tYXBwaW5ncykuZmlsdGVyKChba2V5XSkgPT4gcmVzdWx0TWFwcGluZ1BhdGguc3RhcnRzV2l0aChrZXkpKS5zb3J0KChba2V5MV0sIFtrZXkyXSkgPT4ga2V5Mi5sZW5ndGggLSBrZXkxLmxlbmd0aCk7XG4gIGlmIChtYXBwaW5ncy5sZW5ndGggPT0gMClcbiAgICByZXR1cm47XG4gIGNvbnN0IFttYXRjaGVkUGF0aCwgbWFwcGluZ10gPSBtYXBwaW5nc1swXSwgcGF0aFN1ZmZpeCA9IHJlc3VsdE1hcHBpbmdQYXRoLnN1YnN0cmluZyhtYXRjaGVkUGF0aC5sZW5ndGgpO1xuICByZXR1cm4geyBtYXBwaW5nLCBtYXRjaGVkUGF0aCwgcGF0aFN1ZmZpeCB9O1xufVxuZnVuY3Rpb24gaXNBcnJheSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT09IG51bGwgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZSk7XG59XG5mdW5jdGlvbiBpc1JlY29yZCh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09IFwib2JqZWN0XCIgJiYgdmFsdWUgIT09IG51bGw7XG59XG5mdW5jdGlvbiB3YWxrTWFwKHZhbHVlLCBtYXBwaW5nRm4sIHBhdGggPSBbXSkge1xuICBpZiAoaXNBcnJheSh2YWx1ZSkpXG4gICAgcmV0dXJuIHZhbHVlLm1hcCgodiwgaWR4KSA9PiB7XG4gICAgICBpZiAoaXNSZWNvcmQodikpIHtcbiAgICAgICAgY29uc3QgX2tleSA9IHYuX2tleTtcbiAgICAgICAgaWYgKHR5cGVvZiBfa2V5ID09IFwic3RyaW5nXCIpXG4gICAgICAgICAgcmV0dXJuIHdhbGtNYXAodiwgbWFwcGluZ0ZuLCBwYXRoLmNvbmNhdCh7IF9rZXksIF9pbmRleDogaWR4IH0pKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB3YWxrTWFwKHYsIG1hcHBpbmdGbiwgcGF0aC5jb25jYXQoaWR4KSk7XG4gICAgfSk7XG4gIGlmIChpc1JlY29yZCh2YWx1ZSkpIHtcbiAgICBpZiAodmFsdWUuX3R5cGUgPT09IFwiYmxvY2tcIiB8fCB2YWx1ZS5fdHlwZSA9PT0gXCJzcGFuXCIpIHtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IHsgLi4udmFsdWUgfTtcbiAgICAgIHJldHVybiB2YWx1ZS5fdHlwZSA9PT0gXCJibG9ja1wiID8gcmVzdWx0LmNoaWxkcmVuID0gd2Fsa01hcCh2YWx1ZS5jaGlsZHJlbiwgbWFwcGluZ0ZuLCBwYXRoLmNvbmNhdChcImNoaWxkcmVuXCIpKSA6IHZhbHVlLl90eXBlID09PSBcInNwYW5cIiAmJiAocmVzdWx0LnRleHQgPSB3YWxrTWFwKHZhbHVlLnRleHQsIG1hcHBpbmdGbiwgcGF0aC5jb25jYXQoXCJ0ZXh0XCIpKSksIHJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5mcm9tRW50cmllcyhcbiAgICAgIE9iamVjdC5lbnRyaWVzKHZhbHVlKS5tYXAoKFtrLCB2XSkgPT4gW2ssIHdhbGtNYXAodiwgbWFwcGluZ0ZuLCBwYXRoLmNvbmNhdChrKSldKVxuICAgICk7XG4gIH1cbiAgcmV0dXJuIG1hcHBpbmdGbih2YWx1ZSwgcGF0aCk7XG59XG5mdW5jdGlvbiBjcmVhdGVFZGl0VXJsKG9wdGlvbnMpIHtcbiAgY29uc3Qge1xuICAgIGJhc2VVcmwsXG4gICAgd29ya3NwYWNlOiBfd29ya3NwYWNlID0gXCJkZWZhdWx0XCIsXG4gICAgdG9vbDogX3Rvb2wgPSBcImRlZmF1bHRcIixcbiAgICBpZDogX2lkLFxuICAgIHR5cGUsXG4gICAgcGF0aCxcbiAgICBwcm9qZWN0SWQsXG4gICAgZGF0YXNldFxuICB9ID0gb3B0aW9ucztcbiAgaWYgKCFiYXNlVXJsKVxuICAgIHRocm93IG5ldyBFcnJvcihcImJhc2VVcmwgaXMgcmVxdWlyZWRcIik7XG4gIGlmICghcGF0aClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJwYXRoIGlzIHJlcXVpcmVkXCIpO1xuICBpZiAoIV9pZClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJpZCBpcyByZXF1aXJlZFwiKTtcbiAgaWYgKGJhc2VVcmwgIT09IFwiL1wiICYmIGJhc2VVcmwuZW5kc1dpdGgoXCIvXCIpKVxuICAgIHRocm93IG5ldyBFcnJvcihcImJhc2VVcmwgbXVzdCBub3QgZW5kIHdpdGggYSBzbGFzaFwiKTtcbiAgY29uc3Qgd29ya3NwYWNlID0gX3dvcmtzcGFjZSA9PT0gXCJkZWZhdWx0XCIgPyB2b2lkIDAgOiBfd29ya3NwYWNlLCB0b29sID0gX3Rvb2wgPT09IFwiZGVmYXVsdFwiID8gdm9pZCAwIDogX3Rvb2wsIGlkID0gZ2V0UHVibGlzaGVkSWQoX2lkKSwgc3RyaW5naWZpZWRQYXRoID0gQXJyYXkuaXNBcnJheShwYXRoKSA/IHRvU3RyaW5nKGpzb25QYXRoVG9TdHVkaW9QYXRoKHBhdGgpKSA6IHBhdGgsIHNlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXMoe1xuICAgIGJhc2VVcmwsXG4gICAgaWQsXG4gICAgdHlwZSxcbiAgICBwYXRoOiBzdHJpbmdpZmllZFBhdGhcbiAgfSk7XG4gIHdvcmtzcGFjZSAmJiBzZWFyY2hQYXJhbXMuc2V0KFwid29ya3NwYWNlXCIsIHdvcmtzcGFjZSksIHRvb2wgJiYgc2VhcmNoUGFyYW1zLnNldChcInRvb2xcIiwgdG9vbCksIHByb2plY3RJZCAmJiBzZWFyY2hQYXJhbXMuc2V0KFwicHJvamVjdElkXCIsIHByb2plY3RJZCksIGRhdGFzZXQgJiYgc2VhcmNoUGFyYW1zLnNldChcImRhdGFzZXRcIiwgZGF0YXNldCksIF9pZC5zdGFydHNXaXRoKERSQUZUU19QUkVGSVgpICYmIHNlYXJjaFBhcmFtcy5zZXQoXCJpc0RyYWZ0XCIsIFwiXCIpO1xuICBjb25zdCBzZWdtZW50cyA9IFtiYXNlVXJsID09PSBcIi9cIiA/IFwiXCIgOiBiYXNlVXJsXTtcbiAgd29ya3NwYWNlICYmIHNlZ21lbnRzLnB1c2god29ya3NwYWNlKTtcbiAgY29uc3Qgcm91dGVyUGFyYW1zID0gW1xuICAgIFwibW9kZT1wcmVzZW50YXRpb25cIixcbiAgICBgaWQ9JHtpZH1gLFxuICAgIGB0eXBlPSR7dHlwZX1gLFxuICAgIGBwYXRoPSR7ZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmaWVkUGF0aCl9YFxuICBdO1xuICByZXR1cm4gdG9vbCAmJiByb3V0ZXJQYXJhbXMucHVzaChgdG9vbD0ke3Rvb2x9YCksIHNlZ21lbnRzLnB1c2goXCJpbnRlbnRcIiwgXCJlZGl0XCIsIGAke3JvdXRlclBhcmFtcy5qb2luKFwiO1wiKX0/JHtzZWFyY2hQYXJhbXN9YCksIHNlZ21lbnRzLmpvaW4oXCIvXCIpO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUVkaXRJbmZvKG9wdGlvbnMpIHtcbiAgY29uc3QgeyByZXN1bHRTb3VyY2VNYXA6IGNzbSwgcmVzdWx0UGF0aCB9ID0gb3B0aW9ucywgeyBtYXBwaW5nLCBwYXRoU3VmZml4IH0gPSByZXNvbHZlTWFwcGluZyhyZXN1bHRQYXRoLCBjc20pIHx8IHt9O1xuICBpZiAoIW1hcHBpbmcgfHwgbWFwcGluZy5zb3VyY2UudHlwZSA9PT0gXCJsaXRlcmFsXCIgfHwgbWFwcGluZy5zb3VyY2UudHlwZSA9PT0gXCJ1bmtub3duXCIpXG4gICAgcmV0dXJuO1xuICBjb25zdCBzb3VyY2VEb2MgPSBjc20uZG9jdW1lbnRzW21hcHBpbmcuc291cmNlLmRvY3VtZW50XSwgc291cmNlUGF0aCA9IGNzbS5wYXRoc1ttYXBwaW5nLnNvdXJjZS5wYXRoXTtcbiAgaWYgKHNvdXJjZURvYyAmJiBzb3VyY2VQYXRoKSB7XG4gICAgY29uc3QgeyBiYXNlVXJsLCB3b3Jrc3BhY2UsIHRvb2wgfSA9IHJlc29sdmVTdHVkaW9CYXNlUm91dGUoXG4gICAgICB0eXBlb2Ygb3B0aW9ucy5zdHVkaW9VcmwgPT0gXCJmdW5jdGlvblwiID8gb3B0aW9ucy5zdHVkaW9Vcmwoc291cmNlRG9jKSA6IG9wdGlvbnMuc3R1ZGlvVXJsXG4gICAgKTtcbiAgICBpZiAoIWJhc2VVcmwpXG4gICAgICByZXR1cm47XG4gICAgY29uc3QgeyBfaWQsIF90eXBlLCBfcHJvamVjdElkLCBfZGF0YXNldCB9ID0gc291cmNlRG9jO1xuICAgIHJldHVybiB7XG4gICAgICBiYXNlVXJsLFxuICAgICAgd29ya3NwYWNlLFxuICAgICAgdG9vbCxcbiAgICAgIGlkOiBfaWQsXG4gICAgICB0eXBlOiBfdHlwZSxcbiAgICAgIHBhdGg6IHBhcnNlSnNvblBhdGgoc291cmNlUGF0aCArIHBhdGhTdWZmaXgpLFxuICAgICAgcHJvamVjdElkOiBfcHJvamVjdElkLFxuICAgICAgZGF0YXNldDogX2RhdGFzZXRcbiAgICB9O1xuICB9XG59XG5mdW5jdGlvbiByZXNvbHZlU3R1ZGlvQmFzZVJvdXRlKHN0dWRpb1VybCkge1xuICBsZXQgYmFzZVVybCA9IHR5cGVvZiBzdHVkaW9VcmwgPT0gXCJzdHJpbmdcIiA/IHN0dWRpb1VybCA6IHN0dWRpb1VybC5iYXNlVXJsO1xuICByZXR1cm4gYmFzZVVybCAhPT0gXCIvXCIgJiYgKGJhc2VVcmwgPSBiYXNlVXJsLnJlcGxhY2UoL1xcLyQvLCBcIlwiKSksIHR5cGVvZiBzdHVkaW9VcmwgPT0gXCJzdHJpbmdcIiA/IHsgYmFzZVVybCB9IDogeyAuLi5zdHVkaW9VcmwsIGJhc2VVcmwgfTtcbn1cbmV4cG9ydCB7XG4gIERSQUZUU19QUkVGSVgsXG4gIGNyZWF0ZUVkaXRVcmwsXG4gIGdldCxcbiAgZ2V0UHVibGlzaGVkSWQsXG4gIGpzb25QYXRoLFxuICBqc29uUGF0aFRvU3R1ZGlvUGF0aCxcbiAgcGFyc2VKc29uUGF0aCxcbiAgcmVLZXlTZWdtZW50LFxuICByZXNvbHZlRWRpdEluZm8sXG4gIHJlc29sdmVNYXBwaW5nLFxuICByZXNvbHZlU3R1ZGlvQmFzZVJvdXRlLFxuICBzdHVkaW9QYXRoLFxuICBzdHVkaW9QYXRoVG9Kc29uUGF0aCxcbiAgdG9TdHJpbmcsXG4gIHdhbGtNYXBcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNvbHZlRWRpdEluZm8uanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@sanity/diff-match-patch/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@sanity/diff-match-patch/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DIFF_DELETE: () => (/* binding */ DIFF_DELETE),\n/* harmony export */   DIFF_EQUAL: () => (/* binding */ DIFF_EQUAL),\n/* harmony export */   DIFF_INSERT: () => (/* binding */ DIFF_INSERT),\n/* harmony export */   adjustIndiciesToUcs2: () => (/* binding */ adjustIndiciesToUcs2),\n/* harmony export */   applyPatches: () => (/* binding */ apply),\n/* harmony export */   cleanupEfficiency: () => (/* binding */ cleanupEfficiency),\n/* harmony export */   cleanupSemantic: () => (/* binding */ cleanupSemantic),\n/* harmony export */   makeDiff: () => (/* binding */ diff),\n/* harmony export */   makePatches: () => (/* binding */ make),\n/* harmony export */   match: () => (/* binding */ match),\n/* harmony export */   parsePatch: () => (/* binding */ parse),\n/* harmony export */   stringifyPatch: () => (/* binding */ stringifyPatch),\n/* harmony export */   stringifyPatches: () => (/* binding */ stringify)\n/* harmony export */ });\nfunction cloneDiff(diff2) {\n  const [type, patch] = diff2;\n  return [type, patch];\n}\nfunction getCommonOverlap(textA, textB) {\n  let text1 = textA, text2 = textB;\n  const text1Length = text1.length, text2Length = text2.length;\n  if (text1Length === 0 || text2Length === 0)\n    return 0;\n  text1Length > text2Length ? text1 = text1.substring(text1Length - text2Length) : text1Length < text2Length && (text2 = text2.substring(0, text1Length));\n  const textLength = Math.min(text1Length, text2Length);\n  if (text1 === text2)\n    return textLength;\n  let best = 0, length = 1;\n  for (let found = 0; found !== -1; ) {\n    const pattern = text1.substring(textLength - length);\n    if (found = text2.indexOf(pattern), found === -1)\n      return best;\n    length += found, (found === 0 || text1.substring(textLength - length) === text2.substring(0, length)) && (best = length, length++);\n  }\n  return best;\n}\nfunction getCommonPrefix(text1, text2) {\n  if (!text1 || !text2 || text1[0] !== text2[0])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerStart = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(pointerStart, pointerMid) === text2.substring(pointerStart, pointerMid) ? (pointerMin = pointerMid, pointerStart = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction getCommonSuffix(text1, text2) {\n  if (!text1 || !text2 || text1[text1.length - 1] !== text2[text2.length - 1])\n    return 0;\n  let pointerMin = 0, pointerMax = Math.min(text1.length, text2.length), pointerMid = pointerMax, pointerEnd = 0;\n  for (; pointerMin < pointerMid; )\n    text1.substring(text1.length - pointerMid, text1.length - pointerEnd) === text2.substring(text2.length - pointerMid, text2.length - pointerEnd) ? (pointerMin = pointerMid, pointerEnd = pointerMin) : pointerMax = pointerMid, pointerMid = Math.floor((pointerMax - pointerMin) / 2 + pointerMin);\n  return pointerMid;\n}\nfunction isHighSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 55296 && charCode <= 56319;\n}\nfunction isLowSurrogate(char) {\n  const charCode = char.charCodeAt(0);\n  return charCode >= 56320 && charCode <= 57343;\n}\nfunction bisect(text1, text2, deadline) {\n  const text1Length = text1.length, text2Length = text2.length, maxD = Math.ceil((text1Length + text2Length) / 2), vOffset = maxD, vLength = 2 * maxD, v1 = new Array(vLength), v2 = new Array(vLength);\n  for (let x = 0; x < vLength; x++)\n    v1[x] = -1, v2[x] = -1;\n  v1[vOffset + 1] = 0, v2[vOffset + 1] = 0;\n  const delta = text1Length - text2Length, front = delta % 2 !== 0;\n  let k1start = 0, k1end = 0, k2start = 0, k2end = 0;\n  for (let d = 0; d < maxD && !(Date.now() > deadline); d++) {\n    for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      const k1Offset = vOffset + k1;\n      let x1;\n      k1 === -d || k1 !== d && v1[k1Offset - 1] < v1[k1Offset + 1] ? x1 = v1[k1Offset + 1] : x1 = v1[k1Offset - 1] + 1;\n      let y1 = x1 - k1;\n      for (; x1 < text1Length && y1 < text2Length && text1.charAt(x1) === text2.charAt(y1); )\n        x1++, y1++;\n      if (v1[k1Offset] = x1, x1 > text1Length)\n        k1end += 2;\n      else if (y1 > text2Length)\n        k1start += 2;\n      else if (front) {\n        const k2Offset = vOffset + delta - k1;\n        if (k2Offset >= 0 && k2Offset < vLength && v2[k2Offset] !== -1) {\n          const x2 = text1Length - v2[k2Offset];\n          if (x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n    for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      const k2Offset = vOffset + k2;\n      let x2;\n      k2 === -d || k2 !== d && v2[k2Offset - 1] < v2[k2Offset + 1] ? x2 = v2[k2Offset + 1] : x2 = v2[k2Offset - 1] + 1;\n      let y2 = x2 - k2;\n      for (; x2 < text1Length && y2 < text2Length && text1.charAt(text1Length - x2 - 1) === text2.charAt(text2Length - y2 - 1); )\n        x2++, y2++;\n      if (v2[k2Offset] = x2, x2 > text1Length)\n        k2end += 2;\n      else if (y2 > text2Length)\n        k2start += 2;\n      else if (!front) {\n        const k1Offset = vOffset + delta - k2;\n        if (k1Offset >= 0 && k1Offset < vLength && v1[k1Offset] !== -1) {\n          const x1 = v1[k1Offset], y1 = vOffset + x1 - k1Offset;\n          if (x2 = text1Length - x2, x1 >= x2)\n            return bisectSplit(text1, text2, x1, y1, deadline);\n        }\n      }\n    }\n  }\n  return [\n    [DIFF_DELETE, text1],\n    [DIFF_INSERT, text2]\n  ];\n}\nfunction bisectSplit(text1, text2, x, y, deadline) {\n  const text1a = text1.substring(0, x), text2a = text2.substring(0, y), text1b = text1.substring(x), text2b = text2.substring(y), diffs = doDiff(text1a, text2a, { checkLines: !1, deadline }), diffsb = doDiff(text1b, text2b, { checkLines: !1, deadline });\n  return diffs.concat(diffsb);\n}\nfunction findHalfMatch(text1, text2, timeout = 1) {\n  if (timeout <= 0)\n    return null;\n  const longText = text1.length > text2.length ? text1 : text2, shortText = text1.length > text2.length ? text2 : text1;\n  if (longText.length < 4 || shortText.length * 2 < longText.length)\n    return null;\n  const halfMatch1 = halfMatchI(longText, shortText, Math.ceil(longText.length / 4)), halfMatch2 = halfMatchI(longText, shortText, Math.ceil(longText.length / 2));\n  let halfMatch;\n  if (halfMatch1 && halfMatch2)\n    halfMatch = halfMatch1[4].length > halfMatch2[4].length ? halfMatch1 : halfMatch2;\n  else {\n    if (!halfMatch1 && !halfMatch2)\n      return null;\n    halfMatch2 ? halfMatch1 || (halfMatch = halfMatch2) : halfMatch = halfMatch1;\n  }\n  if (!halfMatch)\n    throw new Error(\"Unable to find a half match.\");\n  let text1A, text1B, text2A, text2B;\n  text1.length > text2.length ? (text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3]) : (text2A = halfMatch[0], text2B = halfMatch[1], text1A = halfMatch[2], text1B = halfMatch[3]);\n  const midCommon = halfMatch[4];\n  return [text1A, text1B, text2A, text2B, midCommon];\n}\nfunction halfMatchI(longText, shortText, i) {\n  const seed = longText.slice(i, i + Math.floor(longText.length / 4));\n  let j = -1, bestCommon = \"\", bestLongTextA, bestLongTextB, bestShortTextA, bestShortTextB;\n  for (; (j = shortText.indexOf(seed, j + 1)) !== -1; ) {\n    const prefixLength = getCommonPrefix(longText.slice(i), shortText.slice(j)), suffixLength = getCommonSuffix(longText.slice(0, i), shortText.slice(0, j));\n    bestCommon.length < suffixLength + prefixLength && (bestCommon = shortText.slice(j - suffixLength, j) + shortText.slice(j, j + prefixLength), bestLongTextA = longText.slice(0, i - suffixLength), bestLongTextB = longText.slice(i + prefixLength), bestShortTextA = shortText.slice(0, j - suffixLength), bestShortTextB = shortText.slice(j + prefixLength));\n  }\n  return bestCommon.length * 2 >= longText.length ? [\n    bestLongTextA || \"\",\n    bestLongTextB || \"\",\n    bestShortTextA || \"\",\n    bestShortTextB || \"\",\n    bestCommon || \"\"\n  ] : null;\n}\nfunction charsToLines(diffs, lineArray) {\n  for (let x = 0; x < diffs.length; x++) {\n    const chars = diffs[x][1], text = [];\n    for (let y = 0; y < chars.length; y++)\n      text[y] = lineArray[chars.charCodeAt(y)];\n    diffs[x][1] = text.join(\"\");\n  }\n}\nfunction linesToChars(textA, textB) {\n  const lineArray = [], lineHash = {};\n  lineArray[0] = \"\";\n  function diffLinesToMunge(text) {\n    let chars = \"\", lineStart = 0, lineEnd = -1, lineArrayLength = lineArray.length;\n    for (; lineEnd < text.length - 1; ) {\n      lineEnd = text.indexOf(`\n`, lineStart), lineEnd === -1 && (lineEnd = text.length - 1);\n      let line = text.slice(lineStart, lineEnd + 1);\n      (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) : lineHash[line] !== void 0) ? chars += String.fromCharCode(lineHash[line]) : (lineArrayLength === maxLines && (line = text.slice(lineStart), lineEnd = text.length), chars += String.fromCharCode(lineArrayLength), lineHash[line] = lineArrayLength, lineArray[lineArrayLength++] = line), lineStart = lineEnd + 1;\n    }\n    return chars;\n  }\n  let maxLines = 4e4;\n  const chars1 = diffLinesToMunge(textA);\n  maxLines = 65535;\n  const chars2 = diffLinesToMunge(textB);\n  return { chars1, chars2, lineArray };\n}\nfunction doLineModeDiff(textA, textB, opts) {\n  let text1 = textA, text2 = textB;\n  const a = linesToChars(text1, text2);\n  text1 = a.chars1, text2 = a.chars2;\n  const linearray = a.lineArray;\n  let diffs = doDiff(text1, text2, {\n    checkLines: !1,\n    deadline: opts.deadline\n  });\n  charsToLines(diffs, linearray), diffs = cleanupSemantic(diffs), diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\";\n  for (; pointer < diffs.length; ) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        if (countDelete >= 1 && countInsert >= 1) {\n          diffs.splice(pointer - countDelete - countInsert, countDelete + countInsert), pointer = pointer - countDelete - countInsert;\n          const aa = doDiff(textDelete, textInsert, {\n            checkLines: !1,\n            deadline: opts.deadline\n          });\n          for (let j = aa.length - 1; j >= 0; j--)\n            diffs.splice(pointer, 0, aa[j]);\n          pointer += aa.length;\n        }\n        countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n    pointer++;\n  }\n  return diffs.pop(), diffs;\n}\nfunction computeDiff(text1, text2, opts) {\n  let diffs;\n  if (!text1)\n    return [[DIFF_INSERT, text2]];\n  if (!text2)\n    return [[DIFF_DELETE, text1]];\n  const longtext = text1.length > text2.length ? text1 : text2, shorttext = text1.length > text2.length ? text2 : text1, i = longtext.indexOf(shorttext);\n  if (i !== -1)\n    return diffs = [\n      [DIFF_INSERT, longtext.substring(0, i)],\n      [DIFF_EQUAL, shorttext],\n      [DIFF_INSERT, longtext.substring(i + shorttext.length)]\n    ], text1.length > text2.length && (diffs[0][0] = DIFF_DELETE, diffs[2][0] = DIFF_DELETE), diffs;\n  if (shorttext.length === 1)\n    return [\n      [DIFF_DELETE, text1],\n      [DIFF_INSERT, text2]\n    ];\n  const halfMatch = findHalfMatch(text1, text2);\n  if (halfMatch) {\n    const text1A = halfMatch[0], text1B = halfMatch[1], text2A = halfMatch[2], text2B = halfMatch[3], midCommon = halfMatch[4], diffsA = doDiff(text1A, text2A, opts), diffsB = doDiff(text1B, text2B, opts);\n    return diffsA.concat([[DIFF_EQUAL, midCommon]], diffsB);\n  }\n  return opts.checkLines && text1.length > 100 && text2.length > 100 ? doLineModeDiff(text1, text2, opts) : bisect(text1, text2, opts.deadline);\n}\nvar __defProp$2 = Object.defineProperty, __getOwnPropSymbols$2 = Object.getOwnPropertySymbols, __hasOwnProp$2 = Object.prototype.hasOwnProperty, __propIsEnum$2 = Object.prototype.propertyIsEnumerable, __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$2 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  if (__getOwnPropSymbols$2)\n    for (var prop of __getOwnPropSymbols$2(b))\n      __propIsEnum$2.call(b, prop) && __defNormalProp$2(a, prop, b[prop]);\n  return a;\n};\nconst DIFF_DELETE = -1, DIFF_INSERT = 1, DIFF_EQUAL = 0;\nfunction diff(textA, textB, opts) {\n  if (textA === null || textB === null)\n    throw new Error(\"Null input. (diff)\");\n  const diffs = doDiff(textA, textB, createInternalOpts(opts || {}));\n  return adjustDiffForSurrogatePairs(diffs), diffs;\n}\nfunction doDiff(textA, textB, options) {\n  let text1 = textA, text2 = textB;\n  if (text1 === text2)\n    return text1 ? [[DIFF_EQUAL, text1]] : [];\n  let commonlength = getCommonPrefix(text1, text2);\n  const commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength), text2 = text2.substring(commonlength), commonlength = getCommonSuffix(text1, text2);\n  const commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength), text2 = text2.substring(0, text2.length - commonlength);\n  let diffs = computeDiff(text1, text2, options);\n  return commonprefix && diffs.unshift([DIFF_EQUAL, commonprefix]), commonsuffix && diffs.push([DIFF_EQUAL, commonsuffix]), diffs = cleanupMerge(diffs), diffs;\n}\nfunction createDeadLine(timeout) {\n  let t = 1;\n  return typeof timeout < \"u\" && (t = timeout <= 0 ? Number.MAX_VALUE : timeout), Date.now() + t * 1e3;\n}\nfunction createInternalOpts(opts) {\n  return __spreadValues$2({\n    checkLines: !0,\n    deadline: createDeadLine(opts.timeout || 1)\n  }, opts);\n}\nfunction combineChar(data, char, dir) {\n  return dir === 1 ? data + char : char + data;\n}\nfunction splitChar(data, dir) {\n  return dir === 1 ? [data.substring(0, data.length - 1), data[data.length - 1]] : [data.substring(1), data[0]];\n}\nfunction hasSharedChar(diffs, i, j, dir) {\n  return dir === 1 ? diffs[i][1][diffs[i][1].length - 1] === diffs[j][1][diffs[j][1].length - 1] : diffs[i][1][0] === diffs[j][1][0];\n}\nfunction deisolateChar(diffs, i, dir) {\n  const inv = dir === 1 ? -1 : 1;\n  let insertIdx = null, deleteIdx = null, j = i + dir;\n  for (; j >= 0 && j < diffs.length && (insertIdx === null || deleteIdx === null); j += dir) {\n    const [op, text2] = diffs[j];\n    if (text2.length !== 0) {\n      if (op === DIFF_INSERT) {\n        insertIdx === null && (insertIdx = j);\n        continue;\n      } else if (op === DIFF_DELETE) {\n        deleteIdx === null && (deleteIdx = j);\n        continue;\n      } else if (op === DIFF_EQUAL) {\n        if (insertIdx === null && deleteIdx === null) {\n          const [rest, char2] = splitChar(diffs[i][1], dir);\n          diffs[i][1] = rest, diffs[j][1] = combineChar(diffs[j][1], char2, inv);\n          return;\n        }\n        break;\n      }\n    }\n  }\n  if (insertIdx !== null && deleteIdx !== null && hasSharedChar(diffs, insertIdx, deleteIdx, dir)) {\n    const [insertText, insertChar] = splitChar(diffs[insertIdx][1], inv), [deleteText] = splitChar(diffs[deleteIdx][1], inv);\n    diffs[insertIdx][1] = insertText, diffs[deleteIdx][1] = deleteText, diffs[i][1] = combineChar(diffs[i][1], insertChar, dir);\n    return;\n  }\n  const [text, char] = splitChar(diffs[i][1], dir);\n  diffs[i][1] = text, insertIdx === null ? (diffs.splice(j, 0, [DIFF_INSERT, char]), deleteIdx !== null && deleteIdx >= j && deleteIdx++) : diffs[insertIdx][1] = combineChar(diffs[insertIdx][1], char, inv), deleteIdx === null ? diffs.splice(j, 0, [DIFF_DELETE, char]) : diffs[deleteIdx][1] = combineChar(diffs[deleteIdx][1], char, inv);\n}\nfunction adjustDiffForSurrogatePairs(diffs) {\n  for (let i = 0; i < diffs.length; i++) {\n    const [diffType, diffText] = diffs[i];\n    if (diffText.length === 0) continue;\n    const firstChar = diffText[0], lastChar = diffText[diffText.length - 1];\n    isHighSurrogate(lastChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, 1), isLowSurrogate(firstChar) && diffType === DIFF_EQUAL && deisolateChar(diffs, i, -1);\n  }\n  for (let i = 0; i < diffs.length; i++)\n    diffs[i][1].length === 0 && diffs.splice(i, 1);\n}\nfunction cleanupSemantic(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (equalities[equalitiesLength++] = pointer, lengthInsertions1 = lengthInsertions2, lengthDeletions1 = lengthDeletions2, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = diffs[pointer][1]) : (diffs[pointer][0] === DIFF_INSERT ? lengthInsertions2 += diffs[pointer][1].length : lengthDeletions2 += diffs[pointer][1].length, lastEquality && lastEquality.length <= Math.max(lengthInsertions1, lengthDeletions1) && lastEquality.length <= Math.max(lengthInsertions2, lengthDeletions2) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, lengthInsertions1 = 0, lengthDeletions1 = 0, lengthInsertions2 = 0, lengthDeletions2 = 0, lastEquality = null, hasChanges = !0)), pointer++;\n  for (hasChanges && (diffs = cleanupMerge(diffs)), diffs = cleanupSemanticLossless(diffs), pointer = 1; pointer < diffs.length; ) {\n    if (diffs[pointer - 1][0] === DIFF_DELETE && diffs[pointer][0] === DIFF_INSERT) {\n      const deletion = diffs[pointer - 1][1], insertion = diffs[pointer][1], overlapLength1 = getCommonOverlap(deletion, insertion), overlapLength2 = getCommonOverlap(insertion, deletion);\n      overlapLength1 >= overlapLength2 ? (overlapLength1 >= deletion.length / 2 || overlapLength1 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, insertion.substring(0, overlapLength1)]), diffs[pointer - 1][1] = deletion.substring(0, deletion.length - overlapLength1), diffs[pointer + 1][1] = insertion.substring(overlapLength1), pointer++) : (overlapLength2 >= deletion.length / 2 || overlapLength2 >= insertion.length / 2) && (diffs.splice(pointer, 0, [DIFF_EQUAL, deletion.substring(0, overlapLength2)]), diffs[pointer - 1][0] = DIFF_INSERT, diffs[pointer - 1][1] = insertion.substring(0, insertion.length - overlapLength2), diffs[pointer + 1][0] = DIFF_DELETE, diffs[pointer + 1][1] = deletion.substring(overlapLength2), pointer++), pointer++;\n    }\n    pointer++;\n  }\n  return diffs;\n}\nconst nonAlphaNumericRegex = /[^a-zA-Z0-9]/, whitespaceRegex = /\\s/, linebreakRegex = /[\\r\\n]/, blanklineEndRegex = /\\n\\r?\\n$/, blanklineStartRegex = /^\\r?\\n\\r?\\n/;\nfunction cleanupSemanticLossless(rawDiffs) {\n  const diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  function diffCleanupSemanticScore(one, two) {\n    if (!one || !two)\n      return 6;\n    const char1 = one.charAt(one.length - 1), char2 = two.charAt(0), nonAlphaNumeric1 = char1.match(nonAlphaNumericRegex), nonAlphaNumeric2 = char2.match(nonAlphaNumericRegex), whitespace1 = nonAlphaNumeric1 && char1.match(whitespaceRegex), whitespace2 = nonAlphaNumeric2 && char2.match(whitespaceRegex), lineBreak1 = whitespace1 && char1.match(linebreakRegex), lineBreak2 = whitespace2 && char2.match(linebreakRegex), blankLine1 = lineBreak1 && one.match(blanklineEndRegex), blankLine2 = lineBreak2 && two.match(blanklineStartRegex);\n    return blankLine1 || blankLine2 ? 5 : lineBreak1 || lineBreak2 ? 4 : nonAlphaNumeric1 && !whitespace1 && whitespace2 ? 3 : whitespace1 || whitespace2 ? 2 : nonAlphaNumeric1 || nonAlphaNumeric2 ? 1 : 0;\n  }\n  let pointer = 1;\n  for (; pointer < diffs.length - 1; ) {\n    if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n      let equality1 = diffs[pointer - 1][1], edit = diffs[pointer][1], equality2 = diffs[pointer + 1][1];\n      const commonOffset = getCommonSuffix(equality1, edit);\n      if (commonOffset) {\n        const commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset), edit = commonString + edit.substring(0, edit.length - commonOffset), equality2 = commonString + equality2;\n      }\n      let bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2, bestScore = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n      for (; edit.charAt(0) === equality2.charAt(0); ) {\n        equality1 += edit.charAt(0), edit = edit.substring(1) + equality2.charAt(0), equality2 = equality2.substring(1);\n        const score = diffCleanupSemanticScore(equality1, edit) + diffCleanupSemanticScore(edit, equality2);\n        score >= bestScore && (bestScore = score, bestEquality1 = equality1, bestEdit = edit, bestEquality2 = equality2);\n      }\n      diffs[pointer - 1][1] !== bestEquality1 && (bestEquality1 ? diffs[pointer - 1][1] = bestEquality1 : (diffs.splice(pointer - 1, 1), pointer--), diffs[pointer][1] = bestEdit, bestEquality2 ? diffs[pointer + 1][1] = bestEquality2 : (diffs.splice(pointer + 1, 1), pointer--));\n    }\n    pointer++;\n  }\n  return diffs;\n}\nfunction cleanupMerge(rawDiffs) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2));\n  diffs.push([DIFF_EQUAL, \"\"]);\n  let pointer = 0, countDelete = 0, countInsert = 0, textDelete = \"\", textInsert = \"\", commonlength;\n  for (; pointer < diffs.length; )\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        countInsert++, textInsert += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_DELETE:\n        countDelete++, textDelete += diffs[pointer][1], pointer++;\n        break;\n      case DIFF_EQUAL:\n        countDelete + countInsert > 1 ? (countDelete !== 0 && countInsert !== 0 && (commonlength = getCommonPrefix(textInsert, textDelete), commonlength !== 0 && (pointer - countDelete - countInsert > 0 && diffs[pointer - countDelete - countInsert - 1][0] === DIFF_EQUAL ? diffs[pointer - countDelete - countInsert - 1][1] += textInsert.substring(\n          0,\n          commonlength\n        ) : (diffs.splice(0, 0, [DIFF_EQUAL, textInsert.substring(0, commonlength)]), pointer++), textInsert = textInsert.substring(commonlength), textDelete = textDelete.substring(commonlength)), commonlength = getCommonSuffix(textInsert, textDelete), commonlength !== 0 && (diffs[pointer][1] = textInsert.substring(textInsert.length - commonlength) + diffs[pointer][1], textInsert = textInsert.substring(0, textInsert.length - commonlength), textDelete = textDelete.substring(0, textDelete.length - commonlength))), pointer -= countDelete + countInsert, diffs.splice(pointer, countDelete + countInsert), textDelete.length && (diffs.splice(pointer, 0, [DIFF_DELETE, textDelete]), pointer++), textInsert.length && (diffs.splice(pointer, 0, [DIFF_INSERT, textInsert]), pointer++), pointer++) : pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL ? (diffs[pointer - 1][1] += diffs[pointer][1], diffs.splice(pointer, 1)) : pointer++, countInsert = 0, countDelete = 0, textDelete = \"\", textInsert = \"\";\n        break;\n      default:\n        throw new Error(\"Unknown diff operation\");\n    }\n  diffs[diffs.length - 1][1] === \"\" && diffs.pop();\n  let hasChanges = !1;\n  for (pointer = 1; pointer < diffs.length - 1; )\n    diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL && (diffs[pointer][1].substring(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1] ? (diffs[pointer][1] = diffs[pointer - 1][1] + diffs[pointer][1].substring(0, diffs[pointer][1].length - diffs[pointer - 1][1].length), diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1], diffs.splice(pointer - 1, 1), hasChanges = !0) : diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1] && (diffs[pointer - 1][1] += diffs[pointer + 1][1], diffs[pointer][1] = diffs[pointer][1].substring(diffs[pointer + 1][1].length) + diffs[pointer + 1][1], diffs.splice(pointer + 1, 1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nfunction trueCount(...args) {\n  return args.reduce((n, bool) => n + (bool ? 1 : 0), 0);\n}\nfunction cleanupEfficiency(rawDiffs, editCost = 4) {\n  let diffs = rawDiffs.map((diff2) => cloneDiff(diff2)), hasChanges = !1;\n  const equalities = [];\n  let equalitiesLength = 0, lastEquality = null, pointer = 0, preIns = !1, preDel = !1, postIns = !1, postDel = !1;\n  for (; pointer < diffs.length; )\n    diffs[pointer][0] === DIFF_EQUAL ? (diffs[pointer][1].length < editCost && (postIns || postDel) ? (equalities[equalitiesLength++] = pointer, preIns = postIns, preDel = postDel, lastEquality = diffs[pointer][1]) : (equalitiesLength = 0, lastEquality = null), postIns = !1, postDel = !1) : (diffs[pointer][0] === DIFF_DELETE ? postDel = !0 : postIns = !0, lastEquality && (preIns && preDel && postIns && postDel || lastEquality.length < editCost / 2 && trueCount(preIns, preDel, postIns, postDel) === 3) && (diffs.splice(equalities[equalitiesLength - 1], 0, [DIFF_DELETE, lastEquality]), diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT, equalitiesLength--, lastEquality = null, preIns && preDel ? (postIns = !0, postDel = !0, equalitiesLength = 0) : (equalitiesLength--, pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1, postIns = !1, postDel = !1), hasChanges = !0)), pointer++;\n  return hasChanges && (diffs = cleanupMerge(diffs)), diffs;\n}\nvar __defProp$1 = Object.defineProperty, __getOwnPropSymbols$1 = Object.getOwnPropertySymbols, __hasOwnProp$1 = Object.prototype.hasOwnProperty, __propIsEnum$1 = Object.prototype.propertyIsEnumerable, __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b))\n      __propIsEnum$1.call(b, prop) && __defNormalProp$1(a, prop, b[prop]);\n  return a;\n};\nconst DEFAULT_OPTIONS = {\n  /**\n   * At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n   */\n  threshold: 0.5,\n  /**\n   * How far to search for a match (0 = exact location, 1000+ = broad match).\n   * A match this many characters away from the expected location will add\n   * 1.0 to the score (0.0 is a perfect match).\n   */\n  distance: 1e3\n};\nfunction applyDefaults(options) {\n  return __spreadValues$1(__spreadValues$1({}, DEFAULT_OPTIONS), options);\n}\nconst MAX_BITS$1 = 32;\nfunction bitap(text, pattern, loc, opts = {}) {\n  if (pattern.length > MAX_BITS$1)\n    throw new Error(\"Pattern too long for this browser.\");\n  const options = applyDefaults(opts), s = getAlphabetFromPattern(pattern);\n  function getBitapScore(e, x) {\n    const accuracy = e / pattern.length, proximity = Math.abs(loc - x);\n    return options.distance ? accuracy + proximity / options.distance : proximity ? 1 : accuracy;\n  }\n  let scoreThreshold = options.threshold, bestLoc = text.indexOf(pattern, loc);\n  bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold), bestLoc = text.lastIndexOf(pattern, loc + pattern.length), bestLoc !== -1 && (scoreThreshold = Math.min(getBitapScore(0, bestLoc), scoreThreshold)));\n  const matchmask = 1 << pattern.length - 1;\n  bestLoc = -1;\n  let binMin, binMid, binMax = pattern.length + text.length, lastRd = [];\n  for (let d = 0; d < pattern.length; d++) {\n    for (binMin = 0, binMid = binMax; binMin < binMid; )\n      getBitapScore(d, loc + binMid) <= scoreThreshold ? binMin = binMid : binMax = binMid, binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    binMax = binMid;\n    let start = Math.max(1, loc - binMid + 1);\n    const finish = Math.min(loc + binMid, text.length) + pattern.length, rd = new Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (let j = finish; j >= start; j--) {\n      const charMatch = s[text.charAt(j - 1)];\n      if (d === 0 ? rd[j] = (rd[j + 1] << 1 | 1) & charMatch : rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRd[j + 1] | lastRd[j]) << 1 | 1) | lastRd[j + 1], rd[j] & matchmask) {\n        const score = getBitapScore(d, j - 1);\n        if (score <= scoreThreshold)\n          if (scoreThreshold = score, bestLoc = j - 1, bestLoc > loc)\n            start = Math.max(1, 2 * loc - bestLoc);\n          else\n            break;\n      }\n    }\n    if (getBitapScore(d + 1, loc) > scoreThreshold)\n      break;\n    lastRd = rd;\n  }\n  return bestLoc;\n}\nfunction getAlphabetFromPattern(pattern) {\n  const s = {};\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] = 0;\n  for (let i = 0; i < pattern.length; i++)\n    s[pattern.charAt(i)] |= 1 << pattern.length - i - 1;\n  return s;\n}\nfunction match(text, pattern, searchLocation) {\n  if (text === null || pattern === null || searchLocation === null)\n    throw new Error(\"Null input. (match())\");\n  const loc = Math.max(0, Math.min(searchLocation, text.length));\n  if (text === pattern)\n    return 0;\n  if (text.length) {\n    if (text.substring(loc, loc + pattern.length) === pattern)\n      return loc;\n  } else return -1;\n  return bitap(text, pattern, loc);\n}\nfunction diffText1(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_INSERT && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction diffText2(diffs) {\n  const text = [];\n  for (let x = 0; x < diffs.length; x++)\n    diffs[x][0] !== DIFF_DELETE && (text[x] = diffs[x][1]);\n  return text.join(\"\");\n}\nfunction levenshtein(diffs) {\n  let leven = 0, insertions = 0, deletions = 0;\n  for (let x = 0; x < diffs.length; x++) {\n    const op = diffs[x][0], data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        leven += Math.max(insertions, deletions), insertions = 0, deletions = 0;\n        break;\n      default:\n        throw new Error(\"Unknown diff operation.\");\n    }\n  }\n  return leven += Math.max(insertions, deletions), leven;\n}\nfunction xIndex(diffs, loc) {\n  let chars1 = 0, chars2 = 0, lastChars1 = 0, lastChars2 = 0, x;\n  for (x = 0; x < diffs.length && (diffs[x][0] !== DIFF_INSERT && (chars1 += diffs[x][1].length), diffs[x][0] !== DIFF_DELETE && (chars2 += diffs[x][1].length), !(chars1 > loc)); x++)\n    lastChars1 = chars1, lastChars2 = chars2;\n  return diffs.length !== x && diffs[x][0] === DIFF_DELETE ? lastChars2 : lastChars2 + (loc - lastChars1);\n}\nfunction countUtf8Bytes(str) {\n  let bytes = 0;\n  for (let i = 0; i < str.length; i++) {\n    const codePoint = str.codePointAt(i);\n    if (typeof codePoint > \"u\")\n      throw new Error(\"Failed to get codepoint\");\n    bytes += utf8len(codePoint);\n  }\n  return bytes;\n}\nfunction adjustIndiciesToUcs2(patches, base, options = {}) {\n  let byteOffset = 0, idx = 0;\n  function advanceTo(target) {\n    for (; byteOffset < target; ) {\n      const codePoint = base.codePointAt(idx);\n      if (typeof codePoint > \"u\")\n        return idx;\n      byteOffset += utf8len(codePoint), codePoint > 65535 ? idx += 2 : idx += 1;\n    }\n    if (!options.allowExceedingIndices && byteOffset !== target)\n      throw new Error(\"Failed to determine byte offset\");\n    return idx;\n  }\n  const adjusted = [];\n  for (const patch of patches)\n    adjusted.push({\n      diffs: patch.diffs.map((diff2) => cloneDiff(diff2)),\n      start1: advanceTo(patch.start1),\n      start2: advanceTo(patch.start2),\n      utf8Start1: patch.utf8Start1,\n      utf8Start2: patch.utf8Start2,\n      length1: patch.length1,\n      length2: patch.length2,\n      utf8Length1: patch.utf8Length1,\n      utf8Length2: patch.utf8Length2\n    });\n  return adjusted;\n}\nfunction utf8len(codePoint) {\n  return codePoint <= 127 ? 1 : codePoint <= 2047 ? 2 : codePoint <= 65535 ? 3 : 4;\n}\nconst MAX_BITS = 32, DEFAULT_MARGIN = 4;\nfunction addPadding(patches, margin = DEFAULT_MARGIN) {\n  const paddingLength = margin;\n  let nullPadding = \"\";\n  for (let x = 1; x <= paddingLength; x++)\n    nullPadding += String.fromCharCode(x);\n  for (const p of patches)\n    p.start1 += paddingLength, p.start2 += paddingLength, p.utf8Start1 += paddingLength, p.utf8Start2 += paddingLength;\n  let patch = patches[0], diffs = patch.diffs;\n  if (diffs.length === 0 || diffs[0][0] !== DIFF_EQUAL)\n    diffs.unshift([DIFF_EQUAL, nullPadding]), patch.start1 -= paddingLength, patch.start2 -= paddingLength, patch.utf8Start1 -= paddingLength, patch.utf8Start2 -= paddingLength, patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[0][1].length) {\n    const firstDiffLength = diffs[0][1].length, extraLength = paddingLength - firstDiffLength;\n    diffs[0][1] = nullPadding.substring(firstDiffLength) + diffs[0][1], patch.start1 -= extraLength, patch.start2 -= extraLength, patch.utf8Start1 -= extraLength, patch.utf8Start2 -= extraLength, patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  if (patch = patches[patches.length - 1], diffs = patch.diffs, diffs.length === 0 || diffs[diffs.length - 1][0] !== DIFF_EQUAL)\n    diffs.push([DIFF_EQUAL, nullPadding]), patch.length1 += paddingLength, patch.length2 += paddingLength, patch.utf8Length1 += paddingLength, patch.utf8Length2 += paddingLength;\n  else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    const extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength), patch.length1 += extraLength, patch.length2 += extraLength, patch.utf8Length1 += extraLength, patch.utf8Length2 += extraLength;\n  }\n  return nullPadding;\n}\nfunction createPatchObject(start1, start2) {\n  return {\n    diffs: [],\n    start1,\n    start2,\n    utf8Start1: start1,\n    utf8Start2: start2,\n    length1: 0,\n    length2: 0,\n    utf8Length1: 0,\n    utf8Length2: 0\n  };\n}\nfunction splitMax(patches, margin = DEFAULT_MARGIN) {\n  const patchSize = MAX_BITS;\n  for (let x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patchSize)\n      continue;\n    const bigpatch = patches[x];\n    patches.splice(x--, 1);\n    let start1 = bigpatch.start1, start2 = bigpatch.start2, preContext = \"\";\n    for (; bigpatch.diffs.length !== 0; ) {\n      const patch = createPatchObject(start1 - preContext.length, start2 - preContext.length);\n      let empty = !0;\n      if (preContext !== \"\") {\n        const precontextByteCount = countUtf8Bytes(preContext);\n        patch.length1 = preContext.length, patch.utf8Length1 = precontextByteCount, patch.length2 = preContext.length, patch.utf8Length2 = precontextByteCount, patch.diffs.push([DIFF_EQUAL, preContext]);\n      }\n      for (; bigpatch.diffs.length !== 0 && patch.length1 < patchSize - margin; ) {\n        const diffType = bigpatch.diffs[0][0];\n        let diffText = bigpatch.diffs[0][1], diffTextByteCount = countUtf8Bytes(diffText);\n        if (diffType === DIFF_INSERT) {\n          patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length;\n          const diff2 = bigpatch.diffs.shift();\n          diff2 && patch.diffs.push(diff2), empty = !1;\n        } else diffType === DIFF_DELETE && patch.diffs.length === 1 && patch.diffs[0][0] === DIFF_EQUAL && diffText.length > 2 * patchSize ? (patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, empty = !1, patch.diffs.push([diffType, diffText]), bigpatch.diffs.shift()) : (diffText = diffText.substring(0, patchSize - patch.length1 - margin), diffTextByteCount = countUtf8Bytes(diffText), patch.length1 += diffText.length, patch.utf8Length1 += diffTextByteCount, start1 += diffText.length, diffType === DIFF_EQUAL ? (patch.length2 += diffText.length, patch.utf8Length2 += diffTextByteCount, start2 += diffText.length) : empty = !1, patch.diffs.push([diffType, diffText]), diffText === bigpatch.diffs[0][1] ? bigpatch.diffs.shift() : bigpatch.diffs[0][1] = bigpatch.diffs[0][1].substring(diffText.length));\n      }\n      preContext = diffText2(patch.diffs), preContext = preContext.substring(preContext.length - margin);\n      const postContext = diffText1(bigpatch.diffs).substring(0, margin), postContextByteCount = countUtf8Bytes(postContext);\n      postContext !== \"\" && (patch.length1 += postContext.length, patch.length2 += postContext.length, patch.utf8Length1 += postContextByteCount, patch.utf8Length2 += postContextByteCount, patch.diffs.length !== 0 && patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL ? patch.diffs[patch.diffs.length - 1][1] += postContext : patch.diffs.push([DIFF_EQUAL, postContext])), empty || patches.splice(++x, 0, patch);\n    }\n  }\n}\nfunction apply(patches, originalText, opts = {}) {\n  if (typeof patches == \"string\")\n    throw new Error(\"Patches must be an array - pass the patch to `parsePatch()` first\");\n  let text = originalText;\n  if (patches.length === 0)\n    return [text, []];\n  const parsed = adjustIndiciesToUcs2(patches, text, {\n    allowExceedingIndices: opts.allowExceedingIndices\n  }), margin = opts.margin || DEFAULT_MARGIN, deleteThreshold = opts.deleteThreshold || 0.4, nullPadding = addPadding(parsed, margin);\n  text = nullPadding + text + nullPadding, splitMax(parsed, margin);\n  let delta = 0;\n  const results = [];\n  for (let x = 0; x < parsed.length; x++) {\n    const expectedLoc = parsed[x].start2 + delta, text1 = diffText1(parsed[x].diffs);\n    let startLoc, endLoc = -1;\n    if (text1.length > MAX_BITS ? (startLoc = match(text, text1.substring(0, MAX_BITS), expectedLoc), startLoc !== -1 && (endLoc = match(\n      text,\n      text1.substring(text1.length - MAX_BITS),\n      expectedLoc + text1.length - MAX_BITS\n    ), (endLoc === -1 || startLoc >= endLoc) && (startLoc = -1))) : startLoc = match(text, text1, expectedLoc), startLoc === -1)\n      results[x] = !1, delta -= parsed[x].length2 - parsed[x].length1;\n    else {\n      results[x] = !0, delta = startLoc - expectedLoc;\n      let text2;\n      if (endLoc === -1 ? text2 = text.substring(startLoc, startLoc + text1.length) : text2 = text.substring(startLoc, endLoc + MAX_BITS), text1 === text2)\n        text = text.substring(0, startLoc) + diffText2(parsed[x].diffs) + text.substring(startLoc + text1.length);\n      else {\n        let diffs = diff(text1, text2, { checkLines: !1 });\n        if (text1.length > MAX_BITS && levenshtein(diffs) / text1.length > deleteThreshold)\n          results[x] = !1;\n        else {\n          diffs = cleanupSemanticLossless(diffs);\n          let index1 = 0, index2 = 0;\n          for (let y = 0; y < parsed[x].diffs.length; y++) {\n            const mod = parsed[x].diffs[y];\n            mod[0] !== DIFF_EQUAL && (index2 = xIndex(diffs, index1)), mod[0] === DIFF_INSERT ? text = text.substring(0, startLoc + index2) + mod[1] + text.substring(startLoc + index2) : mod[0] === DIFF_DELETE && (text = text.substring(0, startLoc + index2) + text.substring(startLoc + xIndex(diffs, index1 + mod[1].length))), mod[0] !== DIFF_DELETE && (index1 += mod[1].length);\n          }\n        }\n      }\n    }\n  }\n  return text = text.substring(nullPadding.length, text.length - nullPadding.length), [text, results];\n}\nvar __defProp = Object.defineProperty, __getOwnPropSymbols = Object.getOwnPropertySymbols, __hasOwnProp = Object.prototype.hasOwnProperty, __propIsEnum = Object.prototype.propertyIsEnumerable, __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: !0, configurable: !0, writable: !0, value }) : obj[key] = value, __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    __hasOwnProp.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b))\n      __propIsEnum.call(b, prop) && __defNormalProp(a, prop, b[prop]);\n  return a;\n};\nconst DEFAULT_OPTS = {\n  margin: 4\n};\nfunction getDefaultOpts(opts = {}) {\n  return __spreadValues(__spreadValues({}, DEFAULT_OPTS), opts);\n}\nfunction make(a, b, options) {\n  if (typeof a == \"string\" && typeof b == \"string\") {\n    let diffs = diff(a, b, { checkLines: !0 });\n    return diffs.length > 2 && (diffs = cleanupSemantic(diffs), diffs = cleanupEfficiency(diffs)), _make(a, diffs, getDefaultOpts(options));\n  }\n  if (a && Array.isArray(a) && typeof b > \"u\")\n    return _make(diffText1(a), a, getDefaultOpts(options));\n  if (typeof a == \"string\" && b && Array.isArray(b))\n    return _make(a, b, getDefaultOpts(options));\n  throw new Error(\"Unknown call format to make()\");\n}\nfunction _make(textA, diffs, options) {\n  if (diffs.length === 0)\n    return [];\n  const patches = [];\n  let patch = createPatchObject(0, 0), patchDiffLength = 0, charCount1 = 0, charCount2 = 0, utf8Count1 = 0, utf8Count2 = 0, prepatchText = textA, postpatchText = textA;\n  for (let x = 0; x < diffs.length; x++) {\n    const currentDiff = diffs[x], [diffType, diffText] = currentDiff, diffTextLength = diffText.length, diffByteLength = countUtf8Bytes(diffText);\n    switch (!patchDiffLength && diffType !== DIFF_EQUAL && (patch.start1 = charCount1, patch.start2 = charCount2, patch.utf8Start1 = utf8Count1, patch.utf8Start2 = utf8Count2), diffType) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = currentDiff, patch.length2 += diffTextLength, patch.utf8Length2 += diffByteLength, postpatchText = postpatchText.substring(0, charCount2) + diffText + postpatchText.substring(charCount2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.diffs[patchDiffLength++] = currentDiff, postpatchText = postpatchText.substring(0, charCount2) + postpatchText.substring(charCount2 + diffTextLength);\n        break;\n      case DIFF_EQUAL:\n        diffTextLength <= 2 * options.margin && patchDiffLength && diffs.length !== x + 1 ? (patch.diffs[patchDiffLength++] = currentDiff, patch.length1 += diffTextLength, patch.length2 += diffTextLength, patch.utf8Length1 += diffByteLength, patch.utf8Length2 += diffByteLength) : diffTextLength >= 2 * options.margin && patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch), patch = createPatchObject(-1, -1), patchDiffLength = 0, prepatchText = postpatchText, charCount1 = charCount2, utf8Count1 = utf8Count2);\n        break;\n      default:\n        throw new Error(\"Unknown diff type\");\n    }\n    diffType !== DIFF_INSERT && (charCount1 += diffTextLength, utf8Count1 += diffByteLength), diffType !== DIFF_DELETE && (charCount2 += diffTextLength, utf8Count2 += diffByteLength);\n  }\n  return patchDiffLength && (addContext(patch, prepatchText, options), patches.push(patch)), patches;\n}\nfunction addContext(patch, text, opts) {\n  if (text.length === 0)\n    return;\n  let pattern = text.substring(patch.start2, patch.start2 + patch.length1), padding = 0;\n  for (; text.indexOf(pattern) !== text.lastIndexOf(pattern) && pattern.length < MAX_BITS - opts.margin - opts.margin; )\n    padding += opts.margin, pattern = text.substring(patch.start2 - padding, patch.start2 + patch.length1 + padding);\n  padding += opts.margin;\n  let prefixStart = patch.start2 - padding;\n  prefixStart >= 1 && isLowSurrogate(text[prefixStart]) && prefixStart--;\n  const prefix = text.substring(prefixStart, patch.start2);\n  prefix && patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  const prefixLength = prefix.length, prefixUtf8Length = countUtf8Bytes(prefix);\n  let suffixEnd = patch.start2 + patch.length1 + padding;\n  suffixEnd < text.length && isLowSurrogate(text[suffixEnd]) && suffixEnd++;\n  const suffix = text.substring(patch.start2 + patch.length1, suffixEnd);\n  suffix && patch.diffs.push([DIFF_EQUAL, suffix]);\n  const suffixLength = suffix.length, suffixUtf8Length = countUtf8Bytes(suffix);\n  patch.start1 -= prefixLength, patch.start2 -= prefixLength, patch.utf8Start1 -= prefixUtf8Length, patch.utf8Start2 -= prefixUtf8Length, patch.length1 += prefixLength + suffixLength, patch.length2 += prefixLength + suffixLength, patch.utf8Length1 += prefixUtf8Length + suffixUtf8Length, patch.utf8Length2 += prefixUtf8Length + suffixUtf8Length;\n}\nconst patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\nfunction parse(textline) {\n  if (!textline)\n    return [];\n  const patches = [], lines = textline.split(`\n`);\n  let textPointer = 0;\n  for (; textPointer < lines.length; ) {\n    const m = lines[textPointer].match(patchHeader);\n    if (!m)\n      throw new Error(`Invalid patch string: ${lines[textPointer]}`);\n    const patch = createPatchObject(toInt(m[1]), toInt(m[3]));\n    for (patches.push(patch), m[2] === \"\" ? (patch.start1--, patch.utf8Start1--, patch.length1 = 1, patch.utf8Length1 = 1) : m[2] === \"0\" ? (patch.length1 = 0, patch.utf8Length1 = 0) : (patch.start1--, patch.utf8Start1--, patch.utf8Length1 = toInt(m[2]), patch.length1 = patch.utf8Length1), m[4] === \"\" ? (patch.start2--, patch.utf8Start2--, patch.length2 = 1, patch.utf8Length2 = 1) : m[4] === \"0\" ? (patch.length2 = 0, patch.utf8Length2 = 0) : (patch.start2--, patch.utf8Start2--, patch.utf8Length2 = toInt(m[4]), patch.length2 = patch.utf8Length2), textPointer++; textPointer < lines.length; ) {\n      const currentLine = lines[textPointer], sign = currentLine.charAt(0);\n      if (sign === \"@\")\n        break;\n      if (sign === \"\") {\n        textPointer++;\n        continue;\n      }\n      let line;\n      try {\n        line = decodeURI(currentLine.slice(1));\n      } catch (ex) {\n        throw new Error(`Illegal escape in parse: ${currentLine}`);\n      }\n      const utf8Diff = countUtf8Bytes(line) - line.length;\n      if (sign === \"-\")\n        patch.diffs.push([DIFF_DELETE, line]), patch.length1 -= utf8Diff;\n      else if (sign === \"+\")\n        patch.diffs.push([DIFF_INSERT, line]), patch.length2 -= utf8Diff;\n      else if (sign === \" \")\n        patch.diffs.push([DIFF_EQUAL, line]), patch.length1 -= utf8Diff, patch.length2 -= utf8Diff;\n      else\n        throw new Error(`Invalid patch mode \"${sign}\" in: ${line}`);\n      textPointer++;\n    }\n  }\n  return patches;\n}\nfunction toInt(num) {\n  return parseInt(num, 10);\n}\nfunction stringify(patches) {\n  return patches.map(stringifyPatch).join(\"\");\n}\nfunction stringifyPatch(patch) {\n  const { utf8Length1, utf8Length2, utf8Start1, utf8Start2, diffs } = patch;\n  let coords1;\n  utf8Length1 === 0 ? coords1 = `${utf8Start1},0` : utf8Length1 === 1 ? coords1 = `${utf8Start1 + 1}` : coords1 = `${utf8Start1 + 1},${utf8Length1}`;\n  let coords2;\n  utf8Length2 === 0 ? coords2 = `${utf8Start2},0` : utf8Length2 === 1 ? coords2 = `${utf8Start2 + 1}` : coords2 = `${utf8Start2 + 1},${utf8Length2}`;\n  const text = [`@@ -${coords1} +${coords2} @@\n`];\n  let op;\n  for (let x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        op = \"+\";\n        break;\n      case DIFF_DELETE:\n        op = \"-\";\n        break;\n      case DIFF_EQUAL:\n        op = \" \";\n        break;\n      default:\n        throw new Error(\"Unknown patch operation.\");\n    }\n    text[x + 1] = `${op + encodeURI(diffs[x][1])}\n`;\n  }\n  return text.join(\"\").replace(/%20/g, \" \");\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@sanity/diff-match-patch/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@vercel/stega/dist/index.mjs":
/*!***************************************************!*\
  !*** ./node_modules/@vercel/stega/dist/index.mjs ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERCEL_STEGA_REGEX: () => (/* binding */ f),\n/* harmony export */   legacyStegaEncode: () => (/* binding */ y),\n/* harmony export */   vercelStegaClean: () => (/* binding */ O),\n/* harmony export */   vercelStegaCombine: () => (/* binding */ C),\n/* harmony export */   vercelStegaDecode: () => (/* binding */ G),\n/* harmony export */   vercelStegaDecodeAll: () => (/* binding */ $),\n/* harmony export */   vercelStegaEncode: () => (/* binding */ E),\n/* harmony export */   vercelStegaSplit: () => (/* binding */ _)\n/* harmony export */ });\nvar s={0:8203,1:8204,2:8205,3:8290,4:8291,5:8288,6:65279,7:8289,8:119155,9:119156,a:119157,b:119158,c:119159,d:119160,e:119161,f:119162},c={0:8203,1:8204,2:8205,3:65279},u=new Array(4).fill(String.fromCodePoint(c[0])).join(\"\"),m=String.fromCharCode(0);function E(t){let e=JSON.stringify(t);return`${u}${Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(4).padStart(4,\"0\")).map(o=>String.fromCodePoint(c[o])).join(\"\")}).join(\"\")}`}function y(t){let e=JSON.stringify(t);return Array.from(e).map(r=>{let n=r.charCodeAt(0);if(n>255)throw new Error(`Only ASCII edit info can be encoded. Error attempting to encode ${e} on character ${r} (${n})`);return Array.from(n.toString(16).padStart(2,\"0\")).map(o=>String.fromCodePoint(s[o])).join(\"\")}).join(\"\")}function I(t){return!Number.isNaN(Number(t))||/[a-z]/i.test(t)&&!/\\d+(?:[-:\\/]\\d+){2}(?:T\\d+(?:[-:\\/]\\d+){1,2}(\\.\\d+)?Z?)?/.test(t)?!1:Boolean(Date.parse(t))}function T(t){try{new URL(t,t.startsWith(\"/\")?\"https://acme.com\":void 0)}catch{return!1}return!0}function C(t,e,r=\"auto\"){return r===!0||r===\"auto\"&&(I(t)||T(t))?t:`${t}${E(e)}`}var x=Object.fromEntries(Object.entries(c).map(t=>t.reverse())),g=Object.fromEntries(Object.entries(s).map(t=>t.reverse())),S=`${Object.values(s).map(t=>`\\\\u{${t.toString(16)}}`).join(\"\")}`,f=new RegExp(`[${S}]{4,}`,\"gu\");function G(t){let e=t.match(f);if(!!e)return h(e[0],!0)[0]}function $(t){let e=t.match(f);if(!!e)return e.map(r=>h(r)).flat()}function h(t,e=!1){let r=Array.from(t);if(r.length%2===0){if(r.length%4||!t.startsWith(u))return A(r,e)}else throw new Error(\"Encoded data has invalid length\");let n=[];for(let o=r.length*.25;o--;){let p=r.slice(o*4,o*4+4).map(d=>x[d.codePointAt(0)]).join(\"\");n.unshift(String.fromCharCode(parseInt(p,4)))}if(e){n.shift();let o=n.indexOf(m);return o===-1&&(o=n.length),[JSON.parse(n.slice(0,o).join(\"\"))]}return n.join(\"\").split(m).filter(Boolean).map(o=>JSON.parse(o))}function A(t,e){var d;let r=[];for(let i=t.length*.5;i--;){let a=`${g[t[i*2].codePointAt(0)]}${g[t[i*2+1].codePointAt(0)]}`;r.unshift(String.fromCharCode(parseInt(a,16)))}let n=[],o=[r.join(\"\")],p=10;for(;o.length;){let i=o.shift();try{if(n.push(JSON.parse(i)),e)return n}catch(a){if(!p--)throw a;let l=+((d=a.message.match(/\\sposition\\s(\\d+)$/))==null?void 0:d[1]);if(!l)throw a;o.unshift(i.substring(0,l),i.substring(l))}}return n}function _(t){var e;return{cleaned:t.replace(f,\"\"),encoded:((e=t.match(f))==null?void 0:e[0])||\"\"}}function O(t){return t&&JSON.parse(_(JSON.stringify(t)).cleaned)}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUEsT0FBTyxpSUFBaUksSUFBSSw2QkFBNkIsbUZBQW1GLGNBQWMsd0JBQXdCLFNBQVMsRUFBRSxFQUFFLHNCQUFzQixzQkFBc0IsNEZBQTRGLEdBQUcsZUFBZSxHQUFHLEdBQUcsRUFBRSxJQUFJLDZGQUE2RixXQUFXLEVBQUUsY0FBYyx3QkFBd0IsNkJBQTZCLHNCQUFzQiw0RkFBNEYsR0FBRyxlQUFlLEdBQUcsR0FBRyxFQUFFLElBQUksOEZBQThGLFdBQVcsY0FBYyxxRUFBcUUsRUFBRSxxQkFBcUIsSUFBSSxnREFBZ0QsY0FBYyxJQUFJLHVEQUF1RCxNQUFNLFNBQVMsU0FBUyx5QkFBeUIsNkNBQTZDLEVBQUUsRUFBRSxLQUFLLEVBQUUsaUlBQWlJLDZCQUE2QixFQUFFLGdCQUFnQixZQUFZLG1CQUFtQixFQUFFLEVBQUUsR0FBRyxRQUFRLGNBQWMsaUJBQWlCLDRCQUE0QixjQUFjLGlCQUFpQixvQ0FBb0MsbUJBQW1CLG9CQUFvQixtQkFBbUIsOENBQThDLHdEQUF3RCxTQUFTLHVCQUF1QixJQUFJLEVBQUUsOERBQThELDhDQUE4QyxNQUFNLFVBQVUsbUJBQW1CLGdFQUFnRSxpRUFBaUUsZ0JBQWdCLE1BQU0sU0FBUyxzQkFBc0IsSUFBSSxFQUFFLFNBQVMseUJBQXlCLEVBQUUsMkJBQTJCLEVBQUUsK0NBQStDLDZCQUE2QixLQUFLLFNBQVMsRUFBRSxnQkFBZ0IsSUFBSSxvQ0FBb0MsU0FBUyxnQkFBZ0IscUVBQXFFLGNBQWMsNENBQTRDLFNBQVMsY0FBYyxNQUFNLE9BQU8sd0VBQXdFLGNBQWMsbURBQXNQIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9AdmVyY2VsL3N0ZWdhL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBzPXswOjgyMDMsMTo4MjA0LDI6ODIwNSwzOjgyOTAsNDo4MjkxLDU6ODI4OCw2OjY1Mjc5LDc6ODI4OSw4OjExOTE1NSw5OjExOTE1NixhOjExOTE1NyxiOjExOTE1OCxjOjExOTE1OSxkOjExOTE2MCxlOjExOTE2MSxmOjExOTE2Mn0sYz17MDo4MjAzLDE6ODIwNCwyOjgyMDUsMzo2NTI3OX0sdT1uZXcgQXJyYXkoNCkuZmlsbChTdHJpbmcuZnJvbUNvZGVQb2ludChjWzBdKSkuam9pbihcIlwiKSxtPVN0cmluZy5mcm9tQ2hhckNvZGUoMCk7ZnVuY3Rpb24gRSh0KXtsZXQgZT1KU09OLnN0cmluZ2lmeSh0KTtyZXR1cm5gJHt1fSR7QXJyYXkuZnJvbShlKS5tYXAocj0+e2xldCBuPXIuY2hhckNvZGVBdCgwKTtpZihuPjI1NSl0aHJvdyBuZXcgRXJyb3IoYE9ubHkgQVNDSUkgZWRpdCBpbmZvIGNhbiBiZSBlbmNvZGVkLiBFcnJvciBhdHRlbXB0aW5nIHRvIGVuY29kZSAke2V9IG9uIGNoYXJhY3RlciAke3J9ICgke259KWApO3JldHVybiBBcnJheS5mcm9tKG4udG9TdHJpbmcoNCkucGFkU3RhcnQoNCxcIjBcIikpLm1hcChvPT5TdHJpbmcuZnJvbUNvZGVQb2ludChjW29dKSkuam9pbihcIlwiKX0pLmpvaW4oXCJcIil9YH1mdW5jdGlvbiB5KHQpe2xldCBlPUpTT04uc3RyaW5naWZ5KHQpO3JldHVybiBBcnJheS5mcm9tKGUpLm1hcChyPT57bGV0IG49ci5jaGFyQ29kZUF0KDApO2lmKG4+MjU1KXRocm93IG5ldyBFcnJvcihgT25seSBBU0NJSSBlZGl0IGluZm8gY2FuIGJlIGVuY29kZWQuIEVycm9yIGF0dGVtcHRpbmcgdG8gZW5jb2RlICR7ZX0gb24gY2hhcmFjdGVyICR7cn0gKCR7bn0pYCk7cmV0dXJuIEFycmF5LmZyb20obi50b1N0cmluZygxNikucGFkU3RhcnQoMixcIjBcIikpLm1hcChvPT5TdHJpbmcuZnJvbUNvZGVQb2ludChzW29dKSkuam9pbihcIlwiKX0pLmpvaW4oXCJcIil9ZnVuY3Rpb24gSSh0KXtyZXR1cm4hTnVtYmVyLmlzTmFOKE51bWJlcih0KSl8fC9bYS16XS9pLnRlc3QodCkmJiEvXFxkKyg/OlstOlxcL11cXGQrKXsyfSg/OlRcXGQrKD86Wy06XFwvXVxcZCspezEsMn0oXFwuXFxkKyk/Wj8pPy8udGVzdCh0KT8hMTpCb29sZWFuKERhdGUucGFyc2UodCkpfWZ1bmN0aW9uIFQodCl7dHJ5e25ldyBVUkwodCx0LnN0YXJ0c1dpdGgoXCIvXCIpP1wiaHR0cHM6Ly9hY21lLmNvbVwiOnZvaWQgMCl9Y2F0Y2h7cmV0dXJuITF9cmV0dXJuITB9ZnVuY3Rpb24gQyh0LGUscj1cImF1dG9cIil7cmV0dXJuIHI9PT0hMHx8cj09PVwiYXV0b1wiJiYoSSh0KXx8VCh0KSk/dDpgJHt0fSR7RShlKX1gfXZhciB4PU9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhjKS5tYXAodD0+dC5yZXZlcnNlKCkpKSxnPU9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhzKS5tYXAodD0+dC5yZXZlcnNlKCkpKSxTPWAke09iamVjdC52YWx1ZXMocykubWFwKHQ9PmBcXFxcdXske3QudG9TdHJpbmcoMTYpfX1gKS5qb2luKFwiXCIpfWAsZj1uZXcgUmVnRXhwKGBbJHtTfV17NCx9YCxcImd1XCIpO2Z1bmN0aW9uIEcodCl7bGV0IGU9dC5tYXRjaChmKTtpZighIWUpcmV0dXJuIGgoZVswXSwhMClbMF19ZnVuY3Rpb24gJCh0KXtsZXQgZT10Lm1hdGNoKGYpO2lmKCEhZSlyZXR1cm4gZS5tYXAocj0+aChyKSkuZmxhdCgpfWZ1bmN0aW9uIGgodCxlPSExKXtsZXQgcj1BcnJheS5mcm9tKHQpO2lmKHIubGVuZ3RoJTI9PT0wKXtpZihyLmxlbmd0aCU0fHwhdC5zdGFydHNXaXRoKHUpKXJldHVybiBBKHIsZSl9ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJFbmNvZGVkIGRhdGEgaGFzIGludmFsaWQgbGVuZ3RoXCIpO2xldCBuPVtdO2ZvcihsZXQgbz1yLmxlbmd0aCouMjU7by0tOyl7bGV0IHA9ci5zbGljZShvKjQsbyo0KzQpLm1hcChkPT54W2QuY29kZVBvaW50QXQoMCldKS5qb2luKFwiXCIpO24udW5zaGlmdChTdHJpbmcuZnJvbUNoYXJDb2RlKHBhcnNlSW50KHAsNCkpKX1pZihlKXtuLnNoaWZ0KCk7bGV0IG89bi5pbmRleE9mKG0pO3JldHVybiBvPT09LTEmJihvPW4ubGVuZ3RoKSxbSlNPTi5wYXJzZShuLnNsaWNlKDAsbykuam9pbihcIlwiKSldfXJldHVybiBuLmpvaW4oXCJcIikuc3BsaXQobSkuZmlsdGVyKEJvb2xlYW4pLm1hcChvPT5KU09OLnBhcnNlKG8pKX1mdW5jdGlvbiBBKHQsZSl7dmFyIGQ7bGV0IHI9W107Zm9yKGxldCBpPXQubGVuZ3RoKi41O2ktLTspe2xldCBhPWAke2dbdFtpKjJdLmNvZGVQb2ludEF0KDApXX0ke2dbdFtpKjIrMV0uY29kZVBvaW50QXQoMCldfWA7ci51bnNoaWZ0KFN0cmluZy5mcm9tQ2hhckNvZGUocGFyc2VJbnQoYSwxNikpKX1sZXQgbj1bXSxvPVtyLmpvaW4oXCJcIildLHA9MTA7Zm9yKDtvLmxlbmd0aDspe2xldCBpPW8uc2hpZnQoKTt0cnl7aWYobi5wdXNoKEpTT04ucGFyc2UoaSkpLGUpcmV0dXJuIG59Y2F0Y2goYSl7aWYoIXAtLSl0aHJvdyBhO2xldCBsPSsoKGQ9YS5tZXNzYWdlLm1hdGNoKC9cXHNwb3NpdGlvblxccyhcXGQrKSQvKSk9PW51bGw/dm9pZCAwOmRbMV0pO2lmKCFsKXRocm93IGE7by51bnNoaWZ0KGkuc3Vic3RyaW5nKDAsbCksaS5zdWJzdHJpbmcobCkpfX1yZXR1cm4gbn1mdW5jdGlvbiBfKHQpe3ZhciBlO3JldHVybntjbGVhbmVkOnQucmVwbGFjZShmLFwiXCIpLGVuY29kZWQ6KChlPXQubWF0Y2goZikpPT1udWxsP3ZvaWQgMDplWzBdKXx8XCJcIn19ZnVuY3Rpb24gTyh0KXtyZXR1cm4gdCYmSlNPTi5wYXJzZShfKEpTT04uc3RyaW5naWZ5KHQpKS5jbGVhbmVkKX1leHBvcnR7ZiBhcyBWRVJDRUxfU1RFR0FfUkVHRVgseSBhcyBsZWdhY3lTdGVnYUVuY29kZSxPIGFzIHZlcmNlbFN0ZWdhQ2xlYW4sQyBhcyB2ZXJjZWxTdGVnYUNvbWJpbmUsRyBhcyB2ZXJjZWxTdGVnYURlY29kZSwkIGFzIHZlcmNlbFN0ZWdhRGVjb2RlQWxsLEUgYXMgdmVyY2VsU3RlZ2FFbmNvZGUsXyBhcyB2ZXJjZWxTdGVnYVNwbGl0fTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@vercel/stega/dist/index.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/compute-scroll-into-view/dist/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/compute-scroll-into-view/dist/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compute: () => (/* binding */ r)\n/* harmony export */ });\nconst t=t=>\"object\"==typeof t&&null!=t&&1===t.nodeType,e=(t,e)=>(!e||\"hidden\"!==t)&&(\"visible\"!==t&&\"clip\"!==t),n=(t,n)=>{if(t.clientHeight<t.scrollHeight||t.clientWidth<t.scrollWidth){const o=getComputedStyle(t,null);return e(o.overflowY,n)||e(o.overflowX,n)||(t=>{const e=(t=>{if(!t.ownerDocument||!t.ownerDocument.defaultView)return null;try{return t.ownerDocument.defaultView.frameElement}catch(t){return null}})(t);return!!e&&(e.clientHeight<t.scrollHeight||e.clientWidth<t.scrollWidth)})(t)}return!1},o=(t,e,n,o,l,r,i,s)=>r<t&&i>e||r>t&&i<e?0:r<=t&&s<=n||i>=e&&s>=n?r-t-o:i>e&&s<n||r<t&&s>n?i-e+l:0,l=t=>{const e=t.parentElement;return null==e?t.getRootNode().host||null:e},r=(e,r)=>{var i,s,d,h;if(\"undefined\"==typeof document)return[];const{scrollMode:c,block:f,inline:u,boundary:a,skipOverflowHiddenElements:g}=r,p=\"function\"==typeof a?a:t=>t!==a;if(!t(e))throw new TypeError(\"Invalid target\");const m=document.scrollingElement||document.documentElement,w=[];let W=e;for(;t(W)&&p(W);){if(W=l(W),W===m){w.push(W);break}null!=W&&W===document.body&&n(W)&&!n(document.documentElement)||null!=W&&n(W,g)&&w.push(W)}const b=null!=(s=null==(i=window.visualViewport)?void 0:i.width)?s:innerWidth,H=null!=(h=null==(d=window.visualViewport)?void 0:d.height)?h:innerHeight,{scrollX:y,scrollY:M}=window,{height:v,width:E,top:x,right:C,bottom:I,left:R}=e.getBoundingClientRect(),{top:T,right:B,bottom:F,left:V}=(t=>{const e=window.getComputedStyle(t);return{top:parseFloat(e.scrollMarginTop)||0,right:parseFloat(e.scrollMarginRight)||0,bottom:parseFloat(e.scrollMarginBottom)||0,left:parseFloat(e.scrollMarginLeft)||0}})(e);let k=\"start\"===f||\"nearest\"===f?x-T:\"end\"===f?I+F:x+v/2-T+F,D=\"center\"===u?R+E/2-V+B:\"end\"===u?C+B:R-V;const L=[];for(let t=0;t<w.length;t++){const e=w[t],{height:n,width:l,top:r,right:i,bottom:s,left:d}=e.getBoundingClientRect();if(\"if-needed\"===c&&x>=0&&R>=0&&I<=H&&C<=b&&x>=r&&I<=s&&R>=d&&C<=i)return L;const h=getComputedStyle(e),a=parseInt(h.borderLeftWidth,10),g=parseInt(h.borderTopWidth,10),p=parseInt(h.borderRightWidth,10),W=parseInt(h.borderBottomWidth,10);let T=0,B=0;const F=\"offsetWidth\"in e?e.offsetWidth-e.clientWidth-a-p:0,V=\"offsetHeight\"in e?e.offsetHeight-e.clientHeight-g-W:0,S=\"offsetWidth\"in e?0===e.offsetWidth?0:l/e.offsetWidth:0,X=\"offsetHeight\"in e?0===e.offsetHeight?0:n/e.offsetHeight:0;if(m===e)T=\"start\"===f?k:\"end\"===f?k-H:\"nearest\"===f?o(M,M+H,H,g,W,M+k,M+k+v,v):k-H/2,B=\"start\"===u?D:\"center\"===u?D-b/2:\"end\"===u?D-b:o(y,y+b,b,a,p,y+D,y+D+E,E),T=Math.max(0,T+M),B=Math.max(0,B+y);else{T=\"start\"===f?k-r-g:\"end\"===f?k-s+W+V:\"nearest\"===f?o(r,s,n,g,W+V,k,k+v,v):k-(r+n/2)+V/2,B=\"start\"===u?D-d-a:\"center\"===u?D-(d+l/2)+F/2:\"end\"===u?D-i+p+F:o(d,i,l,a,p+F,D,D+E,E);const{scrollLeft:t,scrollTop:h}=e;T=0===X?0:Math.max(0,Math.min(h+T/X,e.scrollHeight-n/X+V)),B=0===S?0:Math.max(0,Math.min(t+B/S,e.scrollWidth-l/S+F)),k+=h-T,D+=t-B}L.push({el:e,top:T,left:B})}return L};//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9jb21wdXRlLXNjcm9sbC1pbnRvLXZpZXcvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsMEhBQTBILCtEQUErRCxpQ0FBaUMsZ0RBQWdELGFBQWEsOERBQThELElBQUksZ0RBQWdELFNBQVMsYUFBYSxLQUFLLHdFQUF3RSxLQUFLLFNBQVMseUdBQXlHLHdCQUF3Qiw0Q0FBNEMsV0FBVyxZQUFZLHlDQUF5QyxNQUFNLHNFQUFzRSxxQ0FBcUMsK0NBQStDLGlFQUFpRSxRQUFRLEtBQUssV0FBVyxFQUFFLGlCQUFpQixVQUFVLE1BQU0sMkZBQTJGLHlKQUF5SixvQkFBb0IsU0FBUywrQ0FBK0MsNEJBQTRCLDhCQUE4QixNQUFNLG1DQUFtQyxPQUFPLGlLQUFpSyxLQUFLLHdHQUF3RyxXQUFXLFlBQVksV0FBVyxLQUFLLGNBQWMsK0NBQStDLDJCQUEyQiw0RUFBNEUsa0tBQWtLLFlBQVksNE9BQTRPLHNNQUFzTSxLQUFLLGlMQUFpTCxNQUFNLHlCQUF5QixHQUFHLG1JQUFtSSxRQUFRLGtCQUFrQixFQUFFLFVBQStCIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9jb21wdXRlLXNjcm9sbC1pbnRvLXZpZXcvZGlzdC9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB0PXQ9Plwib2JqZWN0XCI9PXR5cGVvZiB0JiZudWxsIT10JiYxPT09dC5ub2RlVHlwZSxlPSh0LGUpPT4oIWV8fFwiaGlkZGVuXCIhPT10KSYmKFwidmlzaWJsZVwiIT09dCYmXCJjbGlwXCIhPT10KSxuPSh0LG4pPT57aWYodC5jbGllbnRIZWlnaHQ8dC5zY3JvbGxIZWlnaHR8fHQuY2xpZW50V2lkdGg8dC5zY3JvbGxXaWR0aCl7Y29uc3Qgbz1nZXRDb21wdXRlZFN0eWxlKHQsbnVsbCk7cmV0dXJuIGUoby5vdmVyZmxvd1ksbil8fGUoby5vdmVyZmxvd1gsbil8fCh0PT57Y29uc3QgZT0odD0+e2lmKCF0Lm93bmVyRG9jdW1lbnR8fCF0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcpcmV0dXJuIG51bGw7dHJ5e3JldHVybiB0Lm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXcuZnJhbWVFbGVtZW50fWNhdGNoKHQpe3JldHVybiBudWxsfX0pKHQpO3JldHVybiEhZSYmKGUuY2xpZW50SGVpZ2h0PHQuc2Nyb2xsSGVpZ2h0fHxlLmNsaWVudFdpZHRoPHQuc2Nyb2xsV2lkdGgpfSkodCl9cmV0dXJuITF9LG89KHQsZSxuLG8sbCxyLGkscyk9PnI8dCYmaT5lfHxyPnQmJmk8ZT8wOnI8PXQmJnM8PW58fGk+PWUmJnM+PW4/ci10LW86aT5lJiZzPG58fHI8dCYmcz5uP2ktZStsOjAsbD10PT57Y29uc3QgZT10LnBhcmVudEVsZW1lbnQ7cmV0dXJuIG51bGw9PWU/dC5nZXRSb290Tm9kZSgpLmhvc3R8fG51bGw6ZX0scj0oZSxyKT0+e3ZhciBpLHMsZCxoO2lmKFwidW5kZWZpbmVkXCI9PXR5cGVvZiBkb2N1bWVudClyZXR1cm5bXTtjb25zdHtzY3JvbGxNb2RlOmMsYmxvY2s6ZixpbmxpbmU6dSxib3VuZGFyeTphLHNraXBPdmVyZmxvd0hpZGRlbkVsZW1lbnRzOmd9PXIscD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBhP2E6dD0+dCE9PWE7aWYoIXQoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgdGFyZ2V0XCIpO2NvbnN0IG09ZG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudHx8ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LHc9W107bGV0IFc9ZTtmb3IoO3QoVykmJnAoVyk7KXtpZihXPWwoVyksVz09PW0pe3cucHVzaChXKTticmVha31udWxsIT1XJiZXPT09ZG9jdW1lbnQuYm9keSYmbihXKSYmIW4oZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KXx8bnVsbCE9VyYmbihXLGcpJiZ3LnB1c2goVyl9Y29uc3QgYj1udWxsIT0ocz1udWxsPT0oaT13aW5kb3cudmlzdWFsVmlld3BvcnQpP3ZvaWQgMDppLndpZHRoKT9zOmlubmVyV2lkdGgsSD1udWxsIT0oaD1udWxsPT0oZD13aW5kb3cudmlzdWFsVmlld3BvcnQpP3ZvaWQgMDpkLmhlaWdodCk/aDppbm5lckhlaWdodCx7c2Nyb2xsWDp5LHNjcm9sbFk6TX09d2luZG93LHtoZWlnaHQ6dix3aWR0aDpFLHRvcDp4LHJpZ2h0OkMsYm90dG9tOkksbGVmdDpSfT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHt0b3A6VCxyaWdodDpCLGJvdHRvbTpGLGxlZnQ6Vn09KHQ9Pntjb25zdCBlPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpO3JldHVybnt0b3A6cGFyc2VGbG9hdChlLnNjcm9sbE1hcmdpblRvcCl8fDAscmlnaHQ6cGFyc2VGbG9hdChlLnNjcm9sbE1hcmdpblJpZ2h0KXx8MCxib3R0b206cGFyc2VGbG9hdChlLnNjcm9sbE1hcmdpbkJvdHRvbSl8fDAsbGVmdDpwYXJzZUZsb2F0KGUuc2Nyb2xsTWFyZ2luTGVmdCl8fDB9fSkoZSk7bGV0IGs9XCJzdGFydFwiPT09Znx8XCJuZWFyZXN0XCI9PT1mP3gtVDpcImVuZFwiPT09Zj9JK0Y6eCt2LzItVCtGLEQ9XCJjZW50ZXJcIj09PXU/UitFLzItVitCOlwiZW5kXCI9PT11P0MrQjpSLVY7Y29uc3QgTD1bXTtmb3IobGV0IHQ9MDt0PHcubGVuZ3RoO3QrKyl7Y29uc3QgZT13W3RdLHtoZWlnaHQ6bix3aWR0aDpsLHRvcDpyLHJpZ2h0OmksYm90dG9tOnMsbGVmdDpkfT1lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO2lmKFwiaWYtbmVlZGVkXCI9PT1jJiZ4Pj0wJiZSPj0wJiZJPD1IJiZDPD1iJiZ4Pj1yJiZJPD1zJiZSPj1kJiZDPD1pKXJldHVybiBMO2NvbnN0IGg9Z2V0Q29tcHV0ZWRTdHlsZShlKSxhPXBhcnNlSW50KGguYm9yZGVyTGVmdFdpZHRoLDEwKSxnPXBhcnNlSW50KGguYm9yZGVyVG9wV2lkdGgsMTApLHA9cGFyc2VJbnQoaC5ib3JkZXJSaWdodFdpZHRoLDEwKSxXPXBhcnNlSW50KGguYm9yZGVyQm90dG9tV2lkdGgsMTApO2xldCBUPTAsQj0wO2NvbnN0IEY9XCJvZmZzZXRXaWR0aFwiaW4gZT9lLm9mZnNldFdpZHRoLWUuY2xpZW50V2lkdGgtYS1wOjAsVj1cIm9mZnNldEhlaWdodFwiaW4gZT9lLm9mZnNldEhlaWdodC1lLmNsaWVudEhlaWdodC1nLVc6MCxTPVwib2Zmc2V0V2lkdGhcImluIGU/MD09PWUub2Zmc2V0V2lkdGg/MDpsL2Uub2Zmc2V0V2lkdGg6MCxYPVwib2Zmc2V0SGVpZ2h0XCJpbiBlPzA9PT1lLm9mZnNldEhlaWdodD8wOm4vZS5vZmZzZXRIZWlnaHQ6MDtpZihtPT09ZSlUPVwic3RhcnRcIj09PWY/azpcImVuZFwiPT09Zj9rLUg6XCJuZWFyZXN0XCI9PT1mP28oTSxNK0gsSCxnLFcsTStrLE0rayt2LHYpOmstSC8yLEI9XCJzdGFydFwiPT09dT9EOlwiY2VudGVyXCI9PT11P0QtYi8yOlwiZW5kXCI9PT11P0QtYjpvKHkseStiLGIsYSxwLHkrRCx5K0QrRSxFKSxUPU1hdGgubWF4KDAsVCtNKSxCPU1hdGgubWF4KDAsQit5KTtlbHNle1Q9XCJzdGFydFwiPT09Zj9rLXItZzpcImVuZFwiPT09Zj9rLXMrVytWOlwibmVhcmVzdFwiPT09Zj9vKHIscyxuLGcsVytWLGssayt2LHYpOmstKHIrbi8yKStWLzIsQj1cInN0YXJ0XCI9PT11P0QtZC1hOlwiY2VudGVyXCI9PT11P0QtKGQrbC8yKStGLzI6XCJlbmRcIj09PXU/RC1pK3ArRjpvKGQsaSxsLGEscCtGLEQsRCtFLEUpO2NvbnN0e3Njcm9sbExlZnQ6dCxzY3JvbGxUb3A6aH09ZTtUPTA9PT1YPzA6TWF0aC5tYXgoMCxNYXRoLm1pbihoK1QvWCxlLnNjcm9sbEhlaWdodC1uL1grVikpLEI9MD09PVM/MDpNYXRoLm1heCgwLE1hdGgubWluKHQrQi9TLGUuc2Nyb2xsV2lkdGgtbC9TK0YpKSxrKz1oLVQsRCs9dC1CfUwucHVzaCh7ZWw6ZSx0b3A6VCxsZWZ0OkJ9KX1yZXR1cm4gTH07ZXhwb3J0e3IgYXMgY29tcHV0ZX07Ly8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/compute-scroll-into-view/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/mendoza/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/mendoza/dist/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyPatch: () => (/* binding */ applyPatch),\n/* harmony export */   incremental: () => (/* binding */ incrementalPatcher)\n/* harmony export */ });\nconst OPS = [\n  \"Value\",\n  \"Copy\",\n  \"Blank\",\n  \"ReturnIntoArray\",\n  \"ReturnIntoObject\",\n  \"ReturnIntoObjectSameKey\",\n  \"PushField\",\n  \"PushElement\",\n  \"PushParent\",\n  \"Pop\",\n  \"PushFieldCopy\",\n  \"PushFieldBlank\",\n  \"PushElementCopy\",\n  \"PushElementBlank\",\n  \"ReturnIntoObjectPop\",\n  \"ReturnIntoObjectSameKeyPop\",\n  \"ReturnIntoArrayPop\",\n  \"ObjectSetFieldValue\",\n  \"ObjectCopyField\",\n  \"ObjectDeleteField\",\n  \"ArrayAppendValue\",\n  \"ArrayAppendSlice\",\n  \"StringAppendString\",\n  \"StringAppendSlice\"\n];\nclass Patcher {\n  model;\n  root;\n  patch;\n  i;\n  inputStack;\n  outputStack;\n  constructor(model, root, patch) {\n    this.model = model, this.root = root, this.patch = patch, this.i = 0, this.inputStack = [], this.outputStack = [];\n  }\n  read() {\n    return this.patch[this.i++];\n  }\n  process() {\n    for (this.inputStack.push({ value: this.root }), this.outputStack.push({ value: this.root }); this.i < this.patch.length; ) {\n      let opcode = this.read(), op = OPS[opcode];\n      if (!op)\n        throw new Error(`Unknown opcode: ${opcode}`);\n      let processor = `process${op}`;\n      this[processor].apply(this);\n    }\n    let entry = this.outputStack.pop();\n    return this.finalizeOutput(entry);\n  }\n  inputEntry() {\n    return this.inputStack[this.inputStack.length - 1];\n  }\n  inputKey(entry, idx) {\n    return entry.keys || (entry.keys = this.model.objectGetKeys(entry.value).sort()), entry.keys[idx];\n  }\n  outputEntry() {\n    return this.outputStack[this.outputStack.length - 1];\n  }\n  outputArray() {\n    let entry = this.outputEntry();\n    return entry.writeValue || (entry.writeValue = this.model.copyArray(entry.value)), entry.writeValue;\n  }\n  outputObject() {\n    let entry = this.outputEntry();\n    return entry.writeValue || (entry.writeValue = this.model.copyObject(entry.value)), entry.writeValue;\n  }\n  outputString() {\n    let entry = this.outputEntry();\n    return entry.writeValue || (entry.writeValue = this.model.copyString(entry.value)), entry.writeValue;\n  }\n  finalizeOutput(entry) {\n    return entry.writeValue ? this.model.finalize(entry.writeValue) : entry.value;\n  }\n  // Processors:\n  processValue() {\n    let value = this.model.wrap(this.read());\n    this.outputStack.push({ value });\n  }\n  processCopy() {\n    let input = this.inputEntry();\n    this.outputStack.push({ value: input.value });\n  }\n  processBlank() {\n    this.outputStack.push({ value: null });\n  }\n  processReturnIntoArray() {\n    let entry = this.outputStack.pop(), result = this.finalizeOutput(entry), arr = this.outputArray();\n    this.model.arrayAppendValue(arr, result);\n  }\n  processReturnIntoObject() {\n    let key = this.read(), entry = this.outputStack.pop(), result = this.finalizeOutput(entry);\n    result = this.model.markChanged(result);\n    let obj = this.outputObject();\n    this.model.objectSetField(obj, key, result);\n  }\n  processReturnIntoObjectSameKey() {\n    let input = this.inputEntry(), entry = this.outputStack.pop(), result = this.finalizeOutput(entry), obj = this.outputObject();\n    this.model.objectSetField(obj, input.key, result);\n  }\n  processPushField() {\n    let idx = this.read(), entry = this.inputEntry(), key = this.inputKey(entry, idx), value = this.model.objectGetField(entry.value, key);\n    this.inputStack.push({ value, key });\n  }\n  processPushElement() {\n    let idx = this.read(), entry = this.inputEntry(), value = this.model.arrayGetElement(entry.value, idx);\n    this.inputStack.push({ value });\n  }\n  processPop() {\n    this.inputStack.pop();\n  }\n  processPushFieldCopy() {\n    this.processPushField(), this.processCopy();\n  }\n  processPushFieldBlank() {\n    this.processPushField(), this.processBlank();\n  }\n  processPushElementCopy() {\n    this.processPushElement(), this.processCopy();\n  }\n  processPushElementBlank() {\n    this.processPushElement(), this.processBlank();\n  }\n  processReturnIntoObjectPop() {\n    this.processReturnIntoObject(), this.processPop();\n  }\n  processReturnIntoObjectSameKeyPop() {\n    this.processReturnIntoObjectSameKey(), this.processPop();\n  }\n  processReturnIntoArrayPop() {\n    this.processReturnIntoArray(), this.processPop();\n  }\n  processObjectSetFieldValue() {\n    this.processValue(), this.processReturnIntoObject();\n  }\n  processObjectCopyField() {\n    this.processPushField(), this.processCopy(), this.processReturnIntoObjectSameKey(), this.processPop();\n  }\n  processObjectDeleteField() {\n    let idx = this.read(), entry = this.inputEntry(), key = this.inputKey(entry, idx), obj = this.outputObject();\n    this.model.objectDeleteField(obj, key);\n  }\n  processArrayAppendValue() {\n    let value = this.model.wrap(this.read()), arr = this.outputArray();\n    this.model.arrayAppendValue(arr, value);\n  }\n  processArrayAppendSlice() {\n    let left = this.read(), right = this.read(), str = this.outputArray(), val = this.inputEntry().value;\n    this.model.arrayAppendSlice(str, val, left, right);\n  }\n  processStringAppendString() {\n    let value = this.model.wrap(this.read()), str = this.outputString();\n    this.model.stringAppendValue(str, value);\n  }\n  processStringAppendSlice() {\n    let left = this.read(), right = this.read(), str = this.outputString(), val = this.inputEntry().value;\n    this.model.stringAppendSlice(str, val, left, right);\n  }\n}\nfunction utf8charSize(code) {\n  return code >> 16 ? 4 : code >> 11 ? 3 : code >> 7 ? 2 : 1;\n}\nfunction utf8stringSize(str) {\n  let b = 0;\n  for (let i = 0; i < str.length; i++) {\n    let code = str.codePointAt(i), size = utf8charSize(code);\n    size == 4 && i++, b += size;\n  }\n  return b;\n}\nfunction utf8resolveIndex(str, idx, start = 0) {\n  let byteCount = start, ucsIdx = 0;\n  for (ucsIdx = start; byteCount < idx; ucsIdx++) {\n    let code = str.codePointAt(ucsIdx), size = utf8charSize(code);\n    size === 4 && ucsIdx++, byteCount += size;\n  }\n  return ucsIdx;\n}\nfunction commonPrefix(str, str2) {\n  let len = Math.min(str.length, str2.length), b = 0;\n  for (let i = 0; i < len; ) {\n    let aPoint = str.codePointAt(i), bPoint = str2.codePointAt(i);\n    if (aPoint !== bPoint)\n      return b;\n    let size = utf8charSize(aPoint);\n    b += size, i += size === 4 ? 2 : 1;\n  }\n  return b;\n}\nfunction commonSuffix(str, str2, prefix = 0) {\n  let len = Math.min(str.length, str2.length) - prefix, b = 0;\n  for (let i = 0; i < len; ) {\n    let aPoint = str.codePointAt(str.length - 1 - i), bPoint = str2.codePointAt(str2.length - 1 - i);\n    if (aPoint !== bPoint)\n      return b;\n    let size = utf8charSize(aPoint);\n    b += size, i += size === 4 ? 2 : 1;\n  }\n  return b;\n}\nclass IncrementalModel {\n  meta;\n  constructor(meta) {\n    this.meta = meta;\n  }\n  wrap(data) {\n    return this.wrapWithMeta(data, this.meta, this.meta);\n  }\n  wrapWithMeta(data, startMeta, endMeta = this.meta) {\n    return { data, startMeta, endMeta };\n  }\n  asObject(value) {\n    if (!value.content) {\n      let fields = {};\n      for (let [key, val] of Object.entries(value.data))\n        fields[key] = this.wrapWithMeta(val, value.startMeta);\n      value.content = { type: \"object\", fields };\n    }\n    return value.content;\n  }\n  asArray(value) {\n    if (!value.content) {\n      let elements = value.data.map(\n        (item) => this.wrapWithMeta(item, value.startMeta)\n      ), metas = elements.map(() => this.meta);\n      value.content = { type: \"array\", elements, metas };\n    }\n    return value.content;\n  }\n  asString(value) {\n    if (!value.content) {\n      let str = value.data, part = {\n        value: str,\n        utf8size: utf8stringSize(str),\n        uses: [],\n        startMeta: value.startMeta,\n        endMeta: value.endMeta\n      };\n      value.content = this.stringFromParts([part]);\n    }\n    return value.content;\n  }\n  stringFromParts(parts) {\n    let str = {\n      type: \"string\",\n      parts\n    };\n    for (let part of parts)\n      part.uses.push(str);\n    return str;\n  }\n  objectGetKeys(value) {\n    return value.content ? Object.keys(value.content.fields) : Object.keys(value.data);\n  }\n  objectGetField(value, key) {\n    return this.asObject(value).fields[key];\n  }\n  arrayGetElement(value, idx) {\n    return this.asArray(value).elements[idx];\n  }\n  finalize(content) {\n    return this.updateEndMeta(content), { content, startMeta: this.meta, endMeta: this.meta };\n  }\n  markChanged(value) {\n    return this.wrap(unwrap(value));\n  }\n  updateEndMeta(content) {\n    if (content.type == \"string\")\n      for (let part of content.parts)\n        part.endMeta = this.meta;\n    else if (content.type === \"array\")\n      for (let val of content.elements)\n        val.content && val.endMeta !== this.meta && this.updateEndMeta(val.content), val.endMeta = this.meta;\n    else\n      for (let val of Object.values(content.fields))\n        val.content && val.endMeta !== this.meta && this.updateEndMeta(val.content), val.endMeta = this.meta;\n  }\n  copyString(value) {\n    if (value) {\n      let other = this.asString(value);\n      return this.stringFromParts(other.parts.slice());\n    } else\n      return {\n        type: \"string\",\n        parts: []\n      };\n  }\n  copyObject(value) {\n    let obj = {\n      type: \"object\",\n      fields: {}\n    };\n    if (value) {\n      let other = this.asObject(value);\n      Object.assign(obj.fields, other.fields);\n    }\n    return obj;\n  }\n  copyArray(value) {\n    let arr = value ? this.asArray(value) : null, elements = arr ? arr.elements : [], metas = arr ? arr.metas : [];\n    return {\n      type: \"array\",\n      elements,\n      metas\n    };\n  }\n  objectSetField(target, key, value) {\n    target.fields[key] = value;\n  }\n  objectDeleteField(target, key) {\n    delete target.fields[key];\n  }\n  arrayAppendValue(target, value) {\n    target.elements.push(value), target.metas.push(this.meta);\n  }\n  arrayAppendSlice(target, source, left, right) {\n    let arr = this.asArray(source), samePosition = arr.elements.length === left;\n    if (target.elements.push(...arr.elements.slice(left, right)), samePosition)\n      target.metas.push(...arr.metas.slice(left, right));\n    else\n      for (let i = left; i < right; i++)\n        target.metas.push(this.meta);\n  }\n  stringAppendValue(target, value) {\n    let str = this.asString(value);\n    for (let part of str.parts)\n      this.stringAppendPart(target, part);\n  }\n  stringAppendPart(target, part) {\n    target.parts.push(part), part.uses.push(target);\n  }\n  resolveStringPart(str, from, len) {\n    if (len === 0)\n      return from;\n    for (let i = from; i < str.parts.length; i++) {\n      let part = str.parts[i];\n      if (len === part.utf8size)\n        return i + 1;\n      if (len < part.utf8size)\n        return this.splitString(part, len), i + 1;\n      len -= part.utf8size;\n    }\n    throw new Error(\"splitting string out of bounds\");\n  }\n  splitString(part, idx) {\n    let leftValue, rightValue, leftSize = idx, rightSize = part.utf8size - leftSize;\n    if (part.utf8size !== part.value.length) {\n      let byteCount = 0;\n      for (idx = 0; byteCount < leftSize; idx++) {\n        let code = part.value.codePointAt(idx), size = utf8charSize(code);\n        size === 4 && idx++, byteCount += size;\n      }\n    }\n    leftValue = part.value.slice(0, idx), rightValue = part.value.slice(idx);\n    let newPart = {\n      value: rightValue,\n      utf8size: rightSize,\n      uses: part.uses.slice(),\n      startMeta: part.startMeta,\n      endMeta: part.endMeta\n    };\n    part.value = leftValue, part.utf8size = leftSize;\n    for (let use of part.uses) {\n      let ndx = use.parts.indexOf(part);\n      if (ndx === -1)\n        throw new Error(\"bug: mismatch between string parts and use.\");\n      use.parts.splice(ndx + 1, 0, newPart);\n    }\n  }\n  stringAppendSlice(target, source, left, right) {\n    let str = this.asString(source), firstPart = this.resolveStringPart(str, 0, left), lastPart = this.resolveStringPart(str, firstPart, right - left);\n    for (let i = firstPart; i < lastPart; i++) {\n      let part = str.parts[i];\n      this.stringAppendPart(target, part);\n    }\n  }\n}\nfunction wrap(data, meta) {\n  return { data, startMeta: meta, endMeta: meta };\n}\nfunction unwrap(value) {\n  if (typeof value.data < \"u\")\n    return value.data;\n  let result, content = value.content;\n  switch (content.type) {\n    case \"string\":\n      result = content.parts.map((part) => part.value).join(\"\");\n      break;\n    case \"array\":\n      result = content.elements.map((val) => unwrap(val));\n      break;\n    case \"object\": {\n      result = {};\n      for (let [key, val] of Object.entries(content.fields))\n        result[key] = unwrap(val);\n    }\n  }\n  return value.data = result, result;\n}\nfunction getType(value) {\n  return value.content ? value.content.type : Array.isArray(value.data) ? \"array\" : value.data === null ? \"null\" : typeof value.data;\n}\nfunction rebaseValue(left, right) {\n  let leftType = getType(left), rightType = getType(right);\n  if (leftType !== rightType)\n    return right;\n  let leftModel = new IncrementalModel(left.endMeta), rightModel = new IncrementalModel(right.endMeta);\n  switch (leftType) {\n    case \"object\": {\n      let leftObj = leftModel.asObject(left), rightObj = rightModel.asObject(right), identicalFieldCount = 0, leftFieldCount = Object.keys(leftObj.fields).length, rightFieldCount = Object.keys(rightObj.fields).length;\n      for (let [key, rightVal] of Object.entries(rightObj.fields)) {\n        let leftVal = leftObj.fields[key];\n        leftVal && (rightObj.fields[key] = rebaseValue(leftVal, rightVal), rightObj.fields[key] === leftVal && identicalFieldCount++);\n      }\n      return leftFieldCount === rightFieldCount && leftFieldCount === identicalFieldCount ? left : right;\n    }\n    case \"array\": {\n      let leftArr = leftModel.asArray(left), rightArr = rightModel.asArray(right);\n      if (leftArr.elements.length !== rightArr.elements.length)\n        break;\n      let numRebased = 0;\n      for (let i = 0; i < rightArr.elements.length; i++)\n        rightArr.elements[i] = rebaseValue(leftArr.elements[i], rightArr.elements[i]), rightArr.elements[i] !== leftArr.elements[i] && numRebased++;\n      return numRebased === 0 ? left : right;\n    }\n    case \"null\":\n    case \"boolean\":\n    case \"number\": {\n      if (unwrap(left) === unwrap(right))\n        return left;\n      break;\n    }\n    case \"string\": {\n      let leftRaw = unwrap(left), rightRaw = unwrap(right);\n      if (leftRaw === rightRaw)\n        return left;\n      let result = rightModel.copyString(null), prefix = commonPrefix(leftRaw, rightRaw), suffix = commonSuffix(leftRaw, rightRaw, prefix), rightLen = utf8stringSize(rightRaw), leftLen = utf8stringSize(leftRaw);\n      0 < prefix && rightModel.stringAppendSlice(result, left, 0, prefix), prefix < rightLen - suffix && rightModel.stringAppendSlice(result, right, prefix, rightLen - suffix), leftLen - suffix < leftLen && rightModel.stringAppendSlice(result, left, leftLen - suffix, leftLen);\n      let value = rightModel.finalize(result);\n      if (unwrap(value) !== rightRaw)\n        throw new Error(\"incorrect string rebase\");\n      return value;\n    }\n  }\n  return right;\n}\nfunction applyPatch$1(left, patch, startMeta) {\n  let model = new IncrementalModel(startMeta);\n  return new Patcher(model, left, patch).process();\n}\nvar incrementalPatcher = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  applyPatch: applyPatch$1,\n  getType,\n  rebaseValue,\n  unwrap,\n  wrap\n});\nclass SimpleModel {\n  wrap(data) {\n    return data;\n  }\n  finalize(b) {\n    return Array.isArray(b) ? b : b.data;\n  }\n  markChanged(value) {\n    return value;\n  }\n  objectGetKeys(value) {\n    return Object.keys(value);\n  }\n  objectGetField(value, key) {\n    return value[key];\n  }\n  arrayGetElement(value, idx) {\n    return value[idx];\n  }\n  copyObject(value) {\n    let res = {\n      type: \"object\",\n      data: {}\n    };\n    if (value !== null)\n      for (let [key, val] of Object.entries(value))\n        res.data[key] = val;\n    return res;\n  }\n  copyArray(value) {\n    return value === null ? [] : value.slice();\n  }\n  copyString(value) {\n    return {\n      type: \"string\",\n      data: value === null ? \"\" : value\n    };\n  }\n  objectSetField(target, key, value) {\n    target.data[key] = value;\n  }\n  objectDeleteField(target, key) {\n    delete target.data[key];\n  }\n  arrayAppendValue(target, value) {\n    target.push(value);\n  }\n  arrayAppendSlice(target, source, left, right) {\n    target.push(...source.slice(left, right));\n  }\n  stringAppendSlice(target, source, left, right) {\n    const sourceString = source, leftPos = utf8resolveIndex(sourceString, left), rightPos = utf8resolveIndex(sourceString, right, leftPos);\n    target.data += sourceString.slice(leftPos, rightPos);\n  }\n  stringAppendValue(target, value) {\n    target.data += value;\n  }\n}\nfunction applyPatch(left, patch) {\n  let root = left;\n  return new Patcher(new SimpleModel(), root, patch).process();\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/mendoza/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/dist/_chunks-es/VisualEditing.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next-sanity/dist/_chunks-es/VisualEditing.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ VisualEditing)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-experimental/jsx-runtime.js\");\n/* harmony import */ var _sanity_visual_editing_react__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/visual-editing/react */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js\");\n/* harmony import */ var next_navigation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation.js */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var next_sanity_visual_editing_server_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next-sanity/visual-editing/server-actions */ \"(app-pages-browser)/./node_modules/next-sanity/dist/visual-editing/server-actions.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-experimental/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom-experimental/index.js\");\n\n\n\n\n\n\nfunction pathHasPrefix(path, prefix) {\n  if (typeof path != \"string\")\n    return !1;\n  const { pathname } = parsePath(path);\n  return pathname === prefix || pathname.startsWith(`${prefix}/`);\n}\nfunction parsePath(path) {\n  const hashIndex = path.indexOf(\"#\"), queryIndex = path.indexOf(\"?\"), hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n  return hasQuery || hashIndex > -1 ? {\n    pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n    query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : void 0) : \"\",\n    hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n  } : { pathname: path, query: \"\", hash: \"\" };\n}\nfunction addPathPrefix(path, prefix) {\n  if (!path.startsWith(\"/\") || !prefix)\n    return path;\n  if (path === \"/\" && prefix)\n    return prefix;\n  const { pathname, query, hash } = parsePath(path);\n  return `${prefix}${pathname}${query}${hash}`;\n}\nfunction removePathPrefix(path, prefix) {\n  if (!pathHasPrefix(path, prefix))\n    return path;\n  const withoutPrefix = path.slice(prefix.length);\n  return withoutPrefix.startsWith(\"/\") ? withoutPrefix : `/${withoutPrefix}`;\n}\nconst normalizePathTrailingSlash = (path, trailingSlash) => {\n  const { pathname, query, hash } = parsePath(path);\n  return trailingSlash ? pathname.endsWith(\"/\") ? `${pathname}${query}${hash}` : `${pathname}/${query}${hash}` : `${removeTrailingSlash(pathname)}${query}${hash}`;\n};\nfunction removeTrailingSlash(route) {\n  return route.replace(/\\/$/, \"\") || \"/\";\n}\nfunction VisualEditing(props) {\n  const { basePath = \"\", components, refresh, trailingSlash = !1, zIndex } = props, router = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_1__.useRouter)(), routerRef = (0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(router), [navigate, setNavigate] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)();\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    routerRef.current = router;\n  }, [router]);\n  const history = (0,react__WEBPACK_IMPORTED_MODULE_2__.useMemo)(\n    () => ({\n      subscribe: (_navigate) => (setNavigate(() => _navigate), () => setNavigate(void 0)),\n      update: (update) => {\n        switch (update.type) {\n          case \"push\":\n            return routerRef.current.push(removePathPrefix(update.url, basePath));\n          case \"pop\":\n            return routerRef.current.back();\n          case \"replace\":\n            return routerRef.current.replace(removePathPrefix(update.url, basePath));\n          default:\n            throw new Error(`Unknown update type: ${update.type}`);\n        }\n      }\n    }),\n    [basePath]\n  ), pathname = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_1__.usePathname)(), searchParams = (0,next_navigation_js__WEBPACK_IMPORTED_MODULE_1__.useSearchParams)();\n  (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    navigate && navigate({\n      type: \"push\",\n      url: normalizePathTrailingSlash(\n        addPathPrefix(`${pathname}${searchParams?.size ? `?${searchParams}` : \"\"}`, basePath),\n        trailingSlash\n      )\n    });\n  }, [basePath, navigate, pathname, searchParams, trailingSlash]);\n  const handleRefresh = (0,react__WEBPACK_IMPORTED_MODULE_2__.useCallback)(\n    (payload) => {\n      if (refresh) return refresh(payload);\n      const manualFastRefresh = () => (console.debug(\n        \"Live preview is setup, calling router.refresh() to refresh the server components without refetching cached data\"\n      ), routerRef.current.refresh(), Promise.resolve()), manualFallbackRefresh = () => (console.debug(\n        \"No loaders in live mode detected, or preview kit setup, revalidating root layout\"\n      ), (0,next_sanity_visual_editing_server_actions__WEBPACK_IMPORTED_MODULE_4__.revalidateRootLayout)()), mutationFastRefresh = () => (console.debug(\n        \"Live preview is setup, mutation is skipped assuming its handled by the live preview\"\n      ), !1), mutationFallbackRefresh = () => (console.debug(\n        \"No loaders in live mode detected, or preview kit setup, revalidating root layout\"\n      ), (0,next_sanity_visual_editing_server_actions__WEBPACK_IMPORTED_MODULE_4__.revalidateRootLayout)());\n      switch (payload.source) {\n        case \"manual\":\n          return payload.livePreviewEnabled ? manualFastRefresh() : manualFallbackRefresh();\n        case \"mutation\":\n          return payload.livePreviewEnabled ? mutationFastRefresh() : mutationFallbackRefresh();\n        default:\n          throw new Error(\"Unknown refresh source\", { cause: payload });\n      }\n    },\n    [refresh]\n  ), [node, setNode] = (0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(null);\n  return (0,react__WEBPACK_IMPORTED_MODULE_2__.useEffect)(() => {\n    const node2 = document.createElement(\"div\");\n    return node2.id = \"sanity-visual-editing\", document.documentElement.appendChild(node2), setNode(node2), () => {\n      setNode(null), document.documentElement.contains(node2) && document.documentElement.removeChild(node2);\n    };\n  }, []), node ? (0,react_dom__WEBPACK_IMPORTED_MODULE_3__.createPortal)(\n    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\n      _sanity_visual_editing_react__WEBPACK_IMPORTED_MODULE_5__.VisualEditing,\n      {\n        components,\n        history,\n        refresh: handleRefresh,\n        zIndex\n      }\n    ),\n    node\n  ) : null;\n}\n\n//# sourceMappingURL=VisualEditing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/dist/_chunks-es/VisualEditing.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/dist/visual-editing/server-actions.js":
/*!************************************************************************!*\
  !*** ./node_modules/next-sanity/dist/visual-editing/server-actions.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   revalidateRootLayout: () => (/* binding */ revalidateRootLayout)
/* harmony export */ });
/* harmony import */ var private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! private-next-rsc-action-client-wrapper */ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-loader/action-client-wrapper.js");
/* __next_internal_action_entry_do_not_use__ {"7f8e037ee5ff6cab7a0c0220a1d6e9d13cb42fece8":"revalidateRootLayout"} */ 
var revalidateRootLayout = /*#__PURE__*/ (0,private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.createServerReference)("7f8e037ee5ff6cab7a0c0220a1d6e9d13cb42fece8", private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.callServer, void 0, private_next_rsc_action_client_wrapper__WEBPACK_IMPORTED_MODULE_0__.findSourceMapURL, "revalidateRootLayout");
 //# sourceMappingURL=server-actions.js.map


/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/comlink/dist/index.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/comlink/dist/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMAIN: () => (/* binding */ I),\n/* harmony export */   HANDSHAKE_INTERVAL: () => (/* binding */ R),\n/* harmony export */   HANDSHAKE_MSG_TYPES: () => (/* binding */ _),\n/* harmony export */   HEARTBEAT_INTERVAL: () => (/* binding */ S),\n/* harmony export */   INTERNAL_MSG_TYPES: () => (/* binding */ z),\n/* harmony export */   MSG_DISCONNECT: () => (/* binding */ A),\n/* harmony export */   MSG_HANDSHAKE_ACK: () => (/* binding */ j),\n/* harmony export */   MSG_HANDSHAKE_SYN: () => (/* binding */ B),\n/* harmony export */   MSG_HANDSHAKE_SYN_ACK: () => (/* binding */ M),\n/* harmony export */   MSG_HEARTBEAT: () => (/* binding */ $),\n/* harmony export */   MSG_RESPONSE: () => (/* binding */ O),\n/* harmony export */   RESPONSE_TIMEOUT: () => (/* binding */ w),\n/* harmony export */   createChannel: () => (/* binding */ P),\n/* harmony export */   createChannelMachine: () => (/* binding */ N),\n/* harmony export */   createController: () => (/* binding */ G),\n/* harmony export */   createListenLogic: () => (/* binding */ E),\n/* harmony export */   createNode: () => (/* binding */ J),\n/* harmony export */   createNodeMachine: () => (/* binding */ H),\n/* harmony export */   createRequestMachine: () => (/* binding */ D)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/log-ef30c65f.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/fromEvent.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/pipe.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/bufferCount.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/concatMap.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/take.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/empty.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js\");\nconst x=e=>({context:t})=>{const{count:s,include:n,exclude:a,responseType:r=\"message.received\"}=e;return{count:s,domain:t.domain,from:t.connectTo,include:n?Array.isArray(n)?n:[n]:[],exclude:a?Array.isArray(a)?a:[a]:[],responseType:r,target:t.target,to:t.name}},T=(0,rxjs__WEBPACK_IMPORTED_MODULE_0__.defer)((()=>(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window,\"message\"))),E=e=>(0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)((({input:t})=>{return T.pipe(e?(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)(e):(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)(),(0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)((e=>t=>{const{data:s}=t;return(!e.include.length||e.include.includes(s.type))&&(!e.exclude.length||!e.exclude.includes(s.type))&&s.domain===e.domain&&s.from===e.from&&s.to===e.to&&(!e.target||t.source===e.target)})(t)),(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)((s=t.responseType,e=>({type:s,message:e}))),t.count?(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)((0,rxjs__WEBPACK_IMPORTED_MODULE_6__.bufferCount)(t.count),(0,rxjs__WEBPACK_IMPORTED_MODULE_7__.concatMap)((e=>e)),(0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(t.count)):(0,rxjs__WEBPACK_IMPORTED_MODULE_4__.pipe)());var s})),I=\"sanity/comlink\",w=1e4,S=1e3,R=500,O=\"comlink/response\",$=\"comlink/heartbeat\",A=\"comlink/disconnect\",B=\"comlink/handshake/syn\",M=\"comlink/handshake/syn-ack\",j=\"comlink/handshake/ack\",_=[B,M,j],z=[O,A,$,..._],D=()=>(0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({types:{},actors:{listen:(0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromEventObservable)((({input:e})=>{const t=e.signal?(0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(e.signal,\"abort\").pipe((s=`Request ${e.requestId} aborted`,e=>e.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(1),(0,rxjs__WEBPACK_IMPORTED_MODULE_3__.map)((()=>{throw new Error(s)}))))):rxjs__WEBPACK_IMPORTED_MODULE_10__.EMPTY;var s;return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.fromEvent)(window,\"message\").pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_5__.filter)((t=>t.data?.type===O&&t.data?.responseTo===e.requestId&&!!t.source&&e.sources.has(t.source))),(0,rxjs__WEBPACK_IMPORTED_MODULE_8__.take)(e.sources.size),(0,rxjs__WEBPACK_IMPORTED_MODULE_11__.takeUntil)(t))}))},actions:{\"send message\":({context:e},t)=>{const{sources:s,targetOrigin:n}=e,{message:a}=t;s.forEach((e=>{e.postMessage(a,{targetOrigin:n})}))},\"on success\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)((({context:e})=>e.parentRef),(({context:e,self:t})=>(e.response&&e.resolvable?.resolve(e.response),{type:\"request.success\",requestId:t.id,response:e.response,responseTo:e.responseTo}))),\"on fail\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)((({context:e})=>e.parentRef),(({context:e,self:t})=>(console.warn(`Received no response to message '${e.type}' on client '${e.from}' (ID: '${e.id}').`),e.resolvable?.reject(new Error(\"No response received\")),{type:\"request.failed\",requestId:t.id}))),\"on abort\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.c)((({context:e})=>e.parentRef),(({context:e,self:t})=>(e.resolvable?.reject(new Error(\"Request aborted\")),{type:\"request.aborted\",requestId:t.id})))},guards:{expectsResponse:({context:e})=>e.expectResponse},delays:{initialTimeout:0,responseTimeout:1e4}}).createMachine({context:({input:t})=>({connectionId:t.connectionId,data:t.data,domain:t.domain,expectResponse:t.expectResponse??!1,from:t.from,id:`msg-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,parentRef:t.parentRef,resolvable:t.resolvable,response:null,responseTo:t.responseTo,signal:t.signal,sources:t.sources instanceof Set?t.sources:new Set([t.sources]),targetOrigin:t.targetOrigin,to:t.to,type:t.type}),initial:\"idle\",on:{abort:\".aborted\"},states:{idle:{after:{initialTimeout:[{target:\"sending\"}]}},sending:{entry:{type:\"send message\",params:({context:e})=>{const{connectionId:t,data:s,domain:n,from:a,id:r,responseTo:o,to:i,type:c}=e;return{message:{connectionId:t,data:s,domain:n,from:a,id:r,to:i,type:c,responseTo:o}}}},always:[{guard:\"expectsResponse\",target:\"awaiting\"},\"success\"]},awaiting:{invoke:{id:\"listen for response\",src:\"listen\",input:({context:e})=>({requestId:e.id,sources:e.sources,signal:e.signal}),onError:\"aborted\"},after:{responseTimeout:\"failed\"},on:{message:{actions:(0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({response:({event:e})=>e.data.data,responseTo:({event:e})=>e.data.responseTo}),target:\"success\"}}},failed:{type:\"final\",entry:\"on fail\"},success:{type:\"final\",entry:\"on success\"},aborted:{type:\"final\",entry:\"on abort\"}},output:({context:e,self:t})=>({requestId:t.id,response:e.response,responseTo:e.responseTo})}),C=(0,xstate__WEBPACK_IMPORTED_MODULE_2__.fromCallback)((({sendBack:e,input:t})=>{const s=()=>{e(t.event)};t.immediate&&s();const n=setInterval(s,t.interval);return()=>{clearInterval(n)}})),N=()=>(0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({types:{},actors:{requestMachine:D(),listen:E(),sendBackAtInterval:C},actions:{\"buffer message\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({enqueue:e})=>{e.assign({buffer:({event:e,context:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"post\"),[...t.buffer,e.data])}),e.emit((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"post\"),{type:\"_buffer.added\",message:e.data})))})),\"create request\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({requests:({context:t,event:s,self:n,spawn:a})=>{(0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(s,\"request\");const r=(Array.isArray(s.data)?s.data:[s.data]).map((s=>{const r=`req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;return a(\"requestMachine\",{id:r,input:{connectionId:t.connectionId,data:s.data,domain:t.domain,expectResponse:s.expectResponse,from:t.name,parentRef:n,responseTo:s.responseTo,sources:t.target,targetOrigin:t.targetOrigin,to:t.connectTo,type:s.type}})}));return[...t.requests,...r]}}),\"emit received message\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({enqueue:e})=>{e.emit((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),{type:\"_message\",message:e.message.data}))),e.emit((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),{type:e.message.data.type,message:e.message.data})))})),\"flush buffer\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({enqueue:e})=>{e.raise((({context:e})=>({type:\"request\",data:e.buffer.map((({data:e,type:t})=>({data:e,type:t})))}))),e.emit((({context:e})=>({type:\"_buffer.flushed\",messages:e.buffer}))),e.assign({buffer:[]})})),post:(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"post\"),{type:\"request\",data:{data:e.data.data,expectResponse:!0,type:e.data.type}}))),\"remove request\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({context:e,enqueue:t,event:s})=>{(0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(s,[\"request.success\",\"request.failed\",\"request.aborted\"]),(0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(s.requestId),t.assign({requests:e.requests.filter((({id:e})=>e!==s.requestId))})})),respond:(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"response\"),{type:\"request\",data:{data:e.data,type:O,responseTo:e.respondTo}}))),\"send handshake ack\":(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({type:\"request\",data:{type:j}}),\"send disconnect\":(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)((()=>({type:\"request\",data:{type:A}}))),\"send handshake syn\":(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({type:\"request\",data:{type:B}}),\"set target\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({target:({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"target.set\"),e.target)})},guards:{\"has target\":({context:e})=>!!e.target,\"should send heartbeats\":({context:e})=>e.heartbeat}}).createMachine({id:\"channel\",context:({input:t})=>({id:t.id||`${t.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,buffer:[],connectionId:`cnx-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,connectTo:t.connectTo,domain:t.domain??I,heartbeat:t.heartbeat??!1,name:t.name,requests:[],target:t.target,targetOrigin:t.targetOrigin}),on:{\"target.set\":{actions:\"set target\"},\"request.success\":{actions:\"remove request\"},\"request.failed\":{actions:\"remove request\"}},initial:\"idle\",states:{idle:{on:{connect:{target:\"handshaking\",guard:\"has target\"},post:{actions:\"buffer message\"}}},handshaking:{id:\"handshaking\",invoke:[{id:\"send syn\",src:\"sendBackAtInterval\",input:()=>({event:{type:\"syn\"},interval:500,immediate:!0})},{id:\"listen for handshake\",src:\"listen\",input:e=>x({include:M,count:1})(e)}],on:{syn:{actions:\"send handshake syn\"},request:{actions:\"create request\"},post:{actions:\"buffer message\"},\"message.received\":{target:\"connected\"},disconnect:{target:\"disconnected\"}},exit:\"send handshake ack\"},connected:{entry:\"flush buffer\",invoke:{id:\"listen for messages\",src:\"listen\",input:x({exclude:[O,$]})},on:{post:{actions:\"post\"},request:{actions:\"create request\"},response:{actions:\"respond\"},\"message.received\":{actions:\"emit received message\"},disconnect:{target:\"disconnected\"}},initial:\"heartbeat\",states:{heartbeat:{initial:\"checking\",states:{checking:{always:{guard:\"should send heartbeats\",target:\"sending\"}},sending:{on:{\"request.failed\":{target:\"#handshaking\"}},invoke:{id:\"send heartbeat\",src:\"sendBackAtInterval\",input:()=>({event:{type:\"post\",data:{type:$,data:void 0}},interval:2e3,immediate:!1})}}}}}},disconnected:{id:\"disconnected\",entry:\"send disconnect\",on:{request:{actions:\"create request\"},post:{actions:\"buffer message\"},connect:{target:\"handshaking\",guard:\"has target\"}}}}}),P=(t,s=N())=>{const n=t.id||`${t.name}-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`,a=(0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(s,{input:{...t,id:n}}),r=()=>{a.stop()};return{actor:a,connect:()=>{a.send({type:\"connect\"})},disconnect:()=>{a.send({type:\"disconnect\"})},id:n,name:t.name,machine:s,on:(e,t)=>{const{unsubscribe:s}=a.on(e,(async e=>{const s=await t(e.message.data);s&&a.send({type:\"response\",respondTo:e.message.id,data:s})}));return s},onStatus:e=>{const t=a.getSnapshot();let s=\"string\"==typeof t.value?t.value:Object.keys(t.value)[0];const{unsubscribe:n}=a.subscribe((t=>{const n=\"string\"==typeof t.value?t.value:Object.keys(t.value)[0];s!==n&&(s=n,e(n))}));return n},post:e=>{a.send({type:\"post\",data:e})},setTarget:e=>{a.send({type:\"target.set\",target:e})},start:()=>(a.start(),r),stop:r,get target(){return a.getSnapshot().context.target}}},F=()=>{},G=e=>{const{targetOrigin:t}=e,s=new Set,n=new Set,a=e=>{e.disconnect(),setTimeout((()=>{e.stop()}),0)};return{addTarget:e=>{if(s.has(e))return F;if(!s.size||!n.size)return s.add(e),n.forEach((t=>{t.channels.forEach((t=>{t.setTarget(e),t.connect()}))})),()=>{s.delete(e),n.forEach((t=>{t.channels.forEach((t=>{t.target===e&&t.disconnect()}))}))};s.add(e);const r=new Set;return n.forEach((s=>{const n=P({...s.input,target:e,targetOrigin:t},s.machine);r.add(n),s.channels.add(n),s.subscribers.forEach((({type:e,handler:t,unsubscribers:s})=>{s.push(n.on(e,t))})),s.internalEventSubscribers.forEach((({type:e,handler:t,unsubscribers:s})=>{s.push(n.actor.on(e,t).unsubscribe)})),s.statusSubscribers.forEach((({handler:e,unsubscribers:t})=>{t.push(n.onStatus((t=>e({channel:n.id,status:t}))))})),n.start(),n.connect()})),()=>{s.delete(e),r.forEach((e=>{a(e),n.forEach((t=>{t.channels.delete(e)}))}))}},createConnection:(e,a=N())=>{const r={channels:new Set,input:e,internalEventSubscribers:new Set,machine:a,statusSubscribers:new Set,subscribers:new Set};n.add(r);const{channels:o,internalEventSubscribers:i,statusSubscribers:c,subscribers:d}=r;if(s.size)s.forEach((s=>{const n=P({...e,target:s,targetOrigin:t},a);o.add(n)}));else{const s=P({...e,targetOrigin:t},a);o.add(s)}const u=()=>{o.forEach((e=>{e.disconnect(),e.stop()}))};return{on:(e,t)=>{const s=[];o.forEach((n=>{s.push(n.on(e,t))}));const n={type:e,handler:t,unsubscribers:s};return d.add(n),()=>{s.forEach((e=>e())),d.delete(n)}},onInternalEvent:(e,t)=>{const s=[];o.forEach((n=>{s.push(n.actor.on(e,t).unsubscribe)}));const n={type:e,handler:t,unsubscribers:s};return i.add(n),()=>{s.forEach((e=>e())),i.delete(n)}},onStatus:e=>{const t=[];o.forEach((s=>{t.push(s.onStatus((t=>e({channel:s.id,status:t}))))}));const s={handler:e,unsubscribers:t};return c.add(s),()=>{t.forEach((e=>e())),c.delete(s)}},post:e=>{o.forEach((t=>{t.post(e)}))},start:()=>(o.forEach((e=>{e.start(),e.connect()})),u),stop:u}},destroy:()=>{n.forEach((({channels:e})=>{e.forEach((t=>{a(t),e.delete(t)}))}))}}},H=()=>(0,xstate__WEBPACK_IMPORTED_MODULE_9__.setup)({types:{},actors:{requestMachine:D(),listen:E()},actions:{\"buffer incoming message\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({handshakeBuffer:({event:e,context:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),[...t.handshakeBuffer,e])}),\"buffer message\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({enqueue:e})=>{e.assign({buffer:({event:e,context:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"post\"),[...t.buffer,{data:e.data,resolvable:e.resolvable,signal:e.signal}])}),e.emit((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"post\"),{type:\"_buffer.added\",message:e.data})))})),\"create request\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({requests:({context:t,event:s,self:n,spawn:a})=>{(0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(s,\"request\");const r=(Array.isArray(s.data)?s.data:[s.data]).map((s=>{const r=`req-${(0,uuid__WEBPACK_IMPORTED_MODULE_13__[\"default\"])()}`;return a(\"requestMachine\",{id:r,input:{connectionId:t.connectionId,data:s.data,domain:t.domain,expectResponse:s.expectResponse,from:t.name,parentRef:n,resolvable:s.resolvable,responseTo:s.responseTo,sources:t.target,targetOrigin:t.targetOrigin,to:t.connectTo,type:s.type,signal:s.signal}})}));return[...t.requests,...r]}}),\"emit heartbeat\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.e)((()=>({type:\"_heartbeat\"}))),\"emit received message\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({enqueue:e})=>{e.emit((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),{type:\"_message\",message:e.message.data}))),e.emit((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),{type:e.message.data.type,message:e.message.data})))})),\"flush buffer\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({enqueue:e})=>{e.raise((({context:e})=>({type:\"request\",data:e.buffer.map((({data:e,resolvable:t,signal:s})=>({data:e.data,type:e.type,expectResponse:!!t,resolvable:t,signal:s})))}))),e.emit((({context:e})=>({type:\"_buffer.flushed\",messages:e.buffer.map((({data:e})=>e))}))),e.assign({buffer:[]})})),\"flush handshake buffer\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({context:e,enqueue:t})=>{e.handshakeBuffer.forEach((e=>t.raise(e))),t.assign({handshakeBuffer:[]})})),post:(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"post\"),{type:\"request\",data:{data:e.data.data,expectResponse:!!e.resolvable,type:e.data.type,resolvable:e.resolvable,signal:e.signal}}))),\"remove request\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.b)((({context:e,enqueue:t,event:s})=>{(0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(s,[\"request.success\",\"request.failed\",\"request.aborted\"]),(0,xstate__WEBPACK_IMPORTED_MODULE_14__.R)(s.requestId),t.assign({requests:e.requests.filter((({id:e})=>e!==s.requestId))})})),\"send response\":(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,[\"message.received\",\"heartbeat.received\"]),{type:\"request\",data:{type:O,responseTo:e.message.data.id,data:void 0}}))),\"send handshake syn ack\":(0,xstate__WEBPACK_IMPORTED_MODULE_14__.O)({type:\"request\",data:{type:M}}),\"set connection config\":(0,xstate__WEBPACK_IMPORTED_MODULE_12__.a)({connectionId:({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),e.message.data.connectionId),target:({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),e.message.source||void 0),targetOrigin:({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_9__.assertEvent)(e,\"message.received\"),e.message.origin)})},guards:{hasSource:({context:e})=>null!==e.target}}).createMachine({id:\"node\",context:({input:e})=>({buffer:[],connectionId:null,connectTo:e.connectTo,domain:e.domain??I,handshakeBuffer:[],name:e.name,requests:[],target:void 0,targetOrigin:null}),on:{\"request.success\":{actions:\"remove request\"},\"request.failed\":{actions:\"remove request\"},\"request.aborted\":{actions:\"remove request\"}},initial:\"idle\",states:{idle:{invoke:{id:\"listen for handshake syn\",src:\"listen\",input:x({include:B,count:1}),onDone:{target:\"handshaking\",guard:\"hasSource\"}},on:{\"message.received\":{actions:\"set connection config\"},post:{actions:\"buffer message\"}}},handshaking:{entry:\"send handshake syn ack\",invoke:[{id:\"listen for handshake ack\",src:\"listen\",input:x({include:j,count:1,responseType:\"handshake.complete\"}),onDone:\"connected\"},{id:\"listen for disconnect\",src:\"listen\",input:x({include:A,count:1,responseType:\"disconnect\"})},{id:\"listen for messages\",src:\"listen\",input:x({exclude:[A,j,$,O]})}],on:{request:{actions:\"create request\"},post:{actions:\"buffer message\"},\"message.received\":{actions:\"buffer incoming message\"},disconnect:{target:\"idle\"}}},connected:{entry:[\"flush handshake buffer\",\"flush buffer\"],invoke:[{id:\"listen for messages\",src:\"listen\",input:x({exclude:[O,$]})},{id:\"listen for heartbeat\",src:\"listen\",input:x({include:$,responseType:\"heartbeat.received\"})},{id:\"listen for disconnect\",src:\"listen\",input:x({include:A,count:1,responseType:\"disconnect\"})}],on:{request:{actions:\"create request\"},post:{actions:\"post\"},disconnect:{target:\"idle\"},\"message.received\":{actions:[\"send response\",\"emit received message\"]},\"heartbeat.received\":{actions:[\"send response\",\"emit heartbeat\"]}}}}}),J=(e,t=H())=>{const s=(0,xstate__WEBPACK_IMPORTED_MODULE_14__.A)(t,{input:e}),n=()=>{s.stop()};return{actor:s,fetch:(e,t)=>{const n=Promise.withResolvers();return s.send({type:\"post\",data:e,resolvable:n,signal:t?.signal}),n.promise},machine:t,on:(e,t)=>{const{unsubscribe:n}=s.on(e,(e=>{t(e.message.data)}));return n},onStatus:e=>{const t=s.getSnapshot();let n=\"string\"==typeof t.value?t.value:Object.keys(t.value)[0];const{unsubscribe:a}=s.subscribe((t=>{const s=\"string\"==typeof t.value?t.value:Object.keys(t.value)[0];n!==s&&(n=s,e(s))}));return a},post:e=>{s.send({type:\"post\",data:e})},start:()=>(s.start(),n),stop:n}};//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/comlink/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrify: () => (/* binding */ arrify)\n/* harmony export */ });\nfunction arrify(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\n//# sourceMappingURL=arrify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2FycmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9Eb2N1bWVudHMvQ3JhY2tlZC9Gcm9udC1lbmQvc3RhcnR1cC9ub2RlX21vZHVsZXMvbmV4dC1zYW5pdHkvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9hcnJpZnkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXJyaWZ5KHZhbCkge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheSh2YWwpID8gdmFsIDogW3ZhbF07XG59XG5leHBvcnQge1xuICBhcnJpZnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJpZnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/decode.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/decode.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeAll: () => (/* binding */ decodeAll)\n/* harmony export */ });\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\");\n\nfunction isCreateIfNotExistsMutation(sanityMutation) {\n  return \"createIfNotExists\" in sanityMutation;\n}\nfunction isCreateOrReplaceMutation(sanityMutation) {\n  return \"createOrReplace\" in sanityMutation;\n}\nfunction isCreateMutation(sanityMutation) {\n  return \"create\" in sanityMutation;\n}\nfunction isDeleteMutation(sanityMutation) {\n  return \"delete\" in sanityMutation;\n}\nfunction isPatchMutation(sanityMutation) {\n  return \"patch\" in sanityMutation;\n}\nfunction isSetPatch(sanityPatch) {\n  return \"set\" in sanityPatch;\n}\nfunction isSetIfMissingPatch(sanityPatch) {\n  return \"setIfMissing\" in sanityPatch;\n}\nfunction isUnsetPatch(sanityPatch) {\n  return \"unset\" in sanityPatch;\n}\nfunction isIncPatch(sanityPatch) {\n  return \"inc\" in sanityPatch;\n}\nfunction isDecPatch(sanityPatch) {\n  return \"inc\" in sanityPatch;\n}\nfunction isInsertPatch(sanityPatch) {\n  return \"insert\" in sanityPatch;\n}\nfunction decodeAll(sanityMutations) {\n  return sanityMutations.map(decodeMutation);\n}\nfunction decode(encodedMutation) {\n  return decodeMutation(encodedMutation);\n}\nfunction decodeMutation(encodedMutation) {\n  if (isCreateIfNotExistsMutation(encodedMutation))\n    return {\n      type: \"createIfNotExists\",\n      document: encodedMutation.createIfNotExists\n    };\n  if (isCreateOrReplaceMutation(encodedMutation))\n    return {\n      type: \"createOrReplace\",\n      document: encodedMutation.createOrReplace\n    };\n  if (isCreateMutation(encodedMutation))\n    return { type: \"create\", document: encodedMutation.create };\n  if (isDeleteMutation(encodedMutation))\n    return { id: encodedMutation.delete.id, type: \"delete\" };\n  if (isPatchMutation(encodedMutation))\n    return {\n      type: \"patch\",\n      id: encodedMutation.patch.id,\n      patches: decodeNodePatches(encodedMutation.patch)\n    };\n  throw new Error(`Unknown mutation: ${JSON.stringify(encodedMutation)}`);\n}\nconst POSITION_KEYS = [\"before\", \"replace\", \"after\"];\nfunction getInsertPosition(insert) {\n  const positions = POSITION_KEYS.filter((k) => k in insert);\n  if (positions.length > 1)\n    throw new Error(\n      `Insert patch is ambiguous. Should only contain one of: ${POSITION_KEYS.join(\n        \", \"\n      )}, instead found ${positions.join(\", \")}`\n    );\n  return positions[0];\n}\nfunction decodeNodePatches(patch) {\n  return [\n    ...getSetPatches(patch),\n    ...getSetIfMissingPatches(patch),\n    ...getUnsetPatches(patch),\n    ...getIncPatches(patch),\n    ...getDecPatches(patch),\n    ...getInsertPatches(patch)\n  ];\n}\nfunction getSetPatches(patch) {\n  return isSetPatch(patch) ? Object.keys(patch.set).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"set\", value: patch.set[path] }\n  })) : [];\n}\nfunction getSetIfMissingPatches(patch) {\n  return isSetIfMissingPatch(patch) ? Object.keys(patch.setIfMissing).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"setIfMissing\", value: patch.setIfMissing[path] }\n  })) : [];\n}\nfunction getUnsetPatches(patch) {\n  return isUnsetPatch(patch) ? patch.unset.map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"unset\" }\n  })) : [];\n}\nfunction getIncPatches(patch) {\n  return isIncPatch(patch) ? Object.keys(patch.inc).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"inc\", amount: patch.inc[path] }\n  })) : [];\n}\nfunction getDecPatches(patch) {\n  return isDecPatch(patch) ? Object.keys(patch.dec).map((path) => ({\n    path: (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path),\n    op: { type: \"dec\", amount: patch.dec[path] }\n  })) : [];\n}\nfunction getInsertPatches(patch) {\n  if (!isInsertPatch(patch))\n    return [];\n  const position = getInsertPosition(patch.insert);\n  if (!position)\n    throw new Error(\"Insert patch missing position\");\n  const path = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(patch.insert[position]), referenceItem = path.pop(), op = position === \"replace\" ? {\n    type: \"insert\",\n    position,\n    referenceItem,\n    items: patch.insert.items\n  } : {\n    type: \"insert\",\n    position,\n    referenceItem,\n    items: patch.insert.items\n  };\n  return [{ path, op }];\n}\n\n//# sourceMappingURL=decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnQ0FBZ0M7QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0VBQWdFO0FBQ2hFO0FBQ0EsUUFBUSxrQkFBa0IscUJBQXFCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLFVBQVUsZ0RBQUs7QUFDZixVQUFVO0FBQ1YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxnREFBSztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxVQUFVO0FBQ3RCO0FBSUU7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9Eb2N1bWVudHMvQ3JhY2tlZC9Gcm9udC1lbmQvc3RhcnR1cC9ub2RlX21vZHVsZXMvbmV4dC1zYW5pdHkvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9kZWNvZGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwiLi9wYXJzZS5qc1wiO1xuZnVuY3Rpb24gaXNDcmVhdGVJZk5vdEV4aXN0c011dGF0aW9uKHNhbml0eU11dGF0aW9uKSB7XG4gIHJldHVybiBcImNyZWF0ZUlmTm90RXhpc3RzXCIgaW4gc2FuaXR5TXV0YXRpb247XG59XG5mdW5jdGlvbiBpc0NyZWF0ZU9yUmVwbGFjZU11dGF0aW9uKHNhbml0eU11dGF0aW9uKSB7XG4gIHJldHVybiBcImNyZWF0ZU9yUmVwbGFjZVwiIGluIHNhbml0eU11dGF0aW9uO1xufVxuZnVuY3Rpb24gaXNDcmVhdGVNdXRhdGlvbihzYW5pdHlNdXRhdGlvbikge1xuICByZXR1cm4gXCJjcmVhdGVcIiBpbiBzYW5pdHlNdXRhdGlvbjtcbn1cbmZ1bmN0aW9uIGlzRGVsZXRlTXV0YXRpb24oc2FuaXR5TXV0YXRpb24pIHtcbiAgcmV0dXJuIFwiZGVsZXRlXCIgaW4gc2FuaXR5TXV0YXRpb247XG59XG5mdW5jdGlvbiBpc1BhdGNoTXV0YXRpb24oc2FuaXR5TXV0YXRpb24pIHtcbiAgcmV0dXJuIFwicGF0Y2hcIiBpbiBzYW5pdHlNdXRhdGlvbjtcbn1cbmZ1bmN0aW9uIGlzU2V0UGF0Y2goc2FuaXR5UGF0Y2gpIHtcbiAgcmV0dXJuIFwic2V0XCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBpc1NldElmTWlzc2luZ1BhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcInNldElmTWlzc2luZ1wiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gaXNVbnNldFBhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcInVuc2V0XCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBpc0luY1BhdGNoKHNhbml0eVBhdGNoKSB7XG4gIHJldHVybiBcImluY1wiIGluIHNhbml0eVBhdGNoO1xufVxuZnVuY3Rpb24gaXNEZWNQYXRjaChzYW5pdHlQYXRjaCkge1xuICByZXR1cm4gXCJpbmNcIiBpbiBzYW5pdHlQYXRjaDtcbn1cbmZ1bmN0aW9uIGlzSW5zZXJ0UGF0Y2goc2FuaXR5UGF0Y2gpIHtcbiAgcmV0dXJuIFwiaW5zZXJ0XCIgaW4gc2FuaXR5UGF0Y2g7XG59XG5mdW5jdGlvbiBkZWNvZGVBbGwoc2FuaXR5TXV0YXRpb25zKSB7XG4gIHJldHVybiBzYW5pdHlNdXRhdGlvbnMubWFwKGRlY29kZU11dGF0aW9uKTtcbn1cbmZ1bmN0aW9uIGRlY29kZShlbmNvZGVkTXV0YXRpb24pIHtcbiAgcmV0dXJuIGRlY29kZU11dGF0aW9uKGVuY29kZWRNdXRhdGlvbik7XG59XG5mdW5jdGlvbiBkZWNvZGVNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pIHtcbiAgaWYgKGlzQ3JlYXRlSWZOb3RFeGlzdHNNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pKVxuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcImNyZWF0ZUlmTm90RXhpc3RzXCIsXG4gICAgICBkb2N1bWVudDogZW5jb2RlZE11dGF0aW9uLmNyZWF0ZUlmTm90RXhpc3RzXG4gICAgfTtcbiAgaWYgKGlzQ3JlYXRlT3JSZXBsYWNlTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJjcmVhdGVPclJlcGxhY2VcIixcbiAgICAgIGRvY3VtZW50OiBlbmNvZGVkTXV0YXRpb24uY3JlYXRlT3JSZXBsYWNlXG4gICAgfTtcbiAgaWYgKGlzQ3JlYXRlTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4geyB0eXBlOiBcImNyZWF0ZVwiLCBkb2N1bWVudDogZW5jb2RlZE11dGF0aW9uLmNyZWF0ZSB9O1xuICBpZiAoaXNEZWxldGVNdXRhdGlvbihlbmNvZGVkTXV0YXRpb24pKVxuICAgIHJldHVybiB7IGlkOiBlbmNvZGVkTXV0YXRpb24uZGVsZXRlLmlkLCB0eXBlOiBcImRlbGV0ZVwiIH07XG4gIGlmIChpc1BhdGNoTXV0YXRpb24oZW5jb2RlZE11dGF0aW9uKSlcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJwYXRjaFwiLFxuICAgICAgaWQ6IGVuY29kZWRNdXRhdGlvbi5wYXRjaC5pZCxcbiAgICAgIHBhdGNoZXM6IGRlY29kZU5vZGVQYXRjaGVzKGVuY29kZWRNdXRhdGlvbi5wYXRjaClcbiAgICB9O1xuICB0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gbXV0YXRpb246ICR7SlNPTi5zdHJpbmdpZnkoZW5jb2RlZE11dGF0aW9uKX1gKTtcbn1cbmNvbnN0IFBPU0lUSU9OX0tFWVMgPSBbXCJiZWZvcmVcIiwgXCJyZXBsYWNlXCIsIFwiYWZ0ZXJcIl07XG5mdW5jdGlvbiBnZXRJbnNlcnRQb3NpdGlvbihpbnNlcnQpIHtcbiAgY29uc3QgcG9zaXRpb25zID0gUE9TSVRJT05fS0VZUy5maWx0ZXIoKGspID0+IGsgaW4gaW5zZXJ0KTtcbiAgaWYgKHBvc2l0aW9ucy5sZW5ndGggPiAxKVxuICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgIGBJbnNlcnQgcGF0Y2ggaXMgYW1iaWd1b3VzLiBTaG91bGQgb25seSBjb250YWluIG9uZSBvZjogJHtQT1NJVElPTl9LRVlTLmpvaW4oXG4gICAgICAgIFwiLCBcIlxuICAgICAgKX0sIGluc3RlYWQgZm91bmQgJHtwb3NpdGlvbnMuam9pbihcIiwgXCIpfWBcbiAgICApO1xuICByZXR1cm4gcG9zaXRpb25zWzBdO1xufVxuZnVuY3Rpb24gZGVjb2RlTm9kZVBhdGNoZXMocGF0Y2gpIHtcbiAgcmV0dXJuIFtcbiAgICAuLi5nZXRTZXRQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXRTZXRJZk1pc3NpbmdQYXRjaGVzKHBhdGNoKSxcbiAgICAuLi5nZXRVbnNldFBhdGNoZXMocGF0Y2gpLFxuICAgIC4uLmdldEluY1BhdGNoZXMocGF0Y2gpLFxuICAgIC4uLmdldERlY1BhdGNoZXMocGF0Y2gpLFxuICAgIC4uLmdldEluc2VydFBhdGNoZXMocGF0Y2gpXG4gIF07XG59XG5mdW5jdGlvbiBnZXRTZXRQYXRjaGVzKHBhdGNoKSB7XG4gIHJldHVybiBpc1NldFBhdGNoKHBhdGNoKSA/IE9iamVjdC5rZXlzKHBhdGNoLnNldCkubWFwKChwYXRoKSA9PiAoe1xuICAgIHBhdGg6IHBhcnNlKHBhdGgpLFxuICAgIG9wOiB7IHR5cGU6IFwic2V0XCIsIHZhbHVlOiBwYXRjaC5zZXRbcGF0aF0gfVxuICB9KSkgOiBbXTtcbn1cbmZ1bmN0aW9uIGdldFNldElmTWlzc2luZ1BhdGNoZXMocGF0Y2gpIHtcbiAgcmV0dXJuIGlzU2V0SWZNaXNzaW5nUGF0Y2gocGF0Y2gpID8gT2JqZWN0LmtleXMocGF0Y2guc2V0SWZNaXNzaW5nKS5tYXAoKHBhdGgpID0+ICh7XG4gICAgcGF0aDogcGFyc2UocGF0aCksXG4gICAgb3A6IHsgdHlwZTogXCJzZXRJZk1pc3NpbmdcIiwgdmFsdWU6IHBhdGNoLnNldElmTWlzc2luZ1twYXRoXSB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0VW5zZXRQYXRjaGVzKHBhdGNoKSB7XG4gIHJldHVybiBpc1Vuc2V0UGF0Y2gocGF0Y2gpID8gcGF0Y2gudW5zZXQubWFwKChwYXRoKSA9PiAoe1xuICAgIHBhdGg6IHBhcnNlKHBhdGgpLFxuICAgIG9wOiB7IHR5cGU6IFwidW5zZXRcIiB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0SW5jUGF0Y2hlcyhwYXRjaCkge1xuICByZXR1cm4gaXNJbmNQYXRjaChwYXRjaCkgPyBPYmplY3Qua2V5cyhwYXRjaC5pbmMpLm1hcCgocGF0aCkgPT4gKHtcbiAgICBwYXRoOiBwYXJzZShwYXRoKSxcbiAgICBvcDogeyB0eXBlOiBcImluY1wiLCBhbW91bnQ6IHBhdGNoLmluY1twYXRoXSB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0RGVjUGF0Y2hlcyhwYXRjaCkge1xuICByZXR1cm4gaXNEZWNQYXRjaChwYXRjaCkgPyBPYmplY3Qua2V5cyhwYXRjaC5kZWMpLm1hcCgocGF0aCkgPT4gKHtcbiAgICBwYXRoOiBwYXJzZShwYXRoKSxcbiAgICBvcDogeyB0eXBlOiBcImRlY1wiLCBhbW91bnQ6IHBhdGNoLmRlY1twYXRoXSB9XG4gIH0pKSA6IFtdO1xufVxuZnVuY3Rpb24gZ2V0SW5zZXJ0UGF0Y2hlcyhwYXRjaCkge1xuICBpZiAoIWlzSW5zZXJ0UGF0Y2gocGF0Y2gpKVxuICAgIHJldHVybiBbXTtcbiAgY29uc3QgcG9zaXRpb24gPSBnZXRJbnNlcnRQb3NpdGlvbihwYXRjaC5pbnNlcnQpO1xuICBpZiAoIXBvc2l0aW9uKVxuICAgIHRocm93IG5ldyBFcnJvcihcIkluc2VydCBwYXRjaCBtaXNzaW5nIHBvc2l0aW9uXCIpO1xuICBjb25zdCBwYXRoID0gcGFyc2UocGF0Y2guaW5zZXJ0W3Bvc2l0aW9uXSksIHJlZmVyZW5jZUl0ZW0gPSBwYXRoLnBvcCgpLCBvcCA9IHBvc2l0aW9uID09PSBcInJlcGxhY2VcIiA/IHtcbiAgICB0eXBlOiBcImluc2VydFwiLFxuICAgIHBvc2l0aW9uLFxuICAgIHJlZmVyZW5jZUl0ZW0sXG4gICAgaXRlbXM6IHBhdGNoLmluc2VydC5pdGVtc1xuICB9IDoge1xuICAgIHR5cGU6IFwiaW5zZXJ0XCIsXG4gICAgcG9zaXRpb24sXG4gICAgcmVmZXJlbmNlSXRlbSxcbiAgICBpdGVtczogcGF0Y2guaW5zZXJ0Lml0ZW1zXG4gIH07XG4gIHJldHVybiBbeyBwYXRoLCBvcCB9XTtcbn1cbmV4cG9ydCB7XG4gIGRlY29kZSxcbiAgZGVjb2RlQWxsXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/decode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/encode.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/encode.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeAll: () => (/* binding */ encodeAll),\n/* harmony export */   encodeMutation: () => (/* binding */ encodeMutation),\n/* harmony export */   encodeTransaction: () => (/* binding */ encodeTransaction)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\nfunction encode(mutation) {\n  return encodeMutation(mutation);\n}\nfunction encodeAll(mutations) {\n  return mutations.flatMap(encode);\n}\nfunction encodeTransaction(transaction) {\n  return {\n    transactionId: transaction.id,\n    mutations: encodeAll(transaction.mutations)\n  };\n}\nfunction encodeMutation(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return { [mutation.type]: mutation.document };\n  if (mutation.type === \"delete\")\n    return {\n      delete: { id: mutation.id }\n    };\n  const ifRevisionID = mutation.options?.ifRevision;\n  return mutation.patches.map((patch) => ({\n    patch: {\n      id: mutation.id,\n      ...ifRevisionID && { ifRevisionID },\n      ...patchToSanity(patch)\n    }\n  }));\n}\nfunction patchToSanity(patch) {\n  const { path, op } = patch;\n  if (op.type === \"unset\")\n    return { unset: [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)] };\n  if (op.type === \"insert\")\n    return {\n      insert: {\n        [op.position]: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, op.referenceItem]),\n        items: op.items\n      }\n    };\n  if (op.type === \"diffMatchPatch\")\n    return { diffMatchPatch: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.value } };\n  if (op.type === \"inc\")\n    return { inc: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.amount } };\n  if (op.type === \"dec\")\n    return { dec: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.amount } };\n  if (op.type === \"set\" || op.type === \"setIfMissing\")\n    return { [op.type]: { [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)]: op.value } };\n  if (op.type === \"truncate\") {\n    const range = [\n      op.startIndex,\n      typeof op.endIndex == \"number\" ? op.endIndex : \"\"\n    ].join(\":\");\n    return { unset: [`${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path)}[${range}]`] };\n  }\n  if (op.type === \"upsert\")\n    return {\n      unset: op.items.map(\n        (item) => (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, { _key: item._key }])\n      ),\n      insert: {\n        [op.position]: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)([...path, op.referenceItem]),\n        items: op.items\n      }\n    };\n  if (op.type === \"assign\")\n    return {\n      set: Object.fromEntries(\n        Object.keys(op.value).map((key) => [\n          (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(key)),\n          op.value[key]\n        ])\n      )\n    };\n  if (op.type === \"unassign\")\n    return {\n      unset: op.keys.map((key) => (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(key)))\n    };\n  if (op.type === \"replace\")\n    return {\n      insert: {\n        replace: (0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(op.referenceItem)),\n        items: op.items\n      }\n    };\n  if (op.type === \"remove\")\n    return {\n      unset: [(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(path.concat(op.referenceItem))]\n    };\n  throw new Error(`Unknown operation type ${op.type}`);\n}\n\n//# sourceMappingURL=encode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2VuY29kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixjQUFjO0FBQ3pDO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLFVBQVUsV0FBVztBQUNyQjtBQUNBLGFBQWEsUUFBUSx3REFBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0RBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLGtCQUFrQixDQUFDLHdEQUFTO0FBQ3pDO0FBQ0EsYUFBYSxPQUFPLENBQUMsd0RBQVM7QUFDOUI7QUFDQSxhQUFhLE9BQU8sQ0FBQyx3REFBUztBQUM5QjtBQUNBLGFBQWEsYUFBYSxDQUFDLHdEQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFdBQVcsd0RBQVMsT0FBTyxHQUFHLE1BQU07QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isd0RBQVMsYUFBYSxpQkFBaUI7QUFDekQ7QUFDQTtBQUNBLHVCQUF1Qix3REFBUztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVUsd0RBQVM7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHdEQUFTO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHdEQUFTO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdEQUFTO0FBQ3ZCO0FBQ0EsNENBQTRDLFFBQVE7QUFDcEQ7QUFNRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2VuY29kZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpbmdpZnkgfSBmcm9tIFwiLi9zdHJpbmdpZnkuanNcIjtcbmZ1bmN0aW9uIGVuY29kZShtdXRhdGlvbikge1xuICByZXR1cm4gZW5jb2RlTXV0YXRpb24obXV0YXRpb24pO1xufVxuZnVuY3Rpb24gZW5jb2RlQWxsKG11dGF0aW9ucykge1xuICByZXR1cm4gbXV0YXRpb25zLmZsYXRNYXAoZW5jb2RlKTtcbn1cbmZ1bmN0aW9uIGVuY29kZVRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uKSB7XG4gIHJldHVybiB7XG4gICAgdHJhbnNhY3Rpb25JZDogdHJhbnNhY3Rpb24uaWQsXG4gICAgbXV0YXRpb25zOiBlbmNvZGVBbGwodHJhbnNhY3Rpb24ubXV0YXRpb25zKVxuICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlTXV0YXRpb24obXV0YXRpb24pIHtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlXCIgfHwgbXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVJZk5vdEV4aXN0c1wiIHx8IG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlT3JSZXBsYWNlXCIpXG4gICAgcmV0dXJuIHsgW211dGF0aW9uLnR5cGVdOiBtdXRhdGlvbi5kb2N1bWVudCB9O1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJkZWxldGVcIilcbiAgICByZXR1cm4ge1xuICAgICAgZGVsZXRlOiB7IGlkOiBtdXRhdGlvbi5pZCB9XG4gICAgfTtcbiAgY29uc3QgaWZSZXZpc2lvbklEID0gbXV0YXRpb24ub3B0aW9ucz8uaWZSZXZpc2lvbjtcbiAgcmV0dXJuIG11dGF0aW9uLnBhdGNoZXMubWFwKChwYXRjaCkgPT4gKHtcbiAgICBwYXRjaDoge1xuICAgICAgaWQ6IG11dGF0aW9uLmlkLFxuICAgICAgLi4uaWZSZXZpc2lvbklEICYmIHsgaWZSZXZpc2lvbklEIH0sXG4gICAgICAuLi5wYXRjaFRvU2FuaXR5KHBhdGNoKVxuICAgIH1cbiAgfSkpO1xufVxuZnVuY3Rpb24gcGF0Y2hUb1Nhbml0eShwYXRjaCkge1xuICBjb25zdCB7IHBhdGgsIG9wIH0gPSBwYXRjaDtcbiAgaWYgKG9wLnR5cGUgPT09IFwidW5zZXRcIilcbiAgICByZXR1cm4geyB1bnNldDogW3N0cmluZ2lmeShwYXRoKV0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiaW5zZXJ0XCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIGluc2VydDoge1xuICAgICAgICBbb3AucG9zaXRpb25dOiBzdHJpbmdpZnkoWy4uLnBhdGgsIG9wLnJlZmVyZW5jZUl0ZW1dKSxcbiAgICAgICAgaXRlbXM6IG9wLml0ZW1zXG4gICAgICB9XG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiZGlmZk1hdGNoUGF0Y2hcIilcbiAgICByZXR1cm4geyBkaWZmTWF0Y2hQYXRjaDogeyBbc3RyaW5naWZ5KHBhdGgpXTogb3AudmFsdWUgfSB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJpbmNcIilcbiAgICByZXR1cm4geyBpbmM6IHsgW3N0cmluZ2lmeShwYXRoKV06IG9wLmFtb3VudCB9IH07XG4gIGlmIChvcC50eXBlID09PSBcImRlY1wiKVxuICAgIHJldHVybiB7IGRlYzogeyBbc3RyaW5naWZ5KHBhdGgpXTogb3AuYW1vdW50IH0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwic2V0XCIgfHwgb3AudHlwZSA9PT0gXCJzZXRJZk1pc3NpbmdcIilcbiAgICByZXR1cm4geyBbb3AudHlwZV06IHsgW3N0cmluZ2lmeShwYXRoKV06IG9wLnZhbHVlIH0gfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwidHJ1bmNhdGVcIikge1xuICAgIGNvbnN0IHJhbmdlID0gW1xuICAgICAgb3Auc3RhcnRJbmRleCxcbiAgICAgIHR5cGVvZiBvcC5lbmRJbmRleCA9PSBcIm51bWJlclwiID8gb3AuZW5kSW5kZXggOiBcIlwiXG4gICAgXS5qb2luKFwiOlwiKTtcbiAgICByZXR1cm4geyB1bnNldDogW2Ake3N0cmluZ2lmeShwYXRoKX1bJHtyYW5nZX1dYF0gfTtcbiAgfVxuICBpZiAob3AudHlwZSA9PT0gXCJ1cHNlcnRcIilcbiAgICByZXR1cm4ge1xuICAgICAgdW5zZXQ6IG9wLml0ZW1zLm1hcChcbiAgICAgICAgKGl0ZW0pID0+IHN0cmluZ2lmeShbLi4ucGF0aCwgeyBfa2V5OiBpdGVtLl9rZXkgfV0pXG4gICAgICApLFxuICAgICAgaW5zZXJ0OiB7XG4gICAgICAgIFtvcC5wb3NpdGlvbl06IHN0cmluZ2lmeShbLi4ucGF0aCwgb3AucmVmZXJlbmNlSXRlbV0pLFxuICAgICAgICBpdGVtczogb3AuaXRlbXNcbiAgICAgIH1cbiAgICB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJhc3NpZ25cIilcbiAgICByZXR1cm4ge1xuICAgICAgc2V0OiBPYmplY3QuZnJvbUVudHJpZXMoXG4gICAgICAgIE9iamVjdC5rZXlzKG9wLnZhbHVlKS5tYXAoKGtleSkgPT4gW1xuICAgICAgICAgIHN0cmluZ2lmeShwYXRoLmNvbmNhdChrZXkpKSxcbiAgICAgICAgICBvcC52YWx1ZVtrZXldXG4gICAgICAgIF0pXG4gICAgICApXG4gICAgfTtcbiAgaWYgKG9wLnR5cGUgPT09IFwidW5hc3NpZ25cIilcbiAgICByZXR1cm4ge1xuICAgICAgdW5zZXQ6IG9wLmtleXMubWFwKChrZXkpID0+IHN0cmluZ2lmeShwYXRoLmNvbmNhdChrZXkpKSlcbiAgICB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJyZXBsYWNlXCIpXG4gICAgcmV0dXJuIHtcbiAgICAgIGluc2VydDoge1xuICAgICAgICByZXBsYWNlOiBzdHJpbmdpZnkocGF0aC5jb25jYXQob3AucmVmZXJlbmNlSXRlbSkpLFxuICAgICAgICBpdGVtczogb3AuaXRlbXNcbiAgICAgIH1cbiAgICB9O1xuICBpZiAob3AudHlwZSA9PT0gXCJyZW1vdmVcIilcbiAgICByZXR1cm4ge1xuICAgICAgdW5zZXQ6IFtzdHJpbmdpZnkocGF0aC5jb25jYXQob3AucmVmZXJlbmNlSXRlbSkpXVxuICAgIH07XG4gIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBvcGVyYXRpb24gdHlwZSAke29wLnR5cGV9YCk7XG59XG5leHBvcnQge1xuICBlbmNvZGUsXG4gIGVuY29kZUFsbCxcbiAgZW5jb2RlTXV0YXRpb24sXG4gIGVuY29kZVRyYW5zYWN0aW9uXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jb2RlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAtPath: () => (/* binding */ getAtPath)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\nfunction getAtPath(path, value) {\n  if (path.length === 0)\n    return value;\n  let current = value;\n  for (const head of path) {\n    if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isArrayElement)(head)) {\n      if (!Array.isArray(current))\n        return;\n      if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isKeyedElement)(head)) {\n        current = current.find((item) => item._key === head._key);\n        continue;\n      }\n      current = current[head];\n      continue;\n    }\n    current = current[head];\n  }\n  return current;\n}\n\n//# sourceMappingURL=getAtPath.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2dldEF0UGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw2REFBYztBQUN0QjtBQUNBO0FBQ0EsVUFBVSw2REFBYztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0NyYWNrZWQvRnJvbnQtZW5kL3N0YXJ0dXAvbm9kZV9tb2R1bGVzL25leHQtc2FuaXR5L25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvZ2V0QXRQYXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQXJyYXlFbGVtZW50LCBpc0tleWVkRWxlbWVudCB9IGZyb20gXCIuL3N0cmluZ2lmeS5qc1wiO1xuZnVuY3Rpb24gZ2V0QXRQYXRoKHBhdGgsIHZhbHVlKSB7XG4gIGlmIChwYXRoLmxlbmd0aCA9PT0gMClcbiAgICByZXR1cm4gdmFsdWU7XG4gIGxldCBjdXJyZW50ID0gdmFsdWU7XG4gIGZvciAoY29uc3QgaGVhZCBvZiBwYXRoKSB7XG4gICAgaWYgKGlzQXJyYXlFbGVtZW50KGhlYWQpKSB7XG4gICAgICBpZiAoIUFycmF5LmlzQXJyYXkoY3VycmVudCkpXG4gICAgICAgIHJldHVybjtcbiAgICAgIGlmIChpc0tleWVkRWxlbWVudChoZWFkKSkge1xuICAgICAgICBjdXJyZW50ID0gY3VycmVudC5maW5kKChpdGVtKSA9PiBpdGVtLl9rZXkgPT09IGhlYWQuX2tleSk7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgY3VycmVudCA9IGN1cnJlbnRbaGVhZF07XG4gICAgICBjb250aW51ZTtcbiAgICB9XG4gICAgY3VycmVudCA9IGN1cnJlbnRbaGVhZF07XG4gIH1cbiAgcmV0dXJuIGN1cnJlbnQ7XG59XG5leHBvcnQge1xuICBnZXRBdFBhdGhcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRBdFBhdGguanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObject(val) {\n  return val !== null && typeof val == \"object\" && !Array.isArray(val);\n}\n\n//# sourceMappingURL=isObject.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2lzT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFHRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL2lzT2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICByZXR1cm4gdmFsICE9PSBudWxsICYmIHR5cGVvZiB2YWwgPT0gXCJvYmplY3RcIiAmJiAhQXJyYXkuaXNBcnJheSh2YWwpO1xufVxuZXhwb3J0IHtcbiAgaXNPYmplY3Rcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc09iamVjdC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/parse.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/parse.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parse: () => (/* binding */ parse)\n/* harmony export */ });\nfunction parse(path) {\n  return path.split(/[[.\\]]/g).filter(Boolean).map((seg) => seg.includes(\"==\") ? parseSegment(seg) : coerce(seg));\n}\nconst IS_NUMERIC = /^-?\\d+$/;\nfunction unquote(str) {\n  return str.replace(/^['\"]/, \"\").replace(/['\"]$/, \"\");\n}\nfunction parseSegment(segment) {\n  const [key, value] = segment.split(\"==\");\n  if (key !== \"_key\")\n    throw new Error(\n      `Currently only \"_key\" is supported as path segment. Found ${key}`\n    );\n  if (typeof value > \"u\")\n    throw new Error('Invalid path segment, expected `key==\"value\"`');\n  return { _key: unquote(value) };\n}\nfunction coerce(segment) {\n  return IS_NUMERIC.test(segment) ? Number(segment) : segment;\n}\n\n//# sourceMappingURL=parse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3BhcnNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLElBQUk7QUFDdkU7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBR0U7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9Eb2N1bWVudHMvQ3JhY2tlZC9Gcm9udC1lbmQvc3RhcnR1cC9ub2RlX21vZHVsZXMvbmV4dC1zYW5pdHkvbm9kZV9tb2R1bGVzL0BzYW5pdHkvbXV0YXRlL2Rpc3QvX2NodW5rcy1lcy9wYXJzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBwYXJzZShwYXRoKSB7XG4gIHJldHVybiBwYXRoLnNwbGl0KC9bWy5cXF1dL2cpLmZpbHRlcihCb29sZWFuKS5tYXAoKHNlZykgPT4gc2VnLmluY2x1ZGVzKFwiPT1cIikgPyBwYXJzZVNlZ21lbnQoc2VnKSA6IGNvZXJjZShzZWcpKTtcbn1cbmNvbnN0IElTX05VTUVSSUMgPSAvXi0/XFxkKyQvO1xuZnVuY3Rpb24gdW5xdW90ZShzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9eWydcIl0vLCBcIlwiKS5yZXBsYWNlKC9bJ1wiXSQvLCBcIlwiKTtcbn1cbmZ1bmN0aW9uIHBhcnNlU2VnbWVudChzZWdtZW50KSB7XG4gIGNvbnN0IFtrZXksIHZhbHVlXSA9IHNlZ21lbnQuc3BsaXQoXCI9PVwiKTtcbiAgaWYgKGtleSAhPT0gXCJfa2V5XCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgYEN1cnJlbnRseSBvbmx5IFwiX2tleVwiIGlzIHN1cHBvcnRlZCBhcyBwYXRoIHNlZ21lbnQuIEZvdW5kICR7a2V5fWBcbiAgICApO1xuICBpZiAodHlwZW9mIHZhbHVlID4gXCJ1XCIpXG4gICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIHBhdGggc2VnbWVudCwgZXhwZWN0ZWQgYGtleT09XCJ2YWx1ZVwiYCcpO1xuICByZXR1cm4geyBfa2V5OiB1bnF1b3RlKHZhbHVlKSB9O1xufVxuZnVuY3Rpb24gY29lcmNlKHNlZ21lbnQpIHtcbiAgcmV0dXJuIElTX05VTUVSSUMudGVzdChzZWdtZW50KSA/IE51bWJlcihzZWdtZW50KSA6IHNlZ21lbnQ7XG59XG5leHBvcnQge1xuICBwYXJzZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isArrayElement: () => (/* binding */ isArrayElement),\n/* harmony export */   isElementEqual: () => (/* binding */ isElementEqual),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isIndexElement: () => (/* binding */ isIndexElement),\n/* harmony export */   isKeyElement: () => (/* binding */ isKeyElement),\n/* harmony export */   isKeyedElement: () => (/* binding */ isKeyedElement),\n/* harmony export */   isPropertyElement: () => (/* binding */ isPropertyElement),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   stringify: () => (/* binding */ stringify)\n/* harmony export */ });\nfunction safeGetElementAt(array, index) {\n  if (index < 0 || index >= array.length)\n    throw new Error(\"Index out of bounds\");\n  return array[index];\n}\nfunction startsWith(parentPath, path) {\n  return parentPath.length <= path.length && parentPath.every(\n    (segment, i) => isElementEqual(segment, safeGetElementAt(path, i))\n  );\n}\nfunction isEqual(path, otherPath) {\n  return path.length === otherPath.length && path.every(\n    (segment, i) => isElementEqual(segment, safeGetElementAt(path, i))\n  );\n}\nfunction isElementEqual(segmentA, segmentB) {\n  return isKeyElement(segmentA) && isKeyElement(segmentB) ? segmentA._key === segmentB._key : isIndexElement(segmentA) ? Number(segmentA) === Number(segmentB) : segmentA === segmentB;\n}\nfunction isKeyElement(segment) {\n  return typeof segment?._key == \"string\";\n}\nfunction isIndexElement(segment) {\n  return typeof segment == \"number\";\n}\nfunction isKeyedElement(element) {\n  return typeof element == \"object\" && \"_key\" in element && typeof element._key == \"string\";\n}\nfunction isArrayElement(element) {\n  return typeof element == \"number\" || isKeyedElement(element);\n}\nfunction isPropertyElement(element) {\n  return typeof element == \"string\";\n}\nconst IS_DOTTABLE = /^[a-z_$]+/;\nfunction stringifySegment(segment, hasLeading) {\n  return Array.isArray(segment) ? `[${segment[0]}:${segment[1] || \"\"}]` : typeof segment == \"number\" ? `[${segment}]` : isKeyedElement(segment) ? `[_key==${JSON.stringify(segment._key)}]` : typeof segment == \"string\" && IS_DOTTABLE.test(segment) ? hasLeading ? segment : `.${segment}` : `['${segment}']`;\n}\nfunction stringify(pathArray) {\n  return pathArray.map((segment, i) => stringifySegment(segment, i === 0)).join(\"\");\n}\n\n//# sourceMappingURL=stringify.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3N0cmluZ2lmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLFdBQVcsR0FBRyxpQkFBaUIsc0NBQXNDLFFBQVEseUNBQXlDLDZCQUE2QiwwRkFBMEYsUUFBUSxTQUFTLFFBQVE7QUFDNVM7QUFDQTtBQUNBO0FBQ0E7QUFXRTtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3N0cmluZ2lmeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBzYWZlR2V0RWxlbWVudEF0KGFycmF5LCBpbmRleCkge1xuICBpZiAoaW5kZXggPCAwIHx8IGluZGV4ID49IGFycmF5Lmxlbmd0aClcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbmRleCBvdXQgb2YgYm91bmRzXCIpO1xuICByZXR1cm4gYXJyYXlbaW5kZXhdO1xufVxuZnVuY3Rpb24gc3RhcnRzV2l0aChwYXJlbnRQYXRoLCBwYXRoKSB7XG4gIHJldHVybiBwYXJlbnRQYXRoLmxlbmd0aCA8PSBwYXRoLmxlbmd0aCAmJiBwYXJlbnRQYXRoLmV2ZXJ5KFxuICAgIChzZWdtZW50LCBpKSA9PiBpc0VsZW1lbnRFcXVhbChzZWdtZW50LCBzYWZlR2V0RWxlbWVudEF0KHBhdGgsIGkpKVxuICApO1xufVxuZnVuY3Rpb24gaXNFcXVhbChwYXRoLCBvdGhlclBhdGgpIHtcbiAgcmV0dXJuIHBhdGgubGVuZ3RoID09PSBvdGhlclBhdGgubGVuZ3RoICYmIHBhdGguZXZlcnkoXG4gICAgKHNlZ21lbnQsIGkpID0+IGlzRWxlbWVudEVxdWFsKHNlZ21lbnQsIHNhZmVHZXRFbGVtZW50QXQocGF0aCwgaSkpXG4gICk7XG59XG5mdW5jdGlvbiBpc0VsZW1lbnRFcXVhbChzZWdtZW50QSwgc2VnbWVudEIpIHtcbiAgcmV0dXJuIGlzS2V5RWxlbWVudChzZWdtZW50QSkgJiYgaXNLZXlFbGVtZW50KHNlZ21lbnRCKSA/IHNlZ21lbnRBLl9rZXkgPT09IHNlZ21lbnRCLl9rZXkgOiBpc0luZGV4RWxlbWVudChzZWdtZW50QSkgPyBOdW1iZXIoc2VnbWVudEEpID09PSBOdW1iZXIoc2VnbWVudEIpIDogc2VnbWVudEEgPT09IHNlZ21lbnRCO1xufVxuZnVuY3Rpb24gaXNLZXlFbGVtZW50KHNlZ21lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBzZWdtZW50Py5fa2V5ID09IFwic3RyaW5nXCI7XG59XG5mdW5jdGlvbiBpc0luZGV4RWxlbWVudChzZWdtZW50KSB7XG4gIHJldHVybiB0eXBlb2Ygc2VnbWVudCA9PSBcIm51bWJlclwiO1xufVxuZnVuY3Rpb24gaXNLZXllZEVsZW1lbnQoZWxlbWVudCkge1xuICByZXR1cm4gdHlwZW9mIGVsZW1lbnQgPT0gXCJvYmplY3RcIiAmJiBcIl9rZXlcIiBpbiBlbGVtZW50ICYmIHR5cGVvZiBlbGVtZW50Ll9rZXkgPT0gXCJzdHJpbmdcIjtcbn1cbmZ1bmN0aW9uIGlzQXJyYXlFbGVtZW50KGVsZW1lbnQpIHtcbiAgcmV0dXJuIHR5cGVvZiBlbGVtZW50ID09IFwibnVtYmVyXCIgfHwgaXNLZXllZEVsZW1lbnQoZWxlbWVudCk7XG59XG5mdW5jdGlvbiBpc1Byb3BlcnR5RWxlbWVudChlbGVtZW50KSB7XG4gIHJldHVybiB0eXBlb2YgZWxlbWVudCA9PSBcInN0cmluZ1wiO1xufVxuY29uc3QgSVNfRE9UVEFCTEUgPSAvXlthLXpfJF0rLztcbmZ1bmN0aW9uIHN0cmluZ2lmeVNlZ21lbnQoc2VnbWVudCwgaGFzTGVhZGluZykge1xuICByZXR1cm4gQXJyYXkuaXNBcnJheShzZWdtZW50KSA/IGBbJHtzZWdtZW50WzBdfToke3NlZ21lbnRbMV0gfHwgXCJcIn1dYCA6IHR5cGVvZiBzZWdtZW50ID09IFwibnVtYmVyXCIgPyBgWyR7c2VnbWVudH1dYCA6IGlzS2V5ZWRFbGVtZW50KHNlZ21lbnQpID8gYFtfa2V5PT0ke0pTT04uc3RyaW5naWZ5KHNlZ21lbnQuX2tleSl9XWAgOiB0eXBlb2Ygc2VnbWVudCA9PSBcInN0cmluZ1wiICYmIElTX0RPVFRBQkxFLnRlc3Qoc2VnbWVudCkgPyBoYXNMZWFkaW5nID8gc2VnbWVudCA6IGAuJHtzZWdtZW50fWAgOiBgWycke3NlZ21lbnR9J11gO1xufVxuZnVuY3Rpb24gc3RyaW5naWZ5KHBhdGhBcnJheSkge1xuICByZXR1cm4gcGF0aEFycmF5Lm1hcCgoc2VnbWVudCwgaSkgPT4gc3RyaW5naWZ5U2VnbWVudChzZWdtZW50LCBpID09PSAwKSkuam9pbihcIlwiKTtcbn1cbmV4cG9ydCB7XG4gIGlzQXJyYXlFbGVtZW50LFxuICBpc0VsZW1lbnRFcXVhbCxcbiAgaXNFcXVhbCxcbiAgaXNJbmRleEVsZW1lbnQsXG4gIGlzS2V5RWxlbWVudCxcbiAgaXNLZXllZEVsZW1lbnQsXG4gIGlzUHJvcGVydHlFbGVtZW50LFxuICBzdGFydHNXaXRoLFxuICBzdHJpbmdpZnlcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHJpbmdpZnkuanMubWFwXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMutations: () => (/* binding */ applyMutations),\n/* harmony export */   commit: () => (/* binding */ commit),\n/* harmony export */   getMutationDocumentId: () => (/* binding */ getMutationDocumentId),\n/* harmony export */   rebase: () => (/* binding */ rebase),\n/* harmony export */   squashDMPStrings: () => (/* binding */ squashDMPStrings),\n/* harmony export */   squashMutationGroups: () => (/* binding */ squashMutationGroups),\n/* harmony export */   toTransactions: () => (/* binding */ toTransactions)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/utils.js\");\n/* harmony import */ var _getAtPath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getAtPath.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/getAtPath.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/nanoid/index.browser.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(app-pages-browser)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n\n\n\n\n\nfunction getMutationDocumentId(mutation) {\n  if (mutation.type === \"patch\")\n    return mutation.id;\n  if (mutation.type === \"create\")\n    return mutation.document._id;\n  if (mutation.type === \"delete\")\n    return mutation.id;\n  if (mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return mutation.document._id;\n  throw new Error(\"Invalid mutation type\");\n}\nfunction applyAll(current, mutation) {\n  return mutation.reduce((doc, m) => {\n    const res = applyDocumentMutation(doc, m);\n    if (res.status === \"error\")\n      throw new Error(res.message);\n    return res.status === \"noop\" ? doc : res.after;\n  }, current);\n}\nfunction applyDocumentMutation(document, mutation) {\n  if (mutation.type === \"create\")\n    return create(document, mutation);\n  if (mutation.type === \"createIfNotExists\")\n    return createIfNotExists(document, mutation);\n  if (mutation.type === \"delete\")\n    return del(document, mutation);\n  if (mutation.type === \"createOrReplace\")\n    return createOrReplace(document, mutation);\n  if (mutation.type === \"patch\")\n    return patch(document, mutation);\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction create(document, mutation) {\n  if (document)\n    return { status: \"error\", message: \"Document already exist\" };\n  const result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.assignId)(mutation.document, nanoid__WEBPACK_IMPORTED_MODULE_1__.nanoid);\n  return { status: \"created\", id: result._id, after: result };\n}\nfunction createIfNotExists(document, mutation) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasId)(mutation.document) ? document ? { status: \"noop\" } : { status: \"created\", id: mutation.document._id, after: mutation.document } : {\n    status: \"error\",\n    message: \"Cannot createIfNotExists on document without _id\"\n  };\n}\nfunction createOrReplace(document, mutation) {\n  return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.hasId)(mutation.document) ? document ? {\n    status: \"updated\",\n    id: mutation.document._id,\n    before: document,\n    after: mutation.document\n  } : { status: \"created\", id: mutation.document._id, after: mutation.document } : {\n    status: \"error\",\n    message: \"Cannot createIfNotExists on document without _id\"\n  };\n}\nfunction del(document, mutation) {\n  return document ? mutation.id !== document._id ? { status: \"error\", message: \"Delete mutation targeted wrong document\" } : {\n    status: \"deleted\",\n    id: mutation.id,\n    before: document,\n    after: void 0\n  } : { status: \"noop\" };\n}\nfunction patch(document, mutation) {\n  if (!document)\n    return {\n      status: \"error\",\n      message: \"Cannot apply patch on nonexistent document\"\n    };\n  const next = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatchMutation)(mutation, document);\n  return document === next ? { status: \"noop\" } : { status: \"updated\", id: mutation.id, before: document, after: next };\n}\nfunction applyMutations(mutations, dataset) {\n  const updatedDocs = /* @__PURE__ */ Object.create(null);\n  for (const mutation of mutations) {\n    const documentId = getMutationDocumentId(mutation);\n    if (!documentId)\n      throw new Error(\"Unable to get document id from mutation\");\n    const before = updatedDocs[documentId]?.after || dataset.get(documentId), res = applyDocumentMutation(before, mutation);\n    if (res.status === \"error\")\n      throw new Error(res.message);\n    res.status !== \"noop\" && (res.status === \"updated\" || res.status === \"created\" || res.status === \"deleted\") && (documentId in updatedDocs || (updatedDocs[documentId] = { before, after: void 0, muts: [] }), updatedDocs[documentId].after = res.after);\n  }\n  return Object.entries(updatedDocs).map(\n    // eslint-disable-next-line no-shadow\n    ([id, { before, after, muts }]) => ({\n      id,\n      status: after ? before ? \"updated\" : \"created\" : \"deleted\",\n      mutations: muts,\n      before,\n      after\n    })\n  );\n}\nfunction commit(results, dataset) {\n  results.forEach((result) => {\n    (result.status === \"created\" || result.status === \"updated\") && dataset.set(result.id, result.after), result.status === \"deleted\" && dataset.delete(result.id);\n  });\n}\nfunction takeUntilRight(arr, predicate, opts) {\n  const result = [];\n  for (const item of arr.slice().reverse()) {\n    if (predicate(item))\n      return result;\n    result.push(item);\n  }\n  return result.reverse();\n}\nfunction isEqualPath(p1, p2) {\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(p1) === (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.stringify)(p2);\n}\nfunction supersedes(later, earlier) {\n  return (earlier.type === \"set\" || earlier.type === \"unset\") && (later.type === \"set\" || later.type === \"unset\");\n}\nfunction squashNodePatches(patches) {\n  return compactSetIfMissingPatches(\n    compactSetPatches(compactUnsetPatches(patches))\n  );\n}\nfunction compactUnsetPatches(patches) {\n  return patches.reduce(\n    (earlierPatches, laterPatch) => {\n      if (laterPatch.op.type !== \"unset\")\n        return earlierPatches.push(laterPatch), earlierPatches;\n      const unaffected = earlierPatches.filter(\n        (earlierPatch) => !(0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.startsWith)(laterPatch.path, earlierPatch.path)\n      );\n      return unaffected.push(laterPatch), unaffected;\n    },\n    []\n  );\n}\nfunction compactSetPatches(patches) {\n  return patches.reduceRight(\n    (laterPatches, earlierPatch) => (laterPatches.find(\n      (later) => supersedes(later.op, earlierPatch.op) && isEqualPath(later.path, earlierPatch.path)\n    ) || laterPatches.unshift(earlierPatch), laterPatches),\n    []\n  );\n}\nfunction compactSetIfMissingPatches(patches) {\n  return patches.reduce(\n    (previousPatches, laterPatch) => laterPatch.op.type !== \"setIfMissing\" ? (previousPatches.push(laterPatch), previousPatches) : (takeUntilRight(\n      previousPatches,\n      (patch2) => patch2.op.type === \"unset\"\n    ).find(\n      (precedingPatch) => precedingPatch.op.type === \"setIfMissing\" && isEqualPath(precedingPatch.path, laterPatch.path)\n    ) || previousPatches.push(laterPatch), previousPatches),\n    []\n  );\n}\nfunction compactDMPSetPatches(base, patches) {\n  let edge = base;\n  return patches.reduce(\n    (earlierPatches, laterPatch) => {\n      const before = edge;\n      if (edge = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyNodePatch)(laterPatch, edge), laterPatch.op.type === \"set\" && typeof laterPatch.op.value == \"string\") {\n        const current = (0,_getAtPath_js__WEBPACK_IMPORTED_MODULE_3__.getAtPath)(laterPatch.path, before);\n        if (typeof current == \"string\") {\n          const replaced = {\n            ...laterPatch,\n            op: {\n              type: \"diffMatchPatch\",\n              value: (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_4__.stringifyPatches)(\n                (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_4__.makePatches)(current, laterPatch.op.value)\n              )\n            }\n          };\n          return earlierPatches.flatMap((ep) => isEqualPath(ep.path, laterPatch.path) && ep.op.type === \"diffMatchPatch\" ? [] : ep).concat(replaced);\n        }\n      }\n      return earlierPatches.push(laterPatch), earlierPatches;\n    },\n    []\n  );\n}\nfunction squashDMPStrings(remote, mutationGroups) {\n  return mutationGroups.map((mutationGroup) => ({\n    ...mutationGroup,\n    mutations: dmpIfyMutations(remote, mutationGroup.mutations)\n  }));\n}\nfunction dmpIfyMutations(store, mutations) {\n  return mutations.map((mutation, i) => mutation.type === \"patch\" ? dmpifyPatchMutation(store.get(mutation.id), mutation) : mutation);\n}\nfunction dmpifyPatchMutation(base, mutation) {\n  return base ? {\n    ...mutation,\n    patches: compactDMPSetPatches(base, mutation.patches)\n  } : mutation;\n}\nvar commonjsGlobal = typeof globalThis < \"u\" ? globalThis : typeof window < \"u\" ? window : typeof global < \"u\" ? global : typeof self < \"u\" ? self : {}, lodash$1 = { exports: {} };\n/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nvar lodash = lodash$1.exports, hasRequiredLodash;\nfunction requireLodash() {\n  return hasRequiredLodash || (hasRequiredLodash = 1, function(module, exports) {\n    (function() {\n      var undefined$1, VERSION = \"4.17.21\", LARGE_ARRAY_SIZE = 200, CORE_ERROR_TEXT = \"Unsupported core-js use. Try https://npms.io/search?q=ponyfill.\", FUNC_ERROR_TEXT = \"Expected a function\", INVALID_TEMPL_VAR_ERROR_TEXT = \"Invalid `variable` option passed into `_.template`\", HASH_UNDEFINED = \"__lodash_hash_undefined__\", MAX_MEMOIZE_SIZE = 500, PLACEHOLDER = \"__lodash_placeholder__\", CLONE_DEEP_FLAG = 1, CLONE_FLAT_FLAG = 2, CLONE_SYMBOLS_FLAG = 4, COMPARE_PARTIAL_FLAG = 1, COMPARE_UNORDERED_FLAG = 2, WRAP_BIND_FLAG = 1, WRAP_BIND_KEY_FLAG = 2, WRAP_CURRY_BOUND_FLAG = 4, WRAP_CURRY_FLAG = 8, WRAP_CURRY_RIGHT_FLAG = 16, WRAP_PARTIAL_FLAG = 32, WRAP_PARTIAL_RIGHT_FLAG = 64, WRAP_ARY_FLAG = 128, WRAP_REARG_FLAG = 256, WRAP_FLIP_FLAG = 512, DEFAULT_TRUNC_LENGTH = 30, DEFAULT_TRUNC_OMISSION = \"...\", HOT_COUNT = 800, HOT_SPAN = 16, LAZY_FILTER_FLAG = 1, LAZY_MAP_FLAG = 2, LAZY_WHILE_FLAG = 3, INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991, MAX_INTEGER = 17976931348623157e292, NAN = NaN, MAX_ARRAY_LENGTH = 4294967295, MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1, HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1, wrapFlags = [\n        [\"ary\", WRAP_ARY_FLAG],\n        [\"bind\", WRAP_BIND_FLAG],\n        [\"bindKey\", WRAP_BIND_KEY_FLAG],\n        [\"curry\", WRAP_CURRY_FLAG],\n        [\"curryRight\", WRAP_CURRY_RIGHT_FLAG],\n        [\"flip\", WRAP_FLIP_FLAG],\n        [\"partial\", WRAP_PARTIAL_FLAG],\n        [\"partialRight\", WRAP_PARTIAL_RIGHT_FLAG],\n        [\"rearg\", WRAP_REARG_FLAG]\n      ], argsTag = \"[object Arguments]\", arrayTag = \"[object Array]\", asyncTag = \"[object AsyncFunction]\", boolTag = \"[object Boolean]\", dateTag = \"[object Date]\", domExcTag = \"[object DOMException]\", errorTag = \"[object Error]\", funcTag = \"[object Function]\", genTag = \"[object GeneratorFunction]\", mapTag = \"[object Map]\", numberTag = \"[object Number]\", nullTag = \"[object Null]\", objectTag = \"[object Object]\", promiseTag = \"[object Promise]\", proxyTag = \"[object Proxy]\", regexpTag = \"[object RegExp]\", setTag = \"[object Set]\", stringTag = \"[object String]\", symbolTag = \"[object Symbol]\", undefinedTag = \"[object Undefined]\", weakMapTag = \"[object WeakMap]\", weakSetTag = \"[object WeakSet]\", arrayBufferTag = \"[object ArrayBuffer]\", dataViewTag = \"[object DataView]\", float32Tag = \"[object Float32Array]\", float64Tag = \"[object Float64Array]\", int8Tag = \"[object Int8Array]\", int16Tag = \"[object Int16Array]\", int32Tag = \"[object Int32Array]\", uint8Tag = \"[object Uint8Array]\", uint8ClampedTag = \"[object Uint8ClampedArray]\", uint16Tag = \"[object Uint16Array]\", uint32Tag = \"[object Uint32Array]\", reEmptyStringLeading = /\\b__p \\+= '';/g, reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g, reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g, reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g, reUnescapedHtml = /[&<>\"']/g, reHasEscapedHtml = RegExp(reEscapedHtml.source), reHasUnescapedHtml = RegExp(reUnescapedHtml.source), reEscape = /<%-([\\s\\S]+?)%>/g, reEvaluate = /<%([\\s\\S]+?)%>/g, reInterpolate = /<%=([\\s\\S]+?)%>/g, reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/, reIsPlainProp = /^\\w*$/, rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g, reHasRegExpChar = RegExp(reRegExpChar.source), reTrimStart = /^\\s+/, reWhitespace = /\\s/, reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/, reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/, reSplitDetails = /,? & /, reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g, reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/, reEscapeChar = /\\\\(\\\\)?/g, reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g, reFlags = /\\w*$/, reIsBadHex = /^[-+]0x[0-9a-f]+$/i, reIsBinary = /^0b[01]+$/i, reIsHostCtor = /^\\[object .+?Constructor\\]$/, reIsOctal = /^0o[0-7]+$/i, reIsUint = /^(?:0|[1-9]\\d*)$/, reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g, reNoMatch = /($^)/, reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g, rsAstralRange = \"\\\\ud800-\\\\udfff\", rsComboMarksRange = \"\\\\u0300-\\\\u036f\", reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\", rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\", rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange, rsDingbatRange = \"\\\\u2700-\\\\u27bf\", rsLowerRange = \"a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff\", rsMathOpRange = \"\\\\xac\\\\xb1\\\\xd7\\\\xf7\", rsNonCharRange = \"\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\", rsPunctuationRange = \"\\\\u2000-\\\\u206f\", rsSpaceRange = \" \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\", rsUpperRange = \"A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde\", rsVarRange = \"\\\\ufe0e\\\\ufe0f\", rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange, rsApos = \"['\\u2019]\", rsAstral = \"[\" + rsAstralRange + \"]\", rsBreak = \"[\" + rsBreakRange + \"]\", rsCombo = \"[\" + rsComboRange + \"]\", rsDigits = \"\\\\d+\", rsDingbat = \"[\" + rsDingbatRange + \"]\", rsLower = \"[\" + rsLowerRange + \"]\", rsMisc = \"[^\" + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + \"]\", rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\", rsModifier = \"(?:\" + rsCombo + \"|\" + rsFitz + \")\", rsNonAstral = \"[^\" + rsAstralRange + \"]\", rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\", rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\", rsUpper = \"[\" + rsUpperRange + \"]\", rsZWJ = \"\\\\u200d\", rsMiscLower = \"(?:\" + rsLower + \"|\" + rsMisc + \")\", rsMiscUpper = \"(?:\" + rsUpper + \"|\" + rsMisc + \")\", rsOptContrLower = \"(?:\" + rsApos + \"(?:d|ll|m|re|s|t|ve))?\", rsOptContrUpper = \"(?:\" + rsApos + \"(?:D|LL|M|RE|S|T|VE))?\", reOptMod = rsModifier + \"?\", rsOptVar = \"[\" + rsVarRange + \"]?\", rsOptJoin = \"(?:\" + rsZWJ + \"(?:\" + [rsNonAstral, rsRegional, rsSurrPair].join(\"|\") + \")\" + rsOptVar + reOptMod + \")*\", rsOrdLower = \"\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])\", rsOrdUpper = \"\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])\", rsSeq = rsOptVar + reOptMod + rsOptJoin, rsEmoji = \"(?:\" + [rsDingbat, rsRegional, rsSurrPair].join(\"|\") + \")\" + rsSeq, rsSymbol = \"(?:\" + [rsNonAstral + rsCombo + \"?\", rsCombo, rsRegional, rsSurrPair, rsAstral].join(\"|\") + \")\", reApos = RegExp(rsApos, \"g\"), reComboMark = RegExp(rsCombo, \"g\"), reUnicode = RegExp(rsFitz + \"(?=\" + rsFitz + \")|\" + rsSymbol + rsSeq, \"g\"), reUnicodeWord = RegExp([\n        rsUpper + \"?\" + rsLower + \"+\" + rsOptContrLower + \"(?=\" + [rsBreak, rsUpper, \"$\"].join(\"|\") + \")\",\n        rsMiscUpper + \"+\" + rsOptContrUpper + \"(?=\" + [rsBreak, rsUpper + rsMiscLower, \"$\"].join(\"|\") + \")\",\n        rsUpper + \"?\" + rsMiscLower + \"+\" + rsOptContrLower,\n        rsUpper + \"+\" + rsOptContrUpper,\n        rsOrdUpper,\n        rsOrdLower,\n        rsDigits,\n        rsEmoji\n      ].join(\"|\"), \"g\"), reHasUnicode = RegExp(\"[\" + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + \"]\"), reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, contextProps = [\n        \"Array\",\n        \"Buffer\",\n        \"DataView\",\n        \"Date\",\n        \"Error\",\n        \"Float32Array\",\n        \"Float64Array\",\n        \"Function\",\n        \"Int8Array\",\n        \"Int16Array\",\n        \"Int32Array\",\n        \"Map\",\n        \"Math\",\n        \"Object\",\n        \"Promise\",\n        \"RegExp\",\n        \"Set\",\n        \"String\",\n        \"Symbol\",\n        \"TypeError\",\n        \"Uint8Array\",\n        \"Uint8ClampedArray\",\n        \"Uint16Array\",\n        \"Uint32Array\",\n        \"WeakMap\",\n        \"_\",\n        \"clearTimeout\",\n        \"isFinite\",\n        \"parseInt\",\n        \"setTimeout\"\n      ], templateCounter = -1, typedArrayTags = {};\n      typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = !0, typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = !1;\n      var cloneableTags = {};\n      cloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = !0, cloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = !1;\n      var deburredLetters = {\n        // Latin-1 Supplement block.\n        \\u00C0: \"A\",\n        \\u00C1: \"A\",\n        \\u00C2: \"A\",\n        \\u00C3: \"A\",\n        \\u00C4: \"A\",\n        \\u00C5: \"A\",\n        \\u00E0: \"a\",\n        \\u00E1: \"a\",\n        \\u00E2: \"a\",\n        \\u00E3: \"a\",\n        \\u00E4: \"a\",\n        \\u00E5: \"a\",\n        \\u00C7: \"C\",\n        \\u00E7: \"c\",\n        \\u00D0: \"D\",\n        \\u00F0: \"d\",\n        \\u00C8: \"E\",\n        \\u00C9: \"E\",\n        \\u00CA: \"E\",\n        \\u00CB: \"E\",\n        \\u00E8: \"e\",\n        \\u00E9: \"e\",\n        \\u00EA: \"e\",\n        \\u00EB: \"e\",\n        \\u00CC: \"I\",\n        \\u00CD: \"I\",\n        \\u00CE: \"I\",\n        \\u00CF: \"I\",\n        \\u00EC: \"i\",\n        \\u00ED: \"i\",\n        \\u00EE: \"i\",\n        \\u00EF: \"i\",\n        \\u00D1: \"N\",\n        \\u00F1: \"n\",\n        \\u00D2: \"O\",\n        \\u00D3: \"O\",\n        \\u00D4: \"O\",\n        \\u00D5: \"O\",\n        \\u00D6: \"O\",\n        \\u00D8: \"O\",\n        \\u00F2: \"o\",\n        \\u00F3: \"o\",\n        \\u00F4: \"o\",\n        \\u00F5: \"o\",\n        \\u00F6: \"o\",\n        \\u00F8: \"o\",\n        \\u00D9: \"U\",\n        \\u00DA: \"U\",\n        \\u00DB: \"U\",\n        \\u00DC: \"U\",\n        \\u00F9: \"u\",\n        \\u00FA: \"u\",\n        \\u00FB: \"u\",\n        \\u00FC: \"u\",\n        \\u00DD: \"Y\",\n        \\u00FD: \"y\",\n        \\u00FF: \"y\",\n        \\u00C6: \"Ae\",\n        \\u00E6: \"ae\",\n        \\u00DE: \"Th\",\n        \\u00FE: \"th\",\n        \\u00DF: \"ss\",\n        // Latin Extended-A block.\n        \\u0100: \"A\",\n        \\u0102: \"A\",\n        \\u0104: \"A\",\n        \\u0101: \"a\",\n        \\u0103: \"a\",\n        \\u0105: \"a\",\n        \\u0106: \"C\",\n        \\u0108: \"C\",\n        \\u010A: \"C\",\n        \\u010C: \"C\",\n        \\u0107: \"c\",\n        \\u0109: \"c\",\n        \\u010B: \"c\",\n        \\u010D: \"c\",\n        \\u010E: \"D\",\n        \\u0110: \"D\",\n        \\u010F: \"d\",\n        \\u0111: \"d\",\n        \\u0112: \"E\",\n        \\u0114: \"E\",\n        \\u0116: \"E\",\n        \\u0118: \"E\",\n        \\u011A: \"E\",\n        \\u0113: \"e\",\n        \\u0115: \"e\",\n        \\u0117: \"e\",\n        \\u0119: \"e\",\n        \\u011B: \"e\",\n        \\u011C: \"G\",\n        \\u011E: \"G\",\n        \\u0120: \"G\",\n        \\u0122: \"G\",\n        \\u011D: \"g\",\n        \\u011F: \"g\",\n        \\u0121: \"g\",\n        \\u0123: \"g\",\n        \\u0124: \"H\",\n        \\u0126: \"H\",\n        \\u0125: \"h\",\n        \\u0127: \"h\",\n        \\u0128: \"I\",\n        \\u012A: \"I\",\n        \\u012C: \"I\",\n        \\u012E: \"I\",\n        \\u0130: \"I\",\n        \\u0129: \"i\",\n        \\u012B: \"i\",\n        \\u012D: \"i\",\n        \\u012F: \"i\",\n        \\u0131: \"i\",\n        \\u0134: \"J\",\n        \\u0135: \"j\",\n        \\u0136: \"K\",\n        \\u0137: \"k\",\n        \\u0138: \"k\",\n        \\u0139: \"L\",\n        \\u013B: \"L\",\n        \\u013D: \"L\",\n        \\u013F: \"L\",\n        \\u0141: \"L\",\n        \\u013A: \"l\",\n        \\u013C: \"l\",\n        \\u013E: \"l\",\n        \\u0140: \"l\",\n        \\u0142: \"l\",\n        \\u0143: \"N\",\n        \\u0145: \"N\",\n        \\u0147: \"N\",\n        \\u014A: \"N\",\n        \\u0144: \"n\",\n        \\u0146: \"n\",\n        \\u0148: \"n\",\n        \\u014B: \"n\",\n        \\u014C: \"O\",\n        \\u014E: \"O\",\n        \\u0150: \"O\",\n        \\u014D: \"o\",\n        \\u014F: \"o\",\n        \\u0151: \"o\",\n        \\u0154: \"R\",\n        \\u0156: \"R\",\n        \\u0158: \"R\",\n        \\u0155: \"r\",\n        \\u0157: \"r\",\n        \\u0159: \"r\",\n        \\u015A: \"S\",\n        \\u015C: \"S\",\n        \\u015E: \"S\",\n        \\u0160: \"S\",\n        \\u015B: \"s\",\n        \\u015D: \"s\",\n        \\u015F: \"s\",\n        \\u0161: \"s\",\n        \\u0162: \"T\",\n        \\u0164: \"T\",\n        \\u0166: \"T\",\n        \\u0163: \"t\",\n        \\u0165: \"t\",\n        \\u0167: \"t\",\n        \\u0168: \"U\",\n        \\u016A: \"U\",\n        \\u016C: \"U\",\n        \\u016E: \"U\",\n        \\u0170: \"U\",\n        \\u0172: \"U\",\n        \\u0169: \"u\",\n        \\u016B: \"u\",\n        \\u016D: \"u\",\n        \\u016F: \"u\",\n        \\u0171: \"u\",\n        \\u0173: \"u\",\n        \\u0174: \"W\",\n        \\u0175: \"w\",\n        \\u0176: \"Y\",\n        \\u0177: \"y\",\n        \\u0178: \"Y\",\n        \\u0179: \"Z\",\n        \\u017B: \"Z\",\n        \\u017D: \"Z\",\n        \\u017A: \"z\",\n        \\u017C: \"z\",\n        \\u017E: \"z\",\n        \\u0132: \"IJ\",\n        \\u0133: \"ij\",\n        \\u0152: \"Oe\",\n        \\u0153: \"oe\",\n        \\u0149: \"'n\",\n        \\u017F: \"s\"\n      }, htmlEscapes = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#39;\"\n      }, htmlUnescapes = {\n        \"&amp;\": \"&\",\n        \"&lt;\": \"<\",\n        \"&gt;\": \">\",\n        \"&quot;\": '\"',\n        \"&#39;\": \"'\"\n      }, stringEscapes = {\n        \"\\\\\": \"\\\\\",\n        \"'\": \"'\",\n        \"\\n\": \"n\",\n        \"\\r\": \"r\",\n        \"\\u2028\": \"u2028\",\n        \"\\u2029\": \"u2029\"\n      }, freeParseFloat = parseFloat, freeParseInt = parseInt, freeGlobal = typeof commonjsGlobal == \"object\" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal, freeSelf = typeof self == \"object\" && self && self.Object === Object && self, root = freeGlobal || freeSelf || Function(\"return this\")(), freeExports = exports && !exports.nodeType && exports, freeModule = freeExports && !0 && module && !module.nodeType && module, moduleExports = freeModule && freeModule.exports === freeExports, freeProcess = moduleExports && freeGlobal.process, nodeUtil = function() {\n        try {\n          var types = freeModule && freeModule.require && freeModule.require(\"util\").types;\n          return types || freeProcess && freeProcess.binding && freeProcess.binding(\"util\");\n        } catch {\n        }\n      }(), nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer, nodeIsDate = nodeUtil && nodeUtil.isDate, nodeIsMap = nodeUtil && nodeUtil.isMap, nodeIsRegExp = nodeUtil && nodeUtil.isRegExp, nodeIsSet = nodeUtil && nodeUtil.isSet, nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n      function apply(func, thisArg, args) {\n        switch (args.length) {\n          case 0:\n            return func.call(thisArg);\n          case 1:\n            return func.call(thisArg, args[0]);\n          case 2:\n            return func.call(thisArg, args[0], args[1]);\n          case 3:\n            return func.call(thisArg, args[0], args[1], args[2]);\n        }\n        return func.apply(thisArg, args);\n      }\n      function arrayAggregator(array, setter, iteratee, accumulator) {\n        for (var index = -1, length = array == null ? 0 : array.length; ++index < length; ) {\n          var value = array[index];\n          setter(accumulator, value, iteratee(value), array);\n        }\n        return accumulator;\n      }\n      function arrayEach(array, iteratee) {\n        for (var index = -1, length = array == null ? 0 : array.length; ++index < length && iteratee(array[index], index, array) !== !1; )\n          ;\n        return array;\n      }\n      function arrayEachRight(array, iteratee) {\n        for (var length = array == null ? 0 : array.length; length-- && iteratee(array[length], length, array) !== !1; )\n          ;\n        return array;\n      }\n      function arrayEvery(array, predicate) {\n        for (var index = -1, length = array == null ? 0 : array.length; ++index < length; )\n          if (!predicate(array[index], index, array))\n            return !1;\n        return !0;\n      }\n      function arrayFilter(array, predicate) {\n        for (var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = []; ++index < length; ) {\n          var value = array[index];\n          predicate(value, index, array) && (result[resIndex++] = value);\n        }\n        return result;\n      }\n      function arrayIncludes(array, value) {\n        var length = array == null ? 0 : array.length;\n        return !!length && baseIndexOf(array, value, 0) > -1;\n      }\n      function arrayIncludesWith(array, value, comparator) {\n        for (var index = -1, length = array == null ? 0 : array.length; ++index < length; )\n          if (comparator(value, array[index]))\n            return !0;\n        return !1;\n      }\n      function arrayMap(array, iteratee) {\n        for (var index = -1, length = array == null ? 0 : array.length, result = Array(length); ++index < length; )\n          result[index] = iteratee(array[index], index, array);\n        return result;\n      }\n      function arrayPush(array, values) {\n        for (var index = -1, length = values.length, offset = array.length; ++index < length; )\n          array[offset + index] = values[index];\n        return array;\n      }\n      function arrayReduce(array, iteratee, accumulator, initAccum) {\n        var index = -1, length = array == null ? 0 : array.length;\n        for (initAccum && length && (accumulator = array[++index]); ++index < length; )\n          accumulator = iteratee(accumulator, array[index], index, array);\n        return accumulator;\n      }\n      function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n        var length = array == null ? 0 : array.length;\n        for (initAccum && length && (accumulator = array[--length]); length--; )\n          accumulator = iteratee(accumulator, array[length], length, array);\n        return accumulator;\n      }\n      function arraySome(array, predicate) {\n        for (var index = -1, length = array == null ? 0 : array.length; ++index < length; )\n          if (predicate(array[index], index, array))\n            return !0;\n        return !1;\n      }\n      var asciiSize = baseProperty(\"length\");\n      function asciiToArray(string) {\n        return string.split(\"\");\n      }\n      function asciiWords(string) {\n        return string.match(reAsciiWord) || [];\n      }\n      function baseFindKey(collection, predicate, eachFunc) {\n        var result;\n        return eachFunc(collection, function(value, key, collection2) {\n          if (predicate(value, key, collection2))\n            return result = key, !1;\n        }), result;\n      }\n      function baseFindIndex(array, predicate, fromIndex, fromRight) {\n        for (var length = array.length, index = fromIndex + (fromRight ? 1 : -1); fromRight ? index-- : ++index < length; )\n          if (predicate(array[index], index, array))\n            return index;\n        return -1;\n      }\n      function baseIndexOf(array, value, fromIndex) {\n        return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n      }\n      function baseIndexOfWith(array, value, fromIndex, comparator) {\n        for (var index = fromIndex - 1, length = array.length; ++index < length; )\n          if (comparator(array[index], value))\n            return index;\n        return -1;\n      }\n      function baseIsNaN(value) {\n        return value !== value;\n      }\n      function baseMean(array, iteratee) {\n        var length = array == null ? 0 : array.length;\n        return length ? baseSum(array, iteratee) / length : NAN;\n      }\n      function baseProperty(key) {\n        return function(object) {\n          return object == null ? undefined$1 : object[key];\n        };\n      }\n      function basePropertyOf(object) {\n        return function(key) {\n          return object == null ? undefined$1 : object[key];\n        };\n      }\n      function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n        return eachFunc(collection, function(value, index, collection2) {\n          accumulator = initAccum ? (initAccum = !1, value) : iteratee(accumulator, value, index, collection2);\n        }), accumulator;\n      }\n      function baseSortBy(array, comparer) {\n        var length = array.length;\n        for (array.sort(comparer); length--; )\n          array[length] = array[length].value;\n        return array;\n      }\n      function baseSum(array, iteratee) {\n        for (var result, index = -1, length = array.length; ++index < length; ) {\n          var current = iteratee(array[index]);\n          current !== undefined$1 && (result = result === undefined$1 ? current : result + current);\n        }\n        return result;\n      }\n      function baseTimes(n, iteratee) {\n        for (var index = -1, result = Array(n); ++index < n; )\n          result[index] = iteratee(index);\n        return result;\n      }\n      function baseToPairs(object, props) {\n        return arrayMap(props, function(key) {\n          return [key, object[key]];\n        });\n      }\n      function baseTrim(string) {\n        return string && string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, \"\");\n      }\n      function baseUnary(func) {\n        return function(value) {\n          return func(value);\n        };\n      }\n      function baseValues(object, props) {\n        return arrayMap(props, function(key) {\n          return object[key];\n        });\n      }\n      function cacheHas(cache, key) {\n        return cache.has(key);\n      }\n      function charsStartIndex(strSymbols, chrSymbols) {\n        for (var index = -1, length = strSymbols.length; ++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1; )\n          ;\n        return index;\n      }\n      function charsEndIndex(strSymbols, chrSymbols) {\n        for (var index = strSymbols.length; index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1; )\n          ;\n        return index;\n      }\n      function countHolders(array, placeholder) {\n        for (var length = array.length, result = 0; length--; )\n          array[length] === placeholder && ++result;\n        return result;\n      }\n      var deburrLetter = basePropertyOf(deburredLetters), escapeHtmlChar = basePropertyOf(htmlEscapes);\n      function escapeStringChar(chr) {\n        return \"\\\\\" + stringEscapes[chr];\n      }\n      function getValue(object, key) {\n        return object == null ? undefined$1 : object[key];\n      }\n      function hasUnicode(string) {\n        return reHasUnicode.test(string);\n      }\n      function hasUnicodeWord(string) {\n        return reHasUnicodeWord.test(string);\n      }\n      function iteratorToArray(iterator) {\n        for (var data, result = []; !(data = iterator.next()).done; )\n          result.push(data.value);\n        return result;\n      }\n      function mapToArray(map) {\n        var index = -1, result = Array(map.size);\n        return map.forEach(function(value, key) {\n          result[++index] = [key, value];\n        }), result;\n      }\n      function overArg(func, transform) {\n        return function(arg) {\n          return func(transform(arg));\n        };\n      }\n      function replaceHolders(array, placeholder) {\n        for (var index = -1, length = array.length, resIndex = 0, result = []; ++index < length; ) {\n          var value = array[index];\n          (value === placeholder || value === PLACEHOLDER) && (array[index] = PLACEHOLDER, result[resIndex++] = index);\n        }\n        return result;\n      }\n      function setToArray(set) {\n        var index = -1, result = Array(set.size);\n        return set.forEach(function(value) {\n          result[++index] = value;\n        }), result;\n      }\n      function setToPairs(set) {\n        var index = -1, result = Array(set.size);\n        return set.forEach(function(value) {\n          result[++index] = [value, value];\n        }), result;\n      }\n      function strictIndexOf(array, value, fromIndex) {\n        for (var index = fromIndex - 1, length = array.length; ++index < length; )\n          if (array[index] === value)\n            return index;\n        return -1;\n      }\n      function strictLastIndexOf(array, value, fromIndex) {\n        for (var index = fromIndex + 1; index--; )\n          if (array[index] === value)\n            return index;\n        return index;\n      }\n      function stringSize(string) {\n        return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);\n      }\n      function stringToArray(string) {\n        return hasUnicode(string) ? unicodeToArray(string) : asciiToArray(string);\n      }\n      function trimmedEndIndex(string) {\n        for (var index = string.length; index-- && reWhitespace.test(string.charAt(index)); )\n          ;\n        return index;\n      }\n      var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n      function unicodeSize(string) {\n        for (var result = reUnicode.lastIndex = 0; reUnicode.test(string); )\n          ++result;\n        return result;\n      }\n      function unicodeToArray(string) {\n        return string.match(reUnicode) || [];\n      }\n      function unicodeWords(string) {\n        return string.match(reUnicodeWord) || [];\n      }\n      var runInContext = function runInContext2(context) {\n        context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n        var Array2 = context.Array, Date = context.Date, Error2 = context.Error, Function2 = context.Function, Math = context.Math, Object2 = context.Object, RegExp2 = context.RegExp, String = context.String, TypeError = context.TypeError, arrayProto = Array2.prototype, funcProto = Function2.prototype, objectProto = Object2.prototype, coreJsData = context[\"__core-js_shared__\"], funcToString = funcProto.toString, hasOwnProperty = objectProto.hasOwnProperty, idCounter = 0, maskSrcKey = function() {\n          var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || \"\");\n          return uid ? \"Symbol(src)_1.\" + uid : \"\";\n        }(), nativeObjectToString = objectProto.toString, objectCtorString = funcToString.call(Object2), oldDash = root._, reIsNative = RegExp2(\n          \"^\" + funcToString.call(hasOwnProperty).replace(reRegExpChar, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\"\n        ), Buffer = moduleExports ? context.Buffer : undefined$1, Symbol = context.Symbol, Uint8Array = context.Uint8Array, allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined$1, getPrototype = overArg(Object2.getPrototypeOf, Object2), objectCreate = Object2.create, propertyIsEnumerable = objectProto.propertyIsEnumerable, splice = arrayProto.splice, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined$1, symIterator = Symbol ? Symbol.iterator : undefined$1, symToStringTag = Symbol ? Symbol.toStringTag : undefined$1, defineProperty = function() {\n          try {\n            var func = getNative(Object2, \"defineProperty\");\n            return func({}, \"\", {}), func;\n          } catch {\n          }\n        }(), ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout, ctxNow = Date && Date.now !== root.Date.now && Date.now, ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout, nativeCeil = Math.ceil, nativeFloor = Math.floor, nativeGetSymbols = Object2.getOwnPropertySymbols, nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined$1, nativeIsFinite = context.isFinite, nativeJoin = arrayProto.join, nativeKeys = overArg(Object2.keys, Object2), nativeMax = Math.max, nativeMin = Math.min, nativeNow = Date.now, nativeParseInt = context.parseInt, nativeRandom = Math.random, nativeReverse = arrayProto.reverse, DataView = getNative(context, \"DataView\"), Map = getNative(context, \"Map\"), Promise2 = getNative(context, \"Promise\"), Set = getNative(context, \"Set\"), WeakMap = getNative(context, \"WeakMap\"), nativeCreate = getNative(Object2, \"create\"), metaMap = WeakMap && new WeakMap(), realNames = {}, dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set), weakMapCtorString = toSource(WeakMap), symbolProto = Symbol ? Symbol.prototype : undefined$1, symbolValueOf = symbolProto ? symbolProto.valueOf : undefined$1, symbolToString = symbolProto ? symbolProto.toString : undefined$1;\n        function lodash2(value) {\n          if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n            if (value instanceof LodashWrapper)\n              return value;\n            if (hasOwnProperty.call(value, \"__wrapped__\"))\n              return wrapperClone(value);\n          }\n          return new LodashWrapper(value);\n        }\n        var baseCreate = /* @__PURE__ */ function() {\n          function object() {\n          }\n          return function(proto) {\n            if (!isObject(proto))\n              return {};\n            if (objectCreate)\n              return objectCreate(proto);\n            object.prototype = proto;\n            var result2 = new object();\n            return object.prototype = undefined$1, result2;\n          };\n        }();\n        function baseLodash() {\n        }\n        function LodashWrapper(value, chainAll) {\n          this.__wrapped__ = value, this.__actions__ = [], this.__chain__ = !!chainAll, this.__index__ = 0, this.__values__ = undefined$1;\n        }\n        lodash2.templateSettings = {\n          /**\n           * Used to detect `data` property values to be HTML-escaped.\n           *\n           * @memberOf _.templateSettings\n           * @type {RegExp}\n           */\n          escape: reEscape,\n          /**\n           * Used to detect code to be evaluated.\n           *\n           * @memberOf _.templateSettings\n           * @type {RegExp}\n           */\n          evaluate: reEvaluate,\n          /**\n           * Used to detect `data` property values to inject.\n           *\n           * @memberOf _.templateSettings\n           * @type {RegExp}\n           */\n          interpolate: reInterpolate,\n          /**\n           * Used to reference the data object in the template text.\n           *\n           * @memberOf _.templateSettings\n           * @type {string}\n           */\n          variable: \"\",\n          /**\n           * Used to import variables into the compiled template.\n           *\n           * @memberOf _.templateSettings\n           * @type {Object}\n           */\n          imports: {\n            /**\n             * A reference to the `lodash` function.\n             *\n             * @memberOf _.templateSettings.imports\n             * @type {Function}\n             */\n            _: lodash2\n          }\n        }, lodash2.prototype = baseLodash.prototype, lodash2.prototype.constructor = lodash2, LodashWrapper.prototype = baseCreate(baseLodash.prototype), LodashWrapper.prototype.constructor = LodashWrapper;\n        function LazyWrapper(value) {\n          this.__wrapped__ = value, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = MAX_ARRAY_LENGTH, this.__views__ = [];\n        }\n        function lazyClone() {\n          var result2 = new LazyWrapper(this.__wrapped__);\n          return result2.__actions__ = copyArray(this.__actions__), result2.__dir__ = this.__dir__, result2.__filtered__ = this.__filtered__, result2.__iteratees__ = copyArray(this.__iteratees__), result2.__takeCount__ = this.__takeCount__, result2.__views__ = copyArray(this.__views__), result2;\n        }\n        function lazyReverse() {\n          if (this.__filtered__) {\n            var result2 = new LazyWrapper(this);\n            result2.__dir__ = -1, result2.__filtered__ = !0;\n          } else\n            result2 = this.clone(), result2.__dir__ *= -1;\n          return result2;\n        }\n        function lazyValue() {\n          var array = this.__wrapped__.value(), dir = this.__dir__, isArr = isArray(array), isRight = dir < 0, arrLength = isArr ? array.length : 0, view = getView(0, arrLength, this.__views__), start = view.start, end = view.end, length = end - start, index = isRight ? end : start - 1, iteratees = this.__iteratees__, iterLength = iteratees.length, resIndex = 0, takeCount = nativeMin(length, this.__takeCount__);\n          if (!isArr || !isRight && arrLength == length && takeCount == length)\n            return baseWrapperValue(array, this.__actions__);\n          var result2 = [];\n          outer:\n            for (; length-- && resIndex < takeCount; ) {\n              index += dir;\n              for (var iterIndex = -1, value = array[index]; ++iterIndex < iterLength; ) {\n                var data = iteratees[iterIndex], iteratee2 = data.iteratee, type = data.type, computed = iteratee2(value);\n                if (type == LAZY_MAP_FLAG)\n                  value = computed;\n                else if (!computed) {\n                  if (type == LAZY_FILTER_FLAG)\n                    continue outer;\n                  break outer;\n                }\n              }\n              result2[resIndex++] = value;\n            }\n          return result2;\n        }\n        LazyWrapper.prototype = baseCreate(baseLodash.prototype), LazyWrapper.prototype.constructor = LazyWrapper;\n        function Hash(entries) {\n          var index = -1, length = entries == null ? 0 : entries.length;\n          for (this.clear(); ++index < length; ) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        function hashClear() {\n          this.__data__ = nativeCreate ? nativeCreate(null) : {}, this.size = 0;\n        }\n        function hashDelete(key) {\n          var result2 = this.has(key) && delete this.__data__[key];\n          return this.size -= result2 ? 1 : 0, result2;\n        }\n        function hashGet(key) {\n          var data = this.__data__;\n          if (nativeCreate) {\n            var result2 = data[key];\n            return result2 === HASH_UNDEFINED ? undefined$1 : result2;\n          }\n          return hasOwnProperty.call(data, key) ? data[key] : undefined$1;\n        }\n        function hashHas(key) {\n          var data = this.__data__;\n          return nativeCreate ? data[key] !== undefined$1 : hasOwnProperty.call(data, key);\n        }\n        function hashSet(key, value) {\n          var data = this.__data__;\n          return this.size += this.has(key) ? 0 : 1, data[key] = nativeCreate && value === undefined$1 ? HASH_UNDEFINED : value, this;\n        }\n        Hash.prototype.clear = hashClear, Hash.prototype.delete = hashDelete, Hash.prototype.get = hashGet, Hash.prototype.has = hashHas, Hash.prototype.set = hashSet;\n        function ListCache(entries) {\n          var index = -1, length = entries == null ? 0 : entries.length;\n          for (this.clear(); ++index < length; ) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        function listCacheClear() {\n          this.__data__ = [], this.size = 0;\n        }\n        function listCacheDelete(key) {\n          var data = this.__data__, index = assocIndexOf(data, key);\n          if (index < 0)\n            return !1;\n          var lastIndex = data.length - 1;\n          return index == lastIndex ? data.pop() : splice.call(data, index, 1), --this.size, !0;\n        }\n        function listCacheGet(key) {\n          var data = this.__data__, index = assocIndexOf(data, key);\n          return index < 0 ? undefined$1 : data[index][1];\n        }\n        function listCacheHas(key) {\n          return assocIndexOf(this.__data__, key) > -1;\n        }\n        function listCacheSet(key, value) {\n          var data = this.__data__, index = assocIndexOf(data, key);\n          return index < 0 ? (++this.size, data.push([key, value])) : data[index][1] = value, this;\n        }\n        ListCache.prototype.clear = listCacheClear, ListCache.prototype.delete = listCacheDelete, ListCache.prototype.get = listCacheGet, ListCache.prototype.has = listCacheHas, ListCache.prototype.set = listCacheSet;\n        function MapCache(entries) {\n          var index = -1, length = entries == null ? 0 : entries.length;\n          for (this.clear(); ++index < length; ) {\n            var entry = entries[index];\n            this.set(entry[0], entry[1]);\n          }\n        }\n        function mapCacheClear() {\n          this.size = 0, this.__data__ = {\n            hash: new Hash(),\n            map: new (Map || ListCache)(),\n            string: new Hash()\n          };\n        }\n        function mapCacheDelete(key) {\n          var result2 = getMapData(this, key).delete(key);\n          return this.size -= result2 ? 1 : 0, result2;\n        }\n        function mapCacheGet(key) {\n          return getMapData(this, key).get(key);\n        }\n        function mapCacheHas(key) {\n          return getMapData(this, key).has(key);\n        }\n        function mapCacheSet(key, value) {\n          var data = getMapData(this, key), size2 = data.size;\n          return data.set(key, value), this.size += data.size == size2 ? 0 : 1, this;\n        }\n        MapCache.prototype.clear = mapCacheClear, MapCache.prototype.delete = mapCacheDelete, MapCache.prototype.get = mapCacheGet, MapCache.prototype.has = mapCacheHas, MapCache.prototype.set = mapCacheSet;\n        function SetCache(values2) {\n          var index = -1, length = values2 == null ? 0 : values2.length;\n          for (this.__data__ = new MapCache(); ++index < length; )\n            this.add(values2[index]);\n        }\n        function setCacheAdd(value) {\n          return this.__data__.set(value, HASH_UNDEFINED), this;\n        }\n        function setCacheHas(value) {\n          return this.__data__.has(value);\n        }\n        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd, SetCache.prototype.has = setCacheHas;\n        function Stack(entries) {\n          var data = this.__data__ = new ListCache(entries);\n          this.size = data.size;\n        }\n        function stackClear() {\n          this.__data__ = new ListCache(), this.size = 0;\n        }\n        function stackDelete(key) {\n          var data = this.__data__, result2 = data.delete(key);\n          return this.size = data.size, result2;\n        }\n        function stackGet(key) {\n          return this.__data__.get(key);\n        }\n        function stackHas(key) {\n          return this.__data__.has(key);\n        }\n        function stackSet(key, value) {\n          var data = this.__data__;\n          if (data instanceof ListCache) {\n            var pairs = data.__data__;\n            if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1)\n              return pairs.push([key, value]), this.size = ++data.size, this;\n            data = this.__data__ = new MapCache(pairs);\n          }\n          return data.set(key, value), this.size = data.size, this;\n        }\n        Stack.prototype.clear = stackClear, Stack.prototype.delete = stackDelete, Stack.prototype.get = stackGet, Stack.prototype.has = stackHas, Stack.prototype.set = stackSet;\n        function arrayLikeKeys(value, inherited) {\n          var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result2 = skipIndexes ? baseTimes(value.length, String) : [], length = result2.length;\n          for (var key in value)\n            (inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.\n            (key == \"length\" || // Node.js 0.10 has enumerable non-index properties on buffers.\n            isBuff && (key == \"offset\" || key == \"parent\") || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n            isType && (key == \"buffer\" || key == \"byteLength\" || key == \"byteOffset\") || // Skip index properties.\n            isIndex(key, length))) && result2.push(key);\n          return result2;\n        }\n        function arraySample(array) {\n          var length = array.length;\n          return length ? array[baseRandom(0, length - 1)] : undefined$1;\n        }\n        function arraySampleSize(array, n) {\n          return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n        }\n        function arrayShuffle(array) {\n          return shuffleSelf(copyArray(array));\n        }\n        function assignMergeValue(object, key, value) {\n          (value !== undefined$1 && !eq(object[key], value) || value === undefined$1 && !(key in object)) && baseAssignValue(object, key, value);\n        }\n        function assignValue(object, key, value) {\n          var objValue = object[key];\n          (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined$1 && !(key in object)) && baseAssignValue(object, key, value);\n        }\n        function assocIndexOf(array, key) {\n          for (var length = array.length; length--; )\n            if (eq(array[length][0], key))\n              return length;\n          return -1;\n        }\n        function baseAggregator(collection, setter, iteratee2, accumulator) {\n          return baseEach(collection, function(value, key, collection2) {\n            setter(accumulator, value, iteratee2(value), collection2);\n          }), accumulator;\n        }\n        function baseAssign(object, source) {\n          return object && copyObject(source, keys(source), object);\n        }\n        function baseAssignIn(object, source) {\n          return object && copyObject(source, keysIn(source), object);\n        }\n        function baseAssignValue(object, key, value) {\n          key == \"__proto__\" && defineProperty ? defineProperty(object, key, {\n            configurable: !0,\n            enumerable: !0,\n            value,\n            writable: !0\n          }) : object[key] = value;\n        }\n        function baseAt(object, paths) {\n          for (var index = -1, length = paths.length, result2 = Array2(length), skip = object == null; ++index < length; )\n            result2[index] = skip ? undefined$1 : get(object, paths[index]);\n          return result2;\n        }\n        function baseClamp(number, lower, upper) {\n          return number === number && (upper !== undefined$1 && (number = number <= upper ? number : upper), lower !== undefined$1 && (number = number >= lower ? number : lower)), number;\n        }\n        function baseClone(value, bitmask, customizer, key, object, stack) {\n          var result2, isDeep = bitmask & CLONE_DEEP_FLAG, isFlat = bitmask & CLONE_FLAT_FLAG, isFull = bitmask & CLONE_SYMBOLS_FLAG;\n          if (customizer && (result2 = object ? customizer(value, key, object, stack) : customizer(value)), result2 !== undefined$1)\n            return result2;\n          if (!isObject(value))\n            return value;\n          var isArr = isArray(value);\n          if (isArr) {\n            if (result2 = initCloneArray(value), !isDeep)\n              return copyArray(value, result2);\n          } else {\n            var tag = getTag(value), isFunc = tag == funcTag || tag == genTag;\n            if (isBuffer(value))\n              return cloneBuffer(value, isDeep);\n            if (tag == objectTag || tag == argsTag || isFunc && !object) {\n              if (result2 = isFlat || isFunc ? {} : initCloneObject(value), !isDeep)\n                return isFlat ? copySymbolsIn(value, baseAssignIn(result2, value)) : copySymbols(value, baseAssign(result2, value));\n            } else {\n              if (!cloneableTags[tag])\n                return object ? value : {};\n              result2 = initCloneByTag(value, tag, isDeep);\n            }\n          }\n          stack || (stack = new Stack());\n          var stacked = stack.get(value);\n          if (stacked)\n            return stacked;\n          stack.set(value, result2), isSet(value) ? value.forEach(function(subValue) {\n            result2.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n          }) : isMap(value) && value.forEach(function(subValue, key2) {\n            result2.set(key2, baseClone(subValue, bitmask, customizer, key2, value, stack));\n          });\n          var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys, props = isArr ? undefined$1 : keysFunc(value);\n          return arrayEach(props || value, function(subValue, key2) {\n            props && (key2 = subValue, subValue = value[key2]), assignValue(result2, key2, baseClone(subValue, bitmask, customizer, key2, value, stack));\n          }), result2;\n        }\n        function baseConforms(source) {\n          var props = keys(source);\n          return function(object) {\n            return baseConformsTo(object, source, props);\n          };\n        }\n        function baseConformsTo(object, source, props) {\n          var length = props.length;\n          if (object == null)\n            return !length;\n          for (object = Object2(object); length--; ) {\n            var key = props[length], predicate = source[key], value = object[key];\n            if (value === undefined$1 && !(key in object) || !predicate(value))\n              return !1;\n          }\n          return !0;\n        }\n        function baseDelay(func, wait, args) {\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return setTimeout(function() {\n            func.apply(undefined$1, args);\n          }, wait);\n        }\n        function baseDifference(array, values2, iteratee2, comparator) {\n          var index = -1, includes2 = arrayIncludes, isCommon = !0, length = array.length, result2 = [], valuesLength = values2.length;\n          if (!length)\n            return result2;\n          iteratee2 && (values2 = arrayMap(values2, baseUnary(iteratee2))), comparator ? (includes2 = arrayIncludesWith, isCommon = !1) : values2.length >= LARGE_ARRAY_SIZE && (includes2 = cacheHas, isCommon = !1, values2 = new SetCache(values2));\n          outer:\n            for (; ++index < length; ) {\n              var value = array[index], computed = iteratee2 == null ? value : iteratee2(value);\n              if (value = comparator || value !== 0 ? value : 0, isCommon && computed === computed) {\n                for (var valuesIndex = valuesLength; valuesIndex--; )\n                  if (values2[valuesIndex] === computed)\n                    continue outer;\n                result2.push(value);\n              } else includes2(values2, computed, comparator) || result2.push(value);\n            }\n          return result2;\n        }\n        var baseEach = createBaseEach(baseForOwn), baseEachRight = createBaseEach(baseForOwnRight, !0);\n        function baseEvery(collection, predicate) {\n          var result2 = !0;\n          return baseEach(collection, function(value, index, collection2) {\n            return result2 = !!predicate(value, index, collection2), result2;\n          }), result2;\n        }\n        function baseExtremum(array, iteratee2, comparator) {\n          for (var index = -1, length = array.length; ++index < length; ) {\n            var value = array[index], current = iteratee2(value);\n            if (current != null && (computed === undefined$1 ? current === current && !isSymbol(current) : comparator(current, computed)))\n              var computed = current, result2 = value;\n          }\n          return result2;\n        }\n        function baseFill(array, value, start, end) {\n          var length = array.length;\n          for (start = toInteger(start), start < 0 && (start = -start > length ? 0 : length + start), end = end === undefined$1 || end > length ? length : toInteger(end), end < 0 && (end += length), end = start > end ? 0 : toLength(end); start < end; )\n            array[start++] = value;\n          return array;\n        }\n        function baseFilter(collection, predicate) {\n          var result2 = [];\n          return baseEach(collection, function(value, index, collection2) {\n            predicate(value, index, collection2) && result2.push(value);\n          }), result2;\n        }\n        function baseFlatten(array, depth, predicate, isStrict, result2) {\n          var index = -1, length = array.length;\n          for (predicate || (predicate = isFlattenable), result2 || (result2 = []); ++index < length; ) {\n            var value = array[index];\n            depth > 0 && predicate(value) ? depth > 1 ? baseFlatten(value, depth - 1, predicate, isStrict, result2) : arrayPush(result2, value) : isStrict || (result2[result2.length] = value);\n          }\n          return result2;\n        }\n        var baseFor = createBaseFor(), baseForRight = createBaseFor(!0);\n        function baseForOwn(object, iteratee2) {\n          return object && baseFor(object, iteratee2, keys);\n        }\n        function baseForOwnRight(object, iteratee2) {\n          return object && baseForRight(object, iteratee2, keys);\n        }\n        function baseFunctions(object, props) {\n          return arrayFilter(props, function(key) {\n            return isFunction(object[key]);\n          });\n        }\n        function baseGet(object, path) {\n          path = castPath(path, object);\n          for (var index = 0, length = path.length; object != null && index < length; )\n            object = object[toKey(path[index++])];\n          return index && index == length ? object : undefined$1;\n        }\n        function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n          var result2 = keysFunc(object);\n          return isArray(object) ? result2 : arrayPush(result2, symbolsFunc(object));\n        }\n        function baseGetTag(value) {\n          return value == null ? value === undefined$1 ? undefinedTag : nullTag : symToStringTag && symToStringTag in Object2(value) ? getRawTag(value) : objectToString(value);\n        }\n        function baseGt(value, other) {\n          return value > other;\n        }\n        function baseHas(object, key) {\n          return object != null && hasOwnProperty.call(object, key);\n        }\n        function baseHasIn(object, key) {\n          return object != null && key in Object2(object);\n        }\n        function baseInRange(number, start, end) {\n          return number >= nativeMin(start, end) && number < nativeMax(start, end);\n        }\n        function baseIntersection(arrays, iteratee2, comparator) {\n          for (var includes2 = comparator ? arrayIncludesWith : arrayIncludes, length = arrays[0].length, othLength = arrays.length, othIndex = othLength, caches = Array2(othLength), maxLength = 1 / 0, result2 = []; othIndex--; ) {\n            var array = arrays[othIndex];\n            othIndex && iteratee2 && (array = arrayMap(array, baseUnary(iteratee2))), maxLength = nativeMin(array.length, maxLength), caches[othIndex] = !comparator && (iteratee2 || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined$1;\n          }\n          array = arrays[0];\n          var index = -1, seen = caches[0];\n          outer:\n            for (; ++index < length && result2.length < maxLength; ) {\n              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;\n              if (value = comparator || value !== 0 ? value : 0, !(seen ? cacheHas(seen, computed) : includes2(result2, computed, comparator))) {\n                for (othIndex = othLength; --othIndex; ) {\n                  var cache = caches[othIndex];\n                  if (!(cache ? cacheHas(cache, computed) : includes2(arrays[othIndex], computed, comparator)))\n                    continue outer;\n                }\n                seen && seen.push(computed), result2.push(value);\n              }\n            }\n          return result2;\n        }\n        function baseInverter(object, setter, iteratee2, accumulator) {\n          return baseForOwn(object, function(value, key, object2) {\n            setter(accumulator, iteratee2(value), key, object2);\n          }), accumulator;\n        }\n        function baseInvoke(object, path, args) {\n          path = castPath(path, object), object = parent(object, path);\n          var func = object == null ? object : object[toKey(last(path))];\n          return func == null ? undefined$1 : apply(func, object, args);\n        }\n        function baseIsArguments(value) {\n          return isObjectLike(value) && baseGetTag(value) == argsTag;\n        }\n        function baseIsArrayBuffer(value) {\n          return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n        }\n        function baseIsDate(value) {\n          return isObjectLike(value) && baseGetTag(value) == dateTag;\n        }\n        function baseIsEqual(value, other, bitmask, customizer, stack) {\n          return value === other ? !0 : value == null || other == null || !isObjectLike(value) && !isObjectLike(other) ? value !== value && other !== other : baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n        }\n        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n          var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);\n          objTag = objTag == argsTag ? objectTag : objTag, othTag = othTag == argsTag ? objectTag : othTag;\n          var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;\n          if (isSameTag && isBuffer(object)) {\n            if (!isBuffer(other))\n              return !1;\n            objIsArr = !0, objIsObj = !1;\n          }\n          if (isSameTag && !objIsObj)\n            return stack || (stack = new Stack()), objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n          if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n            var objIsWrapped = objIsObj && hasOwnProperty.call(object, \"__wrapped__\"), othIsWrapped = othIsObj && hasOwnProperty.call(other, \"__wrapped__\");\n            if (objIsWrapped || othIsWrapped) {\n              var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;\n              return stack || (stack = new Stack()), equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n            }\n          }\n          return isSameTag ? (stack || (stack = new Stack()), equalObjects(object, other, bitmask, customizer, equalFunc, stack)) : !1;\n        }\n        function baseIsMap(value) {\n          return isObjectLike(value) && getTag(value) == mapTag;\n        }\n        function baseIsMatch(object, source, matchData, customizer) {\n          var index = matchData.length, length = index, noCustomizer = !customizer;\n          if (object == null)\n            return !length;\n          for (object = Object2(object); index--; ) {\n            var data = matchData[index];\n            if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object))\n              return !1;\n          }\n          for (; ++index < length; ) {\n            data = matchData[index];\n            var key = data[0], objValue = object[key], srcValue = data[1];\n            if (noCustomizer && data[2]) {\n              if (objValue === undefined$1 && !(key in object))\n                return !1;\n            } else {\n              var stack = new Stack();\n              if (customizer)\n                var result2 = customizer(objValue, srcValue, key, object, source, stack);\n              if (!(result2 === undefined$1 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result2))\n                return !1;\n            }\n          }\n          return !0;\n        }\n        function baseIsNative(value) {\n          if (!isObject(value) || isMasked(value))\n            return !1;\n          var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n          return pattern.test(toSource(value));\n        }\n        function baseIsRegExp(value) {\n          return isObjectLike(value) && baseGetTag(value) == regexpTag;\n        }\n        function baseIsSet(value) {\n          return isObjectLike(value) && getTag(value) == setTag;\n        }\n        function baseIsTypedArray(value) {\n          return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n        }\n        function baseIteratee(value) {\n          return typeof value == \"function\" ? value : value == null ? identity : typeof value == \"object\" ? isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value) : property(value);\n        }\n        function baseKeys(object) {\n          if (!isPrototype(object))\n            return nativeKeys(object);\n          var result2 = [];\n          for (var key in Object2(object))\n            hasOwnProperty.call(object, key) && key != \"constructor\" && result2.push(key);\n          return result2;\n        }\n        function baseKeysIn(object) {\n          if (!isObject(object))\n            return nativeKeysIn(object);\n          var isProto = isPrototype(object), result2 = [];\n          for (var key in object)\n            key == \"constructor\" && (isProto || !hasOwnProperty.call(object, key)) || result2.push(key);\n          return result2;\n        }\n        function baseLt(value, other) {\n          return value < other;\n        }\n        function baseMap(collection, iteratee2) {\n          var index = -1, result2 = isArrayLike(collection) ? Array2(collection.length) : [];\n          return baseEach(collection, function(value, key, collection2) {\n            result2[++index] = iteratee2(value, key, collection2);\n          }), result2;\n        }\n        function baseMatches(source) {\n          var matchData = getMatchData(source);\n          return matchData.length == 1 && matchData[0][2] ? matchesStrictComparable(matchData[0][0], matchData[0][1]) : function(object) {\n            return object === source || baseIsMatch(object, source, matchData);\n          };\n        }\n        function baseMatchesProperty(path, srcValue) {\n          return isKey(path) && isStrictComparable(srcValue) ? matchesStrictComparable(toKey(path), srcValue) : function(object) {\n            var objValue = get(object, path);\n            return objValue === undefined$1 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n          };\n        }\n        function baseMerge(object, source, srcIndex, customizer, stack) {\n          object !== source && baseFor(source, function(srcValue, key) {\n            if (stack || (stack = new Stack()), isObject(srcValue))\n              baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n            else {\n              var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + \"\", object, source, stack) : undefined$1;\n              newValue === undefined$1 && (newValue = srcValue), assignMergeValue(object, key, newValue);\n            }\n          }, keysIn);\n        }\n        function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n          var objValue = safeGet(object, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);\n          if (stacked) {\n            assignMergeValue(object, key, stacked);\n            return;\n          }\n          var newValue = customizer ? customizer(objValue, srcValue, key + \"\", object, source, stack) : undefined$1, isCommon = newValue === undefined$1;\n          if (isCommon) {\n            var isArr = isArray(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n            newValue = srcValue, isArr || isBuff || isTyped ? isArray(objValue) ? newValue = objValue : isArrayLikeObject(objValue) ? newValue = copyArray(objValue) : isBuff ? (isCommon = !1, newValue = cloneBuffer(srcValue, !0)) : isTyped ? (isCommon = !1, newValue = cloneTypedArray(srcValue, !0)) : newValue = [] : isPlainObject(srcValue) || isArguments(srcValue) ? (newValue = objValue, isArguments(objValue) ? newValue = toPlainObject(objValue) : (!isObject(objValue) || isFunction(objValue)) && (newValue = initCloneObject(srcValue))) : isCommon = !1;\n          }\n          isCommon && (stack.set(srcValue, newValue), mergeFunc(newValue, srcValue, srcIndex, customizer, stack), stack.delete(srcValue)), assignMergeValue(object, key, newValue);\n        }\n        function baseNth(array, n) {\n          var length = array.length;\n          if (length)\n            return n += n < 0 ? length : 0, isIndex(n, length) ? array[n] : undefined$1;\n        }\n        function baseOrderBy(collection, iteratees, orders) {\n          iteratees.length ? iteratees = arrayMap(iteratees, function(iteratee2) {\n            return isArray(iteratee2) ? function(value) {\n              return baseGet(value, iteratee2.length === 1 ? iteratee2[0] : iteratee2);\n            } : iteratee2;\n          }) : iteratees = [identity];\n          var index = -1;\n          iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n          var result2 = baseMap(collection, function(value, key, collection2) {\n            var criteria = arrayMap(iteratees, function(iteratee2) {\n              return iteratee2(value);\n            });\n            return { criteria, index: ++index, value };\n          });\n          return baseSortBy(result2, function(object, other) {\n            return compareMultiple(object, other, orders);\n          });\n        }\n        function basePick(object, paths) {\n          return basePickBy(object, paths, function(value, path) {\n            return hasIn(object, path);\n          });\n        }\n        function basePickBy(object, paths, predicate) {\n          for (var index = -1, length = paths.length, result2 = {}; ++index < length; ) {\n            var path = paths[index], value = baseGet(object, path);\n            predicate(value, path) && baseSet(result2, castPath(path, object), value);\n          }\n          return result2;\n        }\n        function basePropertyDeep(path) {\n          return function(object) {\n            return baseGet(object, path);\n          };\n        }\n        function basePullAll(array, values2, iteratee2, comparator) {\n          var indexOf2 = comparator ? baseIndexOfWith : baseIndexOf, index = -1, length = values2.length, seen = array;\n          for (array === values2 && (values2 = copyArray(values2)), iteratee2 && (seen = arrayMap(array, baseUnary(iteratee2))); ++index < length; )\n            for (var fromIndex = 0, value = values2[index], computed = iteratee2 ? iteratee2(value) : value; (fromIndex = indexOf2(seen, computed, fromIndex, comparator)) > -1; )\n              seen !== array && splice.call(seen, fromIndex, 1), splice.call(array, fromIndex, 1);\n          return array;\n        }\n        function basePullAt(array, indexes) {\n          for (var length = array ? indexes.length : 0, lastIndex = length - 1; length--; ) {\n            var index = indexes[length];\n            if (length == lastIndex || index !== previous) {\n              var previous = index;\n              isIndex(index) ? splice.call(array, index, 1) : baseUnset(array, index);\n            }\n          }\n          return array;\n        }\n        function baseRandom(lower, upper) {\n          return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n        }\n        function baseRange(start, end, step, fromRight) {\n          for (var index = -1, length = nativeMax(nativeCeil((end - start) / (step || 1)), 0), result2 = Array2(length); length--; )\n            result2[fromRight ? length : ++index] = start, start += step;\n          return result2;\n        }\n        function baseRepeat(string, n) {\n          var result2 = \"\";\n          if (!string || n < 1 || n > MAX_SAFE_INTEGER)\n            return result2;\n          do\n            n % 2 && (result2 += string), n = nativeFloor(n / 2), n && (string += string);\n          while (n);\n          return result2;\n        }\n        function baseRest(func, start) {\n          return setToString(overRest(func, start, identity), func + \"\");\n        }\n        function baseSample(collection) {\n          return arraySample(values(collection));\n        }\n        function baseSampleSize(collection, n) {\n          var array = values(collection);\n          return shuffleSelf(array, baseClamp(n, 0, array.length));\n        }\n        function baseSet(object, path, value, customizer) {\n          if (!isObject(object))\n            return object;\n          path = castPath(path, object);\n          for (var index = -1, length = path.length, lastIndex = length - 1, nested = object; nested != null && ++index < length; ) {\n            var key = toKey(path[index]), newValue = value;\n            if (key === \"__proto__\" || key === \"constructor\" || key === \"prototype\")\n              return object;\n            if (index != lastIndex) {\n              var objValue = nested[key];\n              newValue = customizer ? customizer(objValue, key, nested) : undefined$1, newValue === undefined$1 && (newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {});\n            }\n            assignValue(nested, key, newValue), nested = nested[key];\n          }\n          return object;\n        }\n        var baseSetData = metaMap ? function(func, data) {\n          return metaMap.set(func, data), func;\n        } : identity, baseSetToString = defineProperty ? function(func, string) {\n          return defineProperty(func, \"toString\", {\n            configurable: !0,\n            enumerable: !1,\n            value: constant(string),\n            writable: !0\n          });\n        } : identity;\n        function baseShuffle(collection) {\n          return shuffleSelf(values(collection));\n        }\n        function baseSlice(array, start, end) {\n          var index = -1, length = array.length;\n          start < 0 && (start = -start > length ? 0 : length + start), end = end > length ? length : end, end < 0 && (end += length), length = start > end ? 0 : end - start >>> 0, start >>>= 0;\n          for (var result2 = Array2(length); ++index < length; )\n            result2[index] = array[index + start];\n          return result2;\n        }\n        function baseSome(collection, predicate) {\n          var result2;\n          return baseEach(collection, function(value, index, collection2) {\n            return result2 = predicate(value, index, collection2), !result2;\n          }), !!result2;\n        }\n        function baseSortedIndex(array, value, retHighest) {\n          var low = 0, high = array == null ? low : array.length;\n          if (typeof value == \"number\" && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n            for (; low < high; ) {\n              var mid = low + high >>> 1, computed = array[mid];\n              computed !== null && !isSymbol(computed) && (retHighest ? computed <= value : computed < value) ? low = mid + 1 : high = mid;\n            }\n            return high;\n          }\n          return baseSortedIndexBy(array, value, identity, retHighest);\n        }\n        function baseSortedIndexBy(array, value, iteratee2, retHighest) {\n          var low = 0, high = array == null ? 0 : array.length;\n          if (high === 0)\n            return 0;\n          value = iteratee2(value);\n          for (var valIsNaN = value !== value, valIsNull = value === null, valIsSymbol = isSymbol(value), valIsUndefined = value === undefined$1; low < high; ) {\n            var mid = nativeFloor((low + high) / 2), computed = iteratee2(array[mid]), othIsDefined = computed !== undefined$1, othIsNull = computed === null, othIsReflexive = computed === computed, othIsSymbol = isSymbol(computed);\n            if (valIsNaN)\n              var setLow = retHighest || othIsReflexive;\n            else valIsUndefined ? setLow = othIsReflexive && (retHighest || othIsDefined) : valIsNull ? setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull) : valIsSymbol ? setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol) : othIsNull || othIsSymbol ? setLow = !1 : setLow = retHighest ? computed <= value : computed < value;\n            setLow ? low = mid + 1 : high = mid;\n          }\n          return nativeMin(high, MAX_ARRAY_INDEX);\n        }\n        function baseSortedUniq(array, iteratee2) {\n          for (var index = -1, length = array.length, resIndex = 0, result2 = []; ++index < length; ) {\n            var value = array[index], computed = iteratee2 ? iteratee2(value) : value;\n            if (!index || !eq(computed, seen)) {\n              var seen = computed;\n              result2[resIndex++] = value === 0 ? 0 : value;\n            }\n          }\n          return result2;\n        }\n        function baseToNumber(value) {\n          return typeof value == \"number\" ? value : isSymbol(value) ? NAN : +value;\n        }\n        function baseToString(value) {\n          if (typeof value == \"string\")\n            return value;\n          if (isArray(value))\n            return arrayMap(value, baseToString) + \"\";\n          if (isSymbol(value))\n            return symbolToString ? symbolToString.call(value) : \"\";\n          var result2 = value + \"\";\n          return result2 == \"0\" && 1 / value == -INFINITY ? \"-0\" : result2;\n        }\n        function baseUniq(array, iteratee2, comparator) {\n          var index = -1, includes2 = arrayIncludes, length = array.length, isCommon = !0, result2 = [], seen = result2;\n          if (comparator)\n            isCommon = !1, includes2 = arrayIncludesWith;\n          else if (length >= LARGE_ARRAY_SIZE) {\n            var set2 = iteratee2 ? null : createSet(array);\n            if (set2)\n              return setToArray(set2);\n            isCommon = !1, includes2 = cacheHas, seen = new SetCache();\n          } else\n            seen = iteratee2 ? [] : result2;\n          outer:\n            for (; ++index < length; ) {\n              var value = array[index], computed = iteratee2 ? iteratee2(value) : value;\n              if (value = comparator || value !== 0 ? value : 0, isCommon && computed === computed) {\n                for (var seenIndex = seen.length; seenIndex--; )\n                  if (seen[seenIndex] === computed)\n                    continue outer;\n                iteratee2 && seen.push(computed), result2.push(value);\n              } else includes2(seen, computed, comparator) || (seen !== result2 && seen.push(computed), result2.push(value));\n            }\n          return result2;\n        }\n        function baseUnset(object, path) {\n          return path = castPath(path, object), object = parent(object, path), object == null || delete object[toKey(last(path))];\n        }\n        function baseUpdate(object, path, updater, customizer) {\n          return baseSet(object, path, updater(baseGet(object, path)), customizer);\n        }\n        function baseWhile(array, predicate, isDrop, fromRight) {\n          for (var length = array.length, index = fromRight ? length : -1; (fromRight ? index-- : ++index < length) && predicate(array[index], index, array); )\n            ;\n          return isDrop ? baseSlice(array, fromRight ? 0 : index, fromRight ? index + 1 : length) : baseSlice(array, fromRight ? index + 1 : 0, fromRight ? length : index);\n        }\n        function baseWrapperValue(value, actions) {\n          var result2 = value;\n          return result2 instanceof LazyWrapper && (result2 = result2.value()), arrayReduce(actions, function(result3, action) {\n            return action.func.apply(action.thisArg, arrayPush([result3], action.args));\n          }, result2);\n        }\n        function baseXor(arrays, iteratee2, comparator) {\n          var length = arrays.length;\n          if (length < 2)\n            return length ? baseUniq(arrays[0]) : [];\n          for (var index = -1, result2 = Array2(length); ++index < length; )\n            for (var array = arrays[index], othIndex = -1; ++othIndex < length; )\n              othIndex != index && (result2[index] = baseDifference(result2[index] || array, arrays[othIndex], iteratee2, comparator));\n          return baseUniq(baseFlatten(result2, 1), iteratee2, comparator);\n        }\n        function baseZipObject(props, values2, assignFunc) {\n          for (var index = -1, length = props.length, valsLength = values2.length, result2 = {}; ++index < length; ) {\n            var value = index < valsLength ? values2[index] : undefined$1;\n            assignFunc(result2, props[index], value);\n          }\n          return result2;\n        }\n        function castArrayLikeObject(value) {\n          return isArrayLikeObject(value) ? value : [];\n        }\n        function castFunction(value) {\n          return typeof value == \"function\" ? value : identity;\n        }\n        function castPath(value, object) {\n          return isArray(value) ? value : isKey(value, object) ? [value] : stringToPath(toString(value));\n        }\n        var castRest = baseRest;\n        function castSlice(array, start, end) {\n          var length = array.length;\n          return end = end === undefined$1 ? length : end, !start && end >= length ? array : baseSlice(array, start, end);\n        }\n        var clearTimeout = ctxClearTimeout || function(id) {\n          return root.clearTimeout(id);\n        };\n        function cloneBuffer(buffer, isDeep) {\n          if (isDeep)\n            return buffer.slice();\n          var length = buffer.length, result2 = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n          return buffer.copy(result2), result2;\n        }\n        function cloneArrayBuffer(arrayBuffer) {\n          var result2 = new arrayBuffer.constructor(arrayBuffer.byteLength);\n          return new Uint8Array(result2).set(new Uint8Array(arrayBuffer)), result2;\n        }\n        function cloneDataView(dataView, isDeep) {\n          var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n          return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n        }\n        function cloneRegExp(regexp) {\n          var result2 = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n          return result2.lastIndex = regexp.lastIndex, result2;\n        }\n        function cloneSymbol(symbol) {\n          return symbolValueOf ? Object2(symbolValueOf.call(symbol)) : {};\n        }\n        function cloneTypedArray(typedArray, isDeep) {\n          var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n          return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n        }\n        function compareAscending(value, other) {\n          if (value !== other) {\n            var valIsDefined = value !== undefined$1, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value), othIsDefined = other !== undefined$1, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);\n            if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive)\n              return 1;\n            if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive)\n              return -1;\n          }\n          return 0;\n        }\n        function compareMultiple(object, other, orders) {\n          for (var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length; ++index < length; ) {\n            var result2 = compareAscending(objCriteria[index], othCriteria[index]);\n            if (result2) {\n              if (index >= ordersLength)\n                return result2;\n              var order = orders[index];\n              return result2 * (order == \"desc\" ? -1 : 1);\n            }\n          }\n          return object.index - other.index;\n        }\n        function composeArgs(args, partials, holders, isCurried) {\n          for (var argsIndex = -1, argsLength = args.length, holdersLength = holders.length, leftIndex = -1, leftLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(leftLength + rangeLength), isUncurried = !isCurried; ++leftIndex < leftLength; )\n            result2[leftIndex] = partials[leftIndex];\n          for (; ++argsIndex < holdersLength; )\n            (isUncurried || argsIndex < argsLength) && (result2[holders[argsIndex]] = args[argsIndex]);\n          for (; rangeLength--; )\n            result2[leftIndex++] = args[argsIndex++];\n          return result2;\n        }\n        function composeArgsRight(args, partials, holders, isCurried) {\n          for (var argsIndex = -1, argsLength = args.length, holdersIndex = -1, holdersLength = holders.length, rightIndex = -1, rightLength = partials.length, rangeLength = nativeMax(argsLength - holdersLength, 0), result2 = Array2(rangeLength + rightLength), isUncurried = !isCurried; ++argsIndex < rangeLength; )\n            result2[argsIndex] = args[argsIndex];\n          for (var offset = argsIndex; ++rightIndex < rightLength; )\n            result2[offset + rightIndex] = partials[rightIndex];\n          for (; ++holdersIndex < holdersLength; )\n            (isUncurried || argsIndex < argsLength) && (result2[offset + holders[holdersIndex]] = args[argsIndex++]);\n          return result2;\n        }\n        function copyArray(source, array) {\n          var index = -1, length = source.length;\n          for (array || (array = Array2(length)); ++index < length; )\n            array[index] = source[index];\n          return array;\n        }\n        function copyObject(source, props, object, customizer) {\n          var isNew = !object;\n          object || (object = {});\n          for (var index = -1, length = props.length; ++index < length; ) {\n            var key = props[index], newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined$1;\n            newValue === undefined$1 && (newValue = source[key]), isNew ? baseAssignValue(object, key, newValue) : assignValue(object, key, newValue);\n          }\n          return object;\n        }\n        function copySymbols(source, object) {\n          return copyObject(source, getSymbols(source), object);\n        }\n        function copySymbolsIn(source, object) {\n          return copyObject(source, getSymbolsIn(source), object);\n        }\n        function createAggregator(setter, initializer) {\n          return function(collection, iteratee2) {\n            var func = isArray(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};\n            return func(collection, setter, getIteratee(iteratee2, 2), accumulator);\n          };\n        }\n        function createAssigner(assigner) {\n          return baseRest(function(object, sources) {\n            var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : undefined$1, guard = length > 2 ? sources[2] : undefined$1;\n            for (customizer = assigner.length > 3 && typeof customizer == \"function\" ? (length--, customizer) : undefined$1, guard && isIterateeCall(sources[0], sources[1], guard) && (customizer = length < 3 ? undefined$1 : customizer, length = 1), object = Object2(object); ++index < length; ) {\n              var source = sources[index];\n              source && assigner(object, source, index, customizer);\n            }\n            return object;\n          });\n        }\n        function createBaseEach(eachFunc, fromRight) {\n          return function(collection, iteratee2) {\n            if (collection == null)\n              return collection;\n            if (!isArrayLike(collection))\n              return eachFunc(collection, iteratee2);\n            for (var length = collection.length, index = fromRight ? length : -1, iterable = Object2(collection); (fromRight ? index-- : ++index < length) && iteratee2(iterable[index], index, iterable) !== !1; )\n              ;\n            return collection;\n          };\n        }\n        function createBaseFor(fromRight) {\n          return function(object, iteratee2, keysFunc) {\n            for (var index = -1, iterable = Object2(object), props = keysFunc(object), length = props.length; length--; ) {\n              var key = props[fromRight ? length : ++index];\n              if (iteratee2(iterable[key], key, iterable) === !1)\n                break;\n            }\n            return object;\n          };\n        }\n        function createBind(func, bitmask, thisArg) {\n          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);\n          function wrapper() {\n            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n            return fn.apply(isBind ? thisArg : this, arguments);\n          }\n          return wrapper;\n        }\n        function createCaseFirst(methodName) {\n          return function(string) {\n            string = toString(string);\n            var strSymbols = hasUnicode(string) ? stringToArray(string) : undefined$1, chr = strSymbols ? strSymbols[0] : string.charAt(0), trailing = strSymbols ? castSlice(strSymbols, 1).join(\"\") : string.slice(1);\n            return chr[methodName]() + trailing;\n          };\n        }\n        function createCompounder(callback) {\n          return function(string) {\n            return arrayReduce(words(deburr(string).replace(reApos, \"\")), callback, \"\");\n          };\n        }\n        function createCtor(Ctor) {\n          return function() {\n            var args = arguments;\n            switch (args.length) {\n              case 0:\n                return new Ctor();\n              case 1:\n                return new Ctor(args[0]);\n              case 2:\n                return new Ctor(args[0], args[1]);\n              case 3:\n                return new Ctor(args[0], args[1], args[2]);\n              case 4:\n                return new Ctor(args[0], args[1], args[2], args[3]);\n              case 5:\n                return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n              case 6:\n                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n              case 7:\n                return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n            }\n            var thisBinding = baseCreate(Ctor.prototype), result2 = Ctor.apply(thisBinding, args);\n            return isObject(result2) ? result2 : thisBinding;\n          };\n        }\n        function createCurry(func, bitmask, arity) {\n          var Ctor = createCtor(func);\n          function wrapper() {\n            for (var length = arguments.length, args = Array2(length), index = length, placeholder = getHolder(wrapper); index--; )\n              args[index] = arguments[index];\n            var holders = length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder ? [] : replaceHolders(args, placeholder);\n            if (length -= holders.length, length < arity)\n              return createRecurry(\n                func,\n                bitmask,\n                createHybrid,\n                wrapper.placeholder,\n                undefined$1,\n                args,\n                holders,\n                undefined$1,\n                undefined$1,\n                arity - length\n              );\n            var fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n            return apply(fn, this, args);\n          }\n          return wrapper;\n        }\n        function createFind(findIndexFunc) {\n          return function(collection, predicate, fromIndex) {\n            var iterable = Object2(collection);\n            if (!isArrayLike(collection)) {\n              var iteratee2 = getIteratee(predicate, 3);\n              collection = keys(collection), predicate = function(key) {\n                return iteratee2(iterable[key], key, iterable);\n              };\n            }\n            var index = findIndexFunc(collection, predicate, fromIndex);\n            return index > -1 ? iterable[iteratee2 ? collection[index] : index] : undefined$1;\n          };\n        }\n        function createFlow(fromRight) {\n          return flatRest(function(funcs) {\n            var length = funcs.length, index = length, prereq = LodashWrapper.prototype.thru;\n            for (fromRight && funcs.reverse(); index--; ) {\n              var func = funcs[index];\n              if (typeof func != \"function\")\n                throw new TypeError(FUNC_ERROR_TEXT);\n              if (prereq && !wrapper && getFuncName(func) == \"wrapper\")\n                var wrapper = new LodashWrapper([], !0);\n            }\n            for (index = wrapper ? index : length; ++index < length; ) {\n              func = funcs[index];\n              var funcName = getFuncName(func), data = funcName == \"wrapper\" ? getData(func) : undefined$1;\n              data && isLaziable(data[0]) && data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) && !data[4].length && data[9] == 1 ? wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]) : wrapper = func.length == 1 && isLaziable(func) ? wrapper[funcName]() : wrapper.thru(func);\n            }\n            return function() {\n              var args = arguments, value = args[0];\n              if (wrapper && args.length == 1 && isArray(value))\n                return wrapper.plant(value).value();\n              for (var index2 = 0, result2 = length ? funcs[index2].apply(this, args) : value; ++index2 < length; )\n                result2 = funcs[index2].call(this, result2);\n              return result2;\n            };\n          });\n        }\n        function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary2, arity) {\n          var isAry = bitmask & WRAP_ARY_FLAG, isBind = bitmask & WRAP_BIND_FLAG, isBindKey = bitmask & WRAP_BIND_KEY_FLAG, isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG), isFlip = bitmask & WRAP_FLIP_FLAG, Ctor = isBindKey ? undefined$1 : createCtor(func);\n          function wrapper() {\n            for (var length = arguments.length, args = Array2(length), index = length; index--; )\n              args[index] = arguments[index];\n            if (isCurried)\n              var placeholder = getHolder(wrapper), holdersCount = countHolders(args, placeholder);\n            if (partials && (args = composeArgs(args, partials, holders, isCurried)), partialsRight && (args = composeArgsRight(args, partialsRight, holdersRight, isCurried)), length -= holdersCount, isCurried && length < arity) {\n              var newHolders = replaceHolders(args, placeholder);\n              return createRecurry(\n                func,\n                bitmask,\n                createHybrid,\n                wrapper.placeholder,\n                thisArg,\n                args,\n                newHolders,\n                argPos,\n                ary2,\n                arity - length\n              );\n            }\n            var thisBinding = isBind ? thisArg : this, fn = isBindKey ? thisBinding[func] : func;\n            return length = args.length, argPos ? args = reorder(args, argPos) : isFlip && length > 1 && args.reverse(), isAry && ary2 < length && (args.length = ary2), this && this !== root && this instanceof wrapper && (fn = Ctor || createCtor(fn)), fn.apply(thisBinding, args);\n          }\n          return wrapper;\n        }\n        function createInverter(setter, toIteratee) {\n          return function(object, iteratee2) {\n            return baseInverter(object, setter, toIteratee(iteratee2), {});\n          };\n        }\n        function createMathOperation(operator, defaultValue) {\n          return function(value, other) {\n            var result2;\n            if (value === undefined$1 && other === undefined$1)\n              return defaultValue;\n            if (value !== undefined$1 && (result2 = value), other !== undefined$1) {\n              if (result2 === undefined$1)\n                return other;\n              typeof value == \"string\" || typeof other == \"string\" ? (value = baseToString(value), other = baseToString(other)) : (value = baseToNumber(value), other = baseToNumber(other)), result2 = operator(value, other);\n            }\n            return result2;\n          };\n        }\n        function createOver(arrayFunc) {\n          return flatRest(function(iteratees) {\n            return iteratees = arrayMap(iteratees, baseUnary(getIteratee())), baseRest(function(args) {\n              var thisArg = this;\n              return arrayFunc(iteratees, function(iteratee2) {\n                return apply(iteratee2, thisArg, args);\n              });\n            });\n          });\n        }\n        function createPadding(length, chars) {\n          chars = chars === undefined$1 ? \" \" : baseToString(chars);\n          var charsLength = chars.length;\n          if (charsLength < 2)\n            return charsLength ? baseRepeat(chars, length) : chars;\n          var result2 = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n          return hasUnicode(chars) ? castSlice(stringToArray(result2), 0, length).join(\"\") : result2.slice(0, length);\n        }\n        function createPartial(func, bitmask, thisArg, partials) {\n          var isBind = bitmask & WRAP_BIND_FLAG, Ctor = createCtor(func);\n          function wrapper() {\n            for (var argsIndex = -1, argsLength = arguments.length, leftIndex = -1, leftLength = partials.length, args = Array2(leftLength + argsLength), fn = this && this !== root && this instanceof wrapper ? Ctor : func; ++leftIndex < leftLength; )\n              args[leftIndex] = partials[leftIndex];\n            for (; argsLength--; )\n              args[leftIndex++] = arguments[++argsIndex];\n            return apply(fn, isBind ? thisArg : this, args);\n          }\n          return wrapper;\n        }\n        function createRange(fromRight) {\n          return function(start, end, step) {\n            return step && typeof step != \"number\" && isIterateeCall(start, end, step) && (end = step = undefined$1), start = toFinite(start), end === undefined$1 ? (end = start, start = 0) : end = toFinite(end), step = step === undefined$1 ? start < end ? 1 : -1 : toFinite(step), baseRange(start, end, step, fromRight);\n          };\n        }\n        function createRelationalOperation(operator) {\n          return function(value, other) {\n            return typeof value == \"string\" && typeof other == \"string\" || (value = toNumber(value), other = toNumber(other)), operator(value, other);\n          };\n        }\n        function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary2, arity) {\n          var isCurry = bitmask & WRAP_CURRY_FLAG, newHolders = isCurry ? holders : undefined$1, newHoldersRight = isCurry ? undefined$1 : holders, newPartials = isCurry ? partials : undefined$1, newPartialsRight = isCurry ? undefined$1 : partials;\n          bitmask |= isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG, bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG), bitmask & WRAP_CURRY_BOUND_FLAG || (bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG));\n          var newData = [\n            func,\n            bitmask,\n            thisArg,\n            newPartials,\n            newHolders,\n            newPartialsRight,\n            newHoldersRight,\n            argPos,\n            ary2,\n            arity\n          ], result2 = wrapFunc.apply(undefined$1, newData);\n          return isLaziable(func) && setData(result2, newData), result2.placeholder = placeholder, setWrapToString(result2, func, bitmask);\n        }\n        function createRound(methodName) {\n          var func = Math[methodName];\n          return function(number, precision) {\n            if (number = toNumber(number), precision = precision == null ? 0 : nativeMin(toInteger(precision), 292), precision && nativeIsFinite(number)) {\n              var pair = (toString(number) + \"e\").split(\"e\"), value = func(pair[0] + \"e\" + (+pair[1] + precision));\n              return pair = (toString(value) + \"e\").split(\"e\"), +(pair[0] + \"e\" + (+pair[1] - precision));\n            }\n            return func(number);\n          };\n        }\n        var createSet = Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY ? function(values2) {\n          return new Set(values2);\n        } : noop;\n        function createToPairs(keysFunc) {\n          return function(object) {\n            var tag = getTag(object);\n            return tag == mapTag ? mapToArray(object) : tag == setTag ? setToPairs(object) : baseToPairs(object, keysFunc(object));\n          };\n        }\n        function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary2, arity) {\n          var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n          if (!isBindKey && typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          var length = partials ? partials.length : 0;\n          if (length || (bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG), partials = holders = undefined$1), ary2 = ary2 === undefined$1 ? ary2 : nativeMax(toInteger(ary2), 0), arity = arity === undefined$1 ? arity : toInteger(arity), length -= holders ? holders.length : 0, bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n            var partialsRight = partials, holdersRight = holders;\n            partials = holders = undefined$1;\n          }\n          var data = isBindKey ? undefined$1 : getData(func), newData = [\n            func,\n            bitmask,\n            thisArg,\n            partials,\n            holders,\n            partialsRight,\n            holdersRight,\n            argPos,\n            ary2,\n            arity\n          ];\n          if (data && mergeData(newData, data), func = newData[0], bitmask = newData[1], thisArg = newData[2], partials = newData[3], holders = newData[4], arity = newData[9] = newData[9] === undefined$1 ? isBindKey ? 0 : func.length : nativeMax(newData[9] - length, 0), !arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG) && (bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)), !bitmask || bitmask == WRAP_BIND_FLAG)\n            var result2 = createBind(func, bitmask, thisArg);\n          else bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG ? result2 = createCurry(func, bitmask, arity) : (bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length ? result2 = createPartial(func, bitmask, thisArg, partials) : result2 = createHybrid.apply(undefined$1, newData);\n          var setter = data ? baseSetData : setData;\n          return setWrapToString(setter(result2, newData), func, bitmask);\n        }\n        function customDefaultsAssignIn(objValue, srcValue, key, object) {\n          return objValue === undefined$1 || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key) ? srcValue : objValue;\n        }\n        function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n          return isObject(objValue) && isObject(srcValue) && (stack.set(srcValue, objValue), baseMerge(objValue, srcValue, undefined$1, customDefaultsMerge, stack), stack.delete(srcValue)), objValue;\n        }\n        function customOmitClone(value) {\n          return isPlainObject(value) ? undefined$1 : value;\n        }\n        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;\n          if (arrLength != othLength && !(isPartial && othLength > arrLength))\n            return !1;\n          var arrStacked = stack.get(array), othStacked = stack.get(other);\n          if (arrStacked && othStacked)\n            return arrStacked == other && othStacked == array;\n          var index = -1, result2 = !0, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined$1;\n          for (stack.set(array, other), stack.set(other, array); ++index < arrLength; ) {\n            var arrValue = array[index], othValue = other[index];\n            if (customizer)\n              var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n            if (compared !== undefined$1) {\n              if (compared)\n                continue;\n              result2 = !1;\n              break;\n            }\n            if (seen) {\n              if (!arraySome(other, function(othValue2, othIndex) {\n                if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack)))\n                  return seen.push(othIndex);\n              })) {\n                result2 = !1;\n                break;\n              }\n            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              result2 = !1;\n              break;\n            }\n          }\n          return stack.delete(array), stack.delete(other), result2;\n        }\n        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n          switch (tag) {\n            case dataViewTag:\n              if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset)\n                return !1;\n              object = object.buffer, other = other.buffer;\n            case arrayBufferTag:\n              return !(object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other)));\n            case boolTag:\n            case dateTag:\n            case numberTag:\n              return eq(+object, +other);\n            case errorTag:\n              return object.name == other.name && object.message == other.message;\n            case regexpTag:\n            case stringTag:\n              return object == other + \"\";\n            case mapTag:\n              var convert = mapToArray;\n            case setTag:\n              var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n              if (convert || (convert = setToArray), object.size != other.size && !isPartial)\n                return !1;\n              var stacked = stack.get(object);\n              if (stacked)\n                return stacked == other;\n              bitmask |= COMPARE_UNORDERED_FLAG, stack.set(object, other);\n              var result2 = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n              return stack.delete(object), result2;\n            case symbolTag:\n              if (symbolValueOf)\n                return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n          return !1;\n        }\n        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;\n          if (objLength != othLength && !isPartial)\n            return !1;\n          for (var index = objLength; index--; ) {\n            var key = objProps[index];\n            if (!(isPartial ? key in other : hasOwnProperty.call(other, key)))\n              return !1;\n          }\n          var objStacked = stack.get(object), othStacked = stack.get(other);\n          if (objStacked && othStacked)\n            return objStacked == other && othStacked == object;\n          var result2 = !0;\n          stack.set(object, other), stack.set(other, object);\n          for (var skipCtor = isPartial; ++index < objLength; ) {\n            key = objProps[index];\n            var objValue = object[key], othValue = other[key];\n            if (customizer)\n              var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n            if (!(compared === undefined$1 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n              result2 = !1;\n              break;\n            }\n            skipCtor || (skipCtor = key == \"constructor\");\n          }\n          if (result2 && !skipCtor) {\n            var objCtor = object.constructor, othCtor = other.constructor;\n            objCtor != othCtor && \"constructor\" in object && \"constructor\" in other && !(typeof objCtor == \"function\" && objCtor instanceof objCtor && typeof othCtor == \"function\" && othCtor instanceof othCtor) && (result2 = !1);\n          }\n          return stack.delete(object), stack.delete(other), result2;\n        }\n        function flatRest(func) {\n          return setToString(overRest(func, undefined$1, flatten), func + \"\");\n        }\n        function getAllKeys(object) {\n          return baseGetAllKeys(object, keys, getSymbols);\n        }\n        function getAllKeysIn(object) {\n          return baseGetAllKeys(object, keysIn, getSymbolsIn);\n        }\n        var getData = metaMap ? function(func) {\n          return metaMap.get(func);\n        } : noop;\n        function getFuncName(func) {\n          for (var result2 = func.name + \"\", array = realNames[result2], length = hasOwnProperty.call(realNames, result2) ? array.length : 0; length--; ) {\n            var data = array[length], otherFunc = data.func;\n            if (otherFunc == null || otherFunc == func)\n              return data.name;\n          }\n          return result2;\n        }\n        function getHolder(func) {\n          var object = hasOwnProperty.call(lodash2, \"placeholder\") ? lodash2 : func;\n          return object.placeholder;\n        }\n        function getIteratee() {\n          var result2 = lodash2.iteratee || iteratee;\n          return result2 = result2 === iteratee ? baseIteratee : result2, arguments.length ? result2(arguments[0], arguments[1]) : result2;\n        }\n        function getMapData(map2, key) {\n          var data = map2.__data__;\n          return isKeyable(key) ? data[typeof key == \"string\" ? \"string\" : \"hash\"] : data.map;\n        }\n        function getMatchData(object) {\n          for (var result2 = keys(object), length = result2.length; length--; ) {\n            var key = result2[length], value = object[key];\n            result2[length] = [key, value, isStrictComparable(value)];\n          }\n          return result2;\n        }\n        function getNative(object, key) {\n          var value = getValue(object, key);\n          return baseIsNative(value) ? value : undefined$1;\n        }\n        function getRawTag(value) {\n          var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];\n          try {\n            value[symToStringTag] = undefined$1;\n            var unmasked = !0;\n          } catch {\n          }\n          var result2 = nativeObjectToString.call(value);\n          return unmasked && (isOwn ? value[symToStringTag] = tag : delete value[symToStringTag]), result2;\n        }\n        var getSymbols = nativeGetSymbols ? function(object) {\n          return object == null ? [] : (object = Object2(object), arrayFilter(nativeGetSymbols(object), function(symbol) {\n            return propertyIsEnumerable.call(object, symbol);\n          }));\n        } : stubArray, getSymbolsIn = nativeGetSymbols ? function(object) {\n          for (var result2 = []; object; )\n            arrayPush(result2, getSymbols(object)), object = getPrototype(object);\n          return result2;\n        } : stubArray, getTag = baseGetTag;\n        (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) && (getTag = function(value) {\n          var result2 = baseGetTag(value), Ctor = result2 == objectTag ? value.constructor : undefined$1, ctorString = Ctor ? toSource(Ctor) : \"\";\n          if (ctorString)\n            switch (ctorString) {\n              case dataViewCtorString:\n                return dataViewTag;\n              case mapCtorString:\n                return mapTag;\n              case promiseCtorString:\n                return promiseTag;\n              case setCtorString:\n                return setTag;\n              case weakMapCtorString:\n                return weakMapTag;\n            }\n          return result2;\n        });\n        function getView(start, end, transforms) {\n          for (var index = -1, length = transforms.length; ++index < length; ) {\n            var data = transforms[index], size2 = data.size;\n            switch (data.type) {\n              case \"drop\":\n                start += size2;\n                break;\n              case \"dropRight\":\n                end -= size2;\n                break;\n              case \"take\":\n                end = nativeMin(end, start + size2);\n                break;\n              case \"takeRight\":\n                start = nativeMax(start, end - size2);\n                break;\n            }\n          }\n          return { start, end };\n        }\n        function getWrapDetails(source) {\n          var match = source.match(reWrapDetails);\n          return match ? match[1].split(reSplitDetails) : [];\n        }\n        function hasPath(object, path, hasFunc) {\n          path = castPath(path, object);\n          for (var index = -1, length = path.length, result2 = !1; ++index < length; ) {\n            var key = toKey(path[index]);\n            if (!(result2 = object != null && hasFunc(object, key)))\n              break;\n            object = object[key];\n          }\n          return result2 || ++index != length ? result2 : (length = object == null ? 0 : object.length, !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object)));\n        }\n        function initCloneArray(array) {\n          var length = array.length, result2 = new array.constructor(length);\n          return length && typeof array[0] == \"string\" && hasOwnProperty.call(array, \"index\") && (result2.index = array.index, result2.input = array.input), result2;\n        }\n        function initCloneObject(object) {\n          return typeof object.constructor == \"function\" && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n        }\n        function initCloneByTag(object, tag, isDeep) {\n          var Ctor = object.constructor;\n          switch (tag) {\n            case arrayBufferTag:\n              return cloneArrayBuffer(object);\n            case boolTag:\n            case dateTag:\n              return new Ctor(+object);\n            case dataViewTag:\n              return cloneDataView(object, isDeep);\n            case float32Tag:\n            case float64Tag:\n            case int8Tag:\n            case int16Tag:\n            case int32Tag:\n            case uint8Tag:\n            case uint8ClampedTag:\n            case uint16Tag:\n            case uint32Tag:\n              return cloneTypedArray(object, isDeep);\n            case mapTag:\n              return new Ctor();\n            case numberTag:\n            case stringTag:\n              return new Ctor(object);\n            case regexpTag:\n              return cloneRegExp(object);\n            case setTag:\n              return new Ctor();\n            case symbolTag:\n              return cloneSymbol(object);\n          }\n        }\n        function insertWrapDetails(source, details) {\n          var length = details.length;\n          if (!length)\n            return source;\n          var lastIndex = length - 1;\n          return details[lastIndex] = (length > 1 ? \"& \" : \"\") + details[lastIndex], details = details.join(length > 2 ? \", \" : \" \"), source.replace(reWrapComment, `{\n/* [wrapped with ` + details + `] */\n`);\n        }\n        function isFlattenable(value) {\n          return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n        }\n        function isIndex(value, length) {\n          var type = typeof value;\n          return length = length ?? MAX_SAFE_INTEGER, !!length && (type == \"number\" || type != \"symbol\" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n        }\n        function isIterateeCall(value, index, object) {\n          if (!isObject(object))\n            return !1;\n          var type = typeof index;\n          return (type == \"number\" ? isArrayLike(object) && isIndex(index, object.length) : type == \"string\" && index in object) ? eq(object[index], value) : !1;\n        }\n        function isKey(value, object) {\n          if (isArray(value))\n            return !1;\n          var type = typeof value;\n          return type == \"number\" || type == \"symbol\" || type == \"boolean\" || value == null || isSymbol(value) ? !0 : reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object2(object);\n        }\n        function isKeyable(value) {\n          var type = typeof value;\n          return type == \"string\" || type == \"number\" || type == \"symbol\" || type == \"boolean\" ? value !== \"__proto__\" : value === null;\n        }\n        function isLaziable(func) {\n          var funcName = getFuncName(func), other = lodash2[funcName];\n          if (typeof other != \"function\" || !(funcName in LazyWrapper.prototype))\n            return !1;\n          if (func === other)\n            return !0;\n          var data = getData(other);\n          return !!data && func === data[0];\n        }\n        function isMasked(func) {\n          return !!maskSrcKey && maskSrcKey in func;\n        }\n        var isMaskable = coreJsData ? isFunction : stubFalse;\n        function isPrototype(value) {\n          var Ctor = value && value.constructor, proto = typeof Ctor == \"function\" && Ctor.prototype || objectProto;\n          return value === proto;\n        }\n        function isStrictComparable(value) {\n          return value === value && !isObject(value);\n        }\n        function matchesStrictComparable(key, srcValue) {\n          return function(object) {\n            return object == null ? !1 : object[key] === srcValue && (srcValue !== undefined$1 || key in Object2(object));\n          };\n        }\n        function memoizeCapped(func) {\n          var result2 = memoize(func, function(key) {\n            return cache.size === MAX_MEMOIZE_SIZE && cache.clear(), key;\n          }), cache = result2.cache;\n          return result2;\n        }\n        function mergeData(data, source) {\n          var bitmask = data[1], srcBitmask = source[1], newBitmask = bitmask | srcBitmask, isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG), isCombo = srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_CURRY_FLAG || srcBitmask == WRAP_ARY_FLAG && bitmask == WRAP_REARG_FLAG && data[7].length <= source[8] || srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG) && source[7].length <= source[8] && bitmask == WRAP_CURRY_FLAG;\n          if (!(isCommon || isCombo))\n            return data;\n          srcBitmask & WRAP_BIND_FLAG && (data[2] = source[2], newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG);\n          var value = source[3];\n          if (value) {\n            var partials = data[3];\n            data[3] = partials ? composeArgs(partials, value, source[4]) : value, data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n          }\n          return value = source[5], value && (partials = data[5], data[5] = partials ? composeArgsRight(partials, value, source[6]) : value, data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6]), value = source[7], value && (data[7] = value), srcBitmask & WRAP_ARY_FLAG && (data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8])), data[9] == null && (data[9] = source[9]), data[0] = source[0], data[1] = newBitmask, data;\n        }\n        function nativeKeysIn(object) {\n          var result2 = [];\n          if (object != null)\n            for (var key in Object2(object))\n              result2.push(key);\n          return result2;\n        }\n        function objectToString(value) {\n          return nativeObjectToString.call(value);\n        }\n        function overRest(func, start, transform2) {\n          return start = nativeMax(start === undefined$1 ? func.length - 1 : start, 0), function() {\n            for (var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array2(length); ++index < length; )\n              array[index] = args[start + index];\n            index = -1;\n            for (var otherArgs = Array2(start + 1); ++index < start; )\n              otherArgs[index] = args[index];\n            return otherArgs[start] = transform2(array), apply(func, this, otherArgs);\n          };\n        }\n        function parent(object, path) {\n          return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n        }\n        function reorder(array, indexes) {\n          for (var arrLength = array.length, length = nativeMin(indexes.length, arrLength), oldArray = copyArray(array); length--; ) {\n            var index = indexes[length];\n            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined$1;\n          }\n          return array;\n        }\n        function safeGet(object, key) {\n          if (!(key === \"constructor\" && typeof object[key] == \"function\") && key != \"__proto__\")\n            return object[key];\n        }\n        var setData = shortOut(baseSetData), setTimeout = ctxSetTimeout || function(func, wait) {\n          return root.setTimeout(func, wait);\n        }, setToString = shortOut(baseSetToString);\n        function setWrapToString(wrapper, reference, bitmask) {\n          var source = reference + \"\";\n          return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n        }\n        function shortOut(func) {\n          var count = 0, lastCalled = 0;\n          return function() {\n            var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);\n            if (lastCalled = stamp, remaining > 0) {\n              if (++count >= HOT_COUNT)\n                return arguments[0];\n            } else\n              count = 0;\n            return func.apply(undefined$1, arguments);\n          };\n        }\n        function shuffleSelf(array, size2) {\n          var index = -1, length = array.length, lastIndex = length - 1;\n          for (size2 = size2 === undefined$1 ? length : size2; ++index < size2; ) {\n            var rand = baseRandom(index, lastIndex), value = array[rand];\n            array[rand] = array[index], array[index] = value;\n          }\n          return array.length = size2, array;\n        }\n        var stringToPath = memoizeCapped(function(string) {\n          var result2 = [];\n          return string.charCodeAt(0) === 46 && result2.push(\"\"), string.replace(rePropName, function(match, number, quote, subString) {\n            result2.push(quote ? subString.replace(reEscapeChar, \"$1\") : number || match);\n          }), result2;\n        });\n        function toKey(value) {\n          if (typeof value == \"string\" || isSymbol(value))\n            return value;\n          var result2 = value + \"\";\n          return result2 == \"0\" && 1 / value == -INFINITY ? \"-0\" : result2;\n        }\n        function toSource(func) {\n          if (func != null) {\n            try {\n              return funcToString.call(func);\n            } catch {\n            }\n            try {\n              return func + \"\";\n            } catch {\n            }\n          }\n          return \"\";\n        }\n        function updateWrapDetails(details, bitmask) {\n          return arrayEach(wrapFlags, function(pair) {\n            var value = \"_.\" + pair[0];\n            bitmask & pair[1] && !arrayIncludes(details, value) && details.push(value);\n          }), details.sort();\n        }\n        function wrapperClone(wrapper) {\n          if (wrapper instanceof LazyWrapper)\n            return wrapper.clone();\n          var result2 = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n          return result2.__actions__ = copyArray(wrapper.__actions__), result2.__index__ = wrapper.__index__, result2.__values__ = wrapper.__values__, result2;\n        }\n        function chunk(array, size2, guard) {\n          (guard ? isIterateeCall(array, size2, guard) : size2 === undefined$1) ? size2 = 1 : size2 = nativeMax(toInteger(size2), 0);\n          var length = array == null ? 0 : array.length;\n          if (!length || size2 < 1)\n            return [];\n          for (var index = 0, resIndex = 0, result2 = Array2(nativeCeil(length / size2)); index < length; )\n            result2[resIndex++] = baseSlice(array, index, index += size2);\n          return result2;\n        }\n        function compact(array) {\n          for (var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result2 = []; ++index < length; ) {\n            var value = array[index];\n            value && (result2[resIndex++] = value);\n          }\n          return result2;\n        }\n        function concat() {\n          var length = arguments.length;\n          if (!length)\n            return [];\n          for (var args = Array2(length - 1), array = arguments[0], index = length; index--; )\n            args[index - 1] = arguments[index];\n          return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n        }\n        var difference = baseRest(function(array, values2) {\n          return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, !0)) : [];\n        }), differenceBy = baseRest(function(array, values2) {\n          var iteratee2 = last(values2);\n          return isArrayLikeObject(iteratee2) && (iteratee2 = undefined$1), isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, !0), getIteratee(iteratee2, 2)) : [];\n        }), differenceWith = baseRest(function(array, values2) {\n          var comparator = last(values2);\n          return isArrayLikeObject(comparator) && (comparator = undefined$1), isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values2, 1, isArrayLikeObject, !0), undefined$1, comparator) : [];\n        });\n        function drop(array, n, guard) {\n          var length = array == null ? 0 : array.length;\n          return length ? (n = guard || n === undefined$1 ? 1 : toInteger(n), baseSlice(array, n < 0 ? 0 : n, length)) : [];\n        }\n        function dropRight(array, n, guard) {\n          var length = array == null ? 0 : array.length;\n          return length ? (n = guard || n === undefined$1 ? 1 : toInteger(n), n = length - n, baseSlice(array, 0, n < 0 ? 0 : n)) : [];\n        }\n        function dropRightWhile(array, predicate) {\n          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), !0, !0) : [];\n        }\n        function dropWhile(array, predicate) {\n          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), !0) : [];\n        }\n        function fill(array, value, start, end) {\n          var length = array == null ? 0 : array.length;\n          return length ? (start && typeof start != \"number\" && isIterateeCall(array, value, start) && (start = 0, end = length), baseFill(array, value, start, end)) : [];\n        }\n        function findIndex(array, predicate, fromIndex) {\n          var length = array == null ? 0 : array.length;\n          if (!length)\n            return -1;\n          var index = fromIndex == null ? 0 : toInteger(fromIndex);\n          return index < 0 && (index = nativeMax(length + index, 0)), baseFindIndex(array, getIteratee(predicate, 3), index);\n        }\n        function findLastIndex(array, predicate, fromIndex) {\n          var length = array == null ? 0 : array.length;\n          if (!length)\n            return -1;\n          var index = length - 1;\n          return fromIndex !== undefined$1 && (index = toInteger(fromIndex), index = fromIndex < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)), baseFindIndex(array, getIteratee(predicate, 3), index, !0);\n        }\n        function flatten(array) {\n          var length = array == null ? 0 : array.length;\n          return length ? baseFlatten(array, 1) : [];\n        }\n        function flattenDeep(array) {\n          var length = array == null ? 0 : array.length;\n          return length ? baseFlatten(array, INFINITY) : [];\n        }\n        function flattenDepth(array, depth) {\n          var length = array == null ? 0 : array.length;\n          return length ? (depth = depth === undefined$1 ? 1 : toInteger(depth), baseFlatten(array, depth)) : [];\n        }\n        function fromPairs(pairs) {\n          for (var index = -1, length = pairs == null ? 0 : pairs.length, result2 = {}; ++index < length; ) {\n            var pair = pairs[index];\n            result2[pair[0]] = pair[1];\n          }\n          return result2;\n        }\n        function head(array) {\n          return array && array.length ? array[0] : undefined$1;\n        }\n        function indexOf(array, value, fromIndex) {\n          var length = array == null ? 0 : array.length;\n          if (!length)\n            return -1;\n          var index = fromIndex == null ? 0 : toInteger(fromIndex);\n          return index < 0 && (index = nativeMax(length + index, 0)), baseIndexOf(array, value, index);\n        }\n        function initial(array) {\n          var length = array == null ? 0 : array.length;\n          return length ? baseSlice(array, 0, -1) : [];\n        }\n        var intersection = baseRest(function(arrays) {\n          var mapped = arrayMap(arrays, castArrayLikeObject);\n          return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];\n        }), intersectionBy = baseRest(function(arrays) {\n          var iteratee2 = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);\n          return iteratee2 === last(mapped) ? iteratee2 = undefined$1 : mapped.pop(), mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, getIteratee(iteratee2, 2)) : [];\n        }), intersectionWith = baseRest(function(arrays) {\n          var comparator = last(arrays), mapped = arrayMap(arrays, castArrayLikeObject);\n          return comparator = typeof comparator == \"function\" ? comparator : undefined$1, comparator && mapped.pop(), mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped, undefined$1, comparator) : [];\n        });\n        function join(array, separator) {\n          return array == null ? \"\" : nativeJoin.call(array, separator);\n        }\n        function last(array) {\n          var length = array == null ? 0 : array.length;\n          return length ? array[length - 1] : undefined$1;\n        }\n        function lastIndexOf(array, value, fromIndex) {\n          var length = array == null ? 0 : array.length;\n          if (!length)\n            return -1;\n          var index = length;\n          return fromIndex !== undefined$1 && (index = toInteger(fromIndex), index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1)), value === value ? strictLastIndexOf(array, value, index) : baseFindIndex(array, baseIsNaN, index, !0);\n        }\n        function nth(array, n) {\n          return array && array.length ? baseNth(array, toInteger(n)) : undefined$1;\n        }\n        var pull = baseRest(pullAll);\n        function pullAll(array, values2) {\n          return array && array.length && values2 && values2.length ? basePullAll(array, values2) : array;\n        }\n        function pullAllBy(array, values2, iteratee2) {\n          return array && array.length && values2 && values2.length ? basePullAll(array, values2, getIteratee(iteratee2, 2)) : array;\n        }\n        function pullAllWith(array, values2, comparator) {\n          return array && array.length && values2 && values2.length ? basePullAll(array, values2, undefined$1, comparator) : array;\n        }\n        var pullAt = flatRest(function(array, indexes) {\n          var length = array == null ? 0 : array.length, result2 = baseAt(array, indexes);\n          return basePullAt(array, arrayMap(indexes, function(index) {\n            return isIndex(index, length) ? +index : index;\n          }).sort(compareAscending)), result2;\n        });\n        function remove(array, predicate) {\n          var result2 = [];\n          if (!(array && array.length))\n            return result2;\n          var index = -1, indexes = [], length = array.length;\n          for (predicate = getIteratee(predicate, 3); ++index < length; ) {\n            var value = array[index];\n            predicate(value, index, array) && (result2.push(value), indexes.push(index));\n          }\n          return basePullAt(array, indexes), result2;\n        }\n        function reverse(array) {\n          return array == null ? array : nativeReverse.call(array);\n        }\n        function slice(array, start, end) {\n          var length = array == null ? 0 : array.length;\n          return length ? (end && typeof end != \"number\" && isIterateeCall(array, start, end) ? (start = 0, end = length) : (start = start == null ? 0 : toInteger(start), end = end === undefined$1 ? length : toInteger(end)), baseSlice(array, start, end)) : [];\n        }\n        function sortedIndex(array, value) {\n          return baseSortedIndex(array, value);\n        }\n        function sortedIndexBy(array, value, iteratee2) {\n          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2));\n        }\n        function sortedIndexOf(array, value) {\n          var length = array == null ? 0 : array.length;\n          if (length) {\n            var index = baseSortedIndex(array, value);\n            if (index < length && eq(array[index], value))\n              return index;\n          }\n          return -1;\n        }\n        function sortedLastIndex(array, value) {\n          return baseSortedIndex(array, value, !0);\n        }\n        function sortedLastIndexBy(array, value, iteratee2) {\n          return baseSortedIndexBy(array, value, getIteratee(iteratee2, 2), !0);\n        }\n        function sortedLastIndexOf(array, value) {\n          var length = array == null ? 0 : array.length;\n          if (length) {\n            var index = baseSortedIndex(array, value, !0) - 1;\n            if (eq(array[index], value))\n              return index;\n          }\n          return -1;\n        }\n        function sortedUniq(array) {\n          return array && array.length ? baseSortedUniq(array) : [];\n        }\n        function sortedUniqBy(array, iteratee2) {\n          return array && array.length ? baseSortedUniq(array, getIteratee(iteratee2, 2)) : [];\n        }\n        function tail(array) {\n          var length = array == null ? 0 : array.length;\n          return length ? baseSlice(array, 1, length) : [];\n        }\n        function take(array, n, guard) {\n          return array && array.length ? (n = guard || n === undefined$1 ? 1 : toInteger(n), baseSlice(array, 0, n < 0 ? 0 : n)) : [];\n        }\n        function takeRight(array, n, guard) {\n          var length = array == null ? 0 : array.length;\n          return length ? (n = guard || n === undefined$1 ? 1 : toInteger(n), n = length - n, baseSlice(array, n < 0 ? 0 : n, length)) : [];\n        }\n        function takeRightWhile(array, predicate) {\n          return array && array.length ? baseWhile(array, getIteratee(predicate, 3), !1, !0) : [];\n        }\n        function takeWhile(array, predicate) {\n          return array && array.length ? baseWhile(array, getIteratee(predicate, 3)) : [];\n        }\n        var union = baseRest(function(arrays) {\n          return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, !0));\n        }), unionBy = baseRest(function(arrays) {\n          var iteratee2 = last(arrays);\n          return isArrayLikeObject(iteratee2) && (iteratee2 = undefined$1), baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, !0), getIteratee(iteratee2, 2));\n        }), unionWith = baseRest(function(arrays) {\n          var comparator = last(arrays);\n          return comparator = typeof comparator == \"function\" ? comparator : undefined$1, baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, !0), undefined$1, comparator);\n        });\n        function uniq(array) {\n          return array && array.length ? baseUniq(array) : [];\n        }\n        function uniqBy(array, iteratee2) {\n          return array && array.length ? baseUniq(array, getIteratee(iteratee2, 2)) : [];\n        }\n        function uniqWith(array, comparator) {\n          return comparator = typeof comparator == \"function\" ? comparator : undefined$1, array && array.length ? baseUniq(array, undefined$1, comparator) : [];\n        }\n        function unzip(array) {\n          if (!(array && array.length))\n            return [];\n          var length = 0;\n          return array = arrayFilter(array, function(group) {\n            if (isArrayLikeObject(group))\n              return length = nativeMax(group.length, length), !0;\n          }), baseTimes(length, function(index) {\n            return arrayMap(array, baseProperty(index));\n          });\n        }\n        function unzipWith(array, iteratee2) {\n          if (!(array && array.length))\n            return [];\n          var result2 = unzip(array);\n          return iteratee2 == null ? result2 : arrayMap(result2, function(group) {\n            return apply(iteratee2, undefined$1, group);\n          });\n        }\n        var without = baseRest(function(array, values2) {\n          return isArrayLikeObject(array) ? baseDifference(array, values2) : [];\n        }), xor = baseRest(function(arrays) {\n          return baseXor(arrayFilter(arrays, isArrayLikeObject));\n        }), xorBy = baseRest(function(arrays) {\n          var iteratee2 = last(arrays);\n          return isArrayLikeObject(iteratee2) && (iteratee2 = undefined$1), baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee2, 2));\n        }), xorWith = baseRest(function(arrays) {\n          var comparator = last(arrays);\n          return comparator = typeof comparator == \"function\" ? comparator : undefined$1, baseXor(arrayFilter(arrays, isArrayLikeObject), undefined$1, comparator);\n        }), zip = baseRest(unzip);\n        function zipObject(props, values2) {\n          return baseZipObject(props || [], values2 || [], assignValue);\n        }\n        function zipObjectDeep(props, values2) {\n          return baseZipObject(props || [], values2 || [], baseSet);\n        }\n        var zipWith = baseRest(function(arrays) {\n          var length = arrays.length, iteratee2 = length > 1 ? arrays[length - 1] : undefined$1;\n          return iteratee2 = typeof iteratee2 == \"function\" ? (arrays.pop(), iteratee2) : undefined$1, unzipWith(arrays, iteratee2);\n        });\n        function chain(value) {\n          var result2 = lodash2(value);\n          return result2.__chain__ = !0, result2;\n        }\n        function tap(value, interceptor) {\n          return interceptor(value), value;\n        }\n        function thru(value, interceptor) {\n          return interceptor(value);\n        }\n        var wrapperAt = flatRest(function(paths) {\n          var length = paths.length, start = length ? paths[0] : 0, value = this.__wrapped__, interceptor = function(object) {\n            return baseAt(object, paths);\n          };\n          return length > 1 || this.__actions__.length || !(value instanceof LazyWrapper) || !isIndex(start) ? this.thru(interceptor) : (value = value.slice(start, +start + (length ? 1 : 0)), value.__actions__.push({\n            func: thru,\n            args: [interceptor],\n            thisArg: undefined$1\n          }), new LodashWrapper(value, this.__chain__).thru(function(array) {\n            return length && !array.length && array.push(undefined$1), array;\n          }));\n        });\n        function wrapperChain() {\n          return chain(this);\n        }\n        function wrapperCommit() {\n          return new LodashWrapper(this.value(), this.__chain__);\n        }\n        function wrapperNext() {\n          this.__values__ === undefined$1 && (this.__values__ = toArray(this.value()));\n          var done = this.__index__ >= this.__values__.length, value = done ? undefined$1 : this.__values__[this.__index__++];\n          return { done, value };\n        }\n        function wrapperToIterator() {\n          return this;\n        }\n        function wrapperPlant(value) {\n          for (var result2, parent2 = this; parent2 instanceof baseLodash; ) {\n            var clone2 = wrapperClone(parent2);\n            clone2.__index__ = 0, clone2.__values__ = undefined$1, result2 ? previous.__wrapped__ = clone2 : result2 = clone2;\n            var previous = clone2;\n            parent2 = parent2.__wrapped__;\n          }\n          return previous.__wrapped__ = value, result2;\n        }\n        function wrapperReverse() {\n          var value = this.__wrapped__;\n          if (value instanceof LazyWrapper) {\n            var wrapped = value;\n            return this.__actions__.length && (wrapped = new LazyWrapper(this)), wrapped = wrapped.reverse(), wrapped.__actions__.push({\n              func: thru,\n              args: [reverse],\n              thisArg: undefined$1\n            }), new LodashWrapper(wrapped, this.__chain__);\n          }\n          return this.thru(reverse);\n        }\n        function wrapperValue() {\n          return baseWrapperValue(this.__wrapped__, this.__actions__);\n        }\n        var countBy = createAggregator(function(result2, value, key) {\n          hasOwnProperty.call(result2, key) ? ++result2[key] : baseAssignValue(result2, key, 1);\n        });\n        function every(collection, predicate, guard) {\n          var func = isArray(collection) ? arrayEvery : baseEvery;\n          return guard && isIterateeCall(collection, predicate, guard) && (predicate = undefined$1), func(collection, getIteratee(predicate, 3));\n        }\n        function filter(collection, predicate) {\n          var func = isArray(collection) ? arrayFilter : baseFilter;\n          return func(collection, getIteratee(predicate, 3));\n        }\n        var find = createFind(findIndex), findLast = createFind(findLastIndex);\n        function flatMap(collection, iteratee2) {\n          return baseFlatten(map(collection, iteratee2), 1);\n        }\n        function flatMapDeep(collection, iteratee2) {\n          return baseFlatten(map(collection, iteratee2), INFINITY);\n        }\n        function flatMapDepth(collection, iteratee2, depth) {\n          return depth = depth === undefined$1 ? 1 : toInteger(depth), baseFlatten(map(collection, iteratee2), depth);\n        }\n        function forEach(collection, iteratee2) {\n          var func = isArray(collection) ? arrayEach : baseEach;\n          return func(collection, getIteratee(iteratee2, 3));\n        }\n        function forEachRight(collection, iteratee2) {\n          var func = isArray(collection) ? arrayEachRight : baseEachRight;\n          return func(collection, getIteratee(iteratee2, 3));\n        }\n        var groupBy = createAggregator(function(result2, value, key) {\n          hasOwnProperty.call(result2, key) ? result2[key].push(value) : baseAssignValue(result2, key, [value]);\n        });\n        function includes(collection, value, fromIndex, guard) {\n          collection = isArrayLike(collection) ? collection : values(collection), fromIndex = fromIndex && !guard ? toInteger(fromIndex) : 0;\n          var length = collection.length;\n          return fromIndex < 0 && (fromIndex = nativeMax(length + fromIndex, 0)), isString(collection) ? fromIndex <= length && collection.indexOf(value, fromIndex) > -1 : !!length && baseIndexOf(collection, value, fromIndex) > -1;\n        }\n        var invokeMap = baseRest(function(collection, path, args) {\n          var index = -1, isFunc = typeof path == \"function\", result2 = isArrayLike(collection) ? Array2(collection.length) : [];\n          return baseEach(collection, function(value) {\n            result2[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n          }), result2;\n        }), keyBy = createAggregator(function(result2, value, key) {\n          baseAssignValue(result2, key, value);\n        });\n        function map(collection, iteratee2) {\n          var func = isArray(collection) ? arrayMap : baseMap;\n          return func(collection, getIteratee(iteratee2, 3));\n        }\n        function orderBy(collection, iteratees, orders, guard) {\n          return collection == null ? [] : (isArray(iteratees) || (iteratees = iteratees == null ? [] : [iteratees]), orders = guard ? undefined$1 : orders, isArray(orders) || (orders = orders == null ? [] : [orders]), baseOrderBy(collection, iteratees, orders));\n        }\n        var partition = createAggregator(function(result2, value, key) {\n          result2[key ? 0 : 1].push(value);\n        }, function() {\n          return [[], []];\n        });\n        function reduce(collection, iteratee2, accumulator) {\n          var func = isArray(collection) ? arrayReduce : baseReduce, initAccum = arguments.length < 3;\n          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEach);\n        }\n        function reduceRight(collection, iteratee2, accumulator) {\n          var func = isArray(collection) ? arrayReduceRight : baseReduce, initAccum = arguments.length < 3;\n          return func(collection, getIteratee(iteratee2, 4), accumulator, initAccum, baseEachRight);\n        }\n        function reject(collection, predicate) {\n          var func = isArray(collection) ? arrayFilter : baseFilter;\n          return func(collection, negate(getIteratee(predicate, 3)));\n        }\n        function sample(collection) {\n          var func = isArray(collection) ? arraySample : baseSample;\n          return func(collection);\n        }\n        function sampleSize(collection, n, guard) {\n          (guard ? isIterateeCall(collection, n, guard) : n === undefined$1) ? n = 1 : n = toInteger(n);\n          var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n          return func(collection, n);\n        }\n        function shuffle(collection) {\n          var func = isArray(collection) ? arrayShuffle : baseShuffle;\n          return func(collection);\n        }\n        function size(collection) {\n          if (collection == null)\n            return 0;\n          if (isArrayLike(collection))\n            return isString(collection) ? stringSize(collection) : collection.length;\n          var tag = getTag(collection);\n          return tag == mapTag || tag == setTag ? collection.size : baseKeys(collection).length;\n        }\n        function some(collection, predicate, guard) {\n          var func = isArray(collection) ? arraySome : baseSome;\n          return guard && isIterateeCall(collection, predicate, guard) && (predicate = undefined$1), func(collection, getIteratee(predicate, 3));\n        }\n        var sortBy = baseRest(function(collection, iteratees) {\n          if (collection == null)\n            return [];\n          var length = iteratees.length;\n          return length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1]) ? iteratees = [] : length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2]) && (iteratees = [iteratees[0]]), baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n        }), now = ctxNow || function() {\n          return root.Date.now();\n        };\n        function after(n, func) {\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return n = toInteger(n), function() {\n            if (--n < 1)\n              return func.apply(this, arguments);\n          };\n        }\n        function ary(func, n, guard) {\n          return n = guard ? undefined$1 : n, n = func && n == null ? func.length : n, createWrap(func, WRAP_ARY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, n);\n        }\n        function before(n, func) {\n          var result2;\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return n = toInteger(n), function() {\n            return --n > 0 && (result2 = func.apply(this, arguments)), n <= 1 && (func = undefined$1), result2;\n          };\n        }\n        var bind = baseRest(function(func, thisArg, partials) {\n          var bitmask = WRAP_BIND_FLAG;\n          if (partials.length) {\n            var holders = replaceHolders(partials, getHolder(bind));\n            bitmask |= WRAP_PARTIAL_FLAG;\n          }\n          return createWrap(func, bitmask, thisArg, partials, holders);\n        }), bindKey = baseRest(function(object, key, partials) {\n          var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n          if (partials.length) {\n            var holders = replaceHolders(partials, getHolder(bindKey));\n            bitmask |= WRAP_PARTIAL_FLAG;\n          }\n          return createWrap(key, bitmask, object, partials, holders);\n        });\n        function curry(func, arity, guard) {\n          arity = guard ? undefined$1 : arity;\n          var result2 = createWrap(func, WRAP_CURRY_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);\n          return result2.placeholder = curry.placeholder, result2;\n        }\n        function curryRight(func, arity, guard) {\n          arity = guard ? undefined$1 : arity;\n          var result2 = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined$1, undefined$1, undefined$1, undefined$1, undefined$1, arity);\n          return result2.placeholder = curryRight.placeholder, result2;\n        }\n        function debounce(func, wait, options) {\n          var lastArgs, lastThis, maxWait, result2, timerId, lastCallTime, lastInvokeTime = 0, leading = !1, maxing = !1, trailing = !0;\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          wait = toNumber(wait) || 0, isObject(options) && (leading = !!options.leading, maxing = \"maxWait\" in options, maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait, trailing = \"trailing\" in options ? !!options.trailing : trailing);\n          function invokeFunc(time) {\n            var args = lastArgs, thisArg = lastThis;\n            return lastArgs = lastThis = undefined$1, lastInvokeTime = time, result2 = func.apply(thisArg, args), result2;\n          }\n          function leadingEdge(time) {\n            return lastInvokeTime = time, timerId = setTimeout(timerExpired, wait), leading ? invokeFunc(time) : result2;\n          }\n          function remainingWait(time) {\n            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;\n            return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n          }\n          function shouldInvoke(time) {\n            var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;\n            return lastCallTime === undefined$1 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n          }\n          function timerExpired() {\n            var time = now();\n            if (shouldInvoke(time))\n              return trailingEdge(time);\n            timerId = setTimeout(timerExpired, remainingWait(time));\n          }\n          function trailingEdge(time) {\n            return timerId = undefined$1, trailing && lastArgs ? invokeFunc(time) : (lastArgs = lastThis = undefined$1, result2);\n          }\n          function cancel() {\n            timerId !== undefined$1 && clearTimeout(timerId), lastInvokeTime = 0, lastArgs = lastCallTime = lastThis = timerId = undefined$1;\n          }\n          function flush() {\n            return timerId === undefined$1 ? result2 : trailingEdge(now());\n          }\n          function debounced() {\n            var time = now(), isInvoking = shouldInvoke(time);\n            if (lastArgs = arguments, lastThis = this, lastCallTime = time, isInvoking) {\n              if (timerId === undefined$1)\n                return leadingEdge(lastCallTime);\n              if (maxing)\n                return clearTimeout(timerId), timerId = setTimeout(timerExpired, wait), invokeFunc(lastCallTime);\n            }\n            return timerId === undefined$1 && (timerId = setTimeout(timerExpired, wait)), result2;\n          }\n          return debounced.cancel = cancel, debounced.flush = flush, debounced;\n        }\n        var defer = baseRest(function(func, args) {\n          return baseDelay(func, 1, args);\n        }), delay = baseRest(function(func, wait, args) {\n          return baseDelay(func, toNumber(wait) || 0, args);\n        });\n        function flip(func) {\n          return createWrap(func, WRAP_FLIP_FLAG);\n        }\n        function memoize(func, resolver) {\n          if (typeof func != \"function\" || resolver != null && typeof resolver != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          var memoized = function() {\n            var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;\n            if (cache.has(key))\n              return cache.get(key);\n            var result2 = func.apply(this, args);\n            return memoized.cache = cache.set(key, result2) || cache, result2;\n          };\n          return memoized.cache = new (memoize.Cache || MapCache)(), memoized;\n        }\n        memoize.Cache = MapCache;\n        function negate(predicate) {\n          if (typeof predicate != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return function() {\n            var args = arguments;\n            switch (args.length) {\n              case 0:\n                return !predicate.call(this);\n              case 1:\n                return !predicate.call(this, args[0]);\n              case 2:\n                return !predicate.call(this, args[0], args[1]);\n              case 3:\n                return !predicate.call(this, args[0], args[1], args[2]);\n            }\n            return !predicate.apply(this, args);\n          };\n        }\n        function once(func) {\n          return before(2, func);\n        }\n        var overArgs = castRest(function(func, transforms) {\n          transforms = transforms.length == 1 && isArray(transforms[0]) ? arrayMap(transforms[0], baseUnary(getIteratee())) : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n          var funcsLength = transforms.length;\n          return baseRest(function(args) {\n            for (var index = -1, length = nativeMin(args.length, funcsLength); ++index < length; )\n              args[index] = transforms[index].call(this, args[index]);\n            return apply(func, this, args);\n          });\n        }), partial = baseRest(function(func, partials) {\n          var holders = replaceHolders(partials, getHolder(partial));\n          return createWrap(func, WRAP_PARTIAL_FLAG, undefined$1, partials, holders);\n        }), partialRight = baseRest(function(func, partials) {\n          var holders = replaceHolders(partials, getHolder(partialRight));\n          return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined$1, partials, holders);\n        }), rearg = flatRest(function(func, indexes) {\n          return createWrap(func, WRAP_REARG_FLAG, undefined$1, undefined$1, undefined$1, indexes);\n        });\n        function rest(func, start) {\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return start = start === undefined$1 ? start : toInteger(start), baseRest(func, start);\n        }\n        function spread(func, start) {\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return start = start == null ? 0 : nativeMax(toInteger(start), 0), baseRest(function(args) {\n            var array = args[start], otherArgs = castSlice(args, 0, start);\n            return array && arrayPush(otherArgs, array), apply(func, this, otherArgs);\n          });\n        }\n        function throttle(func, wait, options) {\n          var leading = !0, trailing = !0;\n          if (typeof func != \"function\")\n            throw new TypeError(FUNC_ERROR_TEXT);\n          return isObject(options) && (leading = \"leading\" in options ? !!options.leading : leading, trailing = \"trailing\" in options ? !!options.trailing : trailing), debounce(func, wait, {\n            leading,\n            maxWait: wait,\n            trailing\n          });\n        }\n        function unary(func) {\n          return ary(func, 1);\n        }\n        function wrap(value, wrapper) {\n          return partial(castFunction(wrapper), value);\n        }\n        function castArray() {\n          if (!arguments.length)\n            return [];\n          var value = arguments[0];\n          return isArray(value) ? value : [value];\n        }\n        function clone(value) {\n          return baseClone(value, CLONE_SYMBOLS_FLAG);\n        }\n        function cloneWith(value, customizer) {\n          return customizer = typeof customizer == \"function\" ? customizer : undefined$1, baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n        }\n        function cloneDeep(value) {\n          return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n        }\n        function cloneDeepWith(value, customizer) {\n          return customizer = typeof customizer == \"function\" ? customizer : undefined$1, baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n        }\n        function conformsTo(object, source) {\n          return source == null || baseConformsTo(object, source, keys(source));\n        }\n        function eq(value, other) {\n          return value === other || value !== value && other !== other;\n        }\n        var gt = createRelationalOperation(baseGt), gte = createRelationalOperation(function(value, other) {\n          return value >= other;\n        }), isArguments = baseIsArguments(/* @__PURE__ */ function() {\n          return arguments;\n        }()) ? baseIsArguments : function(value) {\n          return isObjectLike(value) && hasOwnProperty.call(value, \"callee\") && !propertyIsEnumerable.call(value, \"callee\");\n        }, isArray = Array2.isArray, isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n        function isArrayLike(value) {\n          return value != null && isLength(value.length) && !isFunction(value);\n        }\n        function isArrayLikeObject(value) {\n          return isObjectLike(value) && isArrayLike(value);\n        }\n        function isBoolean(value) {\n          return value === !0 || value === !1 || isObjectLike(value) && baseGetTag(value) == boolTag;\n        }\n        var isBuffer = nativeIsBuffer || stubFalse, isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n        function isElement(value) {\n          return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n        }\n        function isEmpty(value) {\n          if (value == null)\n            return !0;\n          if (isArrayLike(value) && (isArray(value) || typeof value == \"string\" || typeof value.splice == \"function\" || isBuffer(value) || isTypedArray(value) || isArguments(value)))\n            return !value.length;\n          var tag = getTag(value);\n          if (tag == mapTag || tag == setTag)\n            return !value.size;\n          if (isPrototype(value))\n            return !baseKeys(value).length;\n          for (var key in value)\n            if (hasOwnProperty.call(value, key))\n              return !1;\n          return !0;\n        }\n        function isEqual(value, other) {\n          return baseIsEqual(value, other);\n        }\n        function isEqualWith(value, other, customizer) {\n          customizer = typeof customizer == \"function\" ? customizer : undefined$1;\n          var result2 = customizer ? customizer(value, other) : undefined$1;\n          return result2 === undefined$1 ? baseIsEqual(value, other, undefined$1, customizer) : !!result2;\n        }\n        function isError(value) {\n          if (!isObjectLike(value))\n            return !1;\n          var tag = baseGetTag(value);\n          return tag == errorTag || tag == domExcTag || typeof value.message == \"string\" && typeof value.name == \"string\" && !isPlainObject(value);\n        }\n        function isFinite(value) {\n          return typeof value == \"number\" && nativeIsFinite(value);\n        }\n        function isFunction(value) {\n          if (!isObject(value))\n            return !1;\n          var tag = baseGetTag(value);\n          return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n        }\n        function isInteger(value) {\n          return typeof value == \"number\" && value == toInteger(value);\n        }\n        function isLength(value) {\n          return typeof value == \"number\" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n        }\n        function isObject(value) {\n          var type = typeof value;\n          return value != null && (type == \"object\" || type == \"function\");\n        }\n        function isObjectLike(value) {\n          return value != null && typeof value == \"object\";\n        }\n        var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n        function isMatch(object, source) {\n          return object === source || baseIsMatch(object, source, getMatchData(source));\n        }\n        function isMatchWith(object, source, customizer) {\n          return customizer = typeof customizer == \"function\" ? customizer : undefined$1, baseIsMatch(object, source, getMatchData(source), customizer);\n        }\n        function isNaN(value) {\n          return isNumber(value) && value != +value;\n        }\n        function isNative(value) {\n          if (isMaskable(value))\n            throw new Error2(CORE_ERROR_TEXT);\n          return baseIsNative(value);\n        }\n        function isNull(value) {\n          return value === null;\n        }\n        function isNil(value) {\n          return value == null;\n        }\n        function isNumber(value) {\n          return typeof value == \"number\" || isObjectLike(value) && baseGetTag(value) == numberTag;\n        }\n        function isPlainObject(value) {\n          if (!isObjectLike(value) || baseGetTag(value) != objectTag)\n            return !1;\n          var proto = getPrototype(value);\n          if (proto === null)\n            return !0;\n          var Ctor = hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n          return typeof Ctor == \"function\" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n        }\n        var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n        function isSafeInteger(value) {\n          return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n        }\n        var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n        function isString(value) {\n          return typeof value == \"string\" || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n        }\n        function isSymbol(value) {\n          return typeof value == \"symbol\" || isObjectLike(value) && baseGetTag(value) == symbolTag;\n        }\n        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n        function isUndefined(value) {\n          return value === undefined$1;\n        }\n        function isWeakMap(value) {\n          return isObjectLike(value) && getTag(value) == weakMapTag;\n        }\n        function isWeakSet(value) {\n          return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n        }\n        var lt = createRelationalOperation(baseLt), lte = createRelationalOperation(function(value, other) {\n          return value <= other;\n        });\n        function toArray(value) {\n          if (!value)\n            return [];\n          if (isArrayLike(value))\n            return isString(value) ? stringToArray(value) : copyArray(value);\n          if (symIterator && value[symIterator])\n            return iteratorToArray(value[symIterator]());\n          var tag = getTag(value), func = tag == mapTag ? mapToArray : tag == setTag ? setToArray : values;\n          return func(value);\n        }\n        function toFinite(value) {\n          if (!value)\n            return value === 0 ? value : 0;\n          if (value = toNumber(value), value === INFINITY || value === -INFINITY) {\n            var sign = value < 0 ? -1 : 1;\n            return sign * MAX_INTEGER;\n          }\n          return value === value ? value : 0;\n        }\n        function toInteger(value) {\n          var result2 = toFinite(value), remainder = result2 % 1;\n          return result2 === result2 ? remainder ? result2 - remainder : result2 : 0;\n        }\n        function toLength(value) {\n          return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n        }\n        function toNumber(value) {\n          if (typeof value == \"number\")\n            return value;\n          if (isSymbol(value))\n            return NAN;\n          if (isObject(value)) {\n            var other = typeof value.valueOf == \"function\" ? value.valueOf() : value;\n            value = isObject(other) ? other + \"\" : other;\n          }\n          if (typeof value != \"string\")\n            return value === 0 ? value : +value;\n          value = baseTrim(value);\n          var isBinary = reIsBinary.test(value);\n          return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n        }\n        function toPlainObject(value) {\n          return copyObject(value, keysIn(value));\n        }\n        function toSafeInteger(value) {\n          return value ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER) : value === 0 ? value : 0;\n        }\n        function toString(value) {\n          return value == null ? \"\" : baseToString(value);\n        }\n        var assign = createAssigner(function(object, source) {\n          if (isPrototype(source) || isArrayLike(source)) {\n            copyObject(source, keys(source), object);\n            return;\n          }\n          for (var key in source)\n            hasOwnProperty.call(source, key) && assignValue(object, key, source[key]);\n        }), assignIn = createAssigner(function(object, source) {\n          copyObject(source, keysIn(source), object);\n        }), assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n          copyObject(source, keysIn(source), object, customizer);\n        }), assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n          copyObject(source, keys(source), object, customizer);\n        }), at = flatRest(baseAt);\n        function create2(prototype, properties) {\n          var result2 = baseCreate(prototype);\n          return properties == null ? result2 : baseAssign(result2, properties);\n        }\n        var defaults = baseRest(function(object, sources) {\n          object = Object2(object);\n          var index = -1, length = sources.length, guard = length > 2 ? sources[2] : undefined$1;\n          for (guard && isIterateeCall(sources[0], sources[1], guard) && (length = 1); ++index < length; )\n            for (var source = sources[index], props = keysIn(source), propsIndex = -1, propsLength = props.length; ++propsIndex < propsLength; ) {\n              var key = props[propsIndex], value = object[key];\n              (value === undefined$1 || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) && (object[key] = source[key]);\n            }\n          return object;\n        }), defaultsDeep = baseRest(function(args) {\n          return args.push(undefined$1, customDefaultsMerge), apply(mergeWith, undefined$1, args);\n        });\n        function findKey(object, predicate) {\n          return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n        }\n        function findLastKey(object, predicate) {\n          return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n        }\n        function forIn(object, iteratee2) {\n          return object == null ? object : baseFor(object, getIteratee(iteratee2, 3), keysIn);\n        }\n        function forInRight(object, iteratee2) {\n          return object == null ? object : baseForRight(object, getIteratee(iteratee2, 3), keysIn);\n        }\n        function forOwn(object, iteratee2) {\n          return object && baseForOwn(object, getIteratee(iteratee2, 3));\n        }\n        function forOwnRight(object, iteratee2) {\n          return object && baseForOwnRight(object, getIteratee(iteratee2, 3));\n        }\n        function functions(object) {\n          return object == null ? [] : baseFunctions(object, keys(object));\n        }\n        function functionsIn(object) {\n          return object == null ? [] : baseFunctions(object, keysIn(object));\n        }\n        function get(object, path, defaultValue) {\n          var result2 = object == null ? undefined$1 : baseGet(object, path);\n          return result2 === undefined$1 ? defaultValue : result2;\n        }\n        function has(object, path) {\n          return object != null && hasPath(object, path, baseHas);\n        }\n        function hasIn(object, path) {\n          return object != null && hasPath(object, path, baseHasIn);\n        }\n        var invert = createInverter(function(result2, value, key) {\n          value != null && typeof value.toString != \"function\" && (value = nativeObjectToString.call(value)), result2[value] = key;\n        }, constant(identity)), invertBy = createInverter(function(result2, value, key) {\n          value != null && typeof value.toString != \"function\" && (value = nativeObjectToString.call(value)), hasOwnProperty.call(result2, value) ? result2[value].push(key) : result2[value] = [key];\n        }, getIteratee), invoke = baseRest(baseInvoke);\n        function keys(object) {\n          return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n        }\n        function keysIn(object) {\n          return isArrayLike(object) ? arrayLikeKeys(object, !0) : baseKeysIn(object);\n        }\n        function mapKeys(object, iteratee2) {\n          var result2 = {};\n          return iteratee2 = getIteratee(iteratee2, 3), baseForOwn(object, function(value, key, object2) {\n            baseAssignValue(result2, iteratee2(value, key, object2), value);\n          }), result2;\n        }\n        function mapValues(object, iteratee2) {\n          var result2 = {};\n          return iteratee2 = getIteratee(iteratee2, 3), baseForOwn(object, function(value, key, object2) {\n            baseAssignValue(result2, key, iteratee2(value, key, object2));\n          }), result2;\n        }\n        var merge = createAssigner(function(object, source, srcIndex) {\n          baseMerge(object, source, srcIndex);\n        }), mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n          baseMerge(object, source, srcIndex, customizer);\n        }), omit = flatRest(function(object, paths) {\n          var result2 = {};\n          if (object == null)\n            return result2;\n          var isDeep = !1;\n          paths = arrayMap(paths, function(path) {\n            return path = castPath(path, object), isDeep || (isDeep = path.length > 1), path;\n          }), copyObject(object, getAllKeysIn(object), result2), isDeep && (result2 = baseClone(result2, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone));\n          for (var length = paths.length; length--; )\n            baseUnset(result2, paths[length]);\n          return result2;\n        });\n        function omitBy(object, predicate) {\n          return pickBy(object, negate(getIteratee(predicate)));\n        }\n        var pick = flatRest(function(object, paths) {\n          return object == null ? {} : basePick(object, paths);\n        });\n        function pickBy(object, predicate) {\n          if (object == null)\n            return {};\n          var props = arrayMap(getAllKeysIn(object), function(prop) {\n            return [prop];\n          });\n          return predicate = getIteratee(predicate), basePickBy(object, props, function(value, path) {\n            return predicate(value, path[0]);\n          });\n        }\n        function result(object, path, defaultValue) {\n          path = castPath(path, object);\n          var index = -1, length = path.length;\n          for (length || (length = 1, object = undefined$1); ++index < length; ) {\n            var value = object == null ? undefined$1 : object[toKey(path[index])];\n            value === undefined$1 && (index = length, value = defaultValue), object = isFunction(value) ? value.call(object) : value;\n          }\n          return object;\n        }\n        function set(object, path, value) {\n          return object == null ? object : baseSet(object, path, value);\n        }\n        function setWith(object, path, value, customizer) {\n          return customizer = typeof customizer == \"function\" ? customizer : undefined$1, object == null ? object : baseSet(object, path, value, customizer);\n        }\n        var toPairs = createToPairs(keys), toPairsIn = createToPairs(keysIn);\n        function transform(object, iteratee2, accumulator) {\n          var isArr = isArray(object), isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n          if (iteratee2 = getIteratee(iteratee2, 4), accumulator == null) {\n            var Ctor = object && object.constructor;\n            isArrLike ? accumulator = isArr ? new Ctor() : [] : isObject(object) ? accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {} : accumulator = {};\n          }\n          return (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object2) {\n            return iteratee2(accumulator, value, index, object2);\n          }), accumulator;\n        }\n        function unset(object, path) {\n          return object == null ? !0 : baseUnset(object, path);\n        }\n        function update(object, path, updater) {\n          return object == null ? object : baseUpdate(object, path, castFunction(updater));\n        }\n        function updateWith(object, path, updater, customizer) {\n          return customizer = typeof customizer == \"function\" ? customizer : undefined$1, object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n        }\n        function values(object) {\n          return object == null ? [] : baseValues(object, keys(object));\n        }\n        function valuesIn(object) {\n          return object == null ? [] : baseValues(object, keysIn(object));\n        }\n        function clamp(number, lower, upper) {\n          return upper === undefined$1 && (upper = lower, lower = undefined$1), upper !== undefined$1 && (upper = toNumber(upper), upper = upper === upper ? upper : 0), lower !== undefined$1 && (lower = toNumber(lower), lower = lower === lower ? lower : 0), baseClamp(toNumber(number), lower, upper);\n        }\n        function inRange(number, start, end) {\n          return start = toFinite(start), end === undefined$1 ? (end = start, start = 0) : end = toFinite(end), number = toNumber(number), baseInRange(number, start, end);\n        }\n        function random(lower, upper, floating) {\n          if (floating && typeof floating != \"boolean\" && isIterateeCall(lower, upper, floating) && (upper = floating = undefined$1), floating === undefined$1 && (typeof upper == \"boolean\" ? (floating = upper, upper = undefined$1) : typeof lower == \"boolean\" && (floating = lower, lower = undefined$1)), lower === undefined$1 && upper === undefined$1 ? (lower = 0, upper = 1) : (lower = toFinite(lower), upper === undefined$1 ? (upper = lower, lower = 0) : upper = toFinite(upper)), lower > upper) {\n            var temp = lower;\n            lower = upper, upper = temp;\n          }\n          if (floating || lower % 1 || upper % 1) {\n            var rand = nativeRandom();\n            return nativeMin(lower + rand * (upper - lower + freeParseFloat(\"1e-\" + ((rand + \"\").length - 1))), upper);\n          }\n          return baseRandom(lower, upper);\n        }\n        var camelCase = createCompounder(function(result2, word, index) {\n          return word = word.toLowerCase(), result2 + (index ? capitalize(word) : word);\n        });\n        function capitalize(string) {\n          return upperFirst(toString(string).toLowerCase());\n        }\n        function deburr(string) {\n          return string = toString(string), string && string.replace(reLatin, deburrLetter).replace(reComboMark, \"\");\n        }\n        function endsWith(string, target, position) {\n          string = toString(string), target = baseToString(target);\n          var length = string.length;\n          position = position === undefined$1 ? length : baseClamp(toInteger(position), 0, length);\n          var end = position;\n          return position -= target.length, position >= 0 && string.slice(position, end) == target;\n        }\n        function escape(string) {\n          return string = toString(string), string && reHasUnescapedHtml.test(string) ? string.replace(reUnescapedHtml, escapeHtmlChar) : string;\n        }\n        function escapeRegExp(string) {\n          return string = toString(string), string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, \"\\\\$&\") : string;\n        }\n        var kebabCase = createCompounder(function(result2, word, index) {\n          return result2 + (index ? \"-\" : \"\") + word.toLowerCase();\n        }), lowerCase = createCompounder(function(result2, word, index) {\n          return result2 + (index ? \" \" : \"\") + word.toLowerCase();\n        }), lowerFirst = createCaseFirst(\"toLowerCase\");\n        function pad(string, length, chars) {\n          string = toString(string), length = toInteger(length);\n          var strLength = length ? stringSize(string) : 0;\n          if (!length || strLength >= length)\n            return string;\n          var mid = (length - strLength) / 2;\n          return createPadding(nativeFloor(mid), chars) + string + createPadding(nativeCeil(mid), chars);\n        }\n        function padEnd(string, length, chars) {\n          string = toString(string), length = toInteger(length);\n          var strLength = length ? stringSize(string) : 0;\n          return length && strLength < length ? string + createPadding(length - strLength, chars) : string;\n        }\n        function padStart(string, length, chars) {\n          string = toString(string), length = toInteger(length);\n          var strLength = length ? stringSize(string) : 0;\n          return length && strLength < length ? createPadding(length - strLength, chars) + string : string;\n        }\n        function parseInt2(string, radix, guard) {\n          return guard || radix == null ? radix = 0 : radix && (radix = +radix), nativeParseInt(toString(string).replace(reTrimStart, \"\"), radix || 0);\n        }\n        function repeat(string, n, guard) {\n          return (guard ? isIterateeCall(string, n, guard) : n === undefined$1) ? n = 1 : n = toInteger(n), baseRepeat(toString(string), n);\n        }\n        function replace() {\n          var args = arguments, string = toString(args[0]);\n          return args.length < 3 ? string : string.replace(args[1], args[2]);\n        }\n        var snakeCase = createCompounder(function(result2, word, index) {\n          return result2 + (index ? \"_\" : \"\") + word.toLowerCase();\n        });\n        function split(string, separator, limit) {\n          return limit && typeof limit != \"number\" && isIterateeCall(string, separator, limit) && (separator = limit = undefined$1), limit = limit === undefined$1 ? MAX_ARRAY_LENGTH : limit >>> 0, limit ? (string = toString(string), string && (typeof separator == \"string\" || separator != null && !isRegExp(separator)) && (separator = baseToString(separator), !separator && hasUnicode(string)) ? castSlice(stringToArray(string), 0, limit) : string.split(separator, limit)) : [];\n        }\n        var startCase = createCompounder(function(result2, word, index) {\n          return result2 + (index ? \" \" : \"\") + upperFirst(word);\n        });\n        function startsWith2(string, target, position) {\n          return string = toString(string), position = position == null ? 0 : baseClamp(toInteger(position), 0, string.length), target = baseToString(target), string.slice(position, position + target.length) == target;\n        }\n        function template(string, options, guard) {\n          var settings = lodash2.templateSettings;\n          guard && isIterateeCall(string, options, guard) && (options = undefined$1), string = toString(string), options = assignInWith({}, options, settings, customDefaultsAssignIn);\n          var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn), importsKeys = keys(imports), importsValues = baseValues(imports, importsKeys), isEscaping, isEvaluating, index = 0, interpolate = options.interpolate || reNoMatch, source = \"__p += '\", reDelimiters = RegExp2(\n            (options.escape || reNoMatch).source + \"|\" + interpolate.source + \"|\" + (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + \"|\" + (options.evaluate || reNoMatch).source + \"|$\",\n            \"g\"\n          ), sourceURL = \"//# sourceURL=\" + (hasOwnProperty.call(options, \"sourceURL\") ? (options.sourceURL + \"\").replace(/\\s/g, \" \") : \"lodash.templateSources[\" + ++templateCounter + \"]\") + `\n`;\n          string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n            return interpolateValue || (interpolateValue = esTemplateValue), source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar), escapeValue && (isEscaping = !0, source += `' +\n__e(` + escapeValue + `) +\n'`), evaluateValue && (isEvaluating = !0, source += `';\n` + evaluateValue + `;\n__p += '`), interpolateValue && (source += `' +\n((__t = (` + interpolateValue + `)) == null ? '' : __t) +\n'`), index = offset + match.length, match;\n          }), source += `';\n`;\n          var variable = hasOwnProperty.call(options, \"variable\") && options.variable;\n          if (!variable)\n            source = `with (obj) {\n` + source + `\n}\n`;\n          else if (reForbiddenIdentifierChars.test(variable))\n            throw new Error2(INVALID_TEMPL_VAR_ERROR_TEXT);\n          source = (isEvaluating ? source.replace(reEmptyStringLeading, \"\") : source).replace(reEmptyStringMiddle, \"$1\").replace(reEmptyStringTrailing, \"$1;\"), source = \"function(\" + (variable || \"obj\") + `) {\n` + (variable ? \"\" : `obj || (obj = {});\n`) + \"var __t, __p = ''\" + (isEscaping ? \", __e = _.escape\" : \"\") + (isEvaluating ? `, __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n` : `;\n`) + source + `return __p\n}`;\n          var result2 = attempt(function() {\n            return Function2(importsKeys, sourceURL + \"return \" + source).apply(undefined$1, importsValues);\n          });\n          if (result2.source = source, isError(result2))\n            throw result2;\n          return result2;\n        }\n        function toLower(value) {\n          return toString(value).toLowerCase();\n        }\n        function toUpper(value) {\n          return toString(value).toUpperCase();\n        }\n        function trim(string, chars, guard) {\n          if (string = toString(string), string && (guard || chars === undefined$1))\n            return baseTrim(string);\n          if (!string || !(chars = baseToString(chars)))\n            return string;\n          var strSymbols = stringToArray(string), chrSymbols = stringToArray(chars), start = charsStartIndex(strSymbols, chrSymbols), end = charsEndIndex(strSymbols, chrSymbols) + 1;\n          return castSlice(strSymbols, start, end).join(\"\");\n        }\n        function trimEnd(string, chars, guard) {\n          if (string = toString(string), string && (guard || chars === undefined$1))\n            return string.slice(0, trimmedEndIndex(string) + 1);\n          if (!string || !(chars = baseToString(chars)))\n            return string;\n          var strSymbols = stringToArray(string), end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n          return castSlice(strSymbols, 0, end).join(\"\");\n        }\n        function trimStart(string, chars, guard) {\n          if (string = toString(string), string && (guard || chars === undefined$1))\n            return string.replace(reTrimStart, \"\");\n          if (!string || !(chars = baseToString(chars)))\n            return string;\n          var strSymbols = stringToArray(string), start = charsStartIndex(strSymbols, stringToArray(chars));\n          return castSlice(strSymbols, start).join(\"\");\n        }\n        function truncate(string, options) {\n          var length = DEFAULT_TRUNC_LENGTH, omission = DEFAULT_TRUNC_OMISSION;\n          if (isObject(options)) {\n            var separator = \"separator\" in options ? options.separator : separator;\n            length = \"length\" in options ? toInteger(options.length) : length, omission = \"omission\" in options ? baseToString(options.omission) : omission;\n          }\n          string = toString(string);\n          var strLength = string.length;\n          if (hasUnicode(string)) {\n            var strSymbols = stringToArray(string);\n            strLength = strSymbols.length;\n          }\n          if (length >= strLength)\n            return string;\n          var end = length - stringSize(omission);\n          if (end < 1)\n            return omission;\n          var result2 = strSymbols ? castSlice(strSymbols, 0, end).join(\"\") : string.slice(0, end);\n          if (separator === undefined$1)\n            return result2 + omission;\n          if (strSymbols && (end += result2.length - end), isRegExp(separator)) {\n            if (string.slice(end).search(separator)) {\n              var match, substring = result2;\n              for (separator.global || (separator = RegExp2(separator.source, toString(reFlags.exec(separator)) + \"g\")), separator.lastIndex = 0; match = separator.exec(substring); )\n                var newEnd = match.index;\n              result2 = result2.slice(0, newEnd === undefined$1 ? end : newEnd);\n            }\n          } else if (string.indexOf(baseToString(separator), end) != end) {\n            var index = result2.lastIndexOf(separator);\n            index > -1 && (result2 = result2.slice(0, index));\n          }\n          return result2 + omission;\n        }\n        function unescape(string) {\n          return string = toString(string), string && reHasEscapedHtml.test(string) ? string.replace(reEscapedHtml, unescapeHtmlChar) : string;\n        }\n        var upperCase = createCompounder(function(result2, word, index) {\n          return result2 + (index ? \" \" : \"\") + word.toUpperCase();\n        }), upperFirst = createCaseFirst(\"toUpperCase\");\n        function words(string, pattern, guard) {\n          return string = toString(string), pattern = guard ? undefined$1 : pattern, pattern === undefined$1 ? hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string) : string.match(pattern) || [];\n        }\n        var attempt = baseRest(function(func, args) {\n          try {\n            return apply(func, undefined$1, args);\n          } catch (e) {\n            return isError(e) ? e : new Error2(e);\n          }\n        }), bindAll = flatRest(function(object, methodNames) {\n          return arrayEach(methodNames, function(key) {\n            key = toKey(key), baseAssignValue(object, key, bind(object[key], object));\n          }), object;\n        });\n        function cond(pairs) {\n          var length = pairs == null ? 0 : pairs.length, toIteratee = getIteratee();\n          return pairs = length ? arrayMap(pairs, function(pair) {\n            if (typeof pair[1] != \"function\")\n              throw new TypeError(FUNC_ERROR_TEXT);\n            return [toIteratee(pair[0]), pair[1]];\n          }) : [], baseRest(function(args) {\n            for (var index = -1; ++index < length; ) {\n              var pair = pairs[index];\n              if (apply(pair[0], this, args))\n                return apply(pair[1], this, args);\n            }\n          });\n        }\n        function conforms(source) {\n          return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n        }\n        function constant(value) {\n          return function() {\n            return value;\n          };\n        }\n        function defaultTo(value, defaultValue) {\n          return value == null || value !== value ? defaultValue : value;\n        }\n        var flow = createFlow(), flowRight = createFlow(!0);\n        function identity(value) {\n          return value;\n        }\n        function iteratee(func) {\n          return baseIteratee(typeof func == \"function\" ? func : baseClone(func, CLONE_DEEP_FLAG));\n        }\n        function matches(source) {\n          return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n        }\n        function matchesProperty(path, srcValue) {\n          return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n        }\n        var method = baseRest(function(path, args) {\n          return function(object) {\n            return baseInvoke(object, path, args);\n          };\n        }), methodOf = baseRest(function(object, args) {\n          return function(path) {\n            return baseInvoke(object, path, args);\n          };\n        });\n        function mixin(object, source, options) {\n          var props = keys(source), methodNames = baseFunctions(source, props);\n          options == null && !(isObject(source) && (methodNames.length || !props.length)) && (options = source, source = object, object = this, methodNames = baseFunctions(source, keys(source)));\n          var chain2 = !(isObject(options) && \"chain\" in options) || !!options.chain, isFunc = isFunction(object);\n          return arrayEach(methodNames, function(methodName) {\n            var func = source[methodName];\n            object[methodName] = func, isFunc && (object.prototype[methodName] = function() {\n              var chainAll = this.__chain__;\n              if (chain2 || chainAll) {\n                var result2 = object(this.__wrapped__), actions = result2.__actions__ = copyArray(this.__actions__);\n                return actions.push({ func, args: arguments, thisArg: object }), result2.__chain__ = chainAll, result2;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            });\n          }), object;\n        }\n        function noConflict() {\n          return root._ === this && (root._ = oldDash), this;\n        }\n        function noop() {\n        }\n        function nthArg(n) {\n          return n = toInteger(n), baseRest(function(args) {\n            return baseNth(args, n);\n          });\n        }\n        var over = createOver(arrayMap), overEvery = createOver(arrayEvery), overSome = createOver(arraySome);\n        function property(path) {\n          return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n        }\n        function propertyOf(object) {\n          return function(path) {\n            return object == null ? undefined$1 : baseGet(object, path);\n          };\n        }\n        var range = createRange(), rangeRight = createRange(!0);\n        function stubArray() {\n          return [];\n        }\n        function stubFalse() {\n          return !1;\n        }\n        function stubObject() {\n          return {};\n        }\n        function stubString() {\n          return \"\";\n        }\n        function stubTrue() {\n          return !0;\n        }\n        function times(n, iteratee2) {\n          if (n = toInteger(n), n < 1 || n > MAX_SAFE_INTEGER)\n            return [];\n          var index = MAX_ARRAY_LENGTH, length = nativeMin(n, MAX_ARRAY_LENGTH);\n          iteratee2 = getIteratee(iteratee2), n -= MAX_ARRAY_LENGTH;\n          for (var result2 = baseTimes(length, iteratee2); ++index < n; )\n            iteratee2(index);\n          return result2;\n        }\n        function toPath(value) {\n          return isArray(value) ? arrayMap(value, toKey) : isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n        }\n        function uniqueId(prefix) {\n          var id = ++idCounter;\n          return toString(prefix) + id;\n        }\n        var add = createMathOperation(function(augend, addend) {\n          return augend + addend;\n        }, 0), ceil = createRound(\"ceil\"), divide = createMathOperation(function(dividend, divisor) {\n          return dividend / divisor;\n        }, 1), floor = createRound(\"floor\");\n        function max(array) {\n          return array && array.length ? baseExtremum(array, identity, baseGt) : undefined$1;\n        }\n        function maxBy(array, iteratee2) {\n          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseGt) : undefined$1;\n        }\n        function mean(array) {\n          return baseMean(array, identity);\n        }\n        function meanBy(array, iteratee2) {\n          return baseMean(array, getIteratee(iteratee2, 2));\n        }\n        function min(array) {\n          return array && array.length ? baseExtremum(array, identity, baseLt) : undefined$1;\n        }\n        function minBy(array, iteratee2) {\n          return array && array.length ? baseExtremum(array, getIteratee(iteratee2, 2), baseLt) : undefined$1;\n        }\n        var multiply = createMathOperation(function(multiplier, multiplicand) {\n          return multiplier * multiplicand;\n        }, 1), round = createRound(\"round\"), subtract = createMathOperation(function(minuend, subtrahend) {\n          return minuend - subtrahend;\n        }, 0);\n        function sum(array) {\n          return array && array.length ? baseSum(array, identity) : 0;\n        }\n        function sumBy(array, iteratee2) {\n          return array && array.length ? baseSum(array, getIteratee(iteratee2, 2)) : 0;\n        }\n        return lodash2.after = after, lodash2.ary = ary, lodash2.assign = assign, lodash2.assignIn = assignIn, lodash2.assignInWith = assignInWith, lodash2.assignWith = assignWith, lodash2.at = at, lodash2.before = before, lodash2.bind = bind, lodash2.bindAll = bindAll, lodash2.bindKey = bindKey, lodash2.castArray = castArray, lodash2.chain = chain, lodash2.chunk = chunk, lodash2.compact = compact, lodash2.concat = concat, lodash2.cond = cond, lodash2.conforms = conforms, lodash2.constant = constant, lodash2.countBy = countBy, lodash2.create = create2, lodash2.curry = curry, lodash2.curryRight = curryRight, lodash2.debounce = debounce, lodash2.defaults = defaults, lodash2.defaultsDeep = defaultsDeep, lodash2.defer = defer, lodash2.delay = delay, lodash2.difference = difference, lodash2.differenceBy = differenceBy, lodash2.differenceWith = differenceWith, lodash2.drop = drop, lodash2.dropRight = dropRight, lodash2.dropRightWhile = dropRightWhile, lodash2.dropWhile = dropWhile, lodash2.fill = fill, lodash2.filter = filter, lodash2.flatMap = flatMap, lodash2.flatMapDeep = flatMapDeep, lodash2.flatMapDepth = flatMapDepth, lodash2.flatten = flatten, lodash2.flattenDeep = flattenDeep, lodash2.flattenDepth = flattenDepth, lodash2.flip = flip, lodash2.flow = flow, lodash2.flowRight = flowRight, lodash2.fromPairs = fromPairs, lodash2.functions = functions, lodash2.functionsIn = functionsIn, lodash2.groupBy = groupBy, lodash2.initial = initial, lodash2.intersection = intersection, lodash2.intersectionBy = intersectionBy, lodash2.intersectionWith = intersectionWith, lodash2.invert = invert, lodash2.invertBy = invertBy, lodash2.invokeMap = invokeMap, lodash2.iteratee = iteratee, lodash2.keyBy = keyBy, lodash2.keys = keys, lodash2.keysIn = keysIn, lodash2.map = map, lodash2.mapKeys = mapKeys, lodash2.mapValues = mapValues, lodash2.matches = matches, lodash2.matchesProperty = matchesProperty, lodash2.memoize = memoize, lodash2.merge = merge, lodash2.mergeWith = mergeWith, lodash2.method = method, lodash2.methodOf = methodOf, lodash2.mixin = mixin, lodash2.negate = negate, lodash2.nthArg = nthArg, lodash2.omit = omit, lodash2.omitBy = omitBy, lodash2.once = once, lodash2.orderBy = orderBy, lodash2.over = over, lodash2.overArgs = overArgs, lodash2.overEvery = overEvery, lodash2.overSome = overSome, lodash2.partial = partial, lodash2.partialRight = partialRight, lodash2.partition = partition, lodash2.pick = pick, lodash2.pickBy = pickBy, lodash2.property = property, lodash2.propertyOf = propertyOf, lodash2.pull = pull, lodash2.pullAll = pullAll, lodash2.pullAllBy = pullAllBy, lodash2.pullAllWith = pullAllWith, lodash2.pullAt = pullAt, lodash2.range = range, lodash2.rangeRight = rangeRight, lodash2.rearg = rearg, lodash2.reject = reject, lodash2.remove = remove, lodash2.rest = rest, lodash2.reverse = reverse, lodash2.sampleSize = sampleSize, lodash2.set = set, lodash2.setWith = setWith, lodash2.shuffle = shuffle, lodash2.slice = slice, lodash2.sortBy = sortBy, lodash2.sortedUniq = sortedUniq, lodash2.sortedUniqBy = sortedUniqBy, lodash2.split = split, lodash2.spread = spread, lodash2.tail = tail, lodash2.take = take, lodash2.takeRight = takeRight, lodash2.takeRightWhile = takeRightWhile, lodash2.takeWhile = takeWhile, lodash2.tap = tap, lodash2.throttle = throttle, lodash2.thru = thru, lodash2.toArray = toArray, lodash2.toPairs = toPairs, lodash2.toPairsIn = toPairsIn, lodash2.toPath = toPath, lodash2.toPlainObject = toPlainObject, lodash2.transform = transform, lodash2.unary = unary, lodash2.union = union, lodash2.unionBy = unionBy, lodash2.unionWith = unionWith, lodash2.uniq = uniq, lodash2.uniqBy = uniqBy, lodash2.uniqWith = uniqWith, lodash2.unset = unset, lodash2.unzip = unzip, lodash2.unzipWith = unzipWith, lodash2.update = update, lodash2.updateWith = updateWith, lodash2.values = values, lodash2.valuesIn = valuesIn, lodash2.without = without, lodash2.words = words, lodash2.wrap = wrap, lodash2.xor = xor, lodash2.xorBy = xorBy, lodash2.xorWith = xorWith, lodash2.zip = zip, lodash2.zipObject = zipObject, lodash2.zipObjectDeep = zipObjectDeep, lodash2.zipWith = zipWith, lodash2.entries = toPairs, lodash2.entriesIn = toPairsIn, lodash2.extend = assignIn, lodash2.extendWith = assignInWith, mixin(lodash2, lodash2), lodash2.add = add, lodash2.attempt = attempt, lodash2.camelCase = camelCase, lodash2.capitalize = capitalize, lodash2.ceil = ceil, lodash2.clamp = clamp, lodash2.clone = clone, lodash2.cloneDeep = cloneDeep, lodash2.cloneDeepWith = cloneDeepWith, lodash2.cloneWith = cloneWith, lodash2.conformsTo = conformsTo, lodash2.deburr = deburr, lodash2.defaultTo = defaultTo, lodash2.divide = divide, lodash2.endsWith = endsWith, lodash2.eq = eq, lodash2.escape = escape, lodash2.escapeRegExp = escapeRegExp, lodash2.every = every, lodash2.find = find, lodash2.findIndex = findIndex, lodash2.findKey = findKey, lodash2.findLast = findLast, lodash2.findLastIndex = findLastIndex, lodash2.findLastKey = findLastKey, lodash2.floor = floor, lodash2.forEach = forEach, lodash2.forEachRight = forEachRight, lodash2.forIn = forIn, lodash2.forInRight = forInRight, lodash2.forOwn = forOwn, lodash2.forOwnRight = forOwnRight, lodash2.get = get, lodash2.gt = gt, lodash2.gte = gte, lodash2.has = has, lodash2.hasIn = hasIn, lodash2.head = head, lodash2.identity = identity, lodash2.includes = includes, lodash2.indexOf = indexOf, lodash2.inRange = inRange, lodash2.invoke = invoke, lodash2.isArguments = isArguments, lodash2.isArray = isArray, lodash2.isArrayBuffer = isArrayBuffer, lodash2.isArrayLike = isArrayLike, lodash2.isArrayLikeObject = isArrayLikeObject, lodash2.isBoolean = isBoolean, lodash2.isBuffer = isBuffer, lodash2.isDate = isDate, lodash2.isElement = isElement, lodash2.isEmpty = isEmpty, lodash2.isEqual = isEqual, lodash2.isEqualWith = isEqualWith, lodash2.isError = isError, lodash2.isFinite = isFinite, lodash2.isFunction = isFunction, lodash2.isInteger = isInteger, lodash2.isLength = isLength, lodash2.isMap = isMap, lodash2.isMatch = isMatch, lodash2.isMatchWith = isMatchWith, lodash2.isNaN = isNaN, lodash2.isNative = isNative, lodash2.isNil = isNil, lodash2.isNull = isNull, lodash2.isNumber = isNumber, lodash2.isObject = isObject, lodash2.isObjectLike = isObjectLike, lodash2.isPlainObject = isPlainObject, lodash2.isRegExp = isRegExp, lodash2.isSafeInteger = isSafeInteger, lodash2.isSet = isSet, lodash2.isString = isString, lodash2.isSymbol = isSymbol, lodash2.isTypedArray = isTypedArray, lodash2.isUndefined = isUndefined, lodash2.isWeakMap = isWeakMap, lodash2.isWeakSet = isWeakSet, lodash2.join = join, lodash2.kebabCase = kebabCase, lodash2.last = last, lodash2.lastIndexOf = lastIndexOf, lodash2.lowerCase = lowerCase, lodash2.lowerFirst = lowerFirst, lodash2.lt = lt, lodash2.lte = lte, lodash2.max = max, lodash2.maxBy = maxBy, lodash2.mean = mean, lodash2.meanBy = meanBy, lodash2.min = min, lodash2.minBy = minBy, lodash2.stubArray = stubArray, lodash2.stubFalse = stubFalse, lodash2.stubObject = stubObject, lodash2.stubString = stubString, lodash2.stubTrue = stubTrue, lodash2.multiply = multiply, lodash2.nth = nth, lodash2.noConflict = noConflict, lodash2.noop = noop, lodash2.now = now, lodash2.pad = pad, lodash2.padEnd = padEnd, lodash2.padStart = padStart, lodash2.parseInt = parseInt2, lodash2.random = random, lodash2.reduce = reduce, lodash2.reduceRight = reduceRight, lodash2.repeat = repeat, lodash2.replace = replace, lodash2.result = result, lodash2.round = round, lodash2.runInContext = runInContext2, lodash2.sample = sample, lodash2.size = size, lodash2.snakeCase = snakeCase, lodash2.some = some, lodash2.sortedIndex = sortedIndex, lodash2.sortedIndexBy = sortedIndexBy, lodash2.sortedIndexOf = sortedIndexOf, lodash2.sortedLastIndex = sortedLastIndex, lodash2.sortedLastIndexBy = sortedLastIndexBy, lodash2.sortedLastIndexOf = sortedLastIndexOf, lodash2.startCase = startCase, lodash2.startsWith = startsWith2, lodash2.subtract = subtract, lodash2.sum = sum, lodash2.sumBy = sumBy, lodash2.template = template, lodash2.times = times, lodash2.toFinite = toFinite, lodash2.toInteger = toInteger, lodash2.toLength = toLength, lodash2.toLower = toLower, lodash2.toNumber = toNumber, lodash2.toSafeInteger = toSafeInteger, lodash2.toString = toString, lodash2.toUpper = toUpper, lodash2.trim = trim, lodash2.trimEnd = trimEnd, lodash2.trimStart = trimStart, lodash2.truncate = truncate, lodash2.unescape = unescape, lodash2.uniqueId = uniqueId, lodash2.upperCase = upperCase, lodash2.upperFirst = upperFirst, lodash2.each = forEach, lodash2.eachRight = forEachRight, lodash2.first = head, mixin(lodash2, function() {\n          var source = {};\n          return baseForOwn(lodash2, function(func, methodName) {\n            hasOwnProperty.call(lodash2.prototype, methodName) || (source[methodName] = func);\n          }), source;\n        }(), { chain: !1 }), lodash2.VERSION = VERSION, arrayEach([\"bind\", \"bindKey\", \"curry\", \"curryRight\", \"partial\", \"partialRight\"], function(methodName) {\n          lodash2[methodName].placeholder = lodash2;\n        }), arrayEach([\"drop\", \"take\"], function(methodName, index) {\n          LazyWrapper.prototype[methodName] = function(n) {\n            n = n === undefined$1 ? 1 : nativeMax(toInteger(n), 0);\n            var result2 = this.__filtered__ && !index ? new LazyWrapper(this) : this.clone();\n            return result2.__filtered__ ? result2.__takeCount__ = nativeMin(n, result2.__takeCount__) : result2.__views__.push({\n              size: nativeMin(n, MAX_ARRAY_LENGTH),\n              type: methodName + (result2.__dir__ < 0 ? \"Right\" : \"\")\n            }), result2;\n          }, LazyWrapper.prototype[methodName + \"Right\"] = function(n) {\n            return this.reverse()[methodName](n).reverse();\n          };\n        }), arrayEach([\"filter\", \"map\", \"takeWhile\"], function(methodName, index) {\n          var type = index + 1, isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n          LazyWrapper.prototype[methodName] = function(iteratee2) {\n            var result2 = this.clone();\n            return result2.__iteratees__.push({\n              iteratee: getIteratee(iteratee2, 3),\n              type\n            }), result2.__filtered__ = result2.__filtered__ || isFilter, result2;\n          };\n        }), arrayEach([\"head\", \"last\"], function(methodName, index) {\n          var takeName = \"take\" + (index ? \"Right\" : \"\");\n          LazyWrapper.prototype[methodName] = function() {\n            return this[takeName](1).value()[0];\n          };\n        }), arrayEach([\"initial\", \"tail\"], function(methodName, index) {\n          var dropName = \"drop\" + (index ? \"\" : \"Right\");\n          LazyWrapper.prototype[methodName] = function() {\n            return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n          };\n        }), LazyWrapper.prototype.compact = function() {\n          return this.filter(identity);\n        }, LazyWrapper.prototype.find = function(predicate) {\n          return this.filter(predicate).head();\n        }, LazyWrapper.prototype.findLast = function(predicate) {\n          return this.reverse().find(predicate);\n        }, LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n          return typeof path == \"function\" ? new LazyWrapper(this) : this.map(function(value) {\n            return baseInvoke(value, path, args);\n          });\n        }), LazyWrapper.prototype.reject = function(predicate) {\n          return this.filter(negate(getIteratee(predicate)));\n        }, LazyWrapper.prototype.slice = function(start, end) {\n          start = toInteger(start);\n          var result2 = this;\n          return result2.__filtered__ && (start > 0 || end < 0) ? new LazyWrapper(result2) : (start < 0 ? result2 = result2.takeRight(-start) : start && (result2 = result2.drop(start)), end !== undefined$1 && (end = toInteger(end), result2 = end < 0 ? result2.dropRight(-end) : result2.take(end - start)), result2);\n        }, LazyWrapper.prototype.takeRightWhile = function(predicate) {\n          return this.reverse().takeWhile(predicate).reverse();\n        }, LazyWrapper.prototype.toArray = function() {\n          return this.take(MAX_ARRAY_LENGTH);\n        }, baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n          var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName), isTaker = /^(?:head|last)$/.test(methodName), lodashFunc = lodash2[isTaker ? \"take\" + (methodName == \"last\" ? \"Right\" : \"\") : methodName], retUnwrapped = isTaker || /^find/.test(methodName);\n          lodashFunc && (lodash2.prototype[methodName] = function() {\n            var value = this.__wrapped__, args = isTaker ? [1] : arguments, isLazy = value instanceof LazyWrapper, iteratee2 = args[0], useLazy = isLazy || isArray(value), interceptor = function(value2) {\n              var result3 = lodashFunc.apply(lodash2, arrayPush([value2], args));\n              return isTaker && chainAll ? result3[0] : result3;\n            };\n            useLazy && checkIteratee && typeof iteratee2 == \"function\" && iteratee2.length != 1 && (isLazy = useLazy = !1);\n            var chainAll = this.__chain__, isHybrid = !!this.__actions__.length, isUnwrapped = retUnwrapped && !chainAll, onlyLazy = isLazy && !isHybrid;\n            if (!retUnwrapped && useLazy) {\n              value = onlyLazy ? value : new LazyWrapper(this);\n              var result2 = func.apply(value, args);\n              return result2.__actions__.push({ func: thru, args: [interceptor], thisArg: undefined$1 }), new LodashWrapper(result2, chainAll);\n            }\n            return isUnwrapped && onlyLazy ? func.apply(this, args) : (result2 = this.thru(interceptor), isUnwrapped ? isTaker ? result2.value()[0] : result2.value() : result2);\n          });\n        }), arrayEach([\"pop\", \"push\", \"shift\", \"sort\", \"splice\", \"unshift\"], function(methodName) {\n          var func = arrayProto[methodName], chainName = /^(?:push|sort|unshift)$/.test(methodName) ? \"tap\" : \"thru\", retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n          lodash2.prototype[methodName] = function() {\n            var args = arguments;\n            if (retUnwrapped && !this.__chain__) {\n              var value = this.value();\n              return func.apply(isArray(value) ? value : [], args);\n            }\n            return this[chainName](function(value2) {\n              return func.apply(isArray(value2) ? value2 : [], args);\n            });\n          };\n        }), baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n          var lodashFunc = lodash2[methodName];\n          if (lodashFunc) {\n            var key = lodashFunc.name + \"\";\n            hasOwnProperty.call(realNames, key) || (realNames[key] = []), realNames[key].push({ name: methodName, func: lodashFunc });\n          }\n        }), realNames[createHybrid(undefined$1, WRAP_BIND_KEY_FLAG).name] = [{\n          name: \"wrapper\",\n          func: undefined$1\n        }], LazyWrapper.prototype.clone = lazyClone, LazyWrapper.prototype.reverse = lazyReverse, LazyWrapper.prototype.value = lazyValue, lodash2.prototype.at = wrapperAt, lodash2.prototype.chain = wrapperChain, lodash2.prototype.commit = wrapperCommit, lodash2.prototype.next = wrapperNext, lodash2.prototype.plant = wrapperPlant, lodash2.prototype.reverse = wrapperReverse, lodash2.prototype.toJSON = lodash2.prototype.valueOf = lodash2.prototype.value = wrapperValue, lodash2.prototype.first = lodash2.prototype.head, symIterator && (lodash2.prototype[symIterator] = wrapperToIterator), lodash2;\n      }, _ = runInContext();\n      freeModule ? ((freeModule.exports = _)._ = _, freeExports._ = _) : root._ = _;\n    }).call(lodash);\n  }(lodash$1, lodash$1.exports)), lodash$1.exports;\n}\nvar lodashExports = requireLodash();\nfunction mergeMutationGroups(mutationGroups) {\n  return chunkWhile(mutationGroups, (group) => !group.transaction).flatMap(\n    (chunk) => ({\n      ...chunk[0],\n      mutations: chunk.flatMap((c) => c.mutations)\n    })\n  );\n}\nfunction chunkWhile(arr, predicate) {\n  const res = [];\n  let currentChunk = [];\n  return arr.forEach((item) => {\n    predicate(item) ? currentChunk.push(item) : (currentChunk.length > 0 && res.push(currentChunk), currentChunk = [], res.push([item]));\n  }), currentChunk.length > 0 && res.push(currentChunk), res;\n}\nfunction squashMutationGroups(staged) {\n  return mergeMutationGroups(staged).map((transaction) => ({\n    ...transaction,\n    mutations: squashMutations(transaction.mutations)\n  })).map((transaction) => ({\n    ...transaction,\n    mutations: transaction.mutations.map((mutation) => mutation.type !== \"patch\" ? mutation : {\n      ...mutation,\n      patches: squashNodePatches(mutation.patches)\n    })\n  }));\n}\nfunction squashMutations(mutations) {\n  const byDocument = lodashExports.groupBy(mutations, getMutationDocumentId);\n  return Object.values(byDocument).flatMap((documentMutations) => squashCreateIfNotExists(squashDelete(documentMutations)).flat().reduce((acc, docMutation) => {\n    const prev = acc[acc.length - 1];\n    return (!prev || prev.type === \"patch\") && docMutation.type === \"patch\" ? acc.slice(0, -1).concat({\n      ...docMutation,\n      patches: (prev?.patches || []).concat(docMutation.patches)\n    }) : acc.concat(docMutation);\n  }, []));\n}\nfunction squashCreateIfNotExists(mutations) {\n  return mutations.length === 0 ? mutations : mutations.reduce((previousMuts, laterMut) => laterMut.type !== \"createIfNotExists\" ? (previousMuts.push(laterMut), previousMuts) : (takeUntilRight(previousMuts, (m) => m.type === \"delete\").find(\n    (precedingPatch) => precedingPatch.type === \"createIfNotExists\"\n  ) || previousMuts.push(laterMut), previousMuts), []);\n}\nfunction squashDelete(mutations) {\n  return mutations.length === 0 ? mutations : mutations.reduce((previousMuts, laterMut) => laterMut.type === \"delete\" ? [laterMut] : (previousMuts.push(laterMut), previousMuts), []);\n}\nfunction rebase(documentId, oldBase, newBase, stagedMutations) {\n  let edge = oldBase;\n  const dmpified = stagedMutations.map((transaction) => {\n    const mutations = transaction.mutations.flatMap((mut) => {\n      if (getMutationDocumentId(mut) !== documentId)\n        return [];\n      const before = edge;\n      return edge = applyAll(edge, [mut]), !before || mut.type !== \"patch\" ? mut : {\n        type: \"dmpified\",\n        mutation: {\n          ...mut,\n          // Todo: make compactDMPSetPatches return pairs of patches that was dmpified with their\n          //  original as dmpPatches and original is not 1:1 (e..g some of the original may not be dmpified)\n          dmpPatches: compactDMPSetPatches(before, mut.patches),\n          original: mut.patches\n        }\n      };\n    });\n    return { ...transaction, mutations };\n  });\n  let newBaseWithDMPForOldBaseApplied = newBase;\n  return dmpified.map((transaction) => {\n    const applied = [];\n    return transaction.mutations.forEach((mut) => {\n      if (mut.type === \"dmpified\")\n        try {\n          newBaseWithDMPForOldBaseApplied = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatches)(\n            mut.mutation.dmpPatches,\n            newBaseWithDMPForOldBaseApplied\n          ), applied.push(mut);\n        } catch {\n          console.warn(\"Failed to apply dmp patch, falling back to original\");\n          try {\n            newBaseWithDMPForOldBaseApplied = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.applyPatches)(\n              mut.mutation.original,\n              newBaseWithDMPForOldBaseApplied\n            ), applied.push(mut);\n          } catch (second) {\n            throw new Error(\n              `Failed to apply patch for document \"${documentId}\": ${second.message}`\n            );\n          }\n        }\n      else\n        newBaseWithDMPForOldBaseApplied = applyAll(\n          newBaseWithDMPForOldBaseApplied,\n          [mut]\n        );\n    });\n  }), [stagedMutations.map((transaction) => ({\n    ...transaction,\n    mutations: transaction.mutations.map((mut) => mut.type !== \"patch\" || getMutationDocumentId(mut) !== documentId ? mut : {\n      ...mut,\n      patches: mut.patches.map((patch2) => patch2.op.type !== \"set\" ? patch2 : {\n        ...patch2,\n        op: {\n          ...patch2.op,\n          value: (0,_getAtPath_js__WEBPACK_IMPORTED_MODULE_3__.getAtPath)(patch2.path, newBaseWithDMPForOldBaseApplied)\n        }\n      })\n    })\n  })), newBaseWithDMPForOldBaseApplied];\n}\nfunction toTransactions(groups) {\n  return groups.map((group) => group.transaction && group.id !== void 0 ? { id: group.id, mutations: group.mutations } : { mutations: group.mutations });\n}\n\n//# sourceMappingURL=toTransactions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9fY2h1bmtzLWVzL3RvVHJhbnNhY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUErRjtBQUNwRDtBQUNYO0FBQ3lDO0FBQ2xCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGNBQWM7QUFDMUQ7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGlCQUFpQixtREFBUSxvQkFBb0IsMENBQU07QUFDbkQsV0FBVztBQUNYO0FBQ0E7QUFDQSxTQUFTLGdEQUFLLG1DQUFtQyxpQkFBaUIsSUFBSSx5RUFBeUU7QUFDL0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsZ0RBQUs7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksSUFBSSx5RUFBeUU7QUFDakY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxzRUFBc0U7QUFDM0g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNkRBQWtCO0FBQ2pDLCtCQUErQixpQkFBaUIsSUFBSTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhLQUE4SyxpQ0FBaUM7QUFDL007QUFDQTtBQUNBO0FBQ0EsWUFBWSxxQkFBcUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHdEQUFTLFNBQVMsd0RBQVM7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHlEQUFVO0FBQ3JDO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlEQUFjO0FBQy9CLHdCQUF3Qix3REFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBFQUFnQjtBQUNyQyxnQkFBZ0IscUVBQVc7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBLHVKQUF1SixlQUFlO0FBQ3RLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb25DQUFvbkMscUdBQXFHLDZDQUE2Qyx3ZEFBd2QsbUhBQW1ILDZEQUE2RCw0SkFBNEosMkRBQTJELE1BQU0sYUFBYSxPQUFPLGlsREFBaWxELEVBQUU7QUFDbHRIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvSkFBb0osRUFBRTtBQUN0SjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLG1CQUFtQjtBQUNuQixrQkFBa0I7QUFDbEIsa0JBQWtCO0FBQ2xCLG9CQUFvQjtBQUNwQixtQkFBbUI7QUFDbkIsT0FBTztBQUNQLGNBQWM7QUFDZCxhQUFhO0FBQ2IsYUFBYTtBQUNiLGVBQWU7QUFDZixjQUFjO0FBQ2QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxrQkFBa0I7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGlFQUFpRTtBQUN6STtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCwyREFBMkQ7QUFDdkg7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtR0FBbUcsa0JBQWtCO0FBQ3JIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGtCQUFrQjtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0dBQWdHLGtCQUFrQjtBQUNsSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRFQUE0RSxrQkFBa0I7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxrQkFBa0I7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxVQUFVO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGtCQUFrQjtBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0ZBQWtGLHdDQUF3QztBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELGtCQUFrQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLFVBQVU7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQsa0JBQWtCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxhQUFhO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCx3RUFBd0U7QUFDakk7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsK0RBQStEO0FBQzNHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELFVBQVU7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxnQ0FBZ0M7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0Usa0JBQWtCO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwrREFBK0Qsa0JBQWtCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLG9EQUFvRDtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELHdCQUF3QjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLFFBQVE7QUFDbEMsWUFBWTtBQUNaO0FBQ0EsU0FBUyxnN0JBQWc3QjtBQUN6N0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtDQUFrQztBQUNyRDtBQUNBLDZEQUE2RCwwQkFBMEI7QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsa0JBQWtCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0U7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGtCQUFrQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixrQkFBa0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0Msa0JBQWtCO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsVUFBVTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsdUdBQXVHLGtCQUFrQjtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFVBQVU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBLHFEQUFxRCxlQUFlO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxzREFBc0Qsa0JBQWtCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4T0FBOE8sYUFBYTtBQUMzUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxvRkFBb0Ysa0JBQWtCO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxvREFBb0Qsa0NBQWtDO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3TkFBd04sWUFBWTtBQUNwTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0RBQWdEO0FBQ25FO0FBQ0E7QUFDQSwyQ0FBMkMsWUFBWTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLFNBQVM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0JBQWtCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixxQkFBcUI7QUFDckIsV0FBVztBQUNYO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLG9FQUFvRSxrQkFBa0I7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUlBQWlJLGtCQUFrQjtBQUNuSiw2R0FBNkcsb0VBQW9FO0FBQ2pMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0ZBQWdGLFVBQVU7QUFDMUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUhBQXlILFVBQVU7QUFDbkk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhGQUE4RixvQ0FBb0M7QUFDbEk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlNQUFpTTtBQUNqTTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsa0JBQWtCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFlBQVk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0pBQWtKLFlBQVk7QUFDOUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0ZBQWtGLGtCQUFrQjtBQUNwRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBLG1CQUFtQixrQkFBa0I7QUFDckM7QUFDQTtBQUNBLGtEQUFrRCxhQUFhO0FBQy9EO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJFQUEyRSxtRkFBbUY7QUFDOUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCxrQkFBa0I7QUFDM0UsMkRBQTJELHFCQUFxQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlHQUFpRyxrQkFBa0I7QUFDbkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1SkFBdUosa0JBQWtCO0FBQ3pLO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5UUFBeVEsMEJBQTBCO0FBQ25TO0FBQ0EsaUJBQWlCLDZCQUE2QjtBQUM5QztBQUNBLGlCQUFpQixlQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK1JBQStSLDJCQUEyQjtBQUMxVDtBQUNBLHVDQUF1Qyw0QkFBNEI7QUFDbkU7QUFDQSxpQkFBaUIsZ0NBQWdDO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Qsa0JBQWtCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMsc0RBQXNELGtCQUFrQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbVJBQW1SLGtCQUFrQjtBQUNyUztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtIQUFrSCxnR0FBZ0c7QUFDbE47QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEdBQThHLFVBQVU7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5SEFBeUgsU0FBUztBQUNsSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsU0FBUztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQsa0JBQWtCO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRkFBK0YsbUJBQW1CO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVGQUF1RixTQUFTO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUVBQXlFO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZixhQUFhO0FBQ2IsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtOQUErTiwwQkFBMEI7QUFDelA7QUFDQSxtQkFBbUIsY0FBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUscUJBQXFCO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsU0FBUztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMscUJBQXFCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBLDhJQUE4SSxVQUFVO0FBQ3hKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLFVBQVU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxVQUFVO0FBQ1YsaUNBQWlDLFFBQVE7QUFDekM7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLDJEQUEyRCxrQkFBa0I7QUFDN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtRUFBbUUsa0JBQWtCO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVIQUF1SCxrQkFBa0I7QUFDekk7QUFDQTtBQUNBLG9EQUFvRCxpQkFBaUI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlIQUF5SCxVQUFVO0FBQ25JO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsaUJBQWlCO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEZBQTBGLGdCQUFnQjtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNHQUFzRyxrQkFBa0I7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFNBQVM7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0ZBQXdGLGtCQUFrQjtBQUMxRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzREFBc0Qsa0JBQWtCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLCtCQUErQjtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtFQUErRSxrQkFBa0I7QUFDakc7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUZBQXVGLGtCQUFrQjtBQUN6RyxtSEFBbUgsNEJBQTRCO0FBQy9JO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsMENBQTBDLFVBQVU7QUFDcEQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGtCQUFrQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBKQUEwSjtBQUMxSjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBJQUEwSTtBQUMxSSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRKQUE0SjtBQUM1SixzQ0FBc0M7QUFDdEM7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtKQUFrSixtQ0FBbUM7QUFDckw7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxpQ0FBaUMsa0JBQWtCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHdDQUF3QztBQUM5RTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyREFBMkQsYUFBYTtBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWCxTQUFTLE1BQU0sV0FBVztBQUMxQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsV0FBVztBQUNYO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsU0FBUztBQUNUO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELHVEQUF1RDtBQUN2RztBQUNBO0FBQ0EsV0FBVztBQUNYLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsZ0dBQWdHLG9DQUFvQztBQUNwSTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxhQUFhO0FBQ2IsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyx1REFBWTtBQUN4RDtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBLDhDQUE4Qyx1REFBWTtBQUMxRDtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQSxxREFBcUQsV0FBVyxLQUFLLGVBQWU7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsd0RBQVM7QUFDMUI7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7QUFDSDtBQUNBO0FBQ0EsNEVBQTRFLDJDQUEyQyxJQUFJLDRCQUE0QjtBQUN2SjtBQVNFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0NyYWNrZWQvRnJvbnQtZW5kL3N0YXJ0dXAvbm9kZV9tb2R1bGVzL25leHQtc2FuaXR5L25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L19jaHVua3MtZXMvdG9UcmFuc2FjdGlvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNzaWduSWQsIGhhc0lkLCBhcHBseVBhdGNoTXV0YXRpb24sIGFwcGx5Tm9kZVBhdGNoLCBhcHBseVBhdGNoZXMgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xuaW1wb3J0IHsgZ2V0QXRQYXRoIH0gZnJvbSBcIi4vZ2V0QXRQYXRoLmpzXCI7XG5pbXBvcnQgeyBuYW5vaWQgfSBmcm9tIFwibmFub2lkXCI7XG5pbXBvcnQgeyBzdHJpbmdpZnlQYXRjaGVzLCBtYWtlUGF0Y2hlcyB9IGZyb20gXCJAc2FuaXR5L2RpZmYtbWF0Y2gtcGF0Y2hcIjtcbmltcG9ydCB7IHN0YXJ0c1dpdGgsIHN0cmluZ2lmeSB9IGZyb20gXCIuL3N0cmluZ2lmeS5qc1wiO1xuZnVuY3Rpb24gZ2V0TXV0YXRpb25Eb2N1bWVudElkKG11dGF0aW9uKSB7XG4gIGlmIChtdXRhdGlvbi50eXBlID09PSBcInBhdGNoXCIpXG4gICAgcmV0dXJuIG11dGF0aW9uLmlkO1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVcIilcbiAgICByZXR1cm4gbXV0YXRpb24uZG9jdW1lbnQuX2lkO1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJkZWxldGVcIilcbiAgICByZXR1cm4gbXV0YXRpb24uaWQ7XG4gIGlmIChtdXRhdGlvbi50eXBlID09PSBcImNyZWF0ZUlmTm90RXhpc3RzXCIgfHwgbXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVPclJlcGxhY2VcIilcbiAgICByZXR1cm4gbXV0YXRpb24uZG9jdW1lbnQuX2lkO1xuICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG11dGF0aW9uIHR5cGVcIik7XG59XG5mdW5jdGlvbiBhcHBseUFsbChjdXJyZW50LCBtdXRhdGlvbikge1xuICByZXR1cm4gbXV0YXRpb24ucmVkdWNlKChkb2MsIG0pID0+IHtcbiAgICBjb25zdCByZXMgPSBhcHBseURvY3VtZW50TXV0YXRpb24oZG9jLCBtKTtcbiAgICBpZiAocmVzLnN0YXR1cyA9PT0gXCJlcnJvclwiKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKHJlcy5tZXNzYWdlKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyA9PT0gXCJub29wXCIgPyBkb2MgOiByZXMuYWZ0ZXI7XG4gIH0sIGN1cnJlbnQpO1xufVxuZnVuY3Rpb24gYXBwbHlEb2N1bWVudE11dGF0aW9uKGRvY3VtZW50LCBtdXRhdGlvbikge1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVcIilcbiAgICByZXR1cm4gY3JlYXRlKGRvY3VtZW50LCBtdXRhdGlvbik7XG4gIGlmIChtdXRhdGlvbi50eXBlID09PSBcImNyZWF0ZUlmTm90RXhpc3RzXCIpXG4gICAgcmV0dXJuIGNyZWF0ZUlmTm90RXhpc3RzKGRvY3VtZW50LCBtdXRhdGlvbik7XG4gIGlmIChtdXRhdGlvbi50eXBlID09PSBcImRlbGV0ZVwiKVxuICAgIHJldHVybiBkZWwoZG9jdW1lbnQsIG11dGF0aW9uKTtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlT3JSZXBsYWNlXCIpXG4gICAgcmV0dXJuIGNyZWF0ZU9yUmVwbGFjZShkb2N1bWVudCwgbXV0YXRpb24pO1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJwYXRjaFwiKVxuICAgIHJldHVybiBwYXRjaChkb2N1bWVudCwgbXV0YXRpb24pO1xuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbXV0YXRpb24gdHlwZTogJHttdXRhdGlvbi50eXBlfWApO1xufVxuZnVuY3Rpb24gY3JlYXRlKGRvY3VtZW50LCBtdXRhdGlvbikge1xuICBpZiAoZG9jdW1lbnQpXG4gICAgcmV0dXJuIHsgc3RhdHVzOiBcImVycm9yXCIsIG1lc3NhZ2U6IFwiRG9jdW1lbnQgYWxyZWFkeSBleGlzdFwiIH07XG4gIGNvbnN0IHJlc3VsdCA9IGFzc2lnbklkKG11dGF0aW9uLmRvY3VtZW50LCBuYW5vaWQpO1xuICByZXR1cm4geyBzdGF0dXM6IFwiY3JlYXRlZFwiLCBpZDogcmVzdWx0Ll9pZCwgYWZ0ZXI6IHJlc3VsdCB9O1xufVxuZnVuY3Rpb24gY3JlYXRlSWZOb3RFeGlzdHMoZG9jdW1lbnQsIG11dGF0aW9uKSB7XG4gIHJldHVybiBoYXNJZChtdXRhdGlvbi5kb2N1bWVudCkgPyBkb2N1bWVudCA/IHsgc3RhdHVzOiBcIm5vb3BcIiB9IDogeyBzdGF0dXM6IFwiY3JlYXRlZFwiLCBpZDogbXV0YXRpb24uZG9jdW1lbnQuX2lkLCBhZnRlcjogbXV0YXRpb24uZG9jdW1lbnQgfSA6IHtcbiAgICBzdGF0dXM6IFwiZXJyb3JcIixcbiAgICBtZXNzYWdlOiBcIkNhbm5vdCBjcmVhdGVJZk5vdEV4aXN0cyBvbiBkb2N1bWVudCB3aXRob3V0IF9pZFwiXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVPclJlcGxhY2UoZG9jdW1lbnQsIG11dGF0aW9uKSB7XG4gIHJldHVybiBoYXNJZChtdXRhdGlvbi5kb2N1bWVudCkgPyBkb2N1bWVudCA/IHtcbiAgICBzdGF0dXM6IFwidXBkYXRlZFwiLFxuICAgIGlkOiBtdXRhdGlvbi5kb2N1bWVudC5faWQsXG4gICAgYmVmb3JlOiBkb2N1bWVudCxcbiAgICBhZnRlcjogbXV0YXRpb24uZG9jdW1lbnRcbiAgfSA6IHsgc3RhdHVzOiBcImNyZWF0ZWRcIiwgaWQ6IG11dGF0aW9uLmRvY3VtZW50Ll9pZCwgYWZ0ZXI6IG11dGF0aW9uLmRvY3VtZW50IH0gOiB7XG4gICAgc3RhdHVzOiBcImVycm9yXCIsXG4gICAgbWVzc2FnZTogXCJDYW5ub3QgY3JlYXRlSWZOb3RFeGlzdHMgb24gZG9jdW1lbnQgd2l0aG91dCBfaWRcIlxuICB9O1xufVxuZnVuY3Rpb24gZGVsKGRvY3VtZW50LCBtdXRhdGlvbikge1xuICByZXR1cm4gZG9jdW1lbnQgPyBtdXRhdGlvbi5pZCAhPT0gZG9jdW1lbnQuX2lkID8geyBzdGF0dXM6IFwiZXJyb3JcIiwgbWVzc2FnZTogXCJEZWxldGUgbXV0YXRpb24gdGFyZ2V0ZWQgd3JvbmcgZG9jdW1lbnRcIiB9IDoge1xuICAgIHN0YXR1czogXCJkZWxldGVkXCIsXG4gICAgaWQ6IG11dGF0aW9uLmlkLFxuICAgIGJlZm9yZTogZG9jdW1lbnQsXG4gICAgYWZ0ZXI6IHZvaWQgMFxuICB9IDogeyBzdGF0dXM6IFwibm9vcFwiIH07XG59XG5mdW5jdGlvbiBwYXRjaChkb2N1bWVudCwgbXV0YXRpb24pIHtcbiAgaWYgKCFkb2N1bWVudClcbiAgICByZXR1cm4ge1xuICAgICAgc3RhdHVzOiBcImVycm9yXCIsXG4gICAgICBtZXNzYWdlOiBcIkNhbm5vdCBhcHBseSBwYXRjaCBvbiBub25leGlzdGVudCBkb2N1bWVudFwiXG4gICAgfTtcbiAgY29uc3QgbmV4dCA9IGFwcGx5UGF0Y2hNdXRhdGlvbihtdXRhdGlvbiwgZG9jdW1lbnQpO1xuICByZXR1cm4gZG9jdW1lbnQgPT09IG5leHQgPyB7IHN0YXR1czogXCJub29wXCIgfSA6IHsgc3RhdHVzOiBcInVwZGF0ZWRcIiwgaWQ6IG11dGF0aW9uLmlkLCBiZWZvcmU6IGRvY3VtZW50LCBhZnRlcjogbmV4dCB9O1xufVxuZnVuY3Rpb24gYXBwbHlNdXRhdGlvbnMobXV0YXRpb25zLCBkYXRhc2V0KSB7XG4gIGNvbnN0IHVwZGF0ZWREb2NzID0gLyogQF9fUFVSRV9fICovIE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIGZvciAoY29uc3QgbXV0YXRpb24gb2YgbXV0YXRpb25zKSB7XG4gICAgY29uc3QgZG9jdW1lbnRJZCA9IGdldE11dGF0aW9uRG9jdW1lbnRJZChtdXRhdGlvbik7XG4gICAgaWYgKCFkb2N1bWVudElkKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIGdldCBkb2N1bWVudCBpZCBmcm9tIG11dGF0aW9uXCIpO1xuICAgIGNvbnN0IGJlZm9yZSA9IHVwZGF0ZWREb2NzW2RvY3VtZW50SWRdPy5hZnRlciB8fCBkYXRhc2V0LmdldChkb2N1bWVudElkKSwgcmVzID0gYXBwbHlEb2N1bWVudE11dGF0aW9uKGJlZm9yZSwgbXV0YXRpb24pO1xuICAgIGlmIChyZXMuc3RhdHVzID09PSBcImVycm9yXCIpXG4gICAgICB0aHJvdyBuZXcgRXJyb3IocmVzLm1lc3NhZ2UpO1xuICAgIHJlcy5zdGF0dXMgIT09IFwibm9vcFwiICYmIChyZXMuc3RhdHVzID09PSBcInVwZGF0ZWRcIiB8fCByZXMuc3RhdHVzID09PSBcImNyZWF0ZWRcIiB8fCByZXMuc3RhdHVzID09PSBcImRlbGV0ZWRcIikgJiYgKGRvY3VtZW50SWQgaW4gdXBkYXRlZERvY3MgfHwgKHVwZGF0ZWREb2NzW2RvY3VtZW50SWRdID0geyBiZWZvcmUsIGFmdGVyOiB2b2lkIDAsIG11dHM6IFtdIH0pLCB1cGRhdGVkRG9jc1tkb2N1bWVudElkXS5hZnRlciA9IHJlcy5hZnRlcik7XG4gIH1cbiAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHVwZGF0ZWREb2NzKS5tYXAoXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNoYWRvd1xuICAgIChbaWQsIHsgYmVmb3JlLCBhZnRlciwgbXV0cyB9XSkgPT4gKHtcbiAgICAgIGlkLFxuICAgICAgc3RhdHVzOiBhZnRlciA/IGJlZm9yZSA/IFwidXBkYXRlZFwiIDogXCJjcmVhdGVkXCIgOiBcImRlbGV0ZWRcIixcbiAgICAgIG11dGF0aW9uczogbXV0cyxcbiAgICAgIGJlZm9yZSxcbiAgICAgIGFmdGVyXG4gICAgfSlcbiAgKTtcbn1cbmZ1bmN0aW9uIGNvbW1pdChyZXN1bHRzLCBkYXRhc2V0KSB7XG4gIHJlc3VsdHMuZm9yRWFjaCgocmVzdWx0KSA9PiB7XG4gICAgKHJlc3VsdC5zdGF0dXMgPT09IFwiY3JlYXRlZFwiIHx8IHJlc3VsdC5zdGF0dXMgPT09IFwidXBkYXRlZFwiKSAmJiBkYXRhc2V0LnNldChyZXN1bHQuaWQsIHJlc3VsdC5hZnRlciksIHJlc3VsdC5zdGF0dXMgPT09IFwiZGVsZXRlZFwiICYmIGRhdGFzZXQuZGVsZXRlKHJlc3VsdC5pZCk7XG4gIH0pO1xufVxuZnVuY3Rpb24gdGFrZVVudGlsUmlnaHQoYXJyLCBwcmVkaWNhdGUsIG9wdHMpIHtcbiAgY29uc3QgcmVzdWx0ID0gW107XG4gIGZvciAoY29uc3QgaXRlbSBvZiBhcnIuc2xpY2UoKS5yZXZlcnNlKCkpIHtcbiAgICBpZiAocHJlZGljYXRlKGl0ZW0pKVxuICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICByZXN1bHQucHVzaChpdGVtKTtcbiAgfVxuICByZXR1cm4gcmVzdWx0LnJldmVyc2UoKTtcbn1cbmZ1bmN0aW9uIGlzRXF1YWxQYXRoKHAxLCBwMikge1xuICByZXR1cm4gc3RyaW5naWZ5KHAxKSA9PT0gc3RyaW5naWZ5KHAyKTtcbn1cbmZ1bmN0aW9uIHN1cGVyc2VkZXMobGF0ZXIsIGVhcmxpZXIpIHtcbiAgcmV0dXJuIChlYXJsaWVyLnR5cGUgPT09IFwic2V0XCIgfHwgZWFybGllci50eXBlID09PSBcInVuc2V0XCIpICYmIChsYXRlci50eXBlID09PSBcInNldFwiIHx8IGxhdGVyLnR5cGUgPT09IFwidW5zZXRcIik7XG59XG5mdW5jdGlvbiBzcXVhc2hOb2RlUGF0Y2hlcyhwYXRjaGVzKSB7XG4gIHJldHVybiBjb21wYWN0U2V0SWZNaXNzaW5nUGF0Y2hlcyhcbiAgICBjb21wYWN0U2V0UGF0Y2hlcyhjb21wYWN0VW5zZXRQYXRjaGVzKHBhdGNoZXMpKVxuICApO1xufVxuZnVuY3Rpb24gY29tcGFjdFVuc2V0UGF0Y2hlcyhwYXRjaGVzKSB7XG4gIHJldHVybiBwYXRjaGVzLnJlZHVjZShcbiAgICAoZWFybGllclBhdGNoZXMsIGxhdGVyUGF0Y2gpID0+IHtcbiAgICAgIGlmIChsYXRlclBhdGNoLm9wLnR5cGUgIT09IFwidW5zZXRcIilcbiAgICAgICAgcmV0dXJuIGVhcmxpZXJQYXRjaGVzLnB1c2gobGF0ZXJQYXRjaCksIGVhcmxpZXJQYXRjaGVzO1xuICAgICAgY29uc3QgdW5hZmZlY3RlZCA9IGVhcmxpZXJQYXRjaGVzLmZpbHRlcihcbiAgICAgICAgKGVhcmxpZXJQYXRjaCkgPT4gIXN0YXJ0c1dpdGgobGF0ZXJQYXRjaC5wYXRoLCBlYXJsaWVyUGF0Y2gucGF0aClcbiAgICAgICk7XG4gICAgICByZXR1cm4gdW5hZmZlY3RlZC5wdXNoKGxhdGVyUGF0Y2gpLCB1bmFmZmVjdGVkO1xuICAgIH0sXG4gICAgW11cbiAgKTtcbn1cbmZ1bmN0aW9uIGNvbXBhY3RTZXRQYXRjaGVzKHBhdGNoZXMpIHtcbiAgcmV0dXJuIHBhdGNoZXMucmVkdWNlUmlnaHQoXG4gICAgKGxhdGVyUGF0Y2hlcywgZWFybGllclBhdGNoKSA9PiAobGF0ZXJQYXRjaGVzLmZpbmQoXG4gICAgICAobGF0ZXIpID0+IHN1cGVyc2VkZXMobGF0ZXIub3AsIGVhcmxpZXJQYXRjaC5vcCkgJiYgaXNFcXVhbFBhdGgobGF0ZXIucGF0aCwgZWFybGllclBhdGNoLnBhdGgpXG4gICAgKSB8fCBsYXRlclBhdGNoZXMudW5zaGlmdChlYXJsaWVyUGF0Y2gpLCBsYXRlclBhdGNoZXMpLFxuICAgIFtdXG4gICk7XG59XG5mdW5jdGlvbiBjb21wYWN0U2V0SWZNaXNzaW5nUGF0Y2hlcyhwYXRjaGVzKSB7XG4gIHJldHVybiBwYXRjaGVzLnJlZHVjZShcbiAgICAocHJldmlvdXNQYXRjaGVzLCBsYXRlclBhdGNoKSA9PiBsYXRlclBhdGNoLm9wLnR5cGUgIT09IFwic2V0SWZNaXNzaW5nXCIgPyAocHJldmlvdXNQYXRjaGVzLnB1c2gobGF0ZXJQYXRjaCksIHByZXZpb3VzUGF0Y2hlcykgOiAodGFrZVVudGlsUmlnaHQoXG4gICAgICBwcmV2aW91c1BhdGNoZXMsXG4gICAgICAocGF0Y2gyKSA9PiBwYXRjaDIub3AudHlwZSA9PT0gXCJ1bnNldFwiXG4gICAgKS5maW5kKFxuICAgICAgKHByZWNlZGluZ1BhdGNoKSA9PiBwcmVjZWRpbmdQYXRjaC5vcC50eXBlID09PSBcInNldElmTWlzc2luZ1wiICYmIGlzRXF1YWxQYXRoKHByZWNlZGluZ1BhdGNoLnBhdGgsIGxhdGVyUGF0Y2gucGF0aClcbiAgICApIHx8IHByZXZpb3VzUGF0Y2hlcy5wdXNoKGxhdGVyUGF0Y2gpLCBwcmV2aW91c1BhdGNoZXMpLFxuICAgIFtdXG4gICk7XG59XG5mdW5jdGlvbiBjb21wYWN0RE1QU2V0UGF0Y2hlcyhiYXNlLCBwYXRjaGVzKSB7XG4gIGxldCBlZGdlID0gYmFzZTtcbiAgcmV0dXJuIHBhdGNoZXMucmVkdWNlKFxuICAgIChlYXJsaWVyUGF0Y2hlcywgbGF0ZXJQYXRjaCkgPT4ge1xuICAgICAgY29uc3QgYmVmb3JlID0gZWRnZTtcbiAgICAgIGlmIChlZGdlID0gYXBwbHlOb2RlUGF0Y2gobGF0ZXJQYXRjaCwgZWRnZSksIGxhdGVyUGF0Y2gub3AudHlwZSA9PT0gXCJzZXRcIiAmJiB0eXBlb2YgbGF0ZXJQYXRjaC5vcC52YWx1ZSA9PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnQgPSBnZXRBdFBhdGgobGF0ZXJQYXRjaC5wYXRoLCBiZWZvcmUpO1xuICAgICAgICBpZiAodHlwZW9mIGN1cnJlbnQgPT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgIGNvbnN0IHJlcGxhY2VkID0ge1xuICAgICAgICAgICAgLi4ubGF0ZXJQYXRjaCxcbiAgICAgICAgICAgIG9wOiB7XG4gICAgICAgICAgICAgIHR5cGU6IFwiZGlmZk1hdGNoUGF0Y2hcIixcbiAgICAgICAgICAgICAgdmFsdWU6IHN0cmluZ2lmeVBhdGNoZXMoXG4gICAgICAgICAgICAgICAgbWFrZVBhdGNoZXMoY3VycmVudCwgbGF0ZXJQYXRjaC5vcC52YWx1ZSlcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH07XG4gICAgICAgICAgcmV0dXJuIGVhcmxpZXJQYXRjaGVzLmZsYXRNYXAoKGVwKSA9PiBpc0VxdWFsUGF0aChlcC5wYXRoLCBsYXRlclBhdGNoLnBhdGgpICYmIGVwLm9wLnR5cGUgPT09IFwiZGlmZk1hdGNoUGF0Y2hcIiA/IFtdIDogZXApLmNvbmNhdChyZXBsYWNlZCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBlYXJsaWVyUGF0Y2hlcy5wdXNoKGxhdGVyUGF0Y2gpLCBlYXJsaWVyUGF0Y2hlcztcbiAgICB9LFxuICAgIFtdXG4gICk7XG59XG5mdW5jdGlvbiBzcXVhc2hETVBTdHJpbmdzKHJlbW90ZSwgbXV0YXRpb25Hcm91cHMpIHtcbiAgcmV0dXJuIG11dGF0aW9uR3JvdXBzLm1hcCgobXV0YXRpb25Hcm91cCkgPT4gKHtcbiAgICAuLi5tdXRhdGlvbkdyb3VwLFxuICAgIG11dGF0aW9uczogZG1wSWZ5TXV0YXRpb25zKHJlbW90ZSwgbXV0YXRpb25Hcm91cC5tdXRhdGlvbnMpXG4gIH0pKTtcbn1cbmZ1bmN0aW9uIGRtcElmeU11dGF0aW9ucyhzdG9yZSwgbXV0YXRpb25zKSB7XG4gIHJldHVybiBtdXRhdGlvbnMubWFwKChtdXRhdGlvbiwgaSkgPT4gbXV0YXRpb24udHlwZSA9PT0gXCJwYXRjaFwiID8gZG1waWZ5UGF0Y2hNdXRhdGlvbihzdG9yZS5nZXQobXV0YXRpb24uaWQpLCBtdXRhdGlvbikgOiBtdXRhdGlvbik7XG59XG5mdW5jdGlvbiBkbXBpZnlQYXRjaE11dGF0aW9uKGJhc2UsIG11dGF0aW9uKSB7XG4gIHJldHVybiBiYXNlID8ge1xuICAgIC4uLm11dGF0aW9uLFxuICAgIHBhdGNoZXM6IGNvbXBhY3RETVBTZXRQYXRjaGVzKGJhc2UsIG11dGF0aW9uLnBhdGNoZXMpXG4gIH0gOiBtdXRhdGlvbjtcbn1cbnZhciBjb21tb25qc0dsb2JhbCA9IHR5cGVvZiBnbG9iYWxUaGlzIDwgXCJ1XCIgPyBnbG9iYWxUaGlzIDogdHlwZW9mIHdpbmRvdyA8IFwidVwiID8gd2luZG93IDogdHlwZW9mIGdsb2JhbCA8IFwidVwiID8gZ2xvYmFsIDogdHlwZW9mIHNlbGYgPCBcInVcIiA/IHNlbGYgOiB7fSwgbG9kYXNoJDEgPSB7IGV4cG9ydHM6IHt9IH07XG4vKipcbiAqIEBsaWNlbnNlXG4gKiBMb2Rhc2ggPGh0dHBzOi8vbG9kYXNoLmNvbS8+XG4gKiBDb3B5cmlnaHQgT3BlbkpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycyA8aHR0cHM6Ly9vcGVuanNmLm9yZy8+XG4gKiBSZWxlYXNlZCB1bmRlciBNSVQgbGljZW5zZSA8aHR0cHM6Ly9sb2Rhc2guY29tL2xpY2Vuc2U+XG4gKiBCYXNlZCBvbiBVbmRlcnNjb3JlLmpzIDEuOC4zIDxodHRwOi8vdW5kZXJzY29yZWpzLm9yZy9MSUNFTlNFPlxuICogQ29weXJpZ2h0IEplcmVteSBBc2hrZW5hcywgRG9jdW1lbnRDbG91ZCBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgJiBFZGl0b3JzXG4gKi9cbnZhciBsb2Rhc2ggPSBsb2Rhc2gkMS5leHBvcnRzLCBoYXNSZXF1aXJlZExvZGFzaDtcbmZ1bmN0aW9uIHJlcXVpcmVMb2Rhc2goKSB7XG4gIHJldHVybiBoYXNSZXF1aXJlZExvZGFzaCB8fCAoaGFzUmVxdWlyZWRMb2Rhc2ggPSAxLCBmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcbiAgICAoZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdW5kZWZpbmVkJDEsIFZFUlNJT04gPSBcIjQuMTcuMjFcIiwgTEFSR0VfQVJSQVlfU0laRSA9IDIwMCwgQ09SRV9FUlJPUl9URVhUID0gXCJVbnN1cHBvcnRlZCBjb3JlLWpzIHVzZS4gVHJ5IGh0dHBzOi8vbnBtcy5pby9zZWFyY2g/cT1wb255ZmlsbC5cIiwgRlVOQ19FUlJPUl9URVhUID0gXCJFeHBlY3RlZCBhIGZ1bmN0aW9uXCIsIElOVkFMSURfVEVNUExfVkFSX0VSUk9SX1RFWFQgPSBcIkludmFsaWQgYHZhcmlhYmxlYCBvcHRpb24gcGFzc2VkIGludG8gYF8udGVtcGxhdGVgXCIsIEhBU0hfVU5ERUZJTkVEID0gXCJfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fXCIsIE1BWF9NRU1PSVpFX1NJWkUgPSA1MDAsIFBMQUNFSE9MREVSID0gXCJfX2xvZGFzaF9wbGFjZWhvbGRlcl9fXCIsIENMT05FX0RFRVBfRkxBRyA9IDEsIENMT05FX0ZMQVRfRkxBRyA9IDIsIENMT05FX1NZTUJPTFNfRkxBRyA9IDQsIENPTVBBUkVfUEFSVElBTF9GTEFHID0gMSwgQ09NUEFSRV9VTk9SREVSRURfRkxBRyA9IDIsIFdSQVBfQklORF9GTEFHID0gMSwgV1JBUF9CSU5EX0tFWV9GTEFHID0gMiwgV1JBUF9DVVJSWV9CT1VORF9GTEFHID0gNCwgV1JBUF9DVVJSWV9GTEFHID0gOCwgV1JBUF9DVVJSWV9SSUdIVF9GTEFHID0gMTYsIFdSQVBfUEFSVElBTF9GTEFHID0gMzIsIFdSQVBfUEFSVElBTF9SSUdIVF9GTEFHID0gNjQsIFdSQVBfQVJZX0ZMQUcgPSAxMjgsIFdSQVBfUkVBUkdfRkxBRyA9IDI1NiwgV1JBUF9GTElQX0ZMQUcgPSA1MTIsIERFRkFVTFRfVFJVTkNfTEVOR1RIID0gMzAsIERFRkFVTFRfVFJVTkNfT01JU1NJT04gPSBcIi4uLlwiLCBIT1RfQ09VTlQgPSA4MDAsIEhPVF9TUEFOID0gMTYsIExBWllfRklMVEVSX0ZMQUcgPSAxLCBMQVpZX01BUF9GTEFHID0gMiwgTEFaWV9XSElMRV9GTEFHID0gMywgSU5GSU5JVFkgPSAxIC8gMCwgTUFYX1NBRkVfSU5URUdFUiA9IDkwMDcxOTkyNTQ3NDA5OTEsIE1BWF9JTlRFR0VSID0gMTc5NzY5MzEzNDg2MjMxNTdlMjkyLCBOQU4gPSBOYU4sIE1BWF9BUlJBWV9MRU5HVEggPSA0Mjk0OTY3Mjk1LCBNQVhfQVJSQVlfSU5ERVggPSBNQVhfQVJSQVlfTEVOR1RIIC0gMSwgSEFMRl9NQVhfQVJSQVlfTEVOR1RIID0gTUFYX0FSUkFZX0xFTkdUSCA+Pj4gMSwgd3JhcEZsYWdzID0gW1xuICAgICAgICBbXCJhcnlcIiwgV1JBUF9BUllfRkxBR10sXG4gICAgICAgIFtcImJpbmRcIiwgV1JBUF9CSU5EX0ZMQUddLFxuICAgICAgICBbXCJiaW5kS2V5XCIsIFdSQVBfQklORF9LRVlfRkxBR10sXG4gICAgICAgIFtcImN1cnJ5XCIsIFdSQVBfQ1VSUllfRkxBR10sXG4gICAgICAgIFtcImN1cnJ5UmlnaHRcIiwgV1JBUF9DVVJSWV9SSUdIVF9GTEFHXSxcbiAgICAgICAgW1wiZmxpcFwiLCBXUkFQX0ZMSVBfRkxBR10sXG4gICAgICAgIFtcInBhcnRpYWxcIiwgV1JBUF9QQVJUSUFMX0ZMQUddLFxuICAgICAgICBbXCJwYXJ0aWFsUmlnaHRcIiwgV1JBUF9QQVJUSUFMX1JJR0hUX0ZMQUddLFxuICAgICAgICBbXCJyZWFyZ1wiLCBXUkFQX1JFQVJHX0ZMQUddXG4gICAgICBdLCBhcmdzVGFnID0gXCJbb2JqZWN0IEFyZ3VtZW50c11cIiwgYXJyYXlUYWcgPSBcIltvYmplY3QgQXJyYXldXCIsIGFzeW5jVGFnID0gXCJbb2JqZWN0IEFzeW5jRnVuY3Rpb25dXCIsIGJvb2xUYWcgPSBcIltvYmplY3QgQm9vbGVhbl1cIiwgZGF0ZVRhZyA9IFwiW29iamVjdCBEYXRlXVwiLCBkb21FeGNUYWcgPSBcIltvYmplY3QgRE9NRXhjZXB0aW9uXVwiLCBlcnJvclRhZyA9IFwiW29iamVjdCBFcnJvcl1cIiwgZnVuY1RhZyA9IFwiW29iamVjdCBGdW5jdGlvbl1cIiwgZ2VuVGFnID0gXCJbb2JqZWN0IEdlbmVyYXRvckZ1bmN0aW9uXVwiLCBtYXBUYWcgPSBcIltvYmplY3QgTWFwXVwiLCBudW1iZXJUYWcgPSBcIltvYmplY3QgTnVtYmVyXVwiLCBudWxsVGFnID0gXCJbb2JqZWN0IE51bGxdXCIsIG9iamVjdFRhZyA9IFwiW29iamVjdCBPYmplY3RdXCIsIHByb21pc2VUYWcgPSBcIltvYmplY3QgUHJvbWlzZV1cIiwgcHJveHlUYWcgPSBcIltvYmplY3QgUHJveHldXCIsIHJlZ2V4cFRhZyA9IFwiW29iamVjdCBSZWdFeHBdXCIsIHNldFRhZyA9IFwiW29iamVjdCBTZXRdXCIsIHN0cmluZ1RhZyA9IFwiW29iamVjdCBTdHJpbmddXCIsIHN5bWJvbFRhZyA9IFwiW29iamVjdCBTeW1ib2xdXCIsIHVuZGVmaW5lZFRhZyA9IFwiW29iamVjdCBVbmRlZmluZWRdXCIsIHdlYWtNYXBUYWcgPSBcIltvYmplY3QgV2Vha01hcF1cIiwgd2Vha1NldFRhZyA9IFwiW29iamVjdCBXZWFrU2V0XVwiLCBhcnJheUJ1ZmZlclRhZyA9IFwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIiwgZGF0YVZpZXdUYWcgPSBcIltvYmplY3QgRGF0YVZpZXddXCIsIGZsb2F0MzJUYWcgPSBcIltvYmplY3QgRmxvYXQzMkFycmF5XVwiLCBmbG9hdDY0VGFnID0gXCJbb2JqZWN0IEZsb2F0NjRBcnJheV1cIiwgaW50OFRhZyA9IFwiW29iamVjdCBJbnQ4QXJyYXldXCIsIGludDE2VGFnID0gXCJbb2JqZWN0IEludDE2QXJyYXldXCIsIGludDMyVGFnID0gXCJbb2JqZWN0IEludDMyQXJyYXldXCIsIHVpbnQ4VGFnID0gXCJbb2JqZWN0IFVpbnQ4QXJyYXldXCIsIHVpbnQ4Q2xhbXBlZFRhZyA9IFwiW29iamVjdCBVaW50OENsYW1wZWRBcnJheV1cIiwgdWludDE2VGFnID0gXCJbb2JqZWN0IFVpbnQxNkFycmF5XVwiLCB1aW50MzJUYWcgPSBcIltvYmplY3QgVWludDMyQXJyYXldXCIsIHJlRW1wdHlTdHJpbmdMZWFkaW5nID0gL1xcYl9fcCBcXCs9ICcnOy9nLCByZUVtcHR5U3RyaW5nTWlkZGxlID0gL1xcYihfX3AgXFwrPSkgJycgXFwrL2csIHJlRW1wdHlTdHJpbmdUcmFpbGluZyA9IC8oX19lXFwoLio/XFwpfFxcYl9fdFxcKSkgXFwrXFxuJyc7L2csIHJlRXNjYXBlZEh0bWwgPSAvJig/OmFtcHxsdHxndHxxdW90fCMzOSk7L2csIHJlVW5lc2NhcGVkSHRtbCA9IC9bJjw+XCInXS9nLCByZUhhc0VzY2FwZWRIdG1sID0gUmVnRXhwKHJlRXNjYXBlZEh0bWwuc291cmNlKSwgcmVIYXNVbmVzY2FwZWRIdG1sID0gUmVnRXhwKHJlVW5lc2NhcGVkSHRtbC5zb3VyY2UpLCByZUVzY2FwZSA9IC88JS0oW1xcc1xcU10rPyklPi9nLCByZUV2YWx1YXRlID0gLzwlKFtcXHNcXFNdKz8pJT4vZywgcmVJbnRlcnBvbGF0ZSA9IC88JT0oW1xcc1xcU10rPyklPi9nLCByZUlzRGVlcFByb3AgPSAvXFwufFxcWyg/OlteW1xcXV0qfChbXCInXSkoPzooPyFcXDEpW15cXFxcXXxcXFxcLikqP1xcMSlcXF0vLCByZUlzUGxhaW5Qcm9wID0gL15cXHcqJC8sIHJlUHJvcE5hbWUgPSAvW14uW1xcXV0rfFxcWyg/OigtP1xcZCsoPzpcXC5cXGQrKT8pfChbXCInXSkoKD86KD8hXFwyKVteXFxcXF18XFxcXC4pKj8pXFwyKVxcXXwoPz0oPzpcXC58XFxbXFxdKSg/OlxcLnxcXFtcXF18JCkpL2csIHJlUmVnRXhwQ2hhciA9IC9bXFxcXF4kLiorPygpW1xcXXt9fF0vZywgcmVIYXNSZWdFeHBDaGFyID0gUmVnRXhwKHJlUmVnRXhwQ2hhci5zb3VyY2UpLCByZVRyaW1TdGFydCA9IC9eXFxzKy8sIHJlV2hpdGVzcGFjZSA9IC9cXHMvLCByZVdyYXBDb21tZW50ID0gL1xceyg/OlxcblxcL1xcKiBcXFt3cmFwcGVkIHdpdGggLitcXF0gXFwqXFwvKT9cXG4/LywgcmVXcmFwRGV0YWlscyA9IC9cXHtcXG5cXC9cXCogXFxbd3JhcHBlZCB3aXRoICguKylcXF0gXFwqLywgcmVTcGxpdERldGFpbHMgPSAvLD8gJiAvLCByZUFzY2lpV29yZCA9IC9bXlxceDAwLVxceDJmXFx4M2EtXFx4NDBcXHg1Yi1cXHg2MFxceDdiLVxceDdmXSsvZywgcmVGb3JiaWRkZW5JZGVudGlmaWVyQ2hhcnMgPSAvWygpPSx7fVxcW1xcXVxcL1xcc10vLCByZUVzY2FwZUNoYXIgPSAvXFxcXChcXFxcKT8vZywgcmVFc1RlbXBsYXRlID0gL1xcJFxceyhbXlxcXFx9XSooPzpcXFxcLlteXFxcXH1dKikqKVxcfS9nLCByZUZsYWdzID0gL1xcdyokLywgcmVJc0JhZEhleCA9IC9eWy0rXTB4WzAtOWEtZl0rJC9pLCByZUlzQmluYXJ5ID0gL14wYlswMV0rJC9pLCByZUlzSG9zdEN0b3IgPSAvXlxcW29iamVjdCAuKz9Db25zdHJ1Y3RvclxcXSQvLCByZUlzT2N0YWwgPSAvXjBvWzAtN10rJC9pLCByZUlzVWludCA9IC9eKD86MHxbMS05XVxcZCopJC8sIHJlTGF0aW4gPSAvW1xceGMwLVxceGQ2XFx4ZDgtXFx4ZjZcXHhmOC1cXHhmZlxcdTAxMDAtXFx1MDE3Zl0vZywgcmVOb01hdGNoID0gLygkXikvLCByZVVuZXNjYXBlZFN0cmluZyA9IC9bJ1xcblxcclxcdTIwMjhcXHUyMDI5XFxcXF0vZywgcnNBc3RyYWxSYW5nZSA9IFwiXFxcXHVkODAwLVxcXFx1ZGZmZlwiLCByc0NvbWJvTWFya3NSYW5nZSA9IFwiXFxcXHUwMzAwLVxcXFx1MDM2ZlwiLCByZUNvbWJvSGFsZk1hcmtzUmFuZ2UgPSBcIlxcXFx1ZmUyMC1cXFxcdWZlMmZcIiwgcnNDb21ib1N5bWJvbHNSYW5nZSA9IFwiXFxcXHUyMGQwLVxcXFx1MjBmZlwiLCByc0NvbWJvUmFuZ2UgPSByc0NvbWJvTWFya3NSYW5nZSArIHJlQ29tYm9IYWxmTWFya3NSYW5nZSArIHJzQ29tYm9TeW1ib2xzUmFuZ2UsIHJzRGluZ2JhdFJhbmdlID0gXCJcXFxcdTI3MDAtXFxcXHUyN2JmXCIsIHJzTG93ZXJSYW5nZSA9IFwiYS16XFxcXHhkZi1cXFxceGY2XFxcXHhmOC1cXFxceGZmXCIsIHJzTWF0aE9wUmFuZ2UgPSBcIlxcXFx4YWNcXFxceGIxXFxcXHhkN1xcXFx4ZjdcIiwgcnNOb25DaGFyUmFuZ2UgPSBcIlxcXFx4MDAtXFxcXHgyZlxcXFx4M2EtXFxcXHg0MFxcXFx4NWItXFxcXHg2MFxcXFx4N2ItXFxcXHhiZlwiLCByc1B1bmN0dWF0aW9uUmFuZ2UgPSBcIlxcXFx1MjAwMC1cXFxcdTIwNmZcIiwgcnNTcGFjZVJhbmdlID0gXCIgXFxcXHRcXFxceDBiXFxcXGZcXFxceGEwXFxcXHVmZWZmXFxcXG5cXFxcclxcXFx1MjAyOFxcXFx1MjAyOVxcXFx1MTY4MFxcXFx1MTgwZVxcXFx1MjAwMFxcXFx1MjAwMVxcXFx1MjAwMlxcXFx1MjAwM1xcXFx1MjAwNFxcXFx1MjAwNVxcXFx1MjAwNlxcXFx1MjAwN1xcXFx1MjAwOFxcXFx1MjAwOVxcXFx1MjAwYVxcXFx1MjAyZlxcXFx1MjA1ZlxcXFx1MzAwMFwiLCByc1VwcGVyUmFuZ2UgPSBcIkEtWlxcXFx4YzAtXFxcXHhkNlxcXFx4ZDgtXFxcXHhkZVwiLCByc1ZhclJhbmdlID0gXCJcXFxcdWZlMGVcXFxcdWZlMGZcIiwgcnNCcmVha1JhbmdlID0gcnNNYXRoT3BSYW5nZSArIHJzTm9uQ2hhclJhbmdlICsgcnNQdW5jdHVhdGlvblJhbmdlICsgcnNTcGFjZVJhbmdlLCByc0Fwb3MgPSBcIlsnXFx1MjAxOV1cIiwgcnNBc3RyYWwgPSBcIltcIiArIHJzQXN0cmFsUmFuZ2UgKyBcIl1cIiwgcnNCcmVhayA9IFwiW1wiICsgcnNCcmVha1JhbmdlICsgXCJdXCIsIHJzQ29tYm8gPSBcIltcIiArIHJzQ29tYm9SYW5nZSArIFwiXVwiLCByc0RpZ2l0cyA9IFwiXFxcXGQrXCIsIHJzRGluZ2JhdCA9IFwiW1wiICsgcnNEaW5nYmF0UmFuZ2UgKyBcIl1cIiwgcnNMb3dlciA9IFwiW1wiICsgcnNMb3dlclJhbmdlICsgXCJdXCIsIHJzTWlzYyA9IFwiW15cIiArIHJzQXN0cmFsUmFuZ2UgKyByc0JyZWFrUmFuZ2UgKyByc0RpZ2l0cyArIHJzRGluZ2JhdFJhbmdlICsgcnNMb3dlclJhbmdlICsgcnNVcHBlclJhbmdlICsgXCJdXCIsIHJzRml0eiA9IFwiXFxcXHVkODNjW1xcXFx1ZGZmYi1cXFxcdWRmZmZdXCIsIHJzTW9kaWZpZXIgPSBcIig/OlwiICsgcnNDb21ibyArIFwifFwiICsgcnNGaXR6ICsgXCIpXCIsIHJzTm9uQXN0cmFsID0gXCJbXlwiICsgcnNBc3RyYWxSYW5nZSArIFwiXVwiLCByc1JlZ2lvbmFsID0gXCIoPzpcXFxcdWQ4M2NbXFxcXHVkZGU2LVxcXFx1ZGRmZl0pezJ9XCIsIHJzU3VyclBhaXIgPSBcIltcXFxcdWQ4MDAtXFxcXHVkYmZmXVtcXFxcdWRjMDAtXFxcXHVkZmZmXVwiLCByc1VwcGVyID0gXCJbXCIgKyByc1VwcGVyUmFuZ2UgKyBcIl1cIiwgcnNaV0ogPSBcIlxcXFx1MjAwZFwiLCByc01pc2NMb3dlciA9IFwiKD86XCIgKyByc0xvd2VyICsgXCJ8XCIgKyByc01pc2MgKyBcIilcIiwgcnNNaXNjVXBwZXIgPSBcIig/OlwiICsgcnNVcHBlciArIFwifFwiICsgcnNNaXNjICsgXCIpXCIsIHJzT3B0Q29udHJMb3dlciA9IFwiKD86XCIgKyByc0Fwb3MgKyBcIig/OmR8bGx8bXxyZXxzfHR8dmUpKT9cIiwgcnNPcHRDb250clVwcGVyID0gXCIoPzpcIiArIHJzQXBvcyArIFwiKD86RHxMTHxNfFJFfFN8VHxWRSkpP1wiLCByZU9wdE1vZCA9IHJzTW9kaWZpZXIgKyBcIj9cIiwgcnNPcHRWYXIgPSBcIltcIiArIHJzVmFyUmFuZ2UgKyBcIl0/XCIsIHJzT3B0Sm9pbiA9IFwiKD86XCIgKyByc1pXSiArIFwiKD86XCIgKyBbcnNOb25Bc3RyYWwsIHJzUmVnaW9uYWwsIHJzU3VyclBhaXJdLmpvaW4oXCJ8XCIpICsgXCIpXCIgKyByc09wdFZhciArIHJlT3B0TW9kICsgXCIpKlwiLCByc09yZExvd2VyID0gXCJcXFxcZCooPzoxc3R8Mm5kfDNyZHwoPyFbMTIzXSlcXFxcZHRoKSg/PVxcXFxifFtBLVpfXSlcIiwgcnNPcmRVcHBlciA9IFwiXFxcXGQqKD86MVNUfDJORHwzUkR8KD8hWzEyM10pXFxcXGRUSCkoPz1cXFxcYnxbYS16X10pXCIsIHJzU2VxID0gcnNPcHRWYXIgKyByZU9wdE1vZCArIHJzT3B0Sm9pbiwgcnNFbW9qaSA9IFwiKD86XCIgKyBbcnNEaW5nYmF0LCByc1JlZ2lvbmFsLCByc1N1cnJQYWlyXS5qb2luKFwifFwiKSArIFwiKVwiICsgcnNTZXEsIHJzU3ltYm9sID0gXCIoPzpcIiArIFtyc05vbkFzdHJhbCArIHJzQ29tYm8gKyBcIj9cIiwgcnNDb21ibywgcnNSZWdpb25hbCwgcnNTdXJyUGFpciwgcnNBc3RyYWxdLmpvaW4oXCJ8XCIpICsgXCIpXCIsIHJlQXBvcyA9IFJlZ0V4cChyc0Fwb3MsIFwiZ1wiKSwgcmVDb21ib01hcmsgPSBSZWdFeHAocnNDb21ibywgXCJnXCIpLCByZVVuaWNvZGUgPSBSZWdFeHAocnNGaXR6ICsgXCIoPz1cIiArIHJzRml0eiArIFwiKXxcIiArIHJzU3ltYm9sICsgcnNTZXEsIFwiZ1wiKSwgcmVVbmljb2RlV29yZCA9IFJlZ0V4cChbXG4gICAgICAgIHJzVXBwZXIgKyBcIj9cIiArIHJzTG93ZXIgKyBcIitcIiArIHJzT3B0Q29udHJMb3dlciArIFwiKD89XCIgKyBbcnNCcmVhaywgcnNVcHBlciwgXCIkXCJdLmpvaW4oXCJ8XCIpICsgXCIpXCIsXG4gICAgICAgIHJzTWlzY1VwcGVyICsgXCIrXCIgKyByc09wdENvbnRyVXBwZXIgKyBcIig/PVwiICsgW3JzQnJlYWssIHJzVXBwZXIgKyByc01pc2NMb3dlciwgXCIkXCJdLmpvaW4oXCJ8XCIpICsgXCIpXCIsXG4gICAgICAgIHJzVXBwZXIgKyBcIj9cIiArIHJzTWlzY0xvd2VyICsgXCIrXCIgKyByc09wdENvbnRyTG93ZXIsXG4gICAgICAgIHJzVXBwZXIgKyBcIitcIiArIHJzT3B0Q29udHJVcHBlcixcbiAgICAgICAgcnNPcmRVcHBlcixcbiAgICAgICAgcnNPcmRMb3dlcixcbiAgICAgICAgcnNEaWdpdHMsXG4gICAgICAgIHJzRW1vamlcbiAgICAgIF0uam9pbihcInxcIiksIFwiZ1wiKSwgcmVIYXNVbmljb2RlID0gUmVnRXhwKFwiW1wiICsgcnNaV0ogKyByc0FzdHJhbFJhbmdlICsgcnNDb21ib1JhbmdlICsgcnNWYXJSYW5nZSArIFwiXVwiKSwgcmVIYXNVbmljb2RlV29yZCA9IC9bYS16XVtBLVpdfFtBLVpdezJ9W2Etel18WzAtOV1bYS16QS1aXXxbYS16QS1aXVswLTldfFteYS16QS1aMC05IF0vLCBjb250ZXh0UHJvcHMgPSBbXG4gICAgICAgIFwiQXJyYXlcIixcbiAgICAgICAgXCJCdWZmZXJcIixcbiAgICAgICAgXCJEYXRhVmlld1wiLFxuICAgICAgICBcIkRhdGVcIixcbiAgICAgICAgXCJFcnJvclwiLFxuICAgICAgICBcIkZsb2F0MzJBcnJheVwiLFxuICAgICAgICBcIkZsb2F0NjRBcnJheVwiLFxuICAgICAgICBcIkZ1bmN0aW9uXCIsXG4gICAgICAgIFwiSW50OEFycmF5XCIsXG4gICAgICAgIFwiSW50MTZBcnJheVwiLFxuICAgICAgICBcIkludDMyQXJyYXlcIixcbiAgICAgICAgXCJNYXBcIixcbiAgICAgICAgXCJNYXRoXCIsXG4gICAgICAgIFwiT2JqZWN0XCIsXG4gICAgICAgIFwiUHJvbWlzZVwiLFxuICAgICAgICBcIlJlZ0V4cFwiLFxuICAgICAgICBcIlNldFwiLFxuICAgICAgICBcIlN0cmluZ1wiLFxuICAgICAgICBcIlN5bWJvbFwiLFxuICAgICAgICBcIlR5cGVFcnJvclwiLFxuICAgICAgICBcIlVpbnQ4QXJyYXlcIixcbiAgICAgICAgXCJVaW50OENsYW1wZWRBcnJheVwiLFxuICAgICAgICBcIlVpbnQxNkFycmF5XCIsXG4gICAgICAgIFwiVWludDMyQXJyYXlcIixcbiAgICAgICAgXCJXZWFrTWFwXCIsXG4gICAgICAgIFwiX1wiLFxuICAgICAgICBcImNsZWFyVGltZW91dFwiLFxuICAgICAgICBcImlzRmluaXRlXCIsXG4gICAgICAgIFwicGFyc2VJbnRcIixcbiAgICAgICAgXCJzZXRUaW1lb3V0XCJcbiAgICAgIF0sIHRlbXBsYXRlQ291bnRlciA9IC0xLCB0eXBlZEFycmF5VGFncyA9IHt9O1xuICAgICAgdHlwZWRBcnJheVRhZ3NbZmxvYXQzMlRhZ10gPSB0eXBlZEFycmF5VGFnc1tmbG9hdDY0VGFnXSA9IHR5cGVkQXJyYXlUYWdzW2ludDhUYWddID0gdHlwZWRBcnJheVRhZ3NbaW50MTZUYWddID0gdHlwZWRBcnJheVRhZ3NbaW50MzJUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDhUYWddID0gdHlwZWRBcnJheVRhZ3NbdWludDhDbGFtcGVkVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3VpbnQxNlRhZ10gPSB0eXBlZEFycmF5VGFnc1t1aW50MzJUYWddID0gITAsIHR5cGVkQXJyYXlUYWdzW2FyZ3NUYWddID0gdHlwZWRBcnJheVRhZ3NbYXJyYXlUYWddID0gdHlwZWRBcnJheVRhZ3NbYXJyYXlCdWZmZXJUYWddID0gdHlwZWRBcnJheVRhZ3NbYm9vbFRhZ10gPSB0eXBlZEFycmF5VGFnc1tkYXRhVmlld1RhZ10gPSB0eXBlZEFycmF5VGFnc1tkYXRlVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Vycm9yVGFnXSA9IHR5cGVkQXJyYXlUYWdzW2Z1bmNUYWddID0gdHlwZWRBcnJheVRhZ3NbbWFwVGFnXSA9IHR5cGVkQXJyYXlUYWdzW251bWJlclRhZ10gPSB0eXBlZEFycmF5VGFnc1tvYmplY3RUYWddID0gdHlwZWRBcnJheVRhZ3NbcmVnZXhwVGFnXSA9IHR5cGVkQXJyYXlUYWdzW3NldFRhZ10gPSB0eXBlZEFycmF5VGFnc1tzdHJpbmdUYWddID0gdHlwZWRBcnJheVRhZ3Nbd2Vha01hcFRhZ10gPSAhMTtcbiAgICAgIHZhciBjbG9uZWFibGVUYWdzID0ge307XG4gICAgICBjbG9uZWFibGVUYWdzW2FyZ3NUYWddID0gY2xvbmVhYmxlVGFnc1thcnJheVRhZ10gPSBjbG9uZWFibGVUYWdzW2FycmF5QnVmZmVyVGFnXSA9IGNsb25lYWJsZVRhZ3NbZGF0YVZpZXdUYWddID0gY2xvbmVhYmxlVGFnc1tib29sVGFnXSA9IGNsb25lYWJsZVRhZ3NbZGF0ZVRhZ10gPSBjbG9uZWFibGVUYWdzW2Zsb2F0MzJUYWddID0gY2xvbmVhYmxlVGFnc1tmbG9hdDY0VGFnXSA9IGNsb25lYWJsZVRhZ3NbaW50OFRhZ10gPSBjbG9uZWFibGVUYWdzW2ludDE2VGFnXSA9IGNsb25lYWJsZVRhZ3NbaW50MzJUYWddID0gY2xvbmVhYmxlVGFnc1ttYXBUYWddID0gY2xvbmVhYmxlVGFnc1tudW1iZXJUYWddID0gY2xvbmVhYmxlVGFnc1tvYmplY3RUYWddID0gY2xvbmVhYmxlVGFnc1tyZWdleHBUYWddID0gY2xvbmVhYmxlVGFnc1tzZXRUYWddID0gY2xvbmVhYmxlVGFnc1tzdHJpbmdUYWddID0gY2xvbmVhYmxlVGFnc1tzeW1ib2xUYWddID0gY2xvbmVhYmxlVGFnc1t1aW50OFRhZ10gPSBjbG9uZWFibGVUYWdzW3VpbnQ4Q2xhbXBlZFRhZ10gPSBjbG9uZWFibGVUYWdzW3VpbnQxNlRhZ10gPSBjbG9uZWFibGVUYWdzW3VpbnQzMlRhZ10gPSAhMCwgY2xvbmVhYmxlVGFnc1tlcnJvclRhZ10gPSBjbG9uZWFibGVUYWdzW2Z1bmNUYWddID0gY2xvbmVhYmxlVGFnc1t3ZWFrTWFwVGFnXSA9ICExO1xuICAgICAgdmFyIGRlYnVycmVkTGV0dGVycyA9IHtcbiAgICAgICAgLy8gTGF0aW4tMSBTdXBwbGVtZW50IGJsb2NrLlxuICAgICAgICBcXHUwMEMwOiBcIkFcIixcbiAgICAgICAgXFx1MDBDMTogXCJBXCIsXG4gICAgICAgIFxcdTAwQzI6IFwiQVwiLFxuICAgICAgICBcXHUwMEMzOiBcIkFcIixcbiAgICAgICAgXFx1MDBDNDogXCJBXCIsXG4gICAgICAgIFxcdTAwQzU6IFwiQVwiLFxuICAgICAgICBcXHUwMEUwOiBcImFcIixcbiAgICAgICAgXFx1MDBFMTogXCJhXCIsXG4gICAgICAgIFxcdTAwRTI6IFwiYVwiLFxuICAgICAgICBcXHUwMEUzOiBcImFcIixcbiAgICAgICAgXFx1MDBFNDogXCJhXCIsXG4gICAgICAgIFxcdTAwRTU6IFwiYVwiLFxuICAgICAgICBcXHUwMEM3OiBcIkNcIixcbiAgICAgICAgXFx1MDBFNzogXCJjXCIsXG4gICAgICAgIFxcdTAwRDA6IFwiRFwiLFxuICAgICAgICBcXHUwMEYwOiBcImRcIixcbiAgICAgICAgXFx1MDBDODogXCJFXCIsXG4gICAgICAgIFxcdTAwQzk6IFwiRVwiLFxuICAgICAgICBcXHUwMENBOiBcIkVcIixcbiAgICAgICAgXFx1MDBDQjogXCJFXCIsXG4gICAgICAgIFxcdTAwRTg6IFwiZVwiLFxuICAgICAgICBcXHUwMEU5OiBcImVcIixcbiAgICAgICAgXFx1MDBFQTogXCJlXCIsXG4gICAgICAgIFxcdTAwRUI6IFwiZVwiLFxuICAgICAgICBcXHUwMENDOiBcIklcIixcbiAgICAgICAgXFx1MDBDRDogXCJJXCIsXG4gICAgICAgIFxcdTAwQ0U6IFwiSVwiLFxuICAgICAgICBcXHUwMENGOiBcIklcIixcbiAgICAgICAgXFx1MDBFQzogXCJpXCIsXG4gICAgICAgIFxcdTAwRUQ6IFwiaVwiLFxuICAgICAgICBcXHUwMEVFOiBcImlcIixcbiAgICAgICAgXFx1MDBFRjogXCJpXCIsXG4gICAgICAgIFxcdTAwRDE6IFwiTlwiLFxuICAgICAgICBcXHUwMEYxOiBcIm5cIixcbiAgICAgICAgXFx1MDBEMjogXCJPXCIsXG4gICAgICAgIFxcdTAwRDM6IFwiT1wiLFxuICAgICAgICBcXHUwMEQ0OiBcIk9cIixcbiAgICAgICAgXFx1MDBENTogXCJPXCIsXG4gICAgICAgIFxcdTAwRDY6IFwiT1wiLFxuICAgICAgICBcXHUwMEQ4OiBcIk9cIixcbiAgICAgICAgXFx1MDBGMjogXCJvXCIsXG4gICAgICAgIFxcdTAwRjM6IFwib1wiLFxuICAgICAgICBcXHUwMEY0OiBcIm9cIixcbiAgICAgICAgXFx1MDBGNTogXCJvXCIsXG4gICAgICAgIFxcdTAwRjY6IFwib1wiLFxuICAgICAgICBcXHUwMEY4OiBcIm9cIixcbiAgICAgICAgXFx1MDBEOTogXCJVXCIsXG4gICAgICAgIFxcdTAwREE6IFwiVVwiLFxuICAgICAgICBcXHUwMERCOiBcIlVcIixcbiAgICAgICAgXFx1MDBEQzogXCJVXCIsXG4gICAgICAgIFxcdTAwRjk6IFwidVwiLFxuICAgICAgICBcXHUwMEZBOiBcInVcIixcbiAgICAgICAgXFx1MDBGQjogXCJ1XCIsXG4gICAgICAgIFxcdTAwRkM6IFwidVwiLFxuICAgICAgICBcXHUwMEREOiBcIllcIixcbiAgICAgICAgXFx1MDBGRDogXCJ5XCIsXG4gICAgICAgIFxcdTAwRkY6IFwieVwiLFxuICAgICAgICBcXHUwMEM2OiBcIkFlXCIsXG4gICAgICAgIFxcdTAwRTY6IFwiYWVcIixcbiAgICAgICAgXFx1MDBERTogXCJUaFwiLFxuICAgICAgICBcXHUwMEZFOiBcInRoXCIsXG4gICAgICAgIFxcdTAwREY6IFwic3NcIixcbiAgICAgICAgLy8gTGF0aW4gRXh0ZW5kZWQtQSBibG9jay5cbiAgICAgICAgXFx1MDEwMDogXCJBXCIsXG4gICAgICAgIFxcdTAxMDI6IFwiQVwiLFxuICAgICAgICBcXHUwMTA0OiBcIkFcIixcbiAgICAgICAgXFx1MDEwMTogXCJhXCIsXG4gICAgICAgIFxcdTAxMDM6IFwiYVwiLFxuICAgICAgICBcXHUwMTA1OiBcImFcIixcbiAgICAgICAgXFx1MDEwNjogXCJDXCIsXG4gICAgICAgIFxcdTAxMDg6IFwiQ1wiLFxuICAgICAgICBcXHUwMTBBOiBcIkNcIixcbiAgICAgICAgXFx1MDEwQzogXCJDXCIsXG4gICAgICAgIFxcdTAxMDc6IFwiY1wiLFxuICAgICAgICBcXHUwMTA5OiBcImNcIixcbiAgICAgICAgXFx1MDEwQjogXCJjXCIsXG4gICAgICAgIFxcdTAxMEQ6IFwiY1wiLFxuICAgICAgICBcXHUwMTBFOiBcIkRcIixcbiAgICAgICAgXFx1MDExMDogXCJEXCIsXG4gICAgICAgIFxcdTAxMEY6IFwiZFwiLFxuICAgICAgICBcXHUwMTExOiBcImRcIixcbiAgICAgICAgXFx1MDExMjogXCJFXCIsXG4gICAgICAgIFxcdTAxMTQ6IFwiRVwiLFxuICAgICAgICBcXHUwMTE2OiBcIkVcIixcbiAgICAgICAgXFx1MDExODogXCJFXCIsXG4gICAgICAgIFxcdTAxMUE6IFwiRVwiLFxuICAgICAgICBcXHUwMTEzOiBcImVcIixcbiAgICAgICAgXFx1MDExNTogXCJlXCIsXG4gICAgICAgIFxcdTAxMTc6IFwiZVwiLFxuICAgICAgICBcXHUwMTE5OiBcImVcIixcbiAgICAgICAgXFx1MDExQjogXCJlXCIsXG4gICAgICAgIFxcdTAxMUM6IFwiR1wiLFxuICAgICAgICBcXHUwMTFFOiBcIkdcIixcbiAgICAgICAgXFx1MDEyMDogXCJHXCIsXG4gICAgICAgIFxcdTAxMjI6IFwiR1wiLFxuICAgICAgICBcXHUwMTFEOiBcImdcIixcbiAgICAgICAgXFx1MDExRjogXCJnXCIsXG4gICAgICAgIFxcdTAxMjE6IFwiZ1wiLFxuICAgICAgICBcXHUwMTIzOiBcImdcIixcbiAgICAgICAgXFx1MDEyNDogXCJIXCIsXG4gICAgICAgIFxcdTAxMjY6IFwiSFwiLFxuICAgICAgICBcXHUwMTI1OiBcImhcIixcbiAgICAgICAgXFx1MDEyNzogXCJoXCIsXG4gICAgICAgIFxcdTAxMjg6IFwiSVwiLFxuICAgICAgICBcXHUwMTJBOiBcIklcIixcbiAgICAgICAgXFx1MDEyQzogXCJJXCIsXG4gICAgICAgIFxcdTAxMkU6IFwiSVwiLFxuICAgICAgICBcXHUwMTMwOiBcIklcIixcbiAgICAgICAgXFx1MDEyOTogXCJpXCIsXG4gICAgICAgIFxcdTAxMkI6IFwiaVwiLFxuICAgICAgICBcXHUwMTJEOiBcImlcIixcbiAgICAgICAgXFx1MDEyRjogXCJpXCIsXG4gICAgICAgIFxcdTAxMzE6IFwiaVwiLFxuICAgICAgICBcXHUwMTM0OiBcIkpcIixcbiAgICAgICAgXFx1MDEzNTogXCJqXCIsXG4gICAgICAgIFxcdTAxMzY6IFwiS1wiLFxuICAgICAgICBcXHUwMTM3OiBcImtcIixcbiAgICAgICAgXFx1MDEzODogXCJrXCIsXG4gICAgICAgIFxcdTAxMzk6IFwiTFwiLFxuICAgICAgICBcXHUwMTNCOiBcIkxcIixcbiAgICAgICAgXFx1MDEzRDogXCJMXCIsXG4gICAgICAgIFxcdTAxM0Y6IFwiTFwiLFxuICAgICAgICBcXHUwMTQxOiBcIkxcIixcbiAgICAgICAgXFx1MDEzQTogXCJsXCIsXG4gICAgICAgIFxcdTAxM0M6IFwibFwiLFxuICAgICAgICBcXHUwMTNFOiBcImxcIixcbiAgICAgICAgXFx1MDE0MDogXCJsXCIsXG4gICAgICAgIFxcdTAxNDI6IFwibFwiLFxuICAgICAgICBcXHUwMTQzOiBcIk5cIixcbiAgICAgICAgXFx1MDE0NTogXCJOXCIsXG4gICAgICAgIFxcdTAxNDc6IFwiTlwiLFxuICAgICAgICBcXHUwMTRBOiBcIk5cIixcbiAgICAgICAgXFx1MDE0NDogXCJuXCIsXG4gICAgICAgIFxcdTAxNDY6IFwiblwiLFxuICAgICAgICBcXHUwMTQ4OiBcIm5cIixcbiAgICAgICAgXFx1MDE0QjogXCJuXCIsXG4gICAgICAgIFxcdTAxNEM6IFwiT1wiLFxuICAgICAgICBcXHUwMTRFOiBcIk9cIixcbiAgICAgICAgXFx1MDE1MDogXCJPXCIsXG4gICAgICAgIFxcdTAxNEQ6IFwib1wiLFxuICAgICAgICBcXHUwMTRGOiBcIm9cIixcbiAgICAgICAgXFx1MDE1MTogXCJvXCIsXG4gICAgICAgIFxcdTAxNTQ6IFwiUlwiLFxuICAgICAgICBcXHUwMTU2OiBcIlJcIixcbiAgICAgICAgXFx1MDE1ODogXCJSXCIsXG4gICAgICAgIFxcdTAxNTU6IFwiclwiLFxuICAgICAgICBcXHUwMTU3OiBcInJcIixcbiAgICAgICAgXFx1MDE1OTogXCJyXCIsXG4gICAgICAgIFxcdTAxNUE6IFwiU1wiLFxuICAgICAgICBcXHUwMTVDOiBcIlNcIixcbiAgICAgICAgXFx1MDE1RTogXCJTXCIsXG4gICAgICAgIFxcdTAxNjA6IFwiU1wiLFxuICAgICAgICBcXHUwMTVCOiBcInNcIixcbiAgICAgICAgXFx1MDE1RDogXCJzXCIsXG4gICAgICAgIFxcdTAxNUY6IFwic1wiLFxuICAgICAgICBcXHUwMTYxOiBcInNcIixcbiAgICAgICAgXFx1MDE2MjogXCJUXCIsXG4gICAgICAgIFxcdTAxNjQ6IFwiVFwiLFxuICAgICAgICBcXHUwMTY2OiBcIlRcIixcbiAgICAgICAgXFx1MDE2MzogXCJ0XCIsXG4gICAgICAgIFxcdTAxNjU6IFwidFwiLFxuICAgICAgICBcXHUwMTY3OiBcInRcIixcbiAgICAgICAgXFx1MDE2ODogXCJVXCIsXG4gICAgICAgIFxcdTAxNkE6IFwiVVwiLFxuICAgICAgICBcXHUwMTZDOiBcIlVcIixcbiAgICAgICAgXFx1MDE2RTogXCJVXCIsXG4gICAgICAgIFxcdTAxNzA6IFwiVVwiLFxuICAgICAgICBcXHUwMTcyOiBcIlVcIixcbiAgICAgICAgXFx1MDE2OTogXCJ1XCIsXG4gICAgICAgIFxcdTAxNkI6IFwidVwiLFxuICAgICAgICBcXHUwMTZEOiBcInVcIixcbiAgICAgICAgXFx1MDE2RjogXCJ1XCIsXG4gICAgICAgIFxcdTAxNzE6IFwidVwiLFxuICAgICAgICBcXHUwMTczOiBcInVcIixcbiAgICAgICAgXFx1MDE3NDogXCJXXCIsXG4gICAgICAgIFxcdTAxNzU6IFwid1wiLFxuICAgICAgICBcXHUwMTc2OiBcIllcIixcbiAgICAgICAgXFx1MDE3NzogXCJ5XCIsXG4gICAgICAgIFxcdTAxNzg6IFwiWVwiLFxuICAgICAgICBcXHUwMTc5OiBcIlpcIixcbiAgICAgICAgXFx1MDE3QjogXCJaXCIsXG4gICAgICAgIFxcdTAxN0Q6IFwiWlwiLFxuICAgICAgICBcXHUwMTdBOiBcInpcIixcbiAgICAgICAgXFx1MDE3QzogXCJ6XCIsXG4gICAgICAgIFxcdTAxN0U6IFwielwiLFxuICAgICAgICBcXHUwMTMyOiBcIklKXCIsXG4gICAgICAgIFxcdTAxMzM6IFwiaWpcIixcbiAgICAgICAgXFx1MDE1MjogXCJPZVwiLFxuICAgICAgICBcXHUwMTUzOiBcIm9lXCIsXG4gICAgICAgIFxcdTAxNDk6IFwiJ25cIixcbiAgICAgICAgXFx1MDE3RjogXCJzXCJcbiAgICAgIH0sIGh0bWxFc2NhcGVzID0ge1xuICAgICAgICBcIiZcIjogXCImYW1wO1wiLFxuICAgICAgICBcIjxcIjogXCImbHQ7XCIsXG4gICAgICAgIFwiPlwiOiBcIiZndDtcIixcbiAgICAgICAgJ1wiJzogXCImcXVvdDtcIixcbiAgICAgICAgXCInXCI6IFwiJiMzOTtcIlxuICAgICAgfSwgaHRtbFVuZXNjYXBlcyA9IHtcbiAgICAgICAgXCImYW1wO1wiOiBcIiZcIixcbiAgICAgICAgXCImbHQ7XCI6IFwiPFwiLFxuICAgICAgICBcIiZndDtcIjogXCI+XCIsXG4gICAgICAgIFwiJnF1b3Q7XCI6ICdcIicsXG4gICAgICAgIFwiJiMzOTtcIjogXCInXCJcbiAgICAgIH0sIHN0cmluZ0VzY2FwZXMgPSB7XG4gICAgICAgIFwiXFxcXFwiOiBcIlxcXFxcIixcbiAgICAgICAgXCInXCI6IFwiJ1wiLFxuICAgICAgICBcIlxcblwiOiBcIm5cIixcbiAgICAgICAgXCJcXHJcIjogXCJyXCIsXG4gICAgICAgIFwiXFx1MjAyOFwiOiBcInUyMDI4XCIsXG4gICAgICAgIFwiXFx1MjAyOVwiOiBcInUyMDI5XCJcbiAgICAgIH0sIGZyZWVQYXJzZUZsb2F0ID0gcGFyc2VGbG9hdCwgZnJlZVBhcnNlSW50ID0gcGFyc2VJbnQsIGZyZWVHbG9iYWwgPSB0eXBlb2YgY29tbW9uanNHbG9iYWwgPT0gXCJvYmplY3RcIiAmJiBjb21tb25qc0dsb2JhbCAmJiBjb21tb25qc0dsb2JhbC5PYmplY3QgPT09IE9iamVjdCAmJiBjb21tb25qc0dsb2JhbCwgZnJlZVNlbGYgPSB0eXBlb2Ygc2VsZiA9PSBcIm9iamVjdFwiICYmIHNlbGYgJiYgc2VsZi5PYmplY3QgPT09IE9iamVjdCAmJiBzZWxmLCByb290ID0gZnJlZUdsb2JhbCB8fCBmcmVlU2VsZiB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCksIGZyZWVFeHBvcnRzID0gZXhwb3J0cyAmJiAhZXhwb3J0cy5ub2RlVHlwZSAmJiBleHBvcnRzLCBmcmVlTW9kdWxlID0gZnJlZUV4cG9ydHMgJiYgITAgJiYgbW9kdWxlICYmICFtb2R1bGUubm9kZVR5cGUgJiYgbW9kdWxlLCBtb2R1bGVFeHBvcnRzID0gZnJlZU1vZHVsZSAmJiBmcmVlTW9kdWxlLmV4cG9ydHMgPT09IGZyZWVFeHBvcnRzLCBmcmVlUHJvY2VzcyA9IG1vZHVsZUV4cG9ydHMgJiYgZnJlZUdsb2JhbC5wcm9jZXNzLCBub2RlVXRpbCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIHZhciB0eXBlcyA9IGZyZWVNb2R1bGUgJiYgZnJlZU1vZHVsZS5yZXF1aXJlICYmIGZyZWVNb2R1bGUucmVxdWlyZShcInV0aWxcIikudHlwZXM7XG4gICAgICAgICAgcmV0dXJuIHR5cGVzIHx8IGZyZWVQcm9jZXNzICYmIGZyZWVQcm9jZXNzLmJpbmRpbmcgJiYgZnJlZVByb2Nlc3MuYmluZGluZyhcInV0aWxcIik7XG4gICAgICAgIH0gY2F0Y2gge1xuICAgICAgICB9XG4gICAgICB9KCksIG5vZGVJc0FycmF5QnVmZmVyID0gbm9kZVV0aWwgJiYgbm9kZVV0aWwuaXNBcnJheUJ1ZmZlciwgbm9kZUlzRGF0ZSA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzRGF0ZSwgbm9kZUlzTWFwID0gbm9kZVV0aWwgJiYgbm9kZVV0aWwuaXNNYXAsIG5vZGVJc1JlZ0V4cCA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzUmVnRXhwLCBub2RlSXNTZXQgPSBub2RlVXRpbCAmJiBub2RlVXRpbC5pc1NldCwgbm9kZUlzVHlwZWRBcnJheSA9IG5vZGVVdGlsICYmIG5vZGVVdGlsLmlzVHlwZWRBcnJheTtcbiAgICAgIGZ1bmN0aW9uIGFwcGx5KGZ1bmMsIHRoaXNBcmcsIGFyZ3MpIHtcbiAgICAgICAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHJldHVybiBmdW5jLmNhbGwodGhpc0FyZyk7XG4gICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgcmV0dXJuIGZ1bmMuY2FsbCh0aGlzQXJnLCBhcmdzWzBdKTtcbiAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICByZXR1cm4gZnVuYy5jYWxsKHRoaXNBcmcsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICAgIGNhc2UgMzpcbiAgICAgICAgICAgIHJldHVybiBmdW5jLmNhbGwodGhpc0FyZywgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBhcnJheUFnZ3JlZ2F0b3IoYXJyYXksIHNldHRlciwgaXRlcmF0ZWUsIGFjY3VtdWxhdG9yKSB7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgICAgICAgc2V0dGVyKGFjY3VtdWxhdG9yLCB2YWx1ZSwgaXRlcmF0ZWUodmFsdWUpLCBhcnJheSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYXJyYXlFYWNoKGFycmF5LCBpdGVyYXRlZSkge1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDsgKytpbmRleCA8IGxlbmd0aCAmJiBpdGVyYXRlZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkgIT09ICExOyApXG4gICAgICAgICAgO1xuICAgICAgICByZXR1cm4gYXJyYXk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBhcnJheUVhY2hSaWdodChhcnJheSwgaXRlcmF0ZWUpIHtcbiAgICAgICAgZm9yICh2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7IGxlbmd0aC0tICYmIGl0ZXJhdGVlKGFycmF5W2xlbmd0aF0sIGxlbmd0aCwgYXJyYXkpICE9PSAhMTsgKVxuICAgICAgICAgIDtcbiAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYXJyYXlFdmVyeShhcnJheSwgcHJlZGljYXRlKSB7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoOyArK2luZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgaWYgKCFwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpKVxuICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICByZXR1cm4gITA7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBhcnJheUZpbHRlcihhcnJheSwgcHJlZGljYXRlKSB7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoLCByZXNJbmRleCA9IDAsIHJlc3VsdCA9IFtdOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgICAgICAgcHJlZGljYXRlKHZhbHVlLCBpbmRleCwgYXJyYXkpICYmIChyZXN1bHRbcmVzSW5kZXgrK10gPSB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGFycmF5SW5jbHVkZXMoYXJyYXksIHZhbHVlKSB7XG4gICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgcmV0dXJuICEhbGVuZ3RoICYmIGJhc2VJbmRleE9mKGFycmF5LCB2YWx1ZSwgMCkgPiAtMTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGFycmF5SW5jbHVkZXNXaXRoKGFycmF5LCB2YWx1ZSwgY29tcGFyYXRvcikge1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDsgKytpbmRleCA8IGxlbmd0aDsgKVxuICAgICAgICAgIGlmIChjb21wYXJhdG9yKHZhbHVlLCBhcnJheVtpbmRleF0pKVxuICAgICAgICAgICAgcmV0dXJuICEwO1xuICAgICAgICByZXR1cm4gITE7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBhcnJheU1hcChhcnJheSwgaXRlcmF0ZWUpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGgsIHJlc3VsdCA9IEFycmF5KGxlbmd0aCk7ICsraW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICByZXN1bHRbaW5kZXhdID0gaXRlcmF0ZWUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYXJyYXlQdXNoKGFycmF5LCB2YWx1ZXMpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gdmFsdWVzLmxlbmd0aCwgb2Zmc2V0ID0gYXJyYXkubGVuZ3RoOyArK2luZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgYXJyYXlbb2Zmc2V0ICsgaW5kZXhdID0gdmFsdWVzW2luZGV4XTtcbiAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYXJyYXlSZWR1Y2UoYXJyYXksIGl0ZXJhdGVlLCBhY2N1bXVsYXRvciwgaW5pdEFjY3VtKSB7XG4gICAgICAgIHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgZm9yIChpbml0QWNjdW0gJiYgbGVuZ3RoICYmIChhY2N1bXVsYXRvciA9IGFycmF5WysraW5kZXhdKTsgKytpbmRleCA8IGxlbmd0aDsgKVxuICAgICAgICAgIGFjY3VtdWxhdG9yID0gaXRlcmF0ZWUoYWNjdW11bGF0b3IsIGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KTtcbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYXJyYXlSZWR1Y2VSaWdodChhcnJheSwgaXRlcmF0ZWUsIGFjY3VtdWxhdG9yLCBpbml0QWNjdW0pIHtcbiAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgICAgICBmb3IgKGluaXRBY2N1bSAmJiBsZW5ndGggJiYgKGFjY3VtdWxhdG9yID0gYXJyYXlbLS1sZW5ndGhdKTsgbGVuZ3RoLS07IClcbiAgICAgICAgICBhY2N1bXVsYXRvciA9IGl0ZXJhdGVlKGFjY3VtdWxhdG9yLCBhcnJheVtsZW5ndGhdLCBsZW5ndGgsIGFycmF5KTtcbiAgICAgICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYXJyYXlTb21lKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7ICsraW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICBpZiAocHJlZGljYXRlKGFycmF5W2luZGV4XSwgaW5kZXgsIGFycmF5KSlcbiAgICAgICAgICAgIHJldHVybiAhMDtcbiAgICAgICAgcmV0dXJuICExO1xuICAgICAgfVxuICAgICAgdmFyIGFzY2lpU2l6ZSA9IGJhc2VQcm9wZXJ0eShcImxlbmd0aFwiKTtcbiAgICAgIGZ1bmN0aW9uIGFzY2lpVG9BcnJheShzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5zcGxpdChcIlwiKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGFzY2lpV29yZHMoc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBzdHJpbmcubWF0Y2gocmVBc2NpaVdvcmQpIHx8IFtdO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYmFzZUZpbmRLZXkoY29sbGVjdGlvbiwgcHJlZGljYXRlLCBlYWNoRnVuYykge1xuICAgICAgICB2YXIgcmVzdWx0O1xuICAgICAgICByZXR1cm4gZWFjaEZ1bmMoY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbjIpIHtcbiAgICAgICAgICBpZiAocHJlZGljYXRlKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24yKSlcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQgPSBrZXksICExO1xuICAgICAgICB9KSwgcmVzdWx0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYmFzZUZpbmRJbmRleChhcnJheSwgcHJlZGljYXRlLCBmcm9tSW5kZXgsIGZyb21SaWdodCkge1xuICAgICAgICBmb3IgKHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGgsIGluZGV4ID0gZnJvbUluZGV4ICsgKGZyb21SaWdodCA/IDEgOiAtMSk7IGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgaWYgKHByZWRpY2F0ZShhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSkpXG4gICAgICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJhc2VJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSB7XG4gICAgICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyBzdHJpY3RJbmRleE9mKGFycmF5LCB2YWx1ZSwgZnJvbUluZGV4KSA6IGJhc2VGaW5kSW5kZXgoYXJyYXksIGJhc2VJc05hTiwgZnJvbUluZGV4KTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJhc2VJbmRleE9mV2l0aChhcnJheSwgdmFsdWUsIGZyb21JbmRleCwgY29tcGFyYXRvcikge1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IGZyb21JbmRleCAtIDEsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDsgKytpbmRleCA8IGxlbmd0aDsgKVxuICAgICAgICAgIGlmIChjb21wYXJhdG9yKGFycmF5W2luZGV4XSwgdmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuIGluZGV4O1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBiYXNlSXNOYU4odmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlICE9PSB2YWx1ZTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJhc2VNZWFuKGFycmF5LCBpdGVyYXRlZSkge1xuICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgIHJldHVybiBsZW5ndGggPyBiYXNlU3VtKGFycmF5LCBpdGVyYXRlZSkgLyBsZW5ndGggOiBOQU47XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBiYXNlUHJvcGVydHkoa2V5KSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQkMSA6IG9iamVjdFtrZXldO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYmFzZVByb3BlcnR5T2Yob2JqZWN0KSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB1bmRlZmluZWQkMSA6IG9iamVjdFtrZXldO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYmFzZVJlZHVjZShjb2xsZWN0aW9uLCBpdGVyYXRlZSwgYWNjdW11bGF0b3IsIGluaXRBY2N1bSwgZWFjaEZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIGVhY2hGdW5jKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbjIpIHtcbiAgICAgICAgICBhY2N1bXVsYXRvciA9IGluaXRBY2N1bSA/IChpbml0QWNjdW0gPSAhMSwgdmFsdWUpIDogaXRlcmF0ZWUoYWNjdW11bGF0b3IsIHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbjIpO1xuICAgICAgICB9KSwgYWNjdW11bGF0b3I7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBiYXNlU29ydEJ5KGFycmF5LCBjb21wYXJlcikge1xuICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICAgICAgICBmb3IgKGFycmF5LnNvcnQoY29tcGFyZXIpOyBsZW5ndGgtLTsgKVxuICAgICAgICAgIGFycmF5W2xlbmd0aF0gPSBhcnJheVtsZW5ndGhdLnZhbHVlO1xuICAgICAgICByZXR1cm4gYXJyYXk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBiYXNlU3VtKGFycmF5LCBpdGVyYXRlZSkge1xuICAgICAgICBmb3IgKHZhciByZXN1bHQsIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgdmFyIGN1cnJlbnQgPSBpdGVyYXRlZShhcnJheVtpbmRleF0pO1xuICAgICAgICAgIGN1cnJlbnQgIT09IHVuZGVmaW5lZCQxICYmIChyZXN1bHQgPSByZXN1bHQgPT09IHVuZGVmaW5lZCQxID8gY3VycmVudCA6IHJlc3VsdCArIGN1cnJlbnQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBiYXNlVGltZXMobiwgaXRlcmF0ZWUpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgcmVzdWx0ID0gQXJyYXkobik7ICsraW5kZXggPCBuOyApXG4gICAgICAgICAgcmVzdWx0W2luZGV4XSA9IGl0ZXJhdGVlKGluZGV4KTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJhc2VUb1BhaXJzKG9iamVjdCwgcHJvcHMpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5TWFwKHByb3BzLCBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICByZXR1cm4gW2tleSwgb2JqZWN0W2tleV1dO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGJhc2VUcmltKHN0cmluZykge1xuICAgICAgICByZXR1cm4gc3RyaW5nICYmIHN0cmluZy5zbGljZSgwLCB0cmltbWVkRW5kSW5kZXgoc3RyaW5nKSArIDEpLnJlcGxhY2UocmVUcmltU3RhcnQsIFwiXCIpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYmFzZVVuYXJ5KGZ1bmMpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmModmFsdWUpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gYmFzZVZhbHVlcyhvYmplY3QsIHByb3BzKSB7XG4gICAgICAgIHJldHVybiBhcnJheU1hcChwcm9wcywgZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdFtrZXldO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGNhY2hlSGFzKGNhY2hlLCBrZXkpIHtcbiAgICAgICAgcmV0dXJuIGNhY2hlLmhhcyhrZXkpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gY2hhcnNTdGFydEluZGV4KHN0clN5bWJvbHMsIGNoclN5bWJvbHMpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gc3RyU3ltYm9scy5sZW5ndGg7ICsraW5kZXggPCBsZW5ndGggJiYgYmFzZUluZGV4T2YoY2hyU3ltYm9scywgc3RyU3ltYm9sc1tpbmRleF0sIDApID4gLTE7IClcbiAgICAgICAgICA7XG4gICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGNoYXJzRW5kSW5kZXgoc3RyU3ltYm9scywgY2hyU3ltYm9scykge1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IHN0clN5bWJvbHMubGVuZ3RoOyBpbmRleC0tICYmIGJhc2VJbmRleE9mKGNoclN5bWJvbHMsIHN0clN5bWJvbHNbaW5kZXhdLCAwKSA+IC0xOyApXG4gICAgICAgICAgO1xuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBjb3VudEhvbGRlcnMoYXJyYXksIHBsYWNlaG9sZGVyKSB7XG4gICAgICAgIGZvciAodmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgcmVzdWx0ID0gMDsgbGVuZ3RoLS07IClcbiAgICAgICAgICBhcnJheVtsZW5ndGhdID09PSBwbGFjZWhvbGRlciAmJiArK3Jlc3VsdDtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIHZhciBkZWJ1cnJMZXR0ZXIgPSBiYXNlUHJvcGVydHlPZihkZWJ1cnJlZExldHRlcnMpLCBlc2NhcGVIdG1sQ2hhciA9IGJhc2VQcm9wZXJ0eU9mKGh0bWxFc2NhcGVzKTtcbiAgICAgIGZ1bmN0aW9uIGVzY2FwZVN0cmluZ0NoYXIoY2hyKSB7XG4gICAgICAgIHJldHVybiBcIlxcXFxcIiArIHN0cmluZ0VzY2FwZXNbY2hyXTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGdldFZhbHVlKG9iamVjdCwga2V5KSB7XG4gICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCQxIDogb2JqZWN0W2tleV07XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBoYXNVbmljb2RlKHN0cmluZykge1xuICAgICAgICByZXR1cm4gcmVIYXNVbmljb2RlLnRlc3Qoc3RyaW5nKTtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIGhhc1VuaWNvZGVXb3JkKHN0cmluZykge1xuICAgICAgICByZXR1cm4gcmVIYXNVbmljb2RlV29yZC50ZXN0KHN0cmluZyk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBpdGVyYXRvclRvQXJyYXkoaXRlcmF0b3IpIHtcbiAgICAgICAgZm9yICh2YXIgZGF0YSwgcmVzdWx0ID0gW107ICEoZGF0YSA9IGl0ZXJhdG9yLm5leHQoKSkuZG9uZTsgKVxuICAgICAgICAgIHJlc3VsdC5wdXNoKGRhdGEudmFsdWUpO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gbWFwVG9BcnJheShtYXApIHtcbiAgICAgICAgdmFyIGluZGV4ID0gLTEsIHJlc3VsdCA9IEFycmF5KG1hcC5zaXplKTtcbiAgICAgICAgcmV0dXJuIG1hcC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlLCBrZXkpIHtcbiAgICAgICAgICByZXN1bHRbKytpbmRleF0gPSBba2V5LCB2YWx1ZV07XG4gICAgICAgIH0pLCByZXN1bHQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBvdmVyQXJnKGZ1bmMsIHRyYW5zZm9ybSkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24oYXJnKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmModHJhbnNmb3JtKGFyZykpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gcmVwbGFjZUhvbGRlcnMoYXJyYXksIHBsYWNlaG9sZGVyKSB7XG4gICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgcmVzSW5kZXggPSAwLCByZXN1bHQgPSBbXTsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgICAgICAgICh2YWx1ZSA9PT0gcGxhY2Vob2xkZXIgfHwgdmFsdWUgPT09IFBMQUNFSE9MREVSKSAmJiAoYXJyYXlbaW5kZXhdID0gUExBQ0VIT0xERVIsIHJlc3VsdFtyZXNJbmRleCsrXSA9IGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gc2V0VG9BcnJheShzZXQpIHtcbiAgICAgICAgdmFyIGluZGV4ID0gLTEsIHJlc3VsdCA9IEFycmF5KHNldC5zaXplKTtcbiAgICAgICAgcmV0dXJuIHNldC5mb3JFYWNoKGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmVzdWx0WysraW5kZXhdID0gdmFsdWU7XG4gICAgICAgIH0pLCByZXN1bHQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBzZXRUb1BhaXJzKHNldCkge1xuICAgICAgICB2YXIgaW5kZXggPSAtMSwgcmVzdWx0ID0gQXJyYXkoc2V0LnNpemUpO1xuICAgICAgICByZXR1cm4gc2V0LmZvckVhY2goZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICByZXN1bHRbKytpbmRleF0gPSBbdmFsdWUsIHZhbHVlXTtcbiAgICAgICAgfSksIHJlc3VsdDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHN0cmljdEluZGV4T2YoYXJyYXksIHZhbHVlLCBmcm9tSW5kZXgpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSBmcm9tSW5kZXggLSAxLCBsZW5ndGggPSBhcnJheS5sZW5ndGg7ICsraW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICBpZiAoYXJyYXlbaW5kZXhdID09PSB2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gc3RyaWN0TGFzdEluZGV4T2YoYXJyYXksIHZhbHVlLCBmcm9tSW5kZXgpIHtcbiAgICAgICAgZm9yICh2YXIgaW5kZXggPSBmcm9tSW5kZXggKyAxOyBpbmRleC0tOyApXG4gICAgICAgICAgaWYgKGFycmF5W2luZGV4XSA9PT0gdmFsdWUpXG4gICAgICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgIH1cbiAgICAgIGZ1bmN0aW9uIHN0cmluZ1NpemUoc3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBoYXNVbmljb2RlKHN0cmluZykgPyB1bmljb2RlU2l6ZShzdHJpbmcpIDogYXNjaWlTaXplKHN0cmluZyk7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiBzdHJpbmdUb0FycmF5KHN0cmluZykge1xuICAgICAgICByZXR1cm4gaGFzVW5pY29kZShzdHJpbmcpID8gdW5pY29kZVRvQXJyYXkoc3RyaW5nKSA6IGFzY2lpVG9BcnJheShzdHJpbmcpO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gdHJpbW1lZEVuZEluZGV4KHN0cmluZykge1xuICAgICAgICBmb3IgKHZhciBpbmRleCA9IHN0cmluZy5sZW5ndGg7IGluZGV4LS0gJiYgcmVXaGl0ZXNwYWNlLnRlc3Qoc3RyaW5nLmNoYXJBdChpbmRleCkpOyApXG4gICAgICAgICAgO1xuICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICB9XG4gICAgICB2YXIgdW5lc2NhcGVIdG1sQ2hhciA9IGJhc2VQcm9wZXJ0eU9mKGh0bWxVbmVzY2FwZXMpO1xuICAgICAgZnVuY3Rpb24gdW5pY29kZVNpemUoc3RyaW5nKSB7XG4gICAgICAgIGZvciAodmFyIHJlc3VsdCA9IHJlVW5pY29kZS5sYXN0SW5kZXggPSAwOyByZVVuaWNvZGUudGVzdChzdHJpbmcpOyApXG4gICAgICAgICAgKytyZXN1bHQ7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICB9XG4gICAgICBmdW5jdGlvbiB1bmljb2RlVG9BcnJheShzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5tYXRjaChyZVVuaWNvZGUpIHx8IFtdO1xuICAgICAgfVxuICAgICAgZnVuY3Rpb24gdW5pY29kZVdvcmRzKHN0cmluZykge1xuICAgICAgICByZXR1cm4gc3RyaW5nLm1hdGNoKHJlVW5pY29kZVdvcmQpIHx8IFtdO1xuICAgICAgfVxuICAgICAgdmFyIHJ1bkluQ29udGV4dCA9IGZ1bmN0aW9uIHJ1bkluQ29udGV4dDIoY29udGV4dCkge1xuICAgICAgICBjb250ZXh0ID0gY29udGV4dCA9PSBudWxsID8gcm9vdCA6IF8uZGVmYXVsdHMocm9vdC5PYmplY3QoKSwgY29udGV4dCwgXy5waWNrKHJvb3QsIGNvbnRleHRQcm9wcykpO1xuICAgICAgICB2YXIgQXJyYXkyID0gY29udGV4dC5BcnJheSwgRGF0ZSA9IGNvbnRleHQuRGF0ZSwgRXJyb3IyID0gY29udGV4dC5FcnJvciwgRnVuY3Rpb24yID0gY29udGV4dC5GdW5jdGlvbiwgTWF0aCA9IGNvbnRleHQuTWF0aCwgT2JqZWN0MiA9IGNvbnRleHQuT2JqZWN0LCBSZWdFeHAyID0gY29udGV4dC5SZWdFeHAsIFN0cmluZyA9IGNvbnRleHQuU3RyaW5nLCBUeXBlRXJyb3IgPSBjb250ZXh0LlR5cGVFcnJvciwgYXJyYXlQcm90byA9IEFycmF5Mi5wcm90b3R5cGUsIGZ1bmNQcm90byA9IEZ1bmN0aW9uMi5wcm90b3R5cGUsIG9iamVjdFByb3RvID0gT2JqZWN0Mi5wcm90b3R5cGUsIGNvcmVKc0RhdGEgPSBjb250ZXh0W1wiX19jb3JlLWpzX3NoYXJlZF9fXCJdLCBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmcsIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHksIGlkQ291bnRlciA9IDAsIG1hc2tTcmNLZXkgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgdWlkID0gL1teLl0rJC8uZXhlYyhjb3JlSnNEYXRhICYmIGNvcmVKc0RhdGEua2V5cyAmJiBjb3JlSnNEYXRhLmtleXMuSUVfUFJPVE8gfHwgXCJcIik7XG4gICAgICAgICAgcmV0dXJuIHVpZCA/IFwiU3ltYm9sKHNyYylfMS5cIiArIHVpZCA6IFwiXCI7XG4gICAgICAgIH0oKSwgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZywgb2JqZWN0Q3RvclN0cmluZyA9IGZ1bmNUb1N0cmluZy5jYWxsKE9iamVjdDIpLCBvbGREYXNoID0gcm9vdC5fLCByZUlzTmF0aXZlID0gUmVnRXhwMihcbiAgICAgICAgICBcIl5cIiArIGZ1bmNUb1N0cmluZy5jYWxsKGhhc093blByb3BlcnR5KS5yZXBsYWNlKHJlUmVnRXhwQ2hhciwgXCJcXFxcJCZcIikucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXFxcXCgpfCBmb3IgLis/KD89XFxcXFxcXSkvZywgXCIkMS4qP1wiKSArIFwiJFwiXG4gICAgICAgICksIEJ1ZmZlciA9IG1vZHVsZUV4cG9ydHMgPyBjb250ZXh0LkJ1ZmZlciA6IHVuZGVmaW5lZCQxLCBTeW1ib2wgPSBjb250ZXh0LlN5bWJvbCwgVWludDhBcnJheSA9IGNvbnRleHQuVWludDhBcnJheSwgYWxsb2NVbnNhZmUgPSBCdWZmZXIgPyBCdWZmZXIuYWxsb2NVbnNhZmUgOiB1bmRlZmluZWQkMSwgZ2V0UHJvdG90eXBlID0gb3ZlckFyZyhPYmplY3QyLmdldFByb3RvdHlwZU9mLCBPYmplY3QyKSwgb2JqZWN0Q3JlYXRlID0gT2JqZWN0Mi5jcmVhdGUsIHByb3BlcnR5SXNFbnVtZXJhYmxlID0gb2JqZWN0UHJvdG8ucHJvcGVydHlJc0VudW1lcmFibGUsIHNwbGljZSA9IGFycmF5UHJvdG8uc3BsaWNlLCBzcHJlYWRhYmxlU3ltYm9sID0gU3ltYm9sID8gU3ltYm9sLmlzQ29uY2F0U3ByZWFkYWJsZSA6IHVuZGVmaW5lZCQxLCBzeW1JdGVyYXRvciA9IFN5bWJvbCA/IFN5bWJvbC5pdGVyYXRvciA6IHVuZGVmaW5lZCQxLCBzeW1Ub1N0cmluZ1RhZyA9IFN5bWJvbCA/IFN5bWJvbC50b1N0cmluZ1RhZyA6IHVuZGVmaW5lZCQxLCBkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICB2YXIgZnVuYyA9IGdldE5hdGl2ZShPYmplY3QyLCBcImRlZmluZVByb3BlcnR5XCIpO1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmMoe30sIFwiXCIsIHt9KSwgZnVuYztcbiAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICB9XG4gICAgICAgIH0oKSwgY3R4Q2xlYXJUaW1lb3V0ID0gY29udGV4dC5jbGVhclRpbWVvdXQgIT09IHJvb3QuY2xlYXJUaW1lb3V0ICYmIGNvbnRleHQuY2xlYXJUaW1lb3V0LCBjdHhOb3cgPSBEYXRlICYmIERhdGUubm93ICE9PSByb290LkRhdGUubm93ICYmIERhdGUubm93LCBjdHhTZXRUaW1lb3V0ID0gY29udGV4dC5zZXRUaW1lb3V0ICE9PSByb290LnNldFRpbWVvdXQgJiYgY29udGV4dC5zZXRUaW1lb3V0LCBuYXRpdmVDZWlsID0gTWF0aC5jZWlsLCBuYXRpdmVGbG9vciA9IE1hdGguZmxvb3IsIG5hdGl2ZUdldFN5bWJvbHMgPSBPYmplY3QyLmdldE93blByb3BlcnR5U3ltYm9scywgbmF0aXZlSXNCdWZmZXIgPSBCdWZmZXIgPyBCdWZmZXIuaXNCdWZmZXIgOiB1bmRlZmluZWQkMSwgbmF0aXZlSXNGaW5pdGUgPSBjb250ZXh0LmlzRmluaXRlLCBuYXRpdmVKb2luID0gYXJyYXlQcm90by5qb2luLCBuYXRpdmVLZXlzID0gb3ZlckFyZyhPYmplY3QyLmtleXMsIE9iamVjdDIpLCBuYXRpdmVNYXggPSBNYXRoLm1heCwgbmF0aXZlTWluID0gTWF0aC5taW4sIG5hdGl2ZU5vdyA9IERhdGUubm93LCBuYXRpdmVQYXJzZUludCA9IGNvbnRleHQucGFyc2VJbnQsIG5hdGl2ZVJhbmRvbSA9IE1hdGgucmFuZG9tLCBuYXRpdmVSZXZlcnNlID0gYXJyYXlQcm90by5yZXZlcnNlLCBEYXRhVmlldyA9IGdldE5hdGl2ZShjb250ZXh0LCBcIkRhdGFWaWV3XCIpLCBNYXAgPSBnZXROYXRpdmUoY29udGV4dCwgXCJNYXBcIiksIFByb21pc2UyID0gZ2V0TmF0aXZlKGNvbnRleHQsIFwiUHJvbWlzZVwiKSwgU2V0ID0gZ2V0TmF0aXZlKGNvbnRleHQsIFwiU2V0XCIpLCBXZWFrTWFwID0gZ2V0TmF0aXZlKGNvbnRleHQsIFwiV2Vha01hcFwiKSwgbmF0aXZlQ3JlYXRlID0gZ2V0TmF0aXZlKE9iamVjdDIsIFwiY3JlYXRlXCIpLCBtZXRhTWFwID0gV2Vha01hcCAmJiBuZXcgV2Vha01hcCgpLCByZWFsTmFtZXMgPSB7fSwgZGF0YVZpZXdDdG9yU3RyaW5nID0gdG9Tb3VyY2UoRGF0YVZpZXcpLCBtYXBDdG9yU3RyaW5nID0gdG9Tb3VyY2UoTWFwKSwgcHJvbWlzZUN0b3JTdHJpbmcgPSB0b1NvdXJjZShQcm9taXNlMiksIHNldEN0b3JTdHJpbmcgPSB0b1NvdXJjZShTZXQpLCB3ZWFrTWFwQ3RvclN0cmluZyA9IHRvU291cmNlKFdlYWtNYXApLCBzeW1ib2xQcm90byA9IFN5bWJvbCA/IFN5bWJvbC5wcm90b3R5cGUgOiB1bmRlZmluZWQkMSwgc3ltYm9sVmFsdWVPZiA9IHN5bWJvbFByb3RvID8gc3ltYm9sUHJvdG8udmFsdWVPZiA6IHVuZGVmaW5lZCQxLCBzeW1ib2xUb1N0cmluZyA9IHN5bWJvbFByb3RvID8gc3ltYm9sUHJvdG8udG9TdHJpbmcgOiB1bmRlZmluZWQkMTtcbiAgICAgICAgZnVuY3Rpb24gbG9kYXNoMih2YWx1ZSkge1xuICAgICAgICAgIGlmIChpc09iamVjdExpa2UodmFsdWUpICYmICFpc0FycmF5KHZhbHVlKSAmJiAhKHZhbHVlIGluc3RhbmNlb2YgTGF6eVdyYXBwZXIpKSB7XG4gICAgICAgICAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBMb2Rhc2hXcmFwcGVyKVxuICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICBpZiAoaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgXCJfX3dyYXBwZWRfX1wiKSlcbiAgICAgICAgICAgICAgcmV0dXJuIHdyYXBwZXJDbG9uZSh2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBuZXcgTG9kYXNoV3JhcHBlcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGJhc2VDcmVhdGUgPSAvKiBAX19QVVJFX18gKi8gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgZnVuY3Rpb24gb2JqZWN0KCkge1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24ocHJvdG8pIHtcbiAgICAgICAgICAgIGlmICghaXNPYmplY3QocHJvdG8pKVxuICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICBpZiAob2JqZWN0Q3JlYXRlKVxuICAgICAgICAgICAgICByZXR1cm4gb2JqZWN0Q3JlYXRlKHByb3RvKTtcbiAgICAgICAgICAgIG9iamVjdC5wcm90b3R5cGUgPSBwcm90bztcbiAgICAgICAgICAgIHZhciByZXN1bHQyID0gbmV3IG9iamVjdCgpO1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdC5wcm90b3R5cGUgPSB1bmRlZmluZWQkMSwgcmVzdWx0MjtcbiAgICAgICAgICB9O1xuICAgICAgICB9KCk7XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VMb2Rhc2goKSB7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gTG9kYXNoV3JhcHBlcih2YWx1ZSwgY2hhaW5BbGwpIHtcbiAgICAgICAgICB0aGlzLl9fd3JhcHBlZF9fID0gdmFsdWUsIHRoaXMuX19hY3Rpb25zX18gPSBbXSwgdGhpcy5fX2NoYWluX18gPSAhIWNoYWluQWxsLCB0aGlzLl9faW5kZXhfXyA9IDAsIHRoaXMuX192YWx1ZXNfXyA9IHVuZGVmaW5lZCQxO1xuICAgICAgICB9XG4gICAgICAgIGxvZGFzaDIudGVtcGxhdGVTZXR0aW5ncyA9IHtcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBVc2VkIHRvIGRldGVjdCBgZGF0YWAgcHJvcGVydHkgdmFsdWVzIHRvIGJlIEhUTUwtZXNjYXBlZC5cbiAgICAgICAgICAgKlxuICAgICAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAgICAgKiBAdHlwZSB7UmVnRXhwfVxuICAgICAgICAgICAqL1xuICAgICAgICAgIGVzY2FwZTogcmVFc2NhcGUsXG4gICAgICAgICAgLyoqXG4gICAgICAgICAgICogVXNlZCB0byBkZXRlY3QgY29kZSB0byBiZSBldmFsdWF0ZWQuXG4gICAgICAgICAgICpcbiAgICAgICAgICAgKiBAbWVtYmVyT2YgXy50ZW1wbGF0ZVNldHRpbmdzXG4gICAgICAgICAgICogQHR5cGUge1JlZ0V4cH1cbiAgICAgICAgICAgKi9cbiAgICAgICAgICBldmFsdWF0ZTogcmVFdmFsdWF0ZSxcbiAgICAgICAgICAvKipcbiAgICAgICAgICAgKiBVc2VkIHRvIGRldGVjdCBgZGF0YWAgcHJvcGVydHkgdmFsdWVzIHRvIGluamVjdC5cbiAgICAgICAgICAgKlxuICAgICAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAgICAgKiBAdHlwZSB7UmVnRXhwfVxuICAgICAgICAgICAqL1xuICAgICAgICAgIGludGVycG9sYXRlOiByZUludGVycG9sYXRlLFxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIFVzZWQgdG8gcmVmZXJlbmNlIHRoZSBkYXRhIG9iamVjdCBpbiB0aGUgdGVtcGxhdGUgdGV4dC5cbiAgICAgICAgICAgKlxuICAgICAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAgICAgICAqL1xuICAgICAgICAgIHZhcmlhYmxlOiBcIlwiLFxuICAgICAgICAgIC8qKlxuICAgICAgICAgICAqIFVzZWQgdG8gaW1wb3J0IHZhcmlhYmxlcyBpbnRvIHRoZSBjb21waWxlZCB0ZW1wbGF0ZS5cbiAgICAgICAgICAgKlxuICAgICAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3NcbiAgICAgICAgICAgKiBAdHlwZSB7T2JqZWN0fVxuICAgICAgICAgICAqL1xuICAgICAgICAgIGltcG9ydHM6IHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogQSByZWZlcmVuY2UgdG8gdGhlIGBsb2Rhc2hgIGZ1bmN0aW9uLlxuICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAqIEBtZW1iZXJPZiBfLnRlbXBsYXRlU2V0dGluZ3MuaW1wb3J0c1xuICAgICAgICAgICAgICogQHR5cGUge0Z1bmN0aW9ufVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICBfOiBsb2Rhc2gyXG4gICAgICAgICAgfVxuICAgICAgICB9LCBsb2Rhc2gyLnByb3RvdHlwZSA9IGJhc2VMb2Rhc2gucHJvdG90eXBlLCBsb2Rhc2gyLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IGxvZGFzaDIsIExvZGFzaFdyYXBwZXIucHJvdG90eXBlID0gYmFzZUNyZWF0ZShiYXNlTG9kYXNoLnByb3RvdHlwZSksIExvZGFzaFdyYXBwZXIucHJvdG90eXBlLmNvbnN0cnVjdG9yID0gTG9kYXNoV3JhcHBlcjtcbiAgICAgICAgZnVuY3Rpb24gTGF6eVdyYXBwZXIodmFsdWUpIHtcbiAgICAgICAgICB0aGlzLl9fd3JhcHBlZF9fID0gdmFsdWUsIHRoaXMuX19hY3Rpb25zX18gPSBbXSwgdGhpcy5fX2Rpcl9fID0gMSwgdGhpcy5fX2ZpbHRlcmVkX18gPSAhMSwgdGhpcy5fX2l0ZXJhdGVlc19fID0gW10sIHRoaXMuX190YWtlQ291bnRfXyA9IE1BWF9BUlJBWV9MRU5HVEgsIHRoaXMuX192aWV3c19fID0gW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbGF6eUNsb25lKCkge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gbmV3IExhenlXcmFwcGVyKHRoaXMuX193cmFwcGVkX18pO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyLl9fYWN0aW9uc19fID0gY29weUFycmF5KHRoaXMuX19hY3Rpb25zX18pLCByZXN1bHQyLl9fZGlyX18gPSB0aGlzLl9fZGlyX18sIHJlc3VsdDIuX19maWx0ZXJlZF9fID0gdGhpcy5fX2ZpbHRlcmVkX18sIHJlc3VsdDIuX19pdGVyYXRlZXNfXyA9IGNvcHlBcnJheSh0aGlzLl9faXRlcmF0ZWVzX18pLCByZXN1bHQyLl9fdGFrZUNvdW50X18gPSB0aGlzLl9fdGFrZUNvdW50X18sIHJlc3VsdDIuX192aWV3c19fID0gY29weUFycmF5KHRoaXMuX192aWV3c19fKSwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBsYXp5UmV2ZXJzZSgpIHtcbiAgICAgICAgICBpZiAodGhpcy5fX2ZpbHRlcmVkX18pIHtcbiAgICAgICAgICAgIHZhciByZXN1bHQyID0gbmV3IExhenlXcmFwcGVyKHRoaXMpO1xuICAgICAgICAgICAgcmVzdWx0Mi5fX2Rpcl9fID0gLTEsIHJlc3VsdDIuX19maWx0ZXJlZF9fID0gITA7XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICByZXN1bHQyID0gdGhpcy5jbG9uZSgpLCByZXN1bHQyLl9fZGlyX18gKj0gLTE7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbGF6eVZhbHVlKCkge1xuICAgICAgICAgIHZhciBhcnJheSA9IHRoaXMuX193cmFwcGVkX18udmFsdWUoKSwgZGlyID0gdGhpcy5fX2Rpcl9fLCBpc0FyciA9IGlzQXJyYXkoYXJyYXkpLCBpc1JpZ2h0ID0gZGlyIDwgMCwgYXJyTGVuZ3RoID0gaXNBcnIgPyBhcnJheS5sZW5ndGggOiAwLCB2aWV3ID0gZ2V0VmlldygwLCBhcnJMZW5ndGgsIHRoaXMuX192aWV3c19fKSwgc3RhcnQgPSB2aWV3LnN0YXJ0LCBlbmQgPSB2aWV3LmVuZCwgbGVuZ3RoID0gZW5kIC0gc3RhcnQsIGluZGV4ID0gaXNSaWdodCA/IGVuZCA6IHN0YXJ0IC0gMSwgaXRlcmF0ZWVzID0gdGhpcy5fX2l0ZXJhdGVlc19fLCBpdGVyTGVuZ3RoID0gaXRlcmF0ZWVzLmxlbmd0aCwgcmVzSW5kZXggPSAwLCB0YWtlQ291bnQgPSBuYXRpdmVNaW4obGVuZ3RoLCB0aGlzLl9fdGFrZUNvdW50X18pO1xuICAgICAgICAgIGlmICghaXNBcnIgfHwgIWlzUmlnaHQgJiYgYXJyTGVuZ3RoID09IGxlbmd0aCAmJiB0YWtlQ291bnQgPT0gbGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIGJhc2VXcmFwcGVyVmFsdWUoYXJyYXksIHRoaXMuX19hY3Rpb25zX18pO1xuICAgICAgICAgIHZhciByZXN1bHQyID0gW107XG4gICAgICAgICAgb3V0ZXI6XG4gICAgICAgICAgICBmb3IgKDsgbGVuZ3RoLS0gJiYgcmVzSW5kZXggPCB0YWtlQ291bnQ7ICkge1xuICAgICAgICAgICAgICBpbmRleCArPSBkaXI7XG4gICAgICAgICAgICAgIGZvciAodmFyIGl0ZXJJbmRleCA9IC0xLCB2YWx1ZSA9IGFycmF5W2luZGV4XTsgKytpdGVySW5kZXggPCBpdGVyTGVuZ3RoOyApIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IGl0ZXJhdGVlc1tpdGVySW5kZXhdLCBpdGVyYXRlZTIgPSBkYXRhLml0ZXJhdGVlLCB0eXBlID0gZGF0YS50eXBlLCBjb21wdXRlZCA9IGl0ZXJhdGVlMih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUgPT0gTEFaWV9NQVBfRkxBRylcbiAgICAgICAgICAgICAgICAgIHZhbHVlID0gY29tcHV0ZWQ7XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoIWNvbXB1dGVkKSB7XG4gICAgICAgICAgICAgICAgICBpZiAodHlwZSA9PSBMQVpZX0ZJTFRFUl9GTEFHKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZSBvdXRlcjtcbiAgICAgICAgICAgICAgICAgIGJyZWFrIG91dGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICByZXN1bHQyW3Jlc0luZGV4KytdID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgTGF6eVdyYXBwZXIucHJvdG90eXBlID0gYmFzZUNyZWF0ZShiYXNlTG9kYXNoLnByb3RvdHlwZSksIExhenlXcmFwcGVyLnByb3RvdHlwZS5jb25zdHJ1Y3RvciA9IExhenlXcmFwcGVyO1xuICAgICAgICBmdW5jdGlvbiBIYXNoKGVudHJpZXMpIHtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuICAgICAgICAgIGZvciAodGhpcy5jbGVhcigpOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgICAgICAgICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaGFzaENsZWFyKCkge1xuICAgICAgICAgIHRoaXMuX19kYXRhX18gPSBuYXRpdmVDcmVhdGUgPyBuYXRpdmVDcmVhdGUobnVsbCkgOiB7fSwgdGhpcy5zaXplID0gMDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoYXNoRGVsZXRlKGtleSkge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gdGhpcy5oYXMoa2V5KSAmJiBkZWxldGUgdGhpcy5fX2RhdGFfX1trZXldO1xuICAgICAgICAgIHJldHVybiB0aGlzLnNpemUgLT0gcmVzdWx0MiA/IDEgOiAwLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGhhc2hHZXQoa2V5KSB7XG4gICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICAgICAgICAgIGlmIChuYXRpdmVDcmVhdGUpIHtcbiAgICAgICAgICAgIHZhciByZXN1bHQyID0gZGF0YVtrZXldO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDIgPT09IEhBU0hfVU5ERUZJTkVEID8gdW5kZWZpbmVkJDEgOiByZXN1bHQyO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpID8gZGF0YVtrZXldIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaGFzaEhhcyhrZXkpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gICAgICAgICAgcmV0dXJuIG5hdGl2ZUNyZWF0ZSA/IGRhdGFba2V5XSAhPT0gdW5kZWZpbmVkJDEgOiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGRhdGEsIGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaGFzaFNldChrZXksIHZhbHVlKSB7XG4gICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fO1xuICAgICAgICAgIHJldHVybiB0aGlzLnNpemUgKz0gdGhpcy5oYXMoa2V5KSA/IDAgOiAxLCBkYXRhW2tleV0gPSBuYXRpdmVDcmVhdGUgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCQxID8gSEFTSF9VTkRFRklORUQgOiB2YWx1ZSwgdGhpcztcbiAgICAgICAgfVxuICAgICAgICBIYXNoLnByb3RvdHlwZS5jbGVhciA9IGhhc2hDbGVhciwgSGFzaC5wcm90b3R5cGUuZGVsZXRlID0gaGFzaERlbGV0ZSwgSGFzaC5wcm90b3R5cGUuZ2V0ID0gaGFzaEdldCwgSGFzaC5wcm90b3R5cGUuaGFzID0gaGFzaEhhcywgSGFzaC5wcm90b3R5cGUuc2V0ID0gaGFzaFNldDtcbiAgICAgICAgZnVuY3Rpb24gTGlzdENhY2hlKGVudHJpZXMpIHtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gZW50cmllcyA9PSBudWxsID8gMCA6IGVudHJpZXMubGVuZ3RoO1xuICAgICAgICAgIGZvciAodGhpcy5jbGVhcigpOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICAgIHZhciBlbnRyeSA9IGVudHJpZXNbaW5kZXhdO1xuICAgICAgICAgICAgdGhpcy5zZXQoZW50cnlbMF0sIGVudHJ5WzFdKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbGlzdENhY2hlQ2xlYXIoKSB7XG4gICAgICAgICAgdGhpcy5fX2RhdGFfXyA9IFtdLCB0aGlzLnNpemUgPSAwO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGxpc3RDYWNoZURlbGV0ZShrZXkpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG4gICAgICAgICAgaWYgKGluZGV4IDwgMClcbiAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICB2YXIgbGFzdEluZGV4ID0gZGF0YS5sZW5ndGggLSAxO1xuICAgICAgICAgIHJldHVybiBpbmRleCA9PSBsYXN0SW5kZXggPyBkYXRhLnBvcCgpIDogc3BsaWNlLmNhbGwoZGF0YSwgaW5kZXgsIDEpLCAtLXRoaXMuc2l6ZSwgITA7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbGlzdENhY2hlR2V0KGtleSkge1xuICAgICAgICAgIHZhciBkYXRhID0gdGhpcy5fX2RhdGFfXywgaW5kZXggPSBhc3NvY0luZGV4T2YoZGF0YSwga2V5KTtcbiAgICAgICAgICByZXR1cm4gaW5kZXggPCAwID8gdW5kZWZpbmVkJDEgOiBkYXRhW2luZGV4XVsxXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBsaXN0Q2FjaGVIYXMoa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIGFzc29jSW5kZXhPZih0aGlzLl9fZGF0YV9fLCBrZXkpID4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbGlzdENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18sIGluZGV4ID0gYXNzb2NJbmRleE9mKGRhdGEsIGtleSk7XG4gICAgICAgICAgcmV0dXJuIGluZGV4IDwgMCA/ICgrK3RoaXMuc2l6ZSwgZGF0YS5wdXNoKFtrZXksIHZhbHVlXSkpIDogZGF0YVtpbmRleF1bMV0gPSB2YWx1ZSwgdGhpcztcbiAgICAgICAgfVxuICAgICAgICBMaXN0Q2FjaGUucHJvdG90eXBlLmNsZWFyID0gbGlzdENhY2hlQ2xlYXIsIExpc3RDYWNoZS5wcm90b3R5cGUuZGVsZXRlID0gbGlzdENhY2hlRGVsZXRlLCBMaXN0Q2FjaGUucHJvdG90eXBlLmdldCA9IGxpc3RDYWNoZUdldCwgTGlzdENhY2hlLnByb3RvdHlwZS5oYXMgPSBsaXN0Q2FjaGVIYXMsIExpc3RDYWNoZS5wcm90b3R5cGUuc2V0ID0gbGlzdENhY2hlU2V0O1xuICAgICAgICBmdW5jdGlvbiBNYXBDYWNoZShlbnRyaWVzKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGVudHJpZXMgPT0gbnVsbCA/IDAgOiBlbnRyaWVzLmxlbmd0aDtcbiAgICAgICAgICBmb3IgKHRoaXMuY2xlYXIoKTsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgICB2YXIgZW50cnkgPSBlbnRyaWVzW2luZGV4XTtcbiAgICAgICAgICAgIHRoaXMuc2V0KGVudHJ5WzBdLCBlbnRyeVsxXSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1hcENhY2hlQ2xlYXIoKSB7XG4gICAgICAgICAgdGhpcy5zaXplID0gMCwgdGhpcy5fX2RhdGFfXyA9IHtcbiAgICAgICAgICAgIGhhc2g6IG5ldyBIYXNoKCksXG4gICAgICAgICAgICBtYXA6IG5ldyAoTWFwIHx8IExpc3RDYWNoZSkoKSxcbiAgICAgICAgICAgIHN0cmluZzogbmV3IEhhc2goKVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWFwQ2FjaGVEZWxldGUoa2V5KSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBnZXRNYXBEYXRhKHRoaXMsIGtleSkuZGVsZXRlKGtleSk7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuc2l6ZSAtPSByZXN1bHQyID8gMSA6IDAsIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWFwQ2FjaGVHZXQoa2V5KSB7XG4gICAgICAgICAgcmV0dXJuIGdldE1hcERhdGEodGhpcywga2V5KS5nZXQoa2V5KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBtYXBDYWNoZUhhcyhrZXkpIHtcbiAgICAgICAgICByZXR1cm4gZ2V0TWFwRGF0YSh0aGlzLCBrZXkpLmhhcyhrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1hcENhY2hlU2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IGdldE1hcERhdGEodGhpcywga2V5KSwgc2l6ZTIgPSBkYXRhLnNpemU7XG4gICAgICAgICAgcmV0dXJuIGRhdGEuc2V0KGtleSwgdmFsdWUpLCB0aGlzLnNpemUgKz0gZGF0YS5zaXplID09IHNpemUyID8gMCA6IDEsIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgTWFwQ2FjaGUucHJvdG90eXBlLmNsZWFyID0gbWFwQ2FjaGVDbGVhciwgTWFwQ2FjaGUucHJvdG90eXBlLmRlbGV0ZSA9IG1hcENhY2hlRGVsZXRlLCBNYXBDYWNoZS5wcm90b3R5cGUuZ2V0ID0gbWFwQ2FjaGVHZXQsIE1hcENhY2hlLnByb3RvdHlwZS5oYXMgPSBtYXBDYWNoZUhhcywgTWFwQ2FjaGUucHJvdG90eXBlLnNldCA9IG1hcENhY2hlU2V0O1xuICAgICAgICBmdW5jdGlvbiBTZXRDYWNoZSh2YWx1ZXMyKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IHZhbHVlczIgPT0gbnVsbCA/IDAgOiB2YWx1ZXMyLmxlbmd0aDtcbiAgICAgICAgICBmb3IgKHRoaXMuX19kYXRhX18gPSBuZXcgTWFwQ2FjaGUoKTsgKytpbmRleCA8IGxlbmd0aDsgKVxuICAgICAgICAgICAgdGhpcy5hZGQodmFsdWVzMltpbmRleF0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNldENhY2hlQWRkKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMuX19kYXRhX18uc2V0KHZhbHVlLCBIQVNIX1VOREVGSU5FRCksIHRoaXM7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc2V0Q2FjaGVIYXModmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5fX2RhdGFfXy5oYXModmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIFNldENhY2hlLnByb3RvdHlwZS5hZGQgPSBTZXRDYWNoZS5wcm90b3R5cGUucHVzaCA9IHNldENhY2hlQWRkLCBTZXRDYWNoZS5wcm90b3R5cGUuaGFzID0gc2V0Q2FjaGVIYXM7XG4gICAgICAgIGZ1bmN0aW9uIFN0YWNrKGVudHJpZXMpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlKGVudHJpZXMpO1xuICAgICAgICAgIHRoaXMuc2l6ZSA9IGRhdGEuc2l6ZTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzdGFja0NsZWFyKCkge1xuICAgICAgICAgIHRoaXMuX19kYXRhX18gPSBuZXcgTGlzdENhY2hlKCksIHRoaXMuc2l6ZSA9IDA7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc3RhY2tEZWxldGUoa2V5KSB7XG4gICAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9fZGF0YV9fLCByZXN1bHQyID0gZGF0YS5kZWxldGUoa2V5KTtcbiAgICAgICAgICByZXR1cm4gdGhpcy5zaXplID0gZGF0YS5zaXplLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHN0YWNrR2V0KGtleSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLl9fZGF0YV9fLmdldChrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHN0YWNrSGFzKGtleSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLl9fZGF0YV9fLmhhcyhrZXkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHN0YWNrU2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX19kYXRhX187XG4gICAgICAgICAgaWYgKGRhdGEgaW5zdGFuY2VvZiBMaXN0Q2FjaGUpIHtcbiAgICAgICAgICAgIHZhciBwYWlycyA9IGRhdGEuX19kYXRhX187XG4gICAgICAgICAgICBpZiAoIU1hcCB8fCBwYWlycy5sZW5ndGggPCBMQVJHRV9BUlJBWV9TSVpFIC0gMSlcbiAgICAgICAgICAgICAgcmV0dXJuIHBhaXJzLnB1c2goW2tleSwgdmFsdWVdKSwgdGhpcy5zaXplID0gKytkYXRhLnNpemUsIHRoaXM7XG4gICAgICAgICAgICBkYXRhID0gdGhpcy5fX2RhdGFfXyA9IG5ldyBNYXBDYWNoZShwYWlycyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBkYXRhLnNldChrZXksIHZhbHVlKSwgdGhpcy5zaXplID0gZGF0YS5zaXplLCB0aGlzO1xuICAgICAgICB9XG4gICAgICAgIFN0YWNrLnByb3RvdHlwZS5jbGVhciA9IHN0YWNrQ2xlYXIsIFN0YWNrLnByb3RvdHlwZS5kZWxldGUgPSBzdGFja0RlbGV0ZSwgU3RhY2sucHJvdG90eXBlLmdldCA9IHN0YWNrR2V0LCBTdGFjay5wcm90b3R5cGUuaGFzID0gc3RhY2tIYXMsIFN0YWNrLnByb3RvdHlwZS5zZXQgPSBzdGFja1NldDtcbiAgICAgICAgZnVuY3Rpb24gYXJyYXlMaWtlS2V5cyh2YWx1ZSwgaW5oZXJpdGVkKSB7XG4gICAgICAgICAgdmFyIGlzQXJyID0gaXNBcnJheSh2YWx1ZSksIGlzQXJnID0gIWlzQXJyICYmIGlzQXJndW1lbnRzKHZhbHVlKSwgaXNCdWZmID0gIWlzQXJyICYmICFpc0FyZyAmJiBpc0J1ZmZlcih2YWx1ZSksIGlzVHlwZSA9ICFpc0FyciAmJiAhaXNBcmcgJiYgIWlzQnVmZiAmJiBpc1R5cGVkQXJyYXkodmFsdWUpLCBza2lwSW5kZXhlcyA9IGlzQXJyIHx8IGlzQXJnIHx8IGlzQnVmZiB8fCBpc1R5cGUsIHJlc3VsdDIgPSBza2lwSW5kZXhlcyA/IGJhc2VUaW1lcyh2YWx1ZS5sZW5ndGgsIFN0cmluZykgOiBbXSwgbGVuZ3RoID0gcmVzdWx0Mi5sZW5ndGg7XG4gICAgICAgICAgZm9yICh2YXIga2V5IGluIHZhbHVlKVxuICAgICAgICAgICAgKGluaGVyaXRlZCB8fCBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKSAmJiAhKHNraXBJbmRleGVzICYmIC8vIFNhZmFyaSA5IGhhcyBlbnVtZXJhYmxlIGBhcmd1bWVudHMubGVuZ3RoYCBpbiBzdHJpY3QgbW9kZS5cbiAgICAgICAgICAgIChrZXkgPT0gXCJsZW5ndGhcIiB8fCAvLyBOb2RlLmpzIDAuMTAgaGFzIGVudW1lcmFibGUgbm9uLWluZGV4IHByb3BlcnRpZXMgb24gYnVmZmVycy5cbiAgICAgICAgICAgIGlzQnVmZiAmJiAoa2V5ID09IFwib2Zmc2V0XCIgfHwga2V5ID09IFwicGFyZW50XCIpIHx8IC8vIFBoYW50b21KUyAyIGhhcyBlbnVtZXJhYmxlIG5vbi1pbmRleCBwcm9wZXJ0aWVzIG9uIHR5cGVkIGFycmF5cy5cbiAgICAgICAgICAgIGlzVHlwZSAmJiAoa2V5ID09IFwiYnVmZmVyXCIgfHwga2V5ID09IFwiYnl0ZUxlbmd0aFwiIHx8IGtleSA9PSBcImJ5dGVPZmZzZXRcIikgfHwgLy8gU2tpcCBpbmRleCBwcm9wZXJ0aWVzLlxuICAgICAgICAgICAgaXNJbmRleChrZXksIGxlbmd0aCkpKSAmJiByZXN1bHQyLnB1c2goa2V5KTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBhcnJheVNhbXBsZShhcnJheSkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA/IGFycmF5W2Jhc2VSYW5kb20oMCwgbGVuZ3RoIC0gMSldIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYXJyYXlTYW1wbGVTaXplKGFycmF5LCBuKSB7XG4gICAgICAgICAgcmV0dXJuIHNodWZmbGVTZWxmKGNvcHlBcnJheShhcnJheSksIGJhc2VDbGFtcChuLCAwLCBhcnJheS5sZW5ndGgpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBhcnJheVNodWZmbGUoYXJyYXkpIHtcbiAgICAgICAgICByZXR1cm4gc2h1ZmZsZVNlbGYoY29weUFycmF5KGFycmF5KSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYXNzaWduTWVyZ2VWYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAodmFsdWUgIT09IHVuZGVmaW5lZCQxICYmICFlcShvYmplY3Rba2V5XSwgdmFsdWUpIHx8IHZhbHVlID09PSB1bmRlZmluZWQkMSAmJiAhKGtleSBpbiBvYmplY3QpKSAmJiBiYXNlQXNzaWduVmFsdWUob2JqZWN0LCBrZXksIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBhc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgICAgICAgICB2YXIgb2JqVmFsdWUgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAoIShoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSAmJiBlcShvYmpWYWx1ZSwgdmFsdWUpKSB8fCB2YWx1ZSA9PT0gdW5kZWZpbmVkJDEgJiYgIShrZXkgaW4gb2JqZWN0KSkgJiYgYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYXNzb2NJbmRleE9mKGFycmF5LCBrZXkpIHtcbiAgICAgICAgICBmb3IgKHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7IGxlbmd0aC0tOyApXG4gICAgICAgICAgICBpZiAoZXEoYXJyYXlbbGVuZ3RoXVswXSwga2V5KSlcbiAgICAgICAgICAgICAgcmV0dXJuIGxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUFnZ3JlZ2F0b3IoY29sbGVjdGlvbiwgc2V0dGVyLCBpdGVyYXRlZTIsIGFjY3VtdWxhdG9yKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VFYWNoKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24yKSB7XG4gICAgICAgICAgICBzZXR0ZXIoYWNjdW11bGF0b3IsIHZhbHVlLCBpdGVyYXRlZTIodmFsdWUpLCBjb2xsZWN0aW9uMik7XG4gICAgICAgICAgfSksIGFjY3VtdWxhdG9yO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VBc3NpZ24ob2JqZWN0LCBzb3VyY2UpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ICYmIGNvcHlPYmplY3Qoc291cmNlLCBrZXlzKHNvdXJjZSksIG9iamVjdCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUFzc2lnbkluKG9iamVjdCwgc291cmNlKSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCAmJiBjb3B5T2JqZWN0KHNvdXJjZSwga2V5c0luKHNvdXJjZSksIG9iamVjdCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUFzc2lnblZhbHVlKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICAgICAgICAgIGtleSA9PSBcIl9fcHJvdG9fX1wiICYmIGRlZmluZVByb3BlcnR5ID8gZGVmaW5lUHJvcGVydHkob2JqZWN0LCBrZXksIHtcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiAhMCxcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgd3JpdGFibGU6ICEwXG4gICAgICAgICAgfSkgOiBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VBdChvYmplY3QsIHBhdGhzKSB7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gcGF0aHMubGVuZ3RoLCByZXN1bHQyID0gQXJyYXkyKGxlbmd0aCksIHNraXAgPSBvYmplY3QgPT0gbnVsbDsgKytpbmRleCA8IGxlbmd0aDsgKVxuICAgICAgICAgICAgcmVzdWx0MltpbmRleF0gPSBza2lwID8gdW5kZWZpbmVkJDEgOiBnZXQob2JqZWN0LCBwYXRoc1tpbmRleF0pO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VDbGFtcChudW1iZXIsIGxvd2VyLCB1cHBlcikge1xuICAgICAgICAgIHJldHVybiBudW1iZXIgPT09IG51bWJlciAmJiAodXBwZXIgIT09IHVuZGVmaW5lZCQxICYmIChudW1iZXIgPSBudW1iZXIgPD0gdXBwZXIgPyBudW1iZXIgOiB1cHBlciksIGxvd2VyICE9PSB1bmRlZmluZWQkMSAmJiAobnVtYmVyID0gbnVtYmVyID49IGxvd2VyID8gbnVtYmVyIDogbG93ZXIpKSwgbnVtYmVyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VDbG9uZSh2YWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwga2V5LCBvYmplY3QsIHN0YWNrKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIsIGlzRGVlcCA9IGJpdG1hc2sgJiBDTE9ORV9ERUVQX0ZMQUcsIGlzRmxhdCA9IGJpdG1hc2sgJiBDTE9ORV9GTEFUX0ZMQUcsIGlzRnVsbCA9IGJpdG1hc2sgJiBDTE9ORV9TWU1CT0xTX0ZMQUc7XG4gICAgICAgICAgaWYgKGN1c3RvbWl6ZXIgJiYgKHJlc3VsdDIgPSBvYmplY3QgPyBjdXN0b21pemVyKHZhbHVlLCBrZXksIG9iamVjdCwgc3RhY2spIDogY3VzdG9taXplcih2YWx1ZSkpLCByZXN1bHQyICE9PSB1bmRlZmluZWQkMSlcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICAgIGlmICghaXNPYmplY3QodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgIHZhciBpc0FyciA9IGlzQXJyYXkodmFsdWUpO1xuICAgICAgICAgIGlmIChpc0Fycikge1xuICAgICAgICAgICAgaWYgKHJlc3VsdDIgPSBpbml0Q2xvbmVBcnJheSh2YWx1ZSksICFpc0RlZXApXG4gICAgICAgICAgICAgIHJldHVybiBjb3B5QXJyYXkodmFsdWUsIHJlc3VsdDIpO1xuICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB2YXIgdGFnID0gZ2V0VGFnKHZhbHVlKSwgaXNGdW5jID0gdGFnID09IGZ1bmNUYWcgfHwgdGFnID09IGdlblRhZztcbiAgICAgICAgICAgIGlmIChpc0J1ZmZlcih2YWx1ZSkpXG4gICAgICAgICAgICAgIHJldHVybiBjbG9uZUJ1ZmZlcih2YWx1ZSwgaXNEZWVwKTtcbiAgICAgICAgICAgIGlmICh0YWcgPT0gb2JqZWN0VGFnIHx8IHRhZyA9PSBhcmdzVGFnIHx8IGlzRnVuYyAmJiAhb2JqZWN0KSB7XG4gICAgICAgICAgICAgIGlmIChyZXN1bHQyID0gaXNGbGF0IHx8IGlzRnVuYyA/IHt9IDogaW5pdENsb25lT2JqZWN0KHZhbHVlKSwgIWlzRGVlcClcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNGbGF0ID8gY29weVN5bWJvbHNJbih2YWx1ZSwgYmFzZUFzc2lnbkluKHJlc3VsdDIsIHZhbHVlKSkgOiBjb3B5U3ltYm9scyh2YWx1ZSwgYmFzZUFzc2lnbihyZXN1bHQyLCB2YWx1ZSkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgaWYgKCFjbG9uZWFibGVUYWdzW3RhZ10pXG4gICAgICAgICAgICAgICAgcmV0dXJuIG9iamVjdCA/IHZhbHVlIDoge307XG4gICAgICAgICAgICAgIHJlc3VsdDIgPSBpbml0Q2xvbmVCeVRhZyh2YWx1ZSwgdGFnLCBpc0RlZXApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2soKSk7XG4gICAgICAgICAgdmFyIHN0YWNrZWQgPSBzdGFjay5nZXQodmFsdWUpO1xuICAgICAgICAgIGlmIChzdGFja2VkKVxuICAgICAgICAgICAgcmV0dXJuIHN0YWNrZWQ7XG4gICAgICAgICAgc3RhY2suc2V0KHZhbHVlLCByZXN1bHQyKSwgaXNTZXQodmFsdWUpID8gdmFsdWUuZm9yRWFjaChmdW5jdGlvbihzdWJWYWx1ZSkge1xuICAgICAgICAgICAgcmVzdWx0Mi5hZGQoYmFzZUNsb25lKHN1YlZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdWJWYWx1ZSwgdmFsdWUsIHN0YWNrKSk7XG4gICAgICAgICAgfSkgOiBpc01hcCh2YWx1ZSkgJiYgdmFsdWUuZm9yRWFjaChmdW5jdGlvbihzdWJWYWx1ZSwga2V5Mikge1xuICAgICAgICAgICAgcmVzdWx0Mi5zZXQoa2V5MiwgYmFzZUNsb25lKHN1YlZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBrZXkyLCB2YWx1ZSwgc3RhY2spKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgICB2YXIga2V5c0Z1bmMgPSBpc0Z1bGwgPyBpc0ZsYXQgPyBnZXRBbGxLZXlzSW4gOiBnZXRBbGxLZXlzIDogaXNGbGF0ID8ga2V5c0luIDoga2V5cywgcHJvcHMgPSBpc0FyciA/IHVuZGVmaW5lZCQxIDoga2V5c0Z1bmModmFsdWUpO1xuICAgICAgICAgIHJldHVybiBhcnJheUVhY2gocHJvcHMgfHwgdmFsdWUsIGZ1bmN0aW9uKHN1YlZhbHVlLCBrZXkyKSB7XG4gICAgICAgICAgICBwcm9wcyAmJiAoa2V5MiA9IHN1YlZhbHVlLCBzdWJWYWx1ZSA9IHZhbHVlW2tleTJdKSwgYXNzaWduVmFsdWUocmVzdWx0Miwga2V5MiwgYmFzZUNsb25lKHN1YlZhbHVlLCBiaXRtYXNrLCBjdXN0b21pemVyLCBrZXkyLCB2YWx1ZSwgc3RhY2spKTtcbiAgICAgICAgICB9KSwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlQ29uZm9ybXMoc291cmNlKSB7XG4gICAgICAgICAgdmFyIHByb3BzID0ga2V5cyhzb3VyY2UpO1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlQ29uZm9ybXNUbyhvYmplY3QsIHNvdXJjZSwgcHJvcHMpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUNvbmZvcm1zVG8ob2JqZWN0LCBzb3VyY2UsIHByb3BzKSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcbiAgICAgICAgICBpZiAob2JqZWN0ID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gIWxlbmd0aDtcbiAgICAgICAgICBmb3IgKG9iamVjdCA9IE9iamVjdDIob2JqZWN0KTsgbGVuZ3RoLS07ICkge1xuICAgICAgICAgICAgdmFyIGtleSA9IHByb3BzW2xlbmd0aF0sIHByZWRpY2F0ZSA9IHNvdXJjZVtrZXldLCB2YWx1ZSA9IG9iamVjdFtrZXldO1xuICAgICAgICAgICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQkMSAmJiAhKGtleSBpbiBvYmplY3QpIHx8ICFwcmVkaWNhdGUodmFsdWUpKVxuICAgICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAhMDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlRGVsYXkoZnVuYywgd2FpdCwgYXJncykge1xuICAgICAgICAgIGlmICh0eXBlb2YgZnVuYyAhPSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBmdW5jLmFwcGx5KHVuZGVmaW5lZCQxLCBhcmdzKTtcbiAgICAgICAgICB9LCB3YWl0KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlRGlmZmVyZW5jZShhcnJheSwgdmFsdWVzMiwgaXRlcmF0ZWUyLCBjb21wYXJhdG9yKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIGluY2x1ZGVzMiA9IGFycmF5SW5jbHVkZXMsIGlzQ29tbW9uID0gITAsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgcmVzdWx0MiA9IFtdLCB2YWx1ZXNMZW5ndGggPSB2YWx1ZXMyLmxlbmd0aDtcbiAgICAgICAgICBpZiAoIWxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICAgIGl0ZXJhdGVlMiAmJiAodmFsdWVzMiA9IGFycmF5TWFwKHZhbHVlczIsIGJhc2VVbmFyeShpdGVyYXRlZTIpKSksIGNvbXBhcmF0b3IgPyAoaW5jbHVkZXMyID0gYXJyYXlJbmNsdWRlc1dpdGgsIGlzQ29tbW9uID0gITEpIDogdmFsdWVzMi5sZW5ndGggPj0gTEFSR0VfQVJSQVlfU0laRSAmJiAoaW5jbHVkZXMyID0gY2FjaGVIYXMsIGlzQ29tbW9uID0gITEsIHZhbHVlczIgPSBuZXcgU2V0Q2FjaGUodmFsdWVzMikpO1xuICAgICAgICAgIG91dGVyOlxuICAgICAgICAgICAgZm9yICg7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF0sIGNvbXB1dGVkID0gaXRlcmF0ZWUyID09IG51bGwgPyB2YWx1ZSA6IGl0ZXJhdGVlMih2YWx1ZSk7XG4gICAgICAgICAgICAgIGlmICh2YWx1ZSA9IGNvbXBhcmF0b3IgfHwgdmFsdWUgIT09IDAgPyB2YWx1ZSA6IDAsIGlzQ29tbW9uICYmIGNvbXB1dGVkID09PSBjb21wdXRlZCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIHZhbHVlc0luZGV4ID0gdmFsdWVzTGVuZ3RoOyB2YWx1ZXNJbmRleC0tOyApXG4gICAgICAgICAgICAgICAgICBpZiAodmFsdWVzMlt2YWx1ZXNJbmRleF0gPT09IGNvbXB1dGVkKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZSBvdXRlcjtcbiAgICAgICAgICAgICAgICByZXN1bHQyLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgICB9IGVsc2UgaW5jbHVkZXMyKHZhbHVlczIsIGNvbXB1dGVkLCBjb21wYXJhdG9yKSB8fCByZXN1bHQyLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIHZhciBiYXNlRWFjaCA9IGNyZWF0ZUJhc2VFYWNoKGJhc2VGb3JPd24pLCBiYXNlRWFjaFJpZ2h0ID0gY3JlYXRlQmFzZUVhY2goYmFzZUZvck93blJpZ2h0LCAhMCk7XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VFdmVyeShjb2xsZWN0aW9uLCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9ICEwO1xuICAgICAgICAgIHJldHVybiBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24yKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0MiA9ICEhcHJlZGljYXRlKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbjIpLCByZXN1bHQyO1xuICAgICAgICAgIH0pLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VFeHRyZW11bShhcnJheSwgaXRlcmF0ZWUyLCBjb21wYXJhdG9yKSB7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gYXJyYXkubGVuZ3RoOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XSwgY3VycmVudCA9IGl0ZXJhdGVlMih2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoY3VycmVudCAhPSBudWxsICYmIChjb21wdXRlZCA9PT0gdW5kZWZpbmVkJDEgPyBjdXJyZW50ID09PSBjdXJyZW50ICYmICFpc1N5bWJvbChjdXJyZW50KSA6IGNvbXBhcmF0b3IoY3VycmVudCwgY29tcHV0ZWQpKSlcbiAgICAgICAgICAgICAgdmFyIGNvbXB1dGVkID0gY3VycmVudCwgcmVzdWx0MiA9IHZhbHVlO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlRmlsbChhcnJheSwgdmFsdWUsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIGZvciAoc3RhcnQgPSB0b0ludGVnZXIoc3RhcnQpLCBzdGFydCA8IDAgJiYgKHN0YXJ0ID0gLXN0YXJ0ID4gbGVuZ3RoID8gMCA6IGxlbmd0aCArIHN0YXJ0KSwgZW5kID0gZW5kID09PSB1bmRlZmluZWQkMSB8fCBlbmQgPiBsZW5ndGggPyBsZW5ndGggOiB0b0ludGVnZXIoZW5kKSwgZW5kIDwgMCAmJiAoZW5kICs9IGxlbmd0aCksIGVuZCA9IHN0YXJ0ID4gZW5kID8gMCA6IHRvTGVuZ3RoKGVuZCk7IHN0YXJ0IDwgZW5kOyApXG4gICAgICAgICAgICBhcnJheVtzdGFydCsrXSA9IHZhbHVlO1xuICAgICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlRmlsdGVyKGNvbGxlY3Rpb24sIHByZWRpY2F0ZSkge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gW107XG4gICAgICAgICAgcmV0dXJuIGJhc2VFYWNoKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgY29sbGVjdGlvbjIpIHtcbiAgICAgICAgICAgIHByZWRpY2F0ZSh2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24yKSAmJiByZXN1bHQyLnB1c2godmFsdWUpO1xuICAgICAgICAgIH0pLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VGbGF0dGVuKGFycmF5LCBkZXB0aCwgcHJlZGljYXRlLCBpc1N0cmljdCwgcmVzdWx0Mikge1xuICAgICAgICAgIHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgZm9yIChwcmVkaWNhdGUgfHwgKHByZWRpY2F0ZSA9IGlzRmxhdHRlbmFibGUpLCByZXN1bHQyIHx8IChyZXN1bHQyID0gW10pOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XTtcbiAgICAgICAgICAgIGRlcHRoID4gMCAmJiBwcmVkaWNhdGUodmFsdWUpID8gZGVwdGggPiAxID8gYmFzZUZsYXR0ZW4odmFsdWUsIGRlcHRoIC0gMSwgcHJlZGljYXRlLCBpc1N0cmljdCwgcmVzdWx0MikgOiBhcnJheVB1c2gocmVzdWx0MiwgdmFsdWUpIDogaXNTdHJpY3QgfHwgKHJlc3VsdDJbcmVzdWx0Mi5sZW5ndGhdID0gdmFsdWUpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYmFzZUZvciA9IGNyZWF0ZUJhc2VGb3IoKSwgYmFzZUZvclJpZ2h0ID0gY3JlYXRlQmFzZUZvcighMCk7XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VGb3JPd24ob2JqZWN0LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ICYmIGJhc2VGb3Iob2JqZWN0LCBpdGVyYXRlZTIsIGtleXMpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VGb3JPd25SaWdodChvYmplY3QsIGl0ZXJhdGVlMikge1xuICAgICAgICAgIHJldHVybiBvYmplY3QgJiYgYmFzZUZvclJpZ2h0KG9iamVjdCwgaXRlcmF0ZWUyLCBrZXlzKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlRnVuY3Rpb25zKG9iamVjdCwgcHJvcHMpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXlGaWx0ZXIocHJvcHMsIGZ1bmN0aW9uKGtleSkge1xuICAgICAgICAgICAgcmV0dXJuIGlzRnVuY3Rpb24ob2JqZWN0W2tleV0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VHZXQob2JqZWN0LCBwYXRoKSB7XG4gICAgICAgICAgcGF0aCA9IGNhc3RQYXRoKHBhdGgsIG9iamVjdCk7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwLCBsZW5ndGggPSBwYXRoLmxlbmd0aDsgb2JqZWN0ICE9IG51bGwgJiYgaW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICAgIG9iamVjdCA9IG9iamVjdFt0b0tleShwYXRoW2luZGV4KytdKV07XG4gICAgICAgICAgcmV0dXJuIGluZGV4ICYmIGluZGV4ID09IGxlbmd0aCA/IG9iamVjdCA6IHVuZGVmaW5lZCQxO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VHZXRBbGxLZXlzKG9iamVjdCwga2V5c0Z1bmMsIHN5bWJvbHNGdW5jKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBrZXlzRnVuYyhvYmplY3QpO1xuICAgICAgICAgIHJldHVybiBpc0FycmF5KG9iamVjdCkgPyByZXN1bHQyIDogYXJyYXlQdXNoKHJlc3VsdDIsIHN5bWJvbHNGdW5jKG9iamVjdCkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VHZXRUYWcodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCA/IHZhbHVlID09PSB1bmRlZmluZWQkMSA/IHVuZGVmaW5lZFRhZyA6IG51bGxUYWcgOiBzeW1Ub1N0cmluZ1RhZyAmJiBzeW1Ub1N0cmluZ1RhZyBpbiBPYmplY3QyKHZhbHVlKSA/IGdldFJhd1RhZyh2YWx1ZSkgOiBvYmplY3RUb1N0cmluZyh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUd0KHZhbHVlLCBvdGhlcikge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA+IG90aGVyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VIYXMob2JqZWN0LCBrZXkpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ICE9IG51bGwgJiYgaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUhhc0luKG9iamVjdCwga2V5KSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCAhPSBudWxsICYmIGtleSBpbiBPYmplY3QyKG9iamVjdCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUluUmFuZ2UobnVtYmVyLCBzdGFydCwgZW5kKSB7XG4gICAgICAgICAgcmV0dXJuIG51bWJlciA+PSBuYXRpdmVNaW4oc3RhcnQsIGVuZCkgJiYgbnVtYmVyIDwgbmF0aXZlTWF4KHN0YXJ0LCBlbmQpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VJbnRlcnNlY3Rpb24oYXJyYXlzLCBpdGVyYXRlZTIsIGNvbXBhcmF0b3IpIHtcbiAgICAgICAgICBmb3IgKHZhciBpbmNsdWRlczIgPSBjb21wYXJhdG9yID8gYXJyYXlJbmNsdWRlc1dpdGggOiBhcnJheUluY2x1ZGVzLCBsZW5ndGggPSBhcnJheXNbMF0ubGVuZ3RoLCBvdGhMZW5ndGggPSBhcnJheXMubGVuZ3RoLCBvdGhJbmRleCA9IG90aExlbmd0aCwgY2FjaGVzID0gQXJyYXkyKG90aExlbmd0aCksIG1heExlbmd0aCA9IDEgLyAwLCByZXN1bHQyID0gW107IG90aEluZGV4LS07ICkge1xuICAgICAgICAgICAgdmFyIGFycmF5ID0gYXJyYXlzW290aEluZGV4XTtcbiAgICAgICAgICAgIG90aEluZGV4ICYmIGl0ZXJhdGVlMiAmJiAoYXJyYXkgPSBhcnJheU1hcChhcnJheSwgYmFzZVVuYXJ5KGl0ZXJhdGVlMikpKSwgbWF4TGVuZ3RoID0gbmF0aXZlTWluKGFycmF5Lmxlbmd0aCwgbWF4TGVuZ3RoKSwgY2FjaGVzW290aEluZGV4XSA9ICFjb21wYXJhdG9yICYmIChpdGVyYXRlZTIgfHwgbGVuZ3RoID49IDEyMCAmJiBhcnJheS5sZW5ndGggPj0gMTIwKSA/IG5ldyBTZXRDYWNoZShvdGhJbmRleCAmJiBhcnJheSkgOiB1bmRlZmluZWQkMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYXJyYXkgPSBhcnJheXNbMF07XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIHNlZW4gPSBjYWNoZXNbMF07XG4gICAgICAgICAgb3V0ZXI6XG4gICAgICAgICAgICBmb3IgKDsgKytpbmRleCA8IGxlbmd0aCAmJiByZXN1bHQyLmxlbmd0aCA8IG1heExlbmd0aDsgKSB7XG4gICAgICAgICAgICAgIHZhciB2YWx1ZSA9IGFycmF5W2luZGV4XSwgY29tcHV0ZWQgPSBpdGVyYXRlZTIgPyBpdGVyYXRlZTIodmFsdWUpIDogdmFsdWU7XG4gICAgICAgICAgICAgIGlmICh2YWx1ZSA9IGNvbXBhcmF0b3IgfHwgdmFsdWUgIT09IDAgPyB2YWx1ZSA6IDAsICEoc2VlbiA/IGNhY2hlSGFzKHNlZW4sIGNvbXB1dGVkKSA6IGluY2x1ZGVzMihyZXN1bHQyLCBjb21wdXRlZCwgY29tcGFyYXRvcikpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChvdGhJbmRleCA9IG90aExlbmd0aDsgLS1vdGhJbmRleDsgKSB7XG4gICAgICAgICAgICAgICAgICB2YXIgY2FjaGUgPSBjYWNoZXNbb3RoSW5kZXhdO1xuICAgICAgICAgICAgICAgICAgaWYgKCEoY2FjaGUgPyBjYWNoZUhhcyhjYWNoZSwgY29tcHV0ZWQpIDogaW5jbHVkZXMyKGFycmF5c1tvdGhJbmRleF0sIGNvbXB1dGVkLCBjb21wYXJhdG9yKSkpXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIG91dGVyO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWVuICYmIHNlZW4ucHVzaChjb21wdXRlZCksIHJlc3VsdDIucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlSW52ZXJ0ZXIob2JqZWN0LCBzZXR0ZXIsIGl0ZXJhdGVlMiwgYWNjdW11bGF0b3IpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUZvck93bihvYmplY3QsIGZ1bmN0aW9uKHZhbHVlLCBrZXksIG9iamVjdDIpIHtcbiAgICAgICAgICAgIHNldHRlcihhY2N1bXVsYXRvciwgaXRlcmF0ZWUyKHZhbHVlKSwga2V5LCBvYmplY3QyKTtcbiAgICAgICAgICB9KSwgYWNjdW11bGF0b3I7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUludm9rZShvYmplY3QsIHBhdGgsIGFyZ3MpIHtcbiAgICAgICAgICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KSwgb2JqZWN0ID0gcGFyZW50KG9iamVjdCwgcGF0aCk7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBvYmplY3QgPT0gbnVsbCA/IG9iamVjdCA6IG9iamVjdFt0b0tleShsYXN0KHBhdGgpKV07XG4gICAgICAgICAgcmV0dXJuIGZ1bmMgPT0gbnVsbCA/IHVuZGVmaW5lZCQxIDogYXBwbHkoZnVuYywgb2JqZWN0LCBhcmdzKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlSXNBcmd1bWVudHModmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBhcmdzVGFnO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VJc0FycmF5QnVmZmVyKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gYXJyYXlCdWZmZXJUYWc7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUlzRGF0ZSh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IGRhdGVUYWc7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUlzRXF1YWwodmFsdWUsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBzdGFjaykge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gb3RoZXIgPyAhMCA6IHZhbHVlID09IG51bGwgfHwgb3RoZXIgPT0gbnVsbCB8fCAhaXNPYmplY3RMaWtlKHZhbHVlKSAmJiAhaXNPYmplY3RMaWtlKG90aGVyKSA/IHZhbHVlICE9PSB2YWx1ZSAmJiBvdGhlciAhPT0gb3RoZXIgOiBiYXNlSXNFcXVhbERlZXAodmFsdWUsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBiYXNlSXNFcXVhbCwgc3RhY2spO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VJc0VxdWFsRGVlcChvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSB7XG4gICAgICAgICAgdmFyIG9iaklzQXJyID0gaXNBcnJheShvYmplY3QpLCBvdGhJc0FyciA9IGlzQXJyYXkob3RoZXIpLCBvYmpUYWcgPSBvYmpJc0FyciA/IGFycmF5VGFnIDogZ2V0VGFnKG9iamVjdCksIG90aFRhZyA9IG90aElzQXJyID8gYXJyYXlUYWcgOiBnZXRUYWcob3RoZXIpO1xuICAgICAgICAgIG9ialRhZyA9IG9ialRhZyA9PSBhcmdzVGFnID8gb2JqZWN0VGFnIDogb2JqVGFnLCBvdGhUYWcgPSBvdGhUYWcgPT0gYXJnc1RhZyA/IG9iamVjdFRhZyA6IG90aFRhZztcbiAgICAgICAgICB2YXIgb2JqSXNPYmogPSBvYmpUYWcgPT0gb2JqZWN0VGFnLCBvdGhJc09iaiA9IG90aFRhZyA9PSBvYmplY3RUYWcsIGlzU2FtZVRhZyA9IG9ialRhZyA9PSBvdGhUYWc7XG4gICAgICAgICAgaWYgKGlzU2FtZVRhZyAmJiBpc0J1ZmZlcihvYmplY3QpKSB7XG4gICAgICAgICAgICBpZiAoIWlzQnVmZmVyKG90aGVyKSlcbiAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgb2JqSXNBcnIgPSAhMCwgb2JqSXNPYmogPSAhMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGlzU2FtZVRhZyAmJiAhb2JqSXNPYmopXG4gICAgICAgICAgICByZXR1cm4gc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKCkpLCBvYmpJc0FyciB8fCBpc1R5cGVkQXJyYXkob2JqZWN0KSA/IGVxdWFsQXJyYXlzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIDogZXF1YWxCeVRhZyhvYmplY3QsIG90aGVyLCBvYmpUYWcsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spO1xuICAgICAgICAgIGlmICghKGJpdG1hc2sgJiBDT01QQVJFX1BBUlRJQUxfRkxBRykpIHtcbiAgICAgICAgICAgIHZhciBvYmpJc1dyYXBwZWQgPSBvYmpJc09iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgXCJfX3dyYXBwZWRfX1wiKSwgb3RoSXNXcmFwcGVkID0gb3RoSXNPYmogJiYgaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwgXCJfX3dyYXBwZWRfX1wiKTtcbiAgICAgICAgICAgIGlmIChvYmpJc1dyYXBwZWQgfHwgb3RoSXNXcmFwcGVkKSB7XG4gICAgICAgICAgICAgIHZhciBvYmpVbndyYXBwZWQgPSBvYmpJc1dyYXBwZWQgPyBvYmplY3QudmFsdWUoKSA6IG9iamVjdCwgb3RoVW53cmFwcGVkID0gb3RoSXNXcmFwcGVkID8gb3RoZXIudmFsdWUoKSA6IG90aGVyO1xuICAgICAgICAgICAgICByZXR1cm4gc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKCkpLCBlcXVhbEZ1bmMob2JqVW53cmFwcGVkLCBvdGhVbndyYXBwZWQsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIGlzU2FtZVRhZyA/IChzdGFjayB8fCAoc3RhY2sgPSBuZXcgU3RhY2soKSksIGVxdWFsT2JqZWN0cyhvYmplY3QsIG90aGVyLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKSkgOiAhMTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlSXNNYXAodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBnZXRUYWcodmFsdWUpID09IG1hcFRhZztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlSXNNYXRjaChvYmplY3QsIHNvdXJjZSwgbWF0Y2hEYXRhLCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gbWF0Y2hEYXRhLmxlbmd0aCwgbGVuZ3RoID0gaW5kZXgsIG5vQ3VzdG9taXplciA9ICFjdXN0b21pemVyO1xuICAgICAgICAgIGlmIChvYmplY3QgPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybiAhbGVuZ3RoO1xuICAgICAgICAgIGZvciAob2JqZWN0ID0gT2JqZWN0MihvYmplY3QpOyBpbmRleC0tOyApIHtcbiAgICAgICAgICAgIHZhciBkYXRhID0gbWF0Y2hEYXRhW2luZGV4XTtcbiAgICAgICAgICAgIGlmIChub0N1c3RvbWl6ZXIgJiYgZGF0YVsyXSA/IGRhdGFbMV0gIT09IG9iamVjdFtkYXRhWzBdXSA6ICEoZGF0YVswXSBpbiBvYmplY3QpKVxuICAgICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZvciAoOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICAgIGRhdGEgPSBtYXRjaERhdGFbaW5kZXhdO1xuICAgICAgICAgICAgdmFyIGtleSA9IGRhdGFbMF0sIG9ialZhbHVlID0gb2JqZWN0W2tleV0sIHNyY1ZhbHVlID0gZGF0YVsxXTtcbiAgICAgICAgICAgIGlmIChub0N1c3RvbWl6ZXIgJiYgZGF0YVsyXSkge1xuICAgICAgICAgICAgICBpZiAob2JqVmFsdWUgPT09IHVuZGVmaW5lZCQxICYmICEoa2V5IGluIG9iamVjdCkpXG4gICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdmFyIHN0YWNrID0gbmV3IFN0YWNrKCk7XG4gICAgICAgICAgICAgIGlmIChjdXN0b21pemVyKVxuICAgICAgICAgICAgICAgIHZhciByZXN1bHQyID0gY3VzdG9taXplcihvYmpWYWx1ZSwgc3JjVmFsdWUsIGtleSwgb2JqZWN0LCBzb3VyY2UsIHN0YWNrKTtcbiAgICAgICAgICAgICAgaWYgKCEocmVzdWx0MiA9PT0gdW5kZWZpbmVkJDEgPyBiYXNlSXNFcXVhbChzcmNWYWx1ZSwgb2JqVmFsdWUsIENPTVBBUkVfUEFSVElBTF9GTEFHIHwgQ09NUEFSRV9VTk9SREVSRURfRkxBRywgY3VzdG9taXplciwgc3RhY2spIDogcmVzdWx0MikpXG4gICAgICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gITA7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUlzTmF0aXZlKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKCFpc09iamVjdCh2YWx1ZSkgfHwgaXNNYXNrZWQodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgIHZhciBwYXR0ZXJuID0gaXNGdW5jdGlvbih2YWx1ZSkgPyByZUlzTmF0aXZlIDogcmVJc0hvc3RDdG9yO1xuICAgICAgICAgIHJldHVybiBwYXR0ZXJuLnRlc3QodG9Tb3VyY2UodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlSXNSZWdFeHAodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSByZWdleHBUYWc7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUlzU2V0KHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgZ2V0VGFnKHZhbHVlKSA9PSBzZXRUYWc7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUlzVHlwZWRBcnJheSh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGlzTGVuZ3RoKHZhbHVlLmxlbmd0aCkgJiYgISF0eXBlZEFycmF5VGFnc1tiYXNlR2V0VGFnKHZhbHVlKV07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUl0ZXJhdGVlKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSBcImZ1bmN0aW9uXCIgPyB2YWx1ZSA6IHZhbHVlID09IG51bGwgPyBpZGVudGl0eSA6IHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiID8gaXNBcnJheSh2YWx1ZSkgPyBiYXNlTWF0Y2hlc1Byb3BlcnR5KHZhbHVlWzBdLCB2YWx1ZVsxXSkgOiBiYXNlTWF0Y2hlcyh2YWx1ZSkgOiBwcm9wZXJ0eSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUtleXMob2JqZWN0KSB7XG4gICAgICAgICAgaWYgKCFpc1Byb3RvdHlwZShvYmplY3QpKVxuICAgICAgICAgICAgcmV0dXJuIG5hdGl2ZUtleXMob2JqZWN0KTtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IFtdO1xuICAgICAgICAgIGZvciAodmFyIGtleSBpbiBPYmplY3QyKG9iamVjdCkpXG4gICAgICAgICAgICBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSAmJiBrZXkgIT0gXCJjb25zdHJ1Y3RvclwiICYmIHJlc3VsdDIucHVzaChrZXkpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VLZXlzSW4ob2JqZWN0KSB7XG4gICAgICAgICAgaWYgKCFpc09iamVjdChvYmplY3QpKVxuICAgICAgICAgICAgcmV0dXJuIG5hdGl2ZUtleXNJbihvYmplY3QpO1xuICAgICAgICAgIHZhciBpc1Byb3RvID0gaXNQcm90b3R5cGUob2JqZWN0KSwgcmVzdWx0MiA9IFtdO1xuICAgICAgICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpXG4gICAgICAgICAgICBrZXkgPT0gXCJjb25zdHJ1Y3RvclwiICYmIChpc1Byb3RvIHx8ICFoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwga2V5KSkgfHwgcmVzdWx0Mi5wdXNoKGtleSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZUx0KHZhbHVlLCBvdGhlcikge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA8IG90aGVyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VNYXAoY29sbGVjdGlvbiwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIHJlc3VsdDIgPSBpc0FycmF5TGlrZShjb2xsZWN0aW9uKSA/IEFycmF5Mihjb2xsZWN0aW9uLmxlbmd0aCkgOiBbXTtcbiAgICAgICAgICByZXR1cm4gYmFzZUVhY2goY29sbGVjdGlvbiwgZnVuY3Rpb24odmFsdWUsIGtleSwgY29sbGVjdGlvbjIpIHtcbiAgICAgICAgICAgIHJlc3VsdDJbKytpbmRleF0gPSBpdGVyYXRlZTIodmFsdWUsIGtleSwgY29sbGVjdGlvbjIpO1xuICAgICAgICAgIH0pLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VNYXRjaGVzKHNvdXJjZSkge1xuICAgICAgICAgIHZhciBtYXRjaERhdGEgPSBnZXRNYXRjaERhdGEoc291cmNlKTtcbiAgICAgICAgICByZXR1cm4gbWF0Y2hEYXRhLmxlbmd0aCA9PSAxICYmIG1hdGNoRGF0YVswXVsyXSA/IG1hdGNoZXNTdHJpY3RDb21wYXJhYmxlKG1hdGNoRGF0YVswXVswXSwgbWF0Y2hEYXRhWzBdWzFdKSA6IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdCA9PT0gc291cmNlIHx8IGJhc2VJc01hdGNoKG9iamVjdCwgc291cmNlLCBtYXRjaERhdGEpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZU1hdGNoZXNQcm9wZXJ0eShwYXRoLCBzcmNWYWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc0tleShwYXRoKSAmJiBpc1N0cmljdENvbXBhcmFibGUoc3JjVmFsdWUpID8gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUodG9LZXkocGF0aCksIHNyY1ZhbHVlKSA6IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgICAgdmFyIG9ialZhbHVlID0gZ2V0KG9iamVjdCwgcGF0aCk7XG4gICAgICAgICAgICByZXR1cm4gb2JqVmFsdWUgPT09IHVuZGVmaW5lZCQxICYmIG9ialZhbHVlID09PSBzcmNWYWx1ZSA/IGhhc0luKG9iamVjdCwgcGF0aCkgOiBiYXNlSXNFcXVhbChzcmNWYWx1ZSwgb2JqVmFsdWUsIENPTVBBUkVfUEFSVElBTF9GTEFHIHwgQ09NUEFSRV9VTk9SREVSRURfRkxBRyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlTWVyZ2Uob2JqZWN0LCBzb3VyY2UsIHNyY0luZGV4LCBjdXN0b21pemVyLCBzdGFjaykge1xuICAgICAgICAgIG9iamVjdCAhPT0gc291cmNlICYmIGJhc2VGb3Ioc291cmNlLCBmdW5jdGlvbihzcmNWYWx1ZSwga2V5KSB7XG4gICAgICAgICAgICBpZiAoc3RhY2sgfHwgKHN0YWNrID0gbmV3IFN0YWNrKCkpLCBpc09iamVjdChzcmNWYWx1ZSkpXG4gICAgICAgICAgICAgIGJhc2VNZXJnZURlZXAob2JqZWN0LCBzb3VyY2UsIGtleSwgc3JjSW5kZXgsIGJhc2VNZXJnZSwgY3VzdG9taXplciwgc3RhY2spO1xuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgIHZhciBuZXdWYWx1ZSA9IGN1c3RvbWl6ZXIgPyBjdXN0b21pemVyKHNhZmVHZXQob2JqZWN0LCBrZXkpLCBzcmNWYWx1ZSwga2V5ICsgXCJcIiwgb2JqZWN0LCBzb3VyY2UsIHN0YWNrKSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICAgICAgICBuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkJDEgJiYgKG5ld1ZhbHVlID0gc3JjVmFsdWUpLCBhc3NpZ25NZXJnZVZhbHVlKG9iamVjdCwga2V5LCBuZXdWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSwga2V5c0luKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlTWVyZ2VEZWVwKG9iamVjdCwgc291cmNlLCBrZXksIHNyY0luZGV4LCBtZXJnZUZ1bmMsIGN1c3RvbWl6ZXIsIHN0YWNrKSB7XG4gICAgICAgICAgdmFyIG9ialZhbHVlID0gc2FmZUdldChvYmplY3QsIGtleSksIHNyY1ZhbHVlID0gc2FmZUdldChzb3VyY2UsIGtleSksIHN0YWNrZWQgPSBzdGFjay5nZXQoc3JjVmFsdWUpO1xuICAgICAgICAgIGlmIChzdGFja2VkKSB7XG4gICAgICAgICAgICBhc3NpZ25NZXJnZVZhbHVlKG9iamVjdCwga2V5LCBzdGFja2VkKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIG5ld1ZhbHVlID0gY3VzdG9taXplciA/IGN1c3RvbWl6ZXIob2JqVmFsdWUsIHNyY1ZhbHVlLCBrZXkgKyBcIlwiLCBvYmplY3QsIHNvdXJjZSwgc3RhY2spIDogdW5kZWZpbmVkJDEsIGlzQ29tbW9uID0gbmV3VmFsdWUgPT09IHVuZGVmaW5lZCQxO1xuICAgICAgICAgIGlmIChpc0NvbW1vbikge1xuICAgICAgICAgICAgdmFyIGlzQXJyID0gaXNBcnJheShzcmNWYWx1ZSksIGlzQnVmZiA9ICFpc0FyciAmJiBpc0J1ZmZlcihzcmNWYWx1ZSksIGlzVHlwZWQgPSAhaXNBcnIgJiYgIWlzQnVmZiAmJiBpc1R5cGVkQXJyYXkoc3JjVmFsdWUpO1xuICAgICAgICAgICAgbmV3VmFsdWUgPSBzcmNWYWx1ZSwgaXNBcnIgfHwgaXNCdWZmIHx8IGlzVHlwZWQgPyBpc0FycmF5KG9ialZhbHVlKSA/IG5ld1ZhbHVlID0gb2JqVmFsdWUgOiBpc0FycmF5TGlrZU9iamVjdChvYmpWYWx1ZSkgPyBuZXdWYWx1ZSA9IGNvcHlBcnJheShvYmpWYWx1ZSkgOiBpc0J1ZmYgPyAoaXNDb21tb24gPSAhMSwgbmV3VmFsdWUgPSBjbG9uZUJ1ZmZlcihzcmNWYWx1ZSwgITApKSA6IGlzVHlwZWQgPyAoaXNDb21tb24gPSAhMSwgbmV3VmFsdWUgPSBjbG9uZVR5cGVkQXJyYXkoc3JjVmFsdWUsICEwKSkgOiBuZXdWYWx1ZSA9IFtdIDogaXNQbGFpbk9iamVjdChzcmNWYWx1ZSkgfHwgaXNBcmd1bWVudHMoc3JjVmFsdWUpID8gKG5ld1ZhbHVlID0gb2JqVmFsdWUsIGlzQXJndW1lbnRzKG9ialZhbHVlKSA/IG5ld1ZhbHVlID0gdG9QbGFpbk9iamVjdChvYmpWYWx1ZSkgOiAoIWlzT2JqZWN0KG9ialZhbHVlKSB8fCBpc0Z1bmN0aW9uKG9ialZhbHVlKSkgJiYgKG5ld1ZhbHVlID0gaW5pdENsb25lT2JqZWN0KHNyY1ZhbHVlKSkpIDogaXNDb21tb24gPSAhMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaXNDb21tb24gJiYgKHN0YWNrLnNldChzcmNWYWx1ZSwgbmV3VmFsdWUpLCBtZXJnZUZ1bmMobmV3VmFsdWUsIHNyY1ZhbHVlLCBzcmNJbmRleCwgY3VzdG9taXplciwgc3RhY2spLCBzdGFjay5kZWxldGUoc3JjVmFsdWUpKSwgYXNzaWduTWVyZ2VWYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VOdGgoYXJyYXksIG4pIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIGlmIChsZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gbiArPSBuIDwgMCA/IGxlbmd0aCA6IDAsIGlzSW5kZXgobiwgbGVuZ3RoKSA/IGFycmF5W25dIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZU9yZGVyQnkoY29sbGVjdGlvbiwgaXRlcmF0ZWVzLCBvcmRlcnMpIHtcbiAgICAgICAgICBpdGVyYXRlZXMubGVuZ3RoID8gaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBmdW5jdGlvbihpdGVyYXRlZTIpIHtcbiAgICAgICAgICAgIHJldHVybiBpc0FycmF5KGl0ZXJhdGVlMikgPyBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgICAgICByZXR1cm4gYmFzZUdldCh2YWx1ZSwgaXRlcmF0ZWUyLmxlbmd0aCA9PT0gMSA/IGl0ZXJhdGVlMlswXSA6IGl0ZXJhdGVlMik7XG4gICAgICAgICAgICB9IDogaXRlcmF0ZWUyO1xuICAgICAgICAgIH0pIDogaXRlcmF0ZWVzID0gW2lkZW50aXR5XTtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMTtcbiAgICAgICAgICBpdGVyYXRlZXMgPSBhcnJheU1hcChpdGVyYXRlZXMsIGJhc2VVbmFyeShnZXRJdGVyYXRlZSgpKSk7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBiYXNlTWFwKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlLCBrZXksIGNvbGxlY3Rpb24yKSB7XG4gICAgICAgICAgICB2YXIgY3JpdGVyaWEgPSBhcnJheU1hcChpdGVyYXRlZXMsIGZ1bmN0aW9uKGl0ZXJhdGVlMikge1xuICAgICAgICAgICAgICByZXR1cm4gaXRlcmF0ZWUyKHZhbHVlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIHsgY3JpdGVyaWEsIGluZGV4OiArK2luZGV4LCB2YWx1ZSB9O1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBiYXNlU29ydEJ5KHJlc3VsdDIsIGZ1bmN0aW9uKG9iamVjdCwgb3RoZXIpIHtcbiAgICAgICAgICAgIHJldHVybiBjb21wYXJlTXVsdGlwbGUob2JqZWN0LCBvdGhlciwgb3JkZXJzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlUGljayhvYmplY3QsIHBhdGhzKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VQaWNrQnkob2JqZWN0LCBwYXRocywgZnVuY3Rpb24odmFsdWUsIHBhdGgpIHtcbiAgICAgICAgICAgIHJldHVybiBoYXNJbihvYmplY3QsIHBhdGgpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VQaWNrQnkob2JqZWN0LCBwYXRocywgcHJlZGljYXRlKSB7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gcGF0aHMubGVuZ3RoLCByZXN1bHQyID0ge307ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIHBhdGggPSBwYXRoc1tpbmRleF0sIHZhbHVlID0gYmFzZUdldChvYmplY3QsIHBhdGgpO1xuICAgICAgICAgICAgcHJlZGljYXRlKHZhbHVlLCBwYXRoKSAmJiBiYXNlU2V0KHJlc3VsdDIsIGNhc3RQYXRoKHBhdGgsIG9iamVjdCksIHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVByb3BlcnR5RGVlcChwYXRoKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgICAgcmV0dXJuIGJhc2VHZXQob2JqZWN0LCBwYXRoKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VQdWxsQWxsKGFycmF5LCB2YWx1ZXMyLCBpdGVyYXRlZTIsIGNvbXBhcmF0b3IpIHtcbiAgICAgICAgICB2YXIgaW5kZXhPZjIgPSBjb21wYXJhdG9yID8gYmFzZUluZGV4T2ZXaXRoIDogYmFzZUluZGV4T2YsIGluZGV4ID0gLTEsIGxlbmd0aCA9IHZhbHVlczIubGVuZ3RoLCBzZWVuID0gYXJyYXk7XG4gICAgICAgICAgZm9yIChhcnJheSA9PT0gdmFsdWVzMiAmJiAodmFsdWVzMiA9IGNvcHlBcnJheSh2YWx1ZXMyKSksIGl0ZXJhdGVlMiAmJiAoc2VlbiA9IGFycmF5TWFwKGFycmF5LCBiYXNlVW5hcnkoaXRlcmF0ZWUyKSkpOyArK2luZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgICBmb3IgKHZhciBmcm9tSW5kZXggPSAwLCB2YWx1ZSA9IHZhbHVlczJbaW5kZXhdLCBjb21wdXRlZCA9IGl0ZXJhdGVlMiA/IGl0ZXJhdGVlMih2YWx1ZSkgOiB2YWx1ZTsgKGZyb21JbmRleCA9IGluZGV4T2YyKHNlZW4sIGNvbXB1dGVkLCBmcm9tSW5kZXgsIGNvbXBhcmF0b3IpKSA+IC0xOyApXG4gICAgICAgICAgICAgIHNlZW4gIT09IGFycmF5ICYmIHNwbGljZS5jYWxsKHNlZW4sIGZyb21JbmRleCwgMSksIHNwbGljZS5jYWxsKGFycmF5LCBmcm9tSW5kZXgsIDEpO1xuICAgICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlUHVsbEF0KGFycmF5LCBpbmRleGVzKSB7XG4gICAgICAgICAgZm9yICh2YXIgbGVuZ3RoID0gYXJyYXkgPyBpbmRleGVzLmxlbmd0aCA6IDAsIGxhc3RJbmRleCA9IGxlbmd0aCAtIDE7IGxlbmd0aC0tOyApIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IGluZGV4ZXNbbGVuZ3RoXTtcbiAgICAgICAgICAgIGlmIChsZW5ndGggPT0gbGFzdEluZGV4IHx8IGluZGV4ICE9PSBwcmV2aW91cykge1xuICAgICAgICAgICAgICB2YXIgcHJldmlvdXMgPSBpbmRleDtcbiAgICAgICAgICAgICAgaXNJbmRleChpbmRleCkgPyBzcGxpY2UuY2FsbChhcnJheSwgaW5kZXgsIDEpIDogYmFzZVVuc2V0KGFycmF5LCBpbmRleCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBhcnJheTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlUmFuZG9tKGxvd2VyLCB1cHBlcikge1xuICAgICAgICAgIHJldHVybiBsb3dlciArIG5hdGl2ZUZsb29yKG5hdGl2ZVJhbmRvbSgpICogKHVwcGVyIC0gbG93ZXIgKyAxKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVJhbmdlKHN0YXJ0LCBlbmQsIHN0ZXAsIGZyb21SaWdodCkge1xuICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IG5hdGl2ZU1heChuYXRpdmVDZWlsKChlbmQgLSBzdGFydCkgLyAoc3RlcCB8fCAxKSksIDApLCByZXN1bHQyID0gQXJyYXkyKGxlbmd0aCk7IGxlbmd0aC0tOyApXG4gICAgICAgICAgICByZXN1bHQyW2Zyb21SaWdodCA/IGxlbmd0aCA6ICsraW5kZXhdID0gc3RhcnQsIHN0YXJ0ICs9IHN0ZXA7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVJlcGVhdChzdHJpbmcsIG4pIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IFwiXCI7XG4gICAgICAgICAgaWYgKCFzdHJpbmcgfHwgbiA8IDEgfHwgbiA+IE1BWF9TQUZFX0lOVEVHRVIpXG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgICBkb1xuICAgICAgICAgICAgbiAlIDIgJiYgKHJlc3VsdDIgKz0gc3RyaW5nKSwgbiA9IG5hdGl2ZUZsb29yKG4gLyAyKSwgbiAmJiAoc3RyaW5nICs9IHN0cmluZyk7XG4gICAgICAgICAgd2hpbGUgKG4pO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VSZXN0KGZ1bmMsIHN0YXJ0KSB7XG4gICAgICAgICAgcmV0dXJuIHNldFRvU3RyaW5nKG92ZXJSZXN0KGZ1bmMsIHN0YXJ0LCBpZGVudGl0eSksIGZ1bmMgKyBcIlwiKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlU2FtcGxlKGNvbGxlY3Rpb24pIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXlTYW1wbGUodmFsdWVzKGNvbGxlY3Rpb24pKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlU2FtcGxlU2l6ZShjb2xsZWN0aW9uLCBuKSB7XG4gICAgICAgICAgdmFyIGFycmF5ID0gdmFsdWVzKGNvbGxlY3Rpb24pO1xuICAgICAgICAgIHJldHVybiBzaHVmZmxlU2VsZihhcnJheSwgYmFzZUNsYW1wKG4sIDAsIGFycmF5Lmxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VTZXQob2JqZWN0LCBwYXRoLCB2YWx1ZSwgY3VzdG9taXplcikge1xuICAgICAgICAgIGlmICghaXNPYmplY3Qob2JqZWN0KSlcbiAgICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgICAgcGF0aCA9IGNhc3RQYXRoKHBhdGgsIG9iamVjdCk7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gcGF0aC5sZW5ndGgsIGxhc3RJbmRleCA9IGxlbmd0aCAtIDEsIG5lc3RlZCA9IG9iamVjdDsgbmVzdGVkICE9IG51bGwgJiYgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gdG9LZXkocGF0aFtpbmRleF0pLCBuZXdWYWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gXCJfX3Byb3RvX19cIiB8fCBrZXkgPT09IFwiY29uc3RydWN0b3JcIiB8fCBrZXkgPT09IFwicHJvdG90eXBlXCIpXG4gICAgICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgICAgICBpZiAoaW5kZXggIT0gbGFzdEluZGV4KSB7XG4gICAgICAgICAgICAgIHZhciBvYmpWYWx1ZSA9IG5lc3RlZFtrZXldO1xuICAgICAgICAgICAgICBuZXdWYWx1ZSA9IGN1c3RvbWl6ZXIgPyBjdXN0b21pemVyKG9ialZhbHVlLCBrZXksIG5lc3RlZCkgOiB1bmRlZmluZWQkMSwgbmV3VmFsdWUgPT09IHVuZGVmaW5lZCQxICYmIChuZXdWYWx1ZSA9IGlzT2JqZWN0KG9ialZhbHVlKSA/IG9ialZhbHVlIDogaXNJbmRleChwYXRoW2luZGV4ICsgMV0pID8gW10gOiB7fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhc3NpZ25WYWx1ZShuZXN0ZWQsIGtleSwgbmV3VmFsdWUpLCBuZXN0ZWQgPSBuZXN0ZWRba2V5XTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYmFzZVNldERhdGEgPSBtZXRhTWFwID8gZnVuY3Rpb24oZnVuYywgZGF0YSkge1xuICAgICAgICAgIHJldHVybiBtZXRhTWFwLnNldChmdW5jLCBkYXRhKSwgZnVuYztcbiAgICAgICAgfSA6IGlkZW50aXR5LCBiYXNlU2V0VG9TdHJpbmcgPSBkZWZpbmVQcm9wZXJ0eSA/IGZ1bmN0aW9uKGZ1bmMsIHN0cmluZykge1xuICAgICAgICAgIHJldHVybiBkZWZpbmVQcm9wZXJ0eShmdW5jLCBcInRvU3RyaW5nXCIsIHtcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogITAsXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiAhMSxcbiAgICAgICAgICAgIHZhbHVlOiBjb25zdGFudChzdHJpbmcpLFxuICAgICAgICAgICAgd3JpdGFibGU6ICEwXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0gOiBpZGVudGl0eTtcbiAgICAgICAgZnVuY3Rpb24gYmFzZVNodWZmbGUoY29sbGVjdGlvbikge1xuICAgICAgICAgIHJldHVybiBzaHVmZmxlU2VsZih2YWx1ZXMoY29sbGVjdGlvbikpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VTbGljZShhcnJheSwgc3RhcnQsIGVuZCkge1xuICAgICAgICAgIHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgc3RhcnQgPCAwICYmIChzdGFydCA9IC1zdGFydCA+IGxlbmd0aCA/IDAgOiBsZW5ndGggKyBzdGFydCksIGVuZCA9IGVuZCA+IGxlbmd0aCA/IGxlbmd0aCA6IGVuZCwgZW5kIDwgMCAmJiAoZW5kICs9IGxlbmd0aCksIGxlbmd0aCA9IHN0YXJ0ID4gZW5kID8gMCA6IGVuZCAtIHN0YXJ0ID4+PiAwLCBzdGFydCA+Pj49IDA7XG4gICAgICAgICAgZm9yICh2YXIgcmVzdWx0MiA9IEFycmF5MihsZW5ndGgpOyArK2luZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgICByZXN1bHQyW2luZGV4XSA9IGFycmF5W2luZGV4ICsgc3RhcnRdO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VTb21lKGNvbGxlY3Rpb24sIHByZWRpY2F0ZSkge1xuICAgICAgICAgIHZhciByZXN1bHQyO1xuICAgICAgICAgIHJldHVybiBiYXNlRWFjaChjb2xsZWN0aW9uLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24yKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0MiA9IHByZWRpY2F0ZSh2YWx1ZSwgaW5kZXgsIGNvbGxlY3Rpb24yKSwgIXJlc3VsdDI7XG4gICAgICAgICAgfSksICEhcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlU29ydGVkSW5kZXgoYXJyYXksIHZhbHVlLCByZXRIaWdoZXN0KSB7XG4gICAgICAgICAgdmFyIGxvdyA9IDAsIGhpZ2ggPSBhcnJheSA9PSBudWxsID8gbG93IDogYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJudW1iZXJcIiAmJiB2YWx1ZSA9PT0gdmFsdWUgJiYgaGlnaCA8PSBIQUxGX01BWF9BUlJBWV9MRU5HVEgpIHtcbiAgICAgICAgICAgIGZvciAoOyBsb3cgPCBoaWdoOyApIHtcbiAgICAgICAgICAgICAgdmFyIG1pZCA9IGxvdyArIGhpZ2ggPj4+IDEsIGNvbXB1dGVkID0gYXJyYXlbbWlkXTtcbiAgICAgICAgICAgICAgY29tcHV0ZWQgIT09IG51bGwgJiYgIWlzU3ltYm9sKGNvbXB1dGVkKSAmJiAocmV0SGlnaGVzdCA/IGNvbXB1dGVkIDw9IHZhbHVlIDogY29tcHV0ZWQgPCB2YWx1ZSkgPyBsb3cgPSBtaWQgKyAxIDogaGlnaCA9IG1pZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBoaWdoO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gYmFzZVNvcnRlZEluZGV4QnkoYXJyYXksIHZhbHVlLCBpZGVudGl0eSwgcmV0SGlnaGVzdCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVNvcnRlZEluZGV4QnkoYXJyYXksIHZhbHVlLCBpdGVyYXRlZTIsIHJldEhpZ2hlc3QpIHtcbiAgICAgICAgICB2YXIgbG93ID0gMCwgaGlnaCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIGlmIChoaWdoID09PSAwKVxuICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgdmFsdWUgPSBpdGVyYXRlZTIodmFsdWUpO1xuICAgICAgICAgIGZvciAodmFyIHZhbElzTmFOID0gdmFsdWUgIT09IHZhbHVlLCB2YWxJc051bGwgPSB2YWx1ZSA9PT0gbnVsbCwgdmFsSXNTeW1ib2wgPSBpc1N5bWJvbCh2YWx1ZSksIHZhbElzVW5kZWZpbmVkID0gdmFsdWUgPT09IHVuZGVmaW5lZCQxOyBsb3cgPCBoaWdoOyApIHtcbiAgICAgICAgICAgIHZhciBtaWQgPSBuYXRpdmVGbG9vcigobG93ICsgaGlnaCkgLyAyKSwgY29tcHV0ZWQgPSBpdGVyYXRlZTIoYXJyYXlbbWlkXSksIG90aElzRGVmaW5lZCA9IGNvbXB1dGVkICE9PSB1bmRlZmluZWQkMSwgb3RoSXNOdWxsID0gY29tcHV0ZWQgPT09IG51bGwsIG90aElzUmVmbGV4aXZlID0gY29tcHV0ZWQgPT09IGNvbXB1dGVkLCBvdGhJc1N5bWJvbCA9IGlzU3ltYm9sKGNvbXB1dGVkKTtcbiAgICAgICAgICAgIGlmICh2YWxJc05hTilcbiAgICAgICAgICAgICAgdmFyIHNldExvdyA9IHJldEhpZ2hlc3QgfHwgb3RoSXNSZWZsZXhpdmU7XG4gICAgICAgICAgICBlbHNlIHZhbElzVW5kZWZpbmVkID8gc2V0TG93ID0gb3RoSXNSZWZsZXhpdmUgJiYgKHJldEhpZ2hlc3QgfHwgb3RoSXNEZWZpbmVkKSA6IHZhbElzTnVsbCA/IHNldExvdyA9IG90aElzUmVmbGV4aXZlICYmIG90aElzRGVmaW5lZCAmJiAocmV0SGlnaGVzdCB8fCAhb3RoSXNOdWxsKSA6IHZhbElzU3ltYm9sID8gc2V0TG93ID0gb3RoSXNSZWZsZXhpdmUgJiYgb3RoSXNEZWZpbmVkICYmICFvdGhJc051bGwgJiYgKHJldEhpZ2hlc3QgfHwgIW90aElzU3ltYm9sKSA6IG90aElzTnVsbCB8fCBvdGhJc1N5bWJvbCA/IHNldExvdyA9ICExIDogc2V0TG93ID0gcmV0SGlnaGVzdCA/IGNvbXB1dGVkIDw9IHZhbHVlIDogY29tcHV0ZWQgPCB2YWx1ZTtcbiAgICAgICAgICAgIHNldExvdyA/IGxvdyA9IG1pZCArIDEgOiBoaWdoID0gbWlkO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gbmF0aXZlTWluKGhpZ2gsIE1BWF9BUlJBWV9JTkRFWCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVNvcnRlZFVuaXEoYXJyYXksIGl0ZXJhdGVlMikge1xuICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgcmVzSW5kZXggPSAwLCByZXN1bHQyID0gW107ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdLCBjb21wdXRlZCA9IGl0ZXJhdGVlMiA/IGl0ZXJhdGVlMih2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgICAgIGlmICghaW5kZXggfHwgIWVxKGNvbXB1dGVkLCBzZWVuKSkge1xuICAgICAgICAgICAgICB2YXIgc2VlbiA9IGNvbXB1dGVkO1xuICAgICAgICAgICAgICByZXN1bHQyW3Jlc0luZGV4KytdID0gdmFsdWUgPT09IDAgPyAwIDogdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VUb051bWJlcih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJudW1iZXJcIiA/IHZhbHVlIDogaXNTeW1ib2wodmFsdWUpID8gTkFOIDogK3ZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VUb1N0cmluZyh2YWx1ZSkge1xuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIilcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICBpZiAoaXNBcnJheSh2YWx1ZSkpXG4gICAgICAgICAgICByZXR1cm4gYXJyYXlNYXAodmFsdWUsIGJhc2VUb1N0cmluZykgKyBcIlwiO1xuICAgICAgICAgIGlmIChpc1N5bWJvbCh2YWx1ZSkpXG4gICAgICAgICAgICByZXR1cm4gc3ltYm9sVG9TdHJpbmcgPyBzeW1ib2xUb1N0cmluZy5jYWxsKHZhbHVlKSA6IFwiXCI7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSB2YWx1ZSArIFwiXCI7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIgPT0gXCIwXCIgJiYgMSAvIHZhbHVlID09IC1JTkZJTklUWSA/IFwiLTBcIiA6IHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVVuaXEoYXJyYXksIGl0ZXJhdGVlMiwgY29tcGFyYXRvcikge1xuICAgICAgICAgIHZhciBpbmRleCA9IC0xLCBpbmNsdWRlczIgPSBhcnJheUluY2x1ZGVzLCBsZW5ndGggPSBhcnJheS5sZW5ndGgsIGlzQ29tbW9uID0gITAsIHJlc3VsdDIgPSBbXSwgc2VlbiA9IHJlc3VsdDI7XG4gICAgICAgICAgaWYgKGNvbXBhcmF0b3IpXG4gICAgICAgICAgICBpc0NvbW1vbiA9ICExLCBpbmNsdWRlczIgPSBhcnJheUluY2x1ZGVzV2l0aDtcbiAgICAgICAgICBlbHNlIGlmIChsZW5ndGggPj0gTEFSR0VfQVJSQVlfU0laRSkge1xuICAgICAgICAgICAgdmFyIHNldDIgPSBpdGVyYXRlZTIgPyBudWxsIDogY3JlYXRlU2V0KGFycmF5KTtcbiAgICAgICAgICAgIGlmIChzZXQyKVxuICAgICAgICAgICAgICByZXR1cm4gc2V0VG9BcnJheShzZXQyKTtcbiAgICAgICAgICAgIGlzQ29tbW9uID0gITEsIGluY2x1ZGVzMiA9IGNhY2hlSGFzLCBzZWVuID0gbmV3IFNldENhY2hlKCk7XG4gICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICBzZWVuID0gaXRlcmF0ZWUyID8gW10gOiByZXN1bHQyO1xuICAgICAgICAgIG91dGVyOlxuICAgICAgICAgICAgZm9yICg7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF0sIGNvbXB1dGVkID0gaXRlcmF0ZWUyID8gaXRlcmF0ZWUyKHZhbHVlKSA6IHZhbHVlO1xuICAgICAgICAgICAgICBpZiAodmFsdWUgPSBjb21wYXJhdG9yIHx8IHZhbHVlICE9PSAwID8gdmFsdWUgOiAwLCBpc0NvbW1vbiAmJiBjb21wdXRlZCA9PT0gY29tcHV0ZWQpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBzZWVuSW5kZXggPSBzZWVuLmxlbmd0aDsgc2VlbkluZGV4LS07IClcbiAgICAgICAgICAgICAgICAgIGlmIChzZWVuW3NlZW5JbmRleF0gPT09IGNvbXB1dGVkKVxuICAgICAgICAgICAgICAgICAgICBjb250aW51ZSBvdXRlcjtcbiAgICAgICAgICAgICAgICBpdGVyYXRlZTIgJiYgc2Vlbi5wdXNoKGNvbXB1dGVkKSwgcmVzdWx0Mi5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgICAgfSBlbHNlIGluY2x1ZGVzMihzZWVuLCBjb21wdXRlZCwgY29tcGFyYXRvcikgfHwgKHNlZW4gIT09IHJlc3VsdDIgJiYgc2Vlbi5wdXNoKGNvbXB1dGVkKSwgcmVzdWx0Mi5wdXNoKHZhbHVlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVVuc2V0KG9iamVjdCwgcGF0aCkge1xuICAgICAgICAgIHJldHVybiBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KSwgb2JqZWN0ID0gcGFyZW50KG9iamVjdCwgcGF0aCksIG9iamVjdCA9PSBudWxsIHx8IGRlbGV0ZSBvYmplY3RbdG9LZXkobGFzdChwYXRoKSldO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VVcGRhdGUob2JqZWN0LCBwYXRoLCB1cGRhdGVyLCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VTZXQob2JqZWN0LCBwYXRoLCB1cGRhdGVyKGJhc2VHZXQob2JqZWN0LCBwYXRoKSksIGN1c3RvbWl6ZXIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VXaGlsZShhcnJheSwgcHJlZGljYXRlLCBpc0Ryb3AsIGZyb21SaWdodCkge1xuICAgICAgICAgIGZvciAodmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgaW5kZXggPSBmcm9tUmlnaHQgPyBsZW5ndGggOiAtMTsgKGZyb21SaWdodCA/IGluZGV4LS0gOiArK2luZGV4IDwgbGVuZ3RoKSAmJiBwcmVkaWNhdGUoYXJyYXlbaW5kZXhdLCBpbmRleCwgYXJyYXkpOyApXG4gICAgICAgICAgICA7XG4gICAgICAgICAgcmV0dXJuIGlzRHJvcCA/IGJhc2VTbGljZShhcnJheSwgZnJvbVJpZ2h0ID8gMCA6IGluZGV4LCBmcm9tUmlnaHQgPyBpbmRleCArIDEgOiBsZW5ndGgpIDogYmFzZVNsaWNlKGFycmF5LCBmcm9tUmlnaHQgPyBpbmRleCArIDEgOiAwLCBmcm9tUmlnaHQgPyBsZW5ndGggOiBpbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmFzZVdyYXBwZXJWYWx1ZSh2YWx1ZSwgYWN0aW9ucykge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gdmFsdWU7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIgaW5zdGFuY2VvZiBMYXp5V3JhcHBlciAmJiAocmVzdWx0MiA9IHJlc3VsdDIudmFsdWUoKSksIGFycmF5UmVkdWNlKGFjdGlvbnMsIGZ1bmN0aW9uKHJlc3VsdDMsIGFjdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIGFjdGlvbi5mdW5jLmFwcGx5KGFjdGlvbi50aGlzQXJnLCBhcnJheVB1c2goW3Jlc3VsdDNdLCBhY3Rpb24uYXJncykpO1xuICAgICAgICAgIH0sIHJlc3VsdDIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGJhc2VYb3IoYXJyYXlzLCBpdGVyYXRlZTIsIGNvbXBhcmF0b3IpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXlzLmxlbmd0aDtcbiAgICAgICAgICBpZiAobGVuZ3RoIDwgMilcbiAgICAgICAgICAgIHJldHVybiBsZW5ndGggPyBiYXNlVW5pcShhcnJheXNbMF0pIDogW107XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgcmVzdWx0MiA9IEFycmF5MihsZW5ndGgpOyArK2luZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgICBmb3IgKHZhciBhcnJheSA9IGFycmF5c1tpbmRleF0sIG90aEluZGV4ID0gLTE7ICsrb3RoSW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICAgICAgb3RoSW5kZXggIT0gaW5kZXggJiYgKHJlc3VsdDJbaW5kZXhdID0gYmFzZURpZmZlcmVuY2UocmVzdWx0MltpbmRleF0gfHwgYXJyYXksIGFycmF5c1tvdGhJbmRleF0sIGl0ZXJhdGVlMiwgY29tcGFyYXRvcikpO1xuICAgICAgICAgIHJldHVybiBiYXNlVW5pcShiYXNlRmxhdHRlbihyZXN1bHQyLCAxKSwgaXRlcmF0ZWUyLCBjb21wYXJhdG9yKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBiYXNlWmlwT2JqZWN0KHByb3BzLCB2YWx1ZXMyLCBhc3NpZ25GdW5jKSB7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gcHJvcHMubGVuZ3RoLCB2YWxzTGVuZ3RoID0gdmFsdWVzMi5sZW5ndGgsIHJlc3VsdDIgPSB7fTsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBpbmRleCA8IHZhbHNMZW5ndGggPyB2YWx1ZXMyW2luZGV4XSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICAgICAgYXNzaWduRnVuYyhyZXN1bHQyLCBwcm9wc1tpbmRleF0sIHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY2FzdEFycmF5TGlrZU9iamVjdCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc0FycmF5TGlrZU9iamVjdCh2YWx1ZSkgPyB2YWx1ZSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNhc3RGdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJmdW5jdGlvblwiID8gdmFsdWUgOiBpZGVudGl0eTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjYXN0UGF0aCh2YWx1ZSwgb2JqZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIGlzQXJyYXkodmFsdWUpID8gdmFsdWUgOiBpc0tleSh2YWx1ZSwgb2JqZWN0KSA/IFt2YWx1ZV0gOiBzdHJpbmdUb1BhdGgodG9TdHJpbmcodmFsdWUpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY2FzdFJlc3QgPSBiYXNlUmVzdDtcbiAgICAgICAgZnVuY3Rpb24gY2FzdFNsaWNlKGFycmF5LCBzdGFydCwgZW5kKSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gZW5kID0gZW5kID09PSB1bmRlZmluZWQkMSA/IGxlbmd0aCA6IGVuZCwgIXN0YXJ0ICYmIGVuZCA+PSBsZW5ndGggPyBhcnJheSA6IGJhc2VTbGljZShhcnJheSwgc3RhcnQsIGVuZCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNsZWFyVGltZW91dCA9IGN0eENsZWFyVGltZW91dCB8fCBmdW5jdGlvbihpZCkge1xuICAgICAgICAgIHJldHVybiByb290LmNsZWFyVGltZW91dChpZCk7XG4gICAgICAgIH07XG4gICAgICAgIGZ1bmN0aW9uIGNsb25lQnVmZmVyKGJ1ZmZlciwgaXNEZWVwKSB7XG4gICAgICAgICAgaWYgKGlzRGVlcClcbiAgICAgICAgICAgIHJldHVybiBidWZmZXIuc2xpY2UoKTtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYnVmZmVyLmxlbmd0aCwgcmVzdWx0MiA9IGFsbG9jVW5zYWZlID8gYWxsb2NVbnNhZmUobGVuZ3RoKSA6IG5ldyBidWZmZXIuY29uc3RydWN0b3IobGVuZ3RoKTtcbiAgICAgICAgICByZXR1cm4gYnVmZmVyLmNvcHkocmVzdWx0MiksIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY2xvbmVBcnJheUJ1ZmZlcihhcnJheUJ1ZmZlcikge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gbmV3IGFycmF5QnVmZmVyLmNvbnN0cnVjdG9yKGFycmF5QnVmZmVyLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShyZXN1bHQyKS5zZXQobmV3IFVpbnQ4QXJyYXkoYXJyYXlCdWZmZXIpKSwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjbG9uZURhdGFWaWV3KGRhdGFWaWV3LCBpc0RlZXApIHtcbiAgICAgICAgICB2YXIgYnVmZmVyID0gaXNEZWVwID8gY2xvbmVBcnJheUJ1ZmZlcihkYXRhVmlldy5idWZmZXIpIDogZGF0YVZpZXcuYnVmZmVyO1xuICAgICAgICAgIHJldHVybiBuZXcgZGF0YVZpZXcuY29uc3RydWN0b3IoYnVmZmVyLCBkYXRhVmlldy5ieXRlT2Zmc2V0LCBkYXRhVmlldy5ieXRlTGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjbG9uZVJlZ0V4cChyZWdleHApIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IG5ldyByZWdleHAuY29uc3RydWN0b3IocmVnZXhwLnNvdXJjZSwgcmVGbGFncy5leGVjKHJlZ2V4cCkpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyLmxhc3RJbmRleCA9IHJlZ2V4cC5sYXN0SW5kZXgsIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY2xvbmVTeW1ib2woc3ltYm9sKSB7XG4gICAgICAgICAgcmV0dXJuIHN5bWJvbFZhbHVlT2YgPyBPYmplY3QyKHN5bWJvbFZhbHVlT2YuY2FsbChzeW1ib2wpKSA6IHt9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNsb25lVHlwZWRBcnJheSh0eXBlZEFycmF5LCBpc0RlZXApIHtcbiAgICAgICAgICB2YXIgYnVmZmVyID0gaXNEZWVwID8gY2xvbmVBcnJheUJ1ZmZlcih0eXBlZEFycmF5LmJ1ZmZlcikgOiB0eXBlZEFycmF5LmJ1ZmZlcjtcbiAgICAgICAgICByZXR1cm4gbmV3IHR5cGVkQXJyYXkuY29uc3RydWN0b3IoYnVmZmVyLCB0eXBlZEFycmF5LmJ5dGVPZmZzZXQsIHR5cGVkQXJyYXkubGVuZ3RoKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjb21wYXJlQXNjZW5kaW5nKHZhbHVlLCBvdGhlcikge1xuICAgICAgICAgIGlmICh2YWx1ZSAhPT0gb3RoZXIpIHtcbiAgICAgICAgICAgIHZhciB2YWxJc0RlZmluZWQgPSB2YWx1ZSAhPT0gdW5kZWZpbmVkJDEsIHZhbElzTnVsbCA9IHZhbHVlID09PSBudWxsLCB2YWxJc1JlZmxleGl2ZSA9IHZhbHVlID09PSB2YWx1ZSwgdmFsSXNTeW1ib2wgPSBpc1N5bWJvbCh2YWx1ZSksIG90aElzRGVmaW5lZCA9IG90aGVyICE9PSB1bmRlZmluZWQkMSwgb3RoSXNOdWxsID0gb3RoZXIgPT09IG51bGwsIG90aElzUmVmbGV4aXZlID0gb3RoZXIgPT09IG90aGVyLCBvdGhJc1N5bWJvbCA9IGlzU3ltYm9sKG90aGVyKTtcbiAgICAgICAgICAgIGlmICghb3RoSXNOdWxsICYmICFvdGhJc1N5bWJvbCAmJiAhdmFsSXNTeW1ib2wgJiYgdmFsdWUgPiBvdGhlciB8fCB2YWxJc1N5bWJvbCAmJiBvdGhJc0RlZmluZWQgJiYgb3RoSXNSZWZsZXhpdmUgJiYgIW90aElzTnVsbCAmJiAhb3RoSXNTeW1ib2wgfHwgdmFsSXNOdWxsICYmIG90aElzRGVmaW5lZCAmJiBvdGhJc1JlZmxleGl2ZSB8fCAhdmFsSXNEZWZpbmVkICYmIG90aElzUmVmbGV4aXZlIHx8ICF2YWxJc1JlZmxleGl2ZSlcbiAgICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgICAgICBpZiAoIXZhbElzTnVsbCAmJiAhdmFsSXNTeW1ib2wgJiYgIW90aElzU3ltYm9sICYmIHZhbHVlIDwgb3RoZXIgfHwgb3RoSXNTeW1ib2wgJiYgdmFsSXNEZWZpbmVkICYmIHZhbElzUmVmbGV4aXZlICYmICF2YWxJc051bGwgJiYgIXZhbElzU3ltYm9sIHx8IG90aElzTnVsbCAmJiB2YWxJc0RlZmluZWQgJiYgdmFsSXNSZWZsZXhpdmUgfHwgIW90aElzRGVmaW5lZCAmJiB2YWxJc1JlZmxleGl2ZSB8fCAhb3RoSXNSZWZsZXhpdmUpXG4gICAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY29tcGFyZU11bHRpcGxlKG9iamVjdCwgb3RoZXIsIG9yZGVycykge1xuICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIG9iakNyaXRlcmlhID0gb2JqZWN0LmNyaXRlcmlhLCBvdGhDcml0ZXJpYSA9IG90aGVyLmNyaXRlcmlhLCBsZW5ndGggPSBvYmpDcml0ZXJpYS5sZW5ndGgsIG9yZGVyc0xlbmd0aCA9IG9yZGVycy5sZW5ndGg7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIHJlc3VsdDIgPSBjb21wYXJlQXNjZW5kaW5nKG9iakNyaXRlcmlhW2luZGV4XSwgb3RoQ3JpdGVyaWFbaW5kZXhdKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQyKSB7XG4gICAgICAgICAgICAgIGlmIChpbmRleCA+PSBvcmRlcnNMZW5ndGgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgICAgICAgIHZhciBvcmRlciA9IG9yZGVyc1tpbmRleF07XG4gICAgICAgICAgICAgIHJldHVybiByZXN1bHQyICogKG9yZGVyID09IFwiZGVzY1wiID8gLTEgOiAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG9iamVjdC5pbmRleCAtIG90aGVyLmluZGV4O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvbXBvc2VBcmdzKGFyZ3MsIHBhcnRpYWxzLCBob2xkZXJzLCBpc0N1cnJpZWQpIHtcbiAgICAgICAgICBmb3IgKHZhciBhcmdzSW5kZXggPSAtMSwgYXJnc0xlbmd0aCA9IGFyZ3MubGVuZ3RoLCBob2xkZXJzTGVuZ3RoID0gaG9sZGVycy5sZW5ndGgsIGxlZnRJbmRleCA9IC0xLCBsZWZ0TGVuZ3RoID0gcGFydGlhbHMubGVuZ3RoLCByYW5nZUxlbmd0aCA9IG5hdGl2ZU1heChhcmdzTGVuZ3RoIC0gaG9sZGVyc0xlbmd0aCwgMCksIHJlc3VsdDIgPSBBcnJheTIobGVmdExlbmd0aCArIHJhbmdlTGVuZ3RoKSwgaXNVbmN1cnJpZWQgPSAhaXNDdXJyaWVkOyArK2xlZnRJbmRleCA8IGxlZnRMZW5ndGg7IClcbiAgICAgICAgICAgIHJlc3VsdDJbbGVmdEluZGV4XSA9IHBhcnRpYWxzW2xlZnRJbmRleF07XG4gICAgICAgICAgZm9yICg7ICsrYXJnc0luZGV4IDwgaG9sZGVyc0xlbmd0aDsgKVxuICAgICAgICAgICAgKGlzVW5jdXJyaWVkIHx8IGFyZ3NJbmRleCA8IGFyZ3NMZW5ndGgpICYmIChyZXN1bHQyW2hvbGRlcnNbYXJnc0luZGV4XV0gPSBhcmdzW2FyZ3NJbmRleF0pO1xuICAgICAgICAgIGZvciAoOyByYW5nZUxlbmd0aC0tOyApXG4gICAgICAgICAgICByZXN1bHQyW2xlZnRJbmRleCsrXSA9IGFyZ3NbYXJnc0luZGV4KytdO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvbXBvc2VBcmdzUmlnaHQoYXJncywgcGFydGlhbHMsIGhvbGRlcnMsIGlzQ3VycmllZCkge1xuICAgICAgICAgIGZvciAodmFyIGFyZ3NJbmRleCA9IC0xLCBhcmdzTGVuZ3RoID0gYXJncy5sZW5ndGgsIGhvbGRlcnNJbmRleCA9IC0xLCBob2xkZXJzTGVuZ3RoID0gaG9sZGVycy5sZW5ndGgsIHJpZ2h0SW5kZXggPSAtMSwgcmlnaHRMZW5ndGggPSBwYXJ0aWFscy5sZW5ndGgsIHJhbmdlTGVuZ3RoID0gbmF0aXZlTWF4KGFyZ3NMZW5ndGggLSBob2xkZXJzTGVuZ3RoLCAwKSwgcmVzdWx0MiA9IEFycmF5MihyYW5nZUxlbmd0aCArIHJpZ2h0TGVuZ3RoKSwgaXNVbmN1cnJpZWQgPSAhaXNDdXJyaWVkOyArK2FyZ3NJbmRleCA8IHJhbmdlTGVuZ3RoOyApXG4gICAgICAgICAgICByZXN1bHQyW2FyZ3NJbmRleF0gPSBhcmdzW2FyZ3NJbmRleF07XG4gICAgICAgICAgZm9yICh2YXIgb2Zmc2V0ID0gYXJnc0luZGV4OyArK3JpZ2h0SW5kZXggPCByaWdodExlbmd0aDsgKVxuICAgICAgICAgICAgcmVzdWx0MltvZmZzZXQgKyByaWdodEluZGV4XSA9IHBhcnRpYWxzW3JpZ2h0SW5kZXhdO1xuICAgICAgICAgIGZvciAoOyArK2hvbGRlcnNJbmRleCA8IGhvbGRlcnNMZW5ndGg7IClcbiAgICAgICAgICAgIChpc1VuY3VycmllZCB8fCBhcmdzSW5kZXggPCBhcmdzTGVuZ3RoKSAmJiAocmVzdWx0MltvZmZzZXQgKyBob2xkZXJzW2hvbGRlcnNJbmRleF1dID0gYXJnc1thcmdzSW5kZXgrK10pO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvcHlBcnJheShzb3VyY2UsIGFycmF5KSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IHNvdXJjZS5sZW5ndGg7XG4gICAgICAgICAgZm9yIChhcnJheSB8fCAoYXJyYXkgPSBBcnJheTIobGVuZ3RoKSk7ICsraW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICAgIGFycmF5W2luZGV4XSA9IHNvdXJjZVtpbmRleF07XG4gICAgICAgICAgcmV0dXJuIGFycmF5O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvcHlPYmplY3Qoc291cmNlLCBwcm9wcywgb2JqZWN0LCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgdmFyIGlzTmV3ID0gIW9iamVjdDtcbiAgICAgICAgICBvYmplY3QgfHwgKG9iamVjdCA9IHt9KTtcbiAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBwcm9wcy5sZW5ndGg7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIGtleSA9IHByb3BzW2luZGV4XSwgbmV3VmFsdWUgPSBjdXN0b21pemVyID8gY3VzdG9taXplcihvYmplY3Rba2V5XSwgc291cmNlW2tleV0sIGtleSwgb2JqZWN0LCBzb3VyY2UpIDogdW5kZWZpbmVkJDE7XG4gICAgICAgICAgICBuZXdWYWx1ZSA9PT0gdW5kZWZpbmVkJDEgJiYgKG5ld1ZhbHVlID0gc291cmNlW2tleV0pLCBpc05ldyA/IGJhc2VBc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgbmV3VmFsdWUpIDogYXNzaWduVmFsdWUob2JqZWN0LCBrZXksIG5ld1ZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjb3B5U3ltYm9scyhzb3VyY2UsIG9iamVjdCkge1xuICAgICAgICAgIHJldHVybiBjb3B5T2JqZWN0KHNvdXJjZSwgZ2V0U3ltYm9scyhzb3VyY2UpLCBvYmplY3QpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvcHlTeW1ib2xzSW4oc291cmNlLCBvYmplY3QpIHtcbiAgICAgICAgICByZXR1cm4gY29weU9iamVjdChzb3VyY2UsIGdldFN5bWJvbHNJbihzb3VyY2UpLCBvYmplY3QpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUFnZ3JlZ2F0b3Ioc2V0dGVyLCBpbml0aWFsaXplcikge1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbihjb2xsZWN0aW9uLCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICAgIHZhciBmdW5jID0gaXNBcnJheShjb2xsZWN0aW9uKSA/IGFycmF5QWdncmVnYXRvciA6IGJhc2VBZ2dyZWdhdG9yLCBhY2N1bXVsYXRvciA9IGluaXRpYWxpemVyID8gaW5pdGlhbGl6ZXIoKSA6IHt9O1xuICAgICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgc2V0dGVyLCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDIpLCBhY2N1bXVsYXRvcik7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVBc3NpZ25lcihhc3NpZ25lcikge1xuICAgICAgICAgIHJldHVybiBiYXNlUmVzdChmdW5jdGlvbihvYmplY3QsIHNvdXJjZXMpIHtcbiAgICAgICAgICAgIHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBzb3VyY2VzLmxlbmd0aCwgY3VzdG9taXplciA9IGxlbmd0aCA+IDEgPyBzb3VyY2VzW2xlbmd0aCAtIDFdIDogdW5kZWZpbmVkJDEsIGd1YXJkID0gbGVuZ3RoID4gMiA/IHNvdXJjZXNbMl0gOiB1bmRlZmluZWQkMTtcbiAgICAgICAgICAgIGZvciAoY3VzdG9taXplciA9IGFzc2lnbmVyLmxlbmd0aCA+IDMgJiYgdHlwZW9mIGN1c3RvbWl6ZXIgPT0gXCJmdW5jdGlvblwiID8gKGxlbmd0aC0tLCBjdXN0b21pemVyKSA6IHVuZGVmaW5lZCQxLCBndWFyZCAmJiBpc0l0ZXJhdGVlQ2FsbChzb3VyY2VzWzBdLCBzb3VyY2VzWzFdLCBndWFyZCkgJiYgKGN1c3RvbWl6ZXIgPSBsZW5ndGggPCAzID8gdW5kZWZpbmVkJDEgOiBjdXN0b21pemVyLCBsZW5ndGggPSAxKSwgb2JqZWN0ID0gT2JqZWN0MihvYmplY3QpOyArK2luZGV4IDwgbGVuZ3RoOyApIHtcbiAgICAgICAgICAgICAgdmFyIHNvdXJjZSA9IHNvdXJjZXNbaW5kZXhdO1xuICAgICAgICAgICAgICBzb3VyY2UgJiYgYXNzaWduZXIob2JqZWN0LCBzb3VyY2UsIGluZGV4LCBjdXN0b21pemVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQmFzZUVhY2goZWFjaEZ1bmMsIGZyb21SaWdodCkge1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbihjb2xsZWN0aW9uLCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICAgIGlmIChjb2xsZWN0aW9uID09IG51bGwpXG4gICAgICAgICAgICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICAgICAgICAgICAgaWYgKCFpc0FycmF5TGlrZShjb2xsZWN0aW9uKSlcbiAgICAgICAgICAgICAgcmV0dXJuIGVhY2hGdW5jKGNvbGxlY3Rpb24sIGl0ZXJhdGVlMik7XG4gICAgICAgICAgICBmb3IgKHZhciBsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aCwgaW5kZXggPSBmcm9tUmlnaHQgPyBsZW5ndGggOiAtMSwgaXRlcmFibGUgPSBPYmplY3QyKGNvbGxlY3Rpb24pOyAoZnJvbVJpZ2h0ID8gaW5kZXgtLSA6ICsraW5kZXggPCBsZW5ndGgpICYmIGl0ZXJhdGVlMihpdGVyYWJsZVtpbmRleF0sIGluZGV4LCBpdGVyYWJsZSkgIT09ICExOyApXG4gICAgICAgICAgICAgIDtcbiAgICAgICAgICAgIHJldHVybiBjb2xsZWN0aW9uO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQmFzZUZvcihmcm9tUmlnaHQpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0LCBpdGVyYXRlZTIsIGtleXNGdW5jKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IC0xLCBpdGVyYWJsZSA9IE9iamVjdDIob2JqZWN0KSwgcHJvcHMgPSBrZXlzRnVuYyhvYmplY3QpLCBsZW5ndGggPSBwcm9wcy5sZW5ndGg7IGxlbmd0aC0tOyApIHtcbiAgICAgICAgICAgICAgdmFyIGtleSA9IHByb3BzW2Zyb21SaWdodCA/IGxlbmd0aCA6ICsraW5kZXhdO1xuICAgICAgICAgICAgICBpZiAoaXRlcmF0ZWUyKGl0ZXJhYmxlW2tleV0sIGtleSwgaXRlcmFibGUpID09PSAhMSlcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVCaW5kKGZ1bmMsIGJpdG1hc2ssIHRoaXNBcmcpIHtcbiAgICAgICAgICB2YXIgaXNCaW5kID0gYml0bWFzayAmIFdSQVBfQklORF9GTEFHLCBDdG9yID0gY3JlYXRlQ3RvcihmdW5jKTtcbiAgICAgICAgICBmdW5jdGlvbiB3cmFwcGVyKCkge1xuICAgICAgICAgICAgdmFyIGZuID0gdGhpcyAmJiB0aGlzICE9PSByb290ICYmIHRoaXMgaW5zdGFuY2VvZiB3cmFwcGVyID8gQ3RvciA6IGZ1bmM7XG4gICAgICAgICAgICByZXR1cm4gZm4uYXBwbHkoaXNCaW5kID8gdGhpc0FyZyA6IHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB3cmFwcGVyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNhc2VGaXJzdChtZXRob2ROYW1lKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHN0cmluZykge1xuICAgICAgICAgICAgc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgICAgICAgICAgIHZhciBzdHJTeW1ib2xzID0gaGFzVW5pY29kZShzdHJpbmcpID8gc3RyaW5nVG9BcnJheShzdHJpbmcpIDogdW5kZWZpbmVkJDEsIGNociA9IHN0clN5bWJvbHMgPyBzdHJTeW1ib2xzWzBdIDogc3RyaW5nLmNoYXJBdCgwKSwgdHJhaWxpbmcgPSBzdHJTeW1ib2xzID8gY2FzdFNsaWNlKHN0clN5bWJvbHMsIDEpLmpvaW4oXCJcIikgOiBzdHJpbmcuc2xpY2UoMSk7XG4gICAgICAgICAgICByZXR1cm4gY2hyW21ldGhvZE5hbWVdKCkgKyB0cmFpbGluZztcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNvbXBvdW5kZXIoY2FsbGJhY2spIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICAgICAgICByZXR1cm4gYXJyYXlSZWR1Y2Uod29yZHMoZGVidXJyKHN0cmluZykucmVwbGFjZShyZUFwb3MsIFwiXCIpKSwgY2FsbGJhY2ssIFwiXCIpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlQ3RvcihDdG9yKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHM7XG4gICAgICAgICAgICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IEN0b3IoKTtcbiAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdKTtcbiAgICAgICAgICAgICAgY2FzZSAyOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICAgICAgICAgICAgY2FzZSA0OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdKTtcbiAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdLCBhcmdzWzRdKTtcbiAgICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdLCBhcmdzWzRdLCBhcmdzWzVdKTtcbiAgICAgICAgICAgICAgY2FzZSA3OlxuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdLCBhcmdzWzNdLCBhcmdzWzRdLCBhcmdzWzVdLCBhcmdzWzZdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciB0aGlzQmluZGluZyA9IGJhc2VDcmVhdGUoQ3Rvci5wcm90b3R5cGUpLCByZXN1bHQyID0gQ3Rvci5hcHBseSh0aGlzQmluZGluZywgYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gaXNPYmplY3QocmVzdWx0MikgPyByZXN1bHQyIDogdGhpc0JpbmRpbmc7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVDdXJyeShmdW5jLCBiaXRtYXNrLCBhcml0eSkge1xuICAgICAgICAgIHZhciBDdG9yID0gY3JlYXRlQ3RvcihmdW5jKTtcbiAgICAgICAgICBmdW5jdGlvbiB3cmFwcGVyKCkge1xuICAgICAgICAgICAgZm9yICh2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5MihsZW5ndGgpLCBpbmRleCA9IGxlbmd0aCwgcGxhY2Vob2xkZXIgPSBnZXRIb2xkZXIod3JhcHBlcik7IGluZGV4LS07IClcbiAgICAgICAgICAgICAgYXJnc1tpbmRleF0gPSBhcmd1bWVudHNbaW5kZXhdO1xuICAgICAgICAgICAgdmFyIGhvbGRlcnMgPSBsZW5ndGggPCAzICYmIGFyZ3NbMF0gIT09IHBsYWNlaG9sZGVyICYmIGFyZ3NbbGVuZ3RoIC0gMV0gIT09IHBsYWNlaG9sZGVyID8gW10gOiByZXBsYWNlSG9sZGVycyhhcmdzLCBwbGFjZWhvbGRlcik7XG4gICAgICAgICAgICBpZiAobGVuZ3RoIC09IGhvbGRlcnMubGVuZ3RoLCBsZW5ndGggPCBhcml0eSlcbiAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZVJlY3VycnkoXG4gICAgICAgICAgICAgICAgZnVuYyxcbiAgICAgICAgICAgICAgICBiaXRtYXNrLFxuICAgICAgICAgICAgICAgIGNyZWF0ZUh5YnJpZCxcbiAgICAgICAgICAgICAgICB3cmFwcGVyLnBsYWNlaG9sZGVyLFxuICAgICAgICAgICAgICAgIHVuZGVmaW5lZCQxLFxuICAgICAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgICAgICAgaG9sZGVycyxcbiAgICAgICAgICAgICAgICB1bmRlZmluZWQkMSxcbiAgICAgICAgICAgICAgICB1bmRlZmluZWQkMSxcbiAgICAgICAgICAgICAgICBhcml0eSAtIGxlbmd0aFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgdmFyIGZuID0gdGhpcyAmJiB0aGlzICE9PSByb290ICYmIHRoaXMgaW5zdGFuY2VvZiB3cmFwcGVyID8gQ3RvciA6IGZ1bmM7XG4gICAgICAgICAgICByZXR1cm4gYXBwbHkoZm4sIHRoaXMsIGFyZ3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gd3JhcHBlcjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVGaW5kKGZpbmRJbmRleEZ1bmMpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oY29sbGVjdGlvbiwgcHJlZGljYXRlLCBmcm9tSW5kZXgpIHtcbiAgICAgICAgICAgIHZhciBpdGVyYWJsZSA9IE9iamVjdDIoY29sbGVjdGlvbik7XG4gICAgICAgICAgICBpZiAoIWlzQXJyYXlMaWtlKGNvbGxlY3Rpb24pKSB7XG4gICAgICAgICAgICAgIHZhciBpdGVyYXRlZTIgPSBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpO1xuICAgICAgICAgICAgICBjb2xsZWN0aW9uID0ga2V5cyhjb2xsZWN0aW9uKSwgcHJlZGljYXRlID0gZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdGVlMihpdGVyYWJsZVtrZXldLCBrZXksIGl0ZXJhYmxlKTtcbiAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBpbmRleCA9IGZpbmRJbmRleEZ1bmMoY29sbGVjdGlvbiwgcHJlZGljYXRlLCBmcm9tSW5kZXgpO1xuICAgICAgICAgICAgcmV0dXJuIGluZGV4ID4gLTEgPyBpdGVyYWJsZVtpdGVyYXRlZTIgPyBjb2xsZWN0aW9uW2luZGV4XSA6IGluZGV4XSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlRmxvdyhmcm9tUmlnaHQpIHtcbiAgICAgICAgICByZXR1cm4gZmxhdFJlc3QoZnVuY3Rpb24oZnVuY3MpIHtcbiAgICAgICAgICAgIHZhciBsZW5ndGggPSBmdW5jcy5sZW5ndGgsIGluZGV4ID0gbGVuZ3RoLCBwcmVyZXEgPSBMb2Rhc2hXcmFwcGVyLnByb3RvdHlwZS50aHJ1O1xuICAgICAgICAgICAgZm9yIChmcm9tUmlnaHQgJiYgZnVuY3MucmV2ZXJzZSgpOyBpbmRleC0tOyApIHtcbiAgICAgICAgICAgICAgdmFyIGZ1bmMgPSBmdW5jc1tpbmRleF07XG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgZnVuYyAhPSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgICAgICAgICBpZiAocHJlcmVxICYmICF3cmFwcGVyICYmIGdldEZ1bmNOYW1lKGZ1bmMpID09IFwid3JhcHBlclwiKVxuICAgICAgICAgICAgICAgIHZhciB3cmFwcGVyID0gbmV3IExvZGFzaFdyYXBwZXIoW10sICEwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoaW5kZXggPSB3cmFwcGVyID8gaW5kZXggOiBsZW5ndGg7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgICBmdW5jID0gZnVuY3NbaW5kZXhdO1xuICAgICAgICAgICAgICB2YXIgZnVuY05hbWUgPSBnZXRGdW5jTmFtZShmdW5jKSwgZGF0YSA9IGZ1bmNOYW1lID09IFwid3JhcHBlclwiID8gZ2V0RGF0YShmdW5jKSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICAgICAgICBkYXRhICYmIGlzTGF6aWFibGUoZGF0YVswXSkgJiYgZGF0YVsxXSA9PSAoV1JBUF9BUllfRkxBRyB8IFdSQVBfQ1VSUllfRkxBRyB8IFdSQVBfUEFSVElBTF9GTEFHIHwgV1JBUF9SRUFSR19GTEFHKSAmJiAhZGF0YVs0XS5sZW5ndGggJiYgZGF0YVs5XSA9PSAxID8gd3JhcHBlciA9IHdyYXBwZXJbZ2V0RnVuY05hbWUoZGF0YVswXSldLmFwcGx5KHdyYXBwZXIsIGRhdGFbM10pIDogd3JhcHBlciA9IGZ1bmMubGVuZ3RoID09IDEgJiYgaXNMYXppYWJsZShmdW5jKSA/IHdyYXBwZXJbZnVuY05hbWVdKCkgOiB3cmFwcGVyLnRocnUoZnVuYyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzLCB2YWx1ZSA9IGFyZ3NbMF07XG4gICAgICAgICAgICAgIGlmICh3cmFwcGVyICYmIGFyZ3MubGVuZ3RoID09IDEgJiYgaXNBcnJheSh2YWx1ZSkpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHdyYXBwZXIucGxhbnQodmFsdWUpLnZhbHVlKCk7XG4gICAgICAgICAgICAgIGZvciAodmFyIGluZGV4MiA9IDAsIHJlc3VsdDIgPSBsZW5ndGggPyBmdW5jc1tpbmRleDJdLmFwcGx5KHRoaXMsIGFyZ3MpIDogdmFsdWU7ICsraW5kZXgyIDwgbGVuZ3RoOyApXG4gICAgICAgICAgICAgICAgcmVzdWx0MiA9IGZ1bmNzW2luZGV4Ml0uY2FsbCh0aGlzLCByZXN1bHQyKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZUh5YnJpZChmdW5jLCBiaXRtYXNrLCB0aGlzQXJnLCBwYXJ0aWFscywgaG9sZGVycywgcGFydGlhbHNSaWdodCwgaG9sZGVyc1JpZ2h0LCBhcmdQb3MsIGFyeTIsIGFyaXR5KSB7XG4gICAgICAgICAgdmFyIGlzQXJ5ID0gYml0bWFzayAmIFdSQVBfQVJZX0ZMQUcsIGlzQmluZCA9IGJpdG1hc2sgJiBXUkFQX0JJTkRfRkxBRywgaXNCaW5kS2V5ID0gYml0bWFzayAmIFdSQVBfQklORF9LRVlfRkxBRywgaXNDdXJyaWVkID0gYml0bWFzayAmIChXUkFQX0NVUlJZX0ZMQUcgfCBXUkFQX0NVUlJZX1JJR0hUX0ZMQUcpLCBpc0ZsaXAgPSBiaXRtYXNrICYgV1JBUF9GTElQX0ZMQUcsIEN0b3IgPSBpc0JpbmRLZXkgPyB1bmRlZmluZWQkMSA6IGNyZWF0ZUN0b3IoZnVuYyk7XG4gICAgICAgICAgZnVuY3Rpb24gd3JhcHBlcigpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBBcnJheTIobGVuZ3RoKSwgaW5kZXggPSBsZW5ndGg7IGluZGV4LS07IClcbiAgICAgICAgICAgICAgYXJnc1tpbmRleF0gPSBhcmd1bWVudHNbaW5kZXhdO1xuICAgICAgICAgICAgaWYgKGlzQ3VycmllZClcbiAgICAgICAgICAgICAgdmFyIHBsYWNlaG9sZGVyID0gZ2V0SG9sZGVyKHdyYXBwZXIpLCBob2xkZXJzQ291bnQgPSBjb3VudEhvbGRlcnMoYXJncywgcGxhY2Vob2xkZXIpO1xuICAgICAgICAgICAgaWYgKHBhcnRpYWxzICYmIChhcmdzID0gY29tcG9zZUFyZ3MoYXJncywgcGFydGlhbHMsIGhvbGRlcnMsIGlzQ3VycmllZCkpLCBwYXJ0aWFsc1JpZ2h0ICYmIChhcmdzID0gY29tcG9zZUFyZ3NSaWdodChhcmdzLCBwYXJ0aWFsc1JpZ2h0LCBob2xkZXJzUmlnaHQsIGlzQ3VycmllZCkpLCBsZW5ndGggLT0gaG9sZGVyc0NvdW50LCBpc0N1cnJpZWQgJiYgbGVuZ3RoIDwgYXJpdHkpIHtcbiAgICAgICAgICAgICAgdmFyIG5ld0hvbGRlcnMgPSByZXBsYWNlSG9sZGVycyhhcmdzLCBwbGFjZWhvbGRlcik7XG4gICAgICAgICAgICAgIHJldHVybiBjcmVhdGVSZWN1cnJ5KFxuICAgICAgICAgICAgICAgIGZ1bmMsXG4gICAgICAgICAgICAgICAgYml0bWFzayxcbiAgICAgICAgICAgICAgICBjcmVhdGVIeWJyaWQsXG4gICAgICAgICAgICAgICAgd3JhcHBlci5wbGFjZWhvbGRlcixcbiAgICAgICAgICAgICAgICB0aGlzQXJnLFxuICAgICAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgICAgICAgICAgbmV3SG9sZGVycyxcbiAgICAgICAgICAgICAgICBhcmdQb3MsXG4gICAgICAgICAgICAgICAgYXJ5MixcbiAgICAgICAgICAgICAgICBhcml0eSAtIGxlbmd0aFxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdmFyIHRoaXNCaW5kaW5nID0gaXNCaW5kID8gdGhpc0FyZyA6IHRoaXMsIGZuID0gaXNCaW5kS2V5ID8gdGhpc0JpbmRpbmdbZnVuY10gOiBmdW5jO1xuICAgICAgICAgICAgcmV0dXJuIGxlbmd0aCA9IGFyZ3MubGVuZ3RoLCBhcmdQb3MgPyBhcmdzID0gcmVvcmRlcihhcmdzLCBhcmdQb3MpIDogaXNGbGlwICYmIGxlbmd0aCA+IDEgJiYgYXJncy5yZXZlcnNlKCksIGlzQXJ5ICYmIGFyeTIgPCBsZW5ndGggJiYgKGFyZ3MubGVuZ3RoID0gYXJ5MiksIHRoaXMgJiYgdGhpcyAhPT0gcm9vdCAmJiB0aGlzIGluc3RhbmNlb2Ygd3JhcHBlciAmJiAoZm4gPSBDdG9yIHx8IGNyZWF0ZUN0b3IoZm4pKSwgZm4uYXBwbHkodGhpc0JpbmRpbmcsIGFyZ3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gd3JhcHBlcjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVJbnZlcnRlcihzZXR0ZXIsIHRvSXRlcmF0ZWUpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24ob2JqZWN0LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlSW52ZXJ0ZXIob2JqZWN0LCBzZXR0ZXIsIHRvSXRlcmF0ZWUoaXRlcmF0ZWUyKSwge30pO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlTWF0aE9wZXJhdGlvbihvcGVyYXRvciwgZGVmYXVsdFZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHZhbHVlLCBvdGhlcikge1xuICAgICAgICAgICAgdmFyIHJlc3VsdDI7XG4gICAgICAgICAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCQxICYmIG90aGVyID09PSB1bmRlZmluZWQkMSlcbiAgICAgICAgICAgICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkJDEgJiYgKHJlc3VsdDIgPSB2YWx1ZSksIG90aGVyICE9PSB1bmRlZmluZWQkMSkge1xuICAgICAgICAgICAgICBpZiAocmVzdWx0MiA9PT0gdW5kZWZpbmVkJDEpXG4gICAgICAgICAgICAgICAgcmV0dXJuIG90aGVyO1xuICAgICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIiB8fCB0eXBlb2Ygb3RoZXIgPT0gXCJzdHJpbmdcIiA/ICh2YWx1ZSA9IGJhc2VUb1N0cmluZyh2YWx1ZSksIG90aGVyID0gYmFzZVRvU3RyaW5nKG90aGVyKSkgOiAodmFsdWUgPSBiYXNlVG9OdW1iZXIodmFsdWUpLCBvdGhlciA9IGJhc2VUb051bWJlcihvdGhlcikpLCByZXN1bHQyID0gb3BlcmF0b3IodmFsdWUsIG90aGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlT3ZlcihhcnJheUZ1bmMpIHtcbiAgICAgICAgICByZXR1cm4gZmxhdFJlc3QoZnVuY3Rpb24oaXRlcmF0ZWVzKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlcmF0ZWVzID0gYXJyYXlNYXAoaXRlcmF0ZWVzLCBiYXNlVW5hcnkoZ2V0SXRlcmF0ZWUoKSkpLCBiYXNlUmVzdChmdW5jdGlvbihhcmdzKSB7XG4gICAgICAgICAgICAgIHZhciB0aGlzQXJnID0gdGhpcztcbiAgICAgICAgICAgICAgcmV0dXJuIGFycmF5RnVuYyhpdGVyYXRlZXMsIGZ1bmN0aW9uKGl0ZXJhdGVlMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcHBseShpdGVyYXRlZTIsIHRoaXNBcmcsIGFyZ3MpO1xuICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVBhZGRpbmcobGVuZ3RoLCBjaGFycykge1xuICAgICAgICAgIGNoYXJzID0gY2hhcnMgPT09IHVuZGVmaW5lZCQxID8gXCIgXCIgOiBiYXNlVG9TdHJpbmcoY2hhcnMpO1xuICAgICAgICAgIHZhciBjaGFyc0xlbmd0aCA9IGNoYXJzLmxlbmd0aDtcbiAgICAgICAgICBpZiAoY2hhcnNMZW5ndGggPCAyKVxuICAgICAgICAgICAgcmV0dXJuIGNoYXJzTGVuZ3RoID8gYmFzZVJlcGVhdChjaGFycywgbGVuZ3RoKSA6IGNoYXJzO1xuICAgICAgICAgIHZhciByZXN1bHQyID0gYmFzZVJlcGVhdChjaGFycywgbmF0aXZlQ2VpbChsZW5ndGggLyBzdHJpbmdTaXplKGNoYXJzKSkpO1xuICAgICAgICAgIHJldHVybiBoYXNVbmljb2RlKGNoYXJzKSA/IGNhc3RTbGljZShzdHJpbmdUb0FycmF5KHJlc3VsdDIpLCAwLCBsZW5ndGgpLmpvaW4oXCJcIikgOiByZXN1bHQyLnNsaWNlKDAsIGxlbmd0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlUGFydGlhbChmdW5jLCBiaXRtYXNrLCB0aGlzQXJnLCBwYXJ0aWFscykge1xuICAgICAgICAgIHZhciBpc0JpbmQgPSBiaXRtYXNrICYgV1JBUF9CSU5EX0ZMQUcsIEN0b3IgPSBjcmVhdGVDdG9yKGZ1bmMpO1xuICAgICAgICAgIGZ1bmN0aW9uIHdyYXBwZXIoKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBhcmdzSW5kZXggPSAtMSwgYXJnc0xlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGgsIGxlZnRJbmRleCA9IC0xLCBsZWZ0TGVuZ3RoID0gcGFydGlhbHMubGVuZ3RoLCBhcmdzID0gQXJyYXkyKGxlZnRMZW5ndGggKyBhcmdzTGVuZ3RoKSwgZm4gPSB0aGlzICYmIHRoaXMgIT09IHJvb3QgJiYgdGhpcyBpbnN0YW5jZW9mIHdyYXBwZXIgPyBDdG9yIDogZnVuYzsgKytsZWZ0SW5kZXggPCBsZWZ0TGVuZ3RoOyApXG4gICAgICAgICAgICAgIGFyZ3NbbGVmdEluZGV4XSA9IHBhcnRpYWxzW2xlZnRJbmRleF07XG4gICAgICAgICAgICBmb3IgKDsgYXJnc0xlbmd0aC0tOyApXG4gICAgICAgICAgICAgIGFyZ3NbbGVmdEluZGV4KytdID0gYXJndW1lbnRzWysrYXJnc0luZGV4XTtcbiAgICAgICAgICAgIHJldHVybiBhcHBseShmbiwgaXNCaW5kID8gdGhpc0FyZyA6IHRoaXMsIGFyZ3MpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gd3JhcHBlcjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVSYW5nZShmcm9tUmlnaHQpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24oc3RhcnQsIGVuZCwgc3RlcCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0ZXAgJiYgdHlwZW9mIHN0ZXAgIT0gXCJudW1iZXJcIiAmJiBpc0l0ZXJhdGVlQ2FsbChzdGFydCwgZW5kLCBzdGVwKSAmJiAoZW5kID0gc3RlcCA9IHVuZGVmaW5lZCQxKSwgc3RhcnQgPSB0b0Zpbml0ZShzdGFydCksIGVuZCA9PT0gdW5kZWZpbmVkJDEgPyAoZW5kID0gc3RhcnQsIHN0YXJ0ID0gMCkgOiBlbmQgPSB0b0Zpbml0ZShlbmQpLCBzdGVwID0gc3RlcCA9PT0gdW5kZWZpbmVkJDEgPyBzdGFydCA8IGVuZCA/IDEgOiAtMSA6IHRvRmluaXRlKHN0ZXApLCBiYXNlUmFuZ2Uoc3RhcnQsIGVuZCwgc3RlcCwgZnJvbVJpZ2h0KTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVJlbGF0aW9uYWxPcGVyYXRpb24ob3BlcmF0b3IpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24odmFsdWUsIG90aGVyKSB7XG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09IFwic3RyaW5nXCIgJiYgdHlwZW9mIG90aGVyID09IFwic3RyaW5nXCIgfHwgKHZhbHVlID0gdG9OdW1iZXIodmFsdWUpLCBvdGhlciA9IHRvTnVtYmVyKG90aGVyKSksIG9wZXJhdG9yKHZhbHVlLCBvdGhlcik7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVSZWN1cnJ5KGZ1bmMsIGJpdG1hc2ssIHdyYXBGdW5jLCBwbGFjZWhvbGRlciwgdGhpc0FyZywgcGFydGlhbHMsIGhvbGRlcnMsIGFyZ1BvcywgYXJ5MiwgYXJpdHkpIHtcbiAgICAgICAgICB2YXIgaXNDdXJyeSA9IGJpdG1hc2sgJiBXUkFQX0NVUlJZX0ZMQUcsIG5ld0hvbGRlcnMgPSBpc0N1cnJ5ID8gaG9sZGVycyA6IHVuZGVmaW5lZCQxLCBuZXdIb2xkZXJzUmlnaHQgPSBpc0N1cnJ5ID8gdW5kZWZpbmVkJDEgOiBob2xkZXJzLCBuZXdQYXJ0aWFscyA9IGlzQ3VycnkgPyBwYXJ0aWFscyA6IHVuZGVmaW5lZCQxLCBuZXdQYXJ0aWFsc1JpZ2h0ID0gaXNDdXJyeSA/IHVuZGVmaW5lZCQxIDogcGFydGlhbHM7XG4gICAgICAgICAgYml0bWFzayB8PSBpc0N1cnJ5ID8gV1JBUF9QQVJUSUFMX0ZMQUcgOiBXUkFQX1BBUlRJQUxfUklHSFRfRkxBRywgYml0bWFzayAmPSB+KGlzQ3VycnkgPyBXUkFQX1BBUlRJQUxfUklHSFRfRkxBRyA6IFdSQVBfUEFSVElBTF9GTEFHKSwgYml0bWFzayAmIFdSQVBfQ1VSUllfQk9VTkRfRkxBRyB8fCAoYml0bWFzayAmPSB+KFdSQVBfQklORF9GTEFHIHwgV1JBUF9CSU5EX0tFWV9GTEFHKSk7XG4gICAgICAgICAgdmFyIG5ld0RhdGEgPSBbXG4gICAgICAgICAgICBmdW5jLFxuICAgICAgICAgICAgYml0bWFzayxcbiAgICAgICAgICAgIHRoaXNBcmcsXG4gICAgICAgICAgICBuZXdQYXJ0aWFscyxcbiAgICAgICAgICAgIG5ld0hvbGRlcnMsXG4gICAgICAgICAgICBuZXdQYXJ0aWFsc1JpZ2h0LFxuICAgICAgICAgICAgbmV3SG9sZGVyc1JpZ2h0LFxuICAgICAgICAgICAgYXJnUG9zLFxuICAgICAgICAgICAgYXJ5MixcbiAgICAgICAgICAgIGFyaXR5XG4gICAgICAgICAgXSwgcmVzdWx0MiA9IHdyYXBGdW5jLmFwcGx5KHVuZGVmaW5lZCQxLCBuZXdEYXRhKTtcbiAgICAgICAgICByZXR1cm4gaXNMYXppYWJsZShmdW5jKSAmJiBzZXREYXRhKHJlc3VsdDIsIG5ld0RhdGEpLCByZXN1bHQyLnBsYWNlaG9sZGVyID0gcGxhY2Vob2xkZXIsIHNldFdyYXBUb1N0cmluZyhyZXN1bHQyLCBmdW5jLCBiaXRtYXNrKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjcmVhdGVSb3VuZChtZXRob2ROYW1lKSB7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBNYXRoW21ldGhvZE5hbWVdO1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbihudW1iZXIsIHByZWNpc2lvbikge1xuICAgICAgICAgICAgaWYgKG51bWJlciA9IHRvTnVtYmVyKG51bWJlciksIHByZWNpc2lvbiA9IHByZWNpc2lvbiA9PSBudWxsID8gMCA6IG5hdGl2ZU1pbih0b0ludGVnZXIocHJlY2lzaW9uKSwgMjkyKSwgcHJlY2lzaW9uICYmIG5hdGl2ZUlzRmluaXRlKG51bWJlcikpIHtcbiAgICAgICAgICAgICAgdmFyIHBhaXIgPSAodG9TdHJpbmcobnVtYmVyKSArIFwiZVwiKS5zcGxpdChcImVcIiksIHZhbHVlID0gZnVuYyhwYWlyWzBdICsgXCJlXCIgKyAoK3BhaXJbMV0gKyBwcmVjaXNpb24pKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHBhaXIgPSAodG9TdHJpbmcodmFsdWUpICsgXCJlXCIpLnNwbGl0KFwiZVwiKSwgKyhwYWlyWzBdICsgXCJlXCIgKyAoK3BhaXJbMV0gLSBwcmVjaXNpb24pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmdW5jKG51bWJlcik7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgY3JlYXRlU2V0ID0gU2V0ICYmIDEgLyBzZXRUb0FycmF5KG5ldyBTZXQoWywgLTBdKSlbMV0gPT0gSU5GSU5JVFkgPyBmdW5jdGlvbih2YWx1ZXMyKSB7XG4gICAgICAgICAgcmV0dXJuIG5ldyBTZXQodmFsdWVzMik7XG4gICAgICAgIH0gOiBub29wO1xuICAgICAgICBmdW5jdGlvbiBjcmVhdGVUb1BhaXJzKGtleXNGdW5jKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgICAgdmFyIHRhZyA9IGdldFRhZyhvYmplY3QpO1xuICAgICAgICAgICAgcmV0dXJuIHRhZyA9PSBtYXBUYWcgPyBtYXBUb0FycmF5KG9iamVjdCkgOiB0YWcgPT0gc2V0VGFnID8gc2V0VG9QYWlycyhvYmplY3QpIDogYmFzZVRvUGFpcnMob2JqZWN0LCBrZXlzRnVuYyhvYmplY3QpKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZVdyYXAoZnVuYywgYml0bWFzaywgdGhpc0FyZywgcGFydGlhbHMsIGhvbGRlcnMsIGFyZ1BvcywgYXJ5MiwgYXJpdHkpIHtcbiAgICAgICAgICB2YXIgaXNCaW5kS2V5ID0gYml0bWFzayAmIFdSQVBfQklORF9LRVlfRkxBRztcbiAgICAgICAgICBpZiAoIWlzQmluZEtleSAmJiB0eXBlb2YgZnVuYyAhPSBcImZ1bmN0aW9uXCIpXG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IHBhcnRpYWxzID8gcGFydGlhbHMubGVuZ3RoIDogMDtcbiAgICAgICAgICBpZiAobGVuZ3RoIHx8IChiaXRtYXNrICY9IH4oV1JBUF9QQVJUSUFMX0ZMQUcgfCBXUkFQX1BBUlRJQUxfUklHSFRfRkxBRyksIHBhcnRpYWxzID0gaG9sZGVycyA9IHVuZGVmaW5lZCQxKSwgYXJ5MiA9IGFyeTIgPT09IHVuZGVmaW5lZCQxID8gYXJ5MiA6IG5hdGl2ZU1heCh0b0ludGVnZXIoYXJ5MiksIDApLCBhcml0eSA9IGFyaXR5ID09PSB1bmRlZmluZWQkMSA/IGFyaXR5IDogdG9JbnRlZ2VyKGFyaXR5KSwgbGVuZ3RoIC09IGhvbGRlcnMgPyBob2xkZXJzLmxlbmd0aCA6IDAsIGJpdG1hc2sgJiBXUkFQX1BBUlRJQUxfUklHSFRfRkxBRykge1xuICAgICAgICAgICAgdmFyIHBhcnRpYWxzUmlnaHQgPSBwYXJ0aWFscywgaG9sZGVyc1JpZ2h0ID0gaG9sZGVycztcbiAgICAgICAgICAgIHBhcnRpYWxzID0gaG9sZGVycyA9IHVuZGVmaW5lZCQxO1xuICAgICAgICAgIH1cbiAgICAgICAgICB2YXIgZGF0YSA9IGlzQmluZEtleSA/IHVuZGVmaW5lZCQxIDogZ2V0RGF0YShmdW5jKSwgbmV3RGF0YSA9IFtcbiAgICAgICAgICAgIGZ1bmMsXG4gICAgICAgICAgICBiaXRtYXNrLFxuICAgICAgICAgICAgdGhpc0FyZyxcbiAgICAgICAgICAgIHBhcnRpYWxzLFxuICAgICAgICAgICAgaG9sZGVycyxcbiAgICAgICAgICAgIHBhcnRpYWxzUmlnaHQsXG4gICAgICAgICAgICBob2xkZXJzUmlnaHQsXG4gICAgICAgICAgICBhcmdQb3MsXG4gICAgICAgICAgICBhcnkyLFxuICAgICAgICAgICAgYXJpdHlcbiAgICAgICAgICBdO1xuICAgICAgICAgIGlmIChkYXRhICYmIG1lcmdlRGF0YShuZXdEYXRhLCBkYXRhKSwgZnVuYyA9IG5ld0RhdGFbMF0sIGJpdG1hc2sgPSBuZXdEYXRhWzFdLCB0aGlzQXJnID0gbmV3RGF0YVsyXSwgcGFydGlhbHMgPSBuZXdEYXRhWzNdLCBob2xkZXJzID0gbmV3RGF0YVs0XSwgYXJpdHkgPSBuZXdEYXRhWzldID0gbmV3RGF0YVs5XSA9PT0gdW5kZWZpbmVkJDEgPyBpc0JpbmRLZXkgPyAwIDogZnVuYy5sZW5ndGggOiBuYXRpdmVNYXgobmV3RGF0YVs5XSAtIGxlbmd0aCwgMCksICFhcml0eSAmJiBiaXRtYXNrICYgKFdSQVBfQ1VSUllfRkxBRyB8IFdSQVBfQ1VSUllfUklHSFRfRkxBRykgJiYgKGJpdG1hc2sgJj0gfihXUkFQX0NVUlJZX0ZMQUcgfCBXUkFQX0NVUlJZX1JJR0hUX0ZMQUcpKSwgIWJpdG1hc2sgfHwgYml0bWFzayA9PSBXUkFQX0JJTkRfRkxBRylcbiAgICAgICAgICAgIHZhciByZXN1bHQyID0gY3JlYXRlQmluZChmdW5jLCBiaXRtYXNrLCB0aGlzQXJnKTtcbiAgICAgICAgICBlbHNlIGJpdG1hc2sgPT0gV1JBUF9DVVJSWV9GTEFHIHx8IGJpdG1hc2sgPT0gV1JBUF9DVVJSWV9SSUdIVF9GTEFHID8gcmVzdWx0MiA9IGNyZWF0ZUN1cnJ5KGZ1bmMsIGJpdG1hc2ssIGFyaXR5KSA6IChiaXRtYXNrID09IFdSQVBfUEFSVElBTF9GTEFHIHx8IGJpdG1hc2sgPT0gKFdSQVBfQklORF9GTEFHIHwgV1JBUF9QQVJUSUFMX0ZMQUcpKSAmJiAhaG9sZGVycy5sZW5ndGggPyByZXN1bHQyID0gY3JlYXRlUGFydGlhbChmdW5jLCBiaXRtYXNrLCB0aGlzQXJnLCBwYXJ0aWFscykgOiByZXN1bHQyID0gY3JlYXRlSHlicmlkLmFwcGx5KHVuZGVmaW5lZCQxLCBuZXdEYXRhKTtcbiAgICAgICAgICB2YXIgc2V0dGVyID0gZGF0YSA/IGJhc2VTZXREYXRhIDogc2V0RGF0YTtcbiAgICAgICAgICByZXR1cm4gc2V0V3JhcFRvU3RyaW5nKHNldHRlcihyZXN1bHQyLCBuZXdEYXRhKSwgZnVuYywgYml0bWFzayk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY3VzdG9tRGVmYXVsdHNBc3NpZ25JbihvYmpWYWx1ZSwgc3JjVmFsdWUsIGtleSwgb2JqZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIG9ialZhbHVlID09PSB1bmRlZmluZWQkMSB8fCBlcShvYmpWYWx1ZSwgb2JqZWN0UHJvdG9ba2V5XSkgJiYgIWhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpID8gc3JjVmFsdWUgOiBvYmpWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjdXN0b21EZWZhdWx0c01lcmdlKG9ialZhbHVlLCBzcmNWYWx1ZSwga2V5LCBvYmplY3QsIHNvdXJjZSwgc3RhY2spIHtcbiAgICAgICAgICByZXR1cm4gaXNPYmplY3Qob2JqVmFsdWUpICYmIGlzT2JqZWN0KHNyY1ZhbHVlKSAmJiAoc3RhY2suc2V0KHNyY1ZhbHVlLCBvYmpWYWx1ZSksIGJhc2VNZXJnZShvYmpWYWx1ZSwgc3JjVmFsdWUsIHVuZGVmaW5lZCQxLCBjdXN0b21EZWZhdWx0c01lcmdlLCBzdGFjayksIHN0YWNrLmRlbGV0ZShzcmNWYWx1ZSkpLCBvYmpWYWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjdXN0b21PbWl0Q2xvbmUodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaXNQbGFpbk9iamVjdCh2YWx1ZSkgPyB1bmRlZmluZWQkMSA6IHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGVxdWFsQXJyYXlzKGFycmF5LCBvdGhlciwgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICAgICAgICAgIHZhciBpc1BhcnRpYWwgPSBiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUcsIGFyckxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgb3RoTGVuZ3RoID0gb3RoZXIubGVuZ3RoO1xuICAgICAgICAgIGlmIChhcnJMZW5ndGggIT0gb3RoTGVuZ3RoICYmICEoaXNQYXJ0aWFsICYmIG90aExlbmd0aCA+IGFyckxlbmd0aCkpXG4gICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgdmFyIGFyclN0YWNrZWQgPSBzdGFjay5nZXQoYXJyYXkpLCBvdGhTdGFja2VkID0gc3RhY2suZ2V0KG90aGVyKTtcbiAgICAgICAgICBpZiAoYXJyU3RhY2tlZCAmJiBvdGhTdGFja2VkKVxuICAgICAgICAgICAgcmV0dXJuIGFyclN0YWNrZWQgPT0gb3RoZXIgJiYgb3RoU3RhY2tlZCA9PSBhcnJheTtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMSwgcmVzdWx0MiA9ICEwLCBzZWVuID0gYml0bWFzayAmIENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcgPyBuZXcgU2V0Q2FjaGUoKSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICAgIGZvciAoc3RhY2suc2V0KGFycmF5LCBvdGhlciksIHN0YWNrLnNldChvdGhlciwgYXJyYXkpOyArK2luZGV4IDwgYXJyTGVuZ3RoOyApIHtcbiAgICAgICAgICAgIHZhciBhcnJWYWx1ZSA9IGFycmF5W2luZGV4XSwgb3RoVmFsdWUgPSBvdGhlcltpbmRleF07XG4gICAgICAgICAgICBpZiAoY3VzdG9taXplcilcbiAgICAgICAgICAgICAgdmFyIGNvbXBhcmVkID0gaXNQYXJ0aWFsID8gY3VzdG9taXplcihvdGhWYWx1ZSwgYXJyVmFsdWUsIGluZGV4LCBvdGhlciwgYXJyYXksIHN0YWNrKSA6IGN1c3RvbWl6ZXIoYXJyVmFsdWUsIG90aFZhbHVlLCBpbmRleCwgYXJyYXksIG90aGVyLCBzdGFjayk7XG4gICAgICAgICAgICBpZiAoY29tcGFyZWQgIT09IHVuZGVmaW5lZCQxKSB7XG4gICAgICAgICAgICAgIGlmIChjb21wYXJlZClcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgcmVzdWx0MiA9ICExO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzZWVuKSB7XG4gICAgICAgICAgICAgIGlmICghYXJyYXlTb21lKG90aGVyLCBmdW5jdGlvbihvdGhWYWx1ZTIsIG90aEluZGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZUhhcyhzZWVuLCBvdGhJbmRleCkgJiYgKGFyclZhbHVlID09PSBvdGhWYWx1ZTIgfHwgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZTIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIHN0YWNrKSkpXG4gICAgICAgICAgICAgICAgICByZXR1cm4gc2Vlbi5wdXNoKG90aEluZGV4KTtcbiAgICAgICAgICAgICAgfSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQyID0gITE7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIShhcnJWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKGFyclZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spKSkge1xuICAgICAgICAgICAgICByZXN1bHQyID0gITE7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gc3RhY2suZGVsZXRlKGFycmF5KSwgc3RhY2suZGVsZXRlKG90aGVyKSwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBlcXVhbEJ5VGFnKG9iamVjdCwgb3RoZXIsIHRhZywgYml0bWFzaywgY3VzdG9taXplciwgZXF1YWxGdW5jLCBzdGFjaykge1xuICAgICAgICAgIHN3aXRjaCAodGFnKSB7XG4gICAgICAgICAgICBjYXNlIGRhdGFWaWV3VGFnOlxuICAgICAgICAgICAgICBpZiAob2JqZWN0LmJ5dGVMZW5ndGggIT0gb3RoZXIuYnl0ZUxlbmd0aCB8fCBvYmplY3QuYnl0ZU9mZnNldCAhPSBvdGhlci5ieXRlT2Zmc2V0KVxuICAgICAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICAgICAgb2JqZWN0ID0gb2JqZWN0LmJ1ZmZlciwgb3RoZXIgPSBvdGhlci5idWZmZXI7XG4gICAgICAgICAgICBjYXNlIGFycmF5QnVmZmVyVGFnOlxuICAgICAgICAgICAgICByZXR1cm4gIShvYmplY3QuYnl0ZUxlbmd0aCAhPSBvdGhlci5ieXRlTGVuZ3RoIHx8ICFlcXVhbEZ1bmMobmV3IFVpbnQ4QXJyYXkob2JqZWN0KSwgbmV3IFVpbnQ4QXJyYXkob3RoZXIpKSk7XG4gICAgICAgICAgICBjYXNlIGJvb2xUYWc6XG4gICAgICAgICAgICBjYXNlIGRhdGVUYWc6XG4gICAgICAgICAgICBjYXNlIG51bWJlclRhZzpcbiAgICAgICAgICAgICAgcmV0dXJuIGVxKCtvYmplY3QsICtvdGhlcik7XG4gICAgICAgICAgICBjYXNlIGVycm9yVGFnOlxuICAgICAgICAgICAgICByZXR1cm4gb2JqZWN0Lm5hbWUgPT0gb3RoZXIubmFtZSAmJiBvYmplY3QubWVzc2FnZSA9PSBvdGhlci5tZXNzYWdlO1xuICAgICAgICAgICAgY2FzZSByZWdleHBUYWc6XG4gICAgICAgICAgICBjYXNlIHN0cmluZ1RhZzpcbiAgICAgICAgICAgICAgcmV0dXJuIG9iamVjdCA9PSBvdGhlciArIFwiXCI7XG4gICAgICAgICAgICBjYXNlIG1hcFRhZzpcbiAgICAgICAgICAgICAgdmFyIGNvbnZlcnQgPSBtYXBUb0FycmF5O1xuICAgICAgICAgICAgY2FzZSBzZXRUYWc6XG4gICAgICAgICAgICAgIHZhciBpc1BhcnRpYWwgPSBiaXRtYXNrICYgQ09NUEFSRV9QQVJUSUFMX0ZMQUc7XG4gICAgICAgICAgICAgIGlmIChjb252ZXJ0IHx8IChjb252ZXJ0ID0gc2V0VG9BcnJheSksIG9iamVjdC5zaXplICE9IG90aGVyLnNpemUgJiYgIWlzUGFydGlhbClcbiAgICAgICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgICAgIHZhciBzdGFja2VkID0gc3RhY2suZ2V0KG9iamVjdCk7XG4gICAgICAgICAgICAgIGlmIChzdGFja2VkKVxuICAgICAgICAgICAgICAgIHJldHVybiBzdGFja2VkID09IG90aGVyO1xuICAgICAgICAgICAgICBiaXRtYXNrIHw9IENPTVBBUkVfVU5PUkRFUkVEX0ZMQUcsIHN0YWNrLnNldChvYmplY3QsIG90aGVyKTtcbiAgICAgICAgICAgICAgdmFyIHJlc3VsdDIgPSBlcXVhbEFycmF5cyhjb252ZXJ0KG9iamVjdCksIGNvbnZlcnQob3RoZXIpLCBiaXRtYXNrLCBjdXN0b21pemVyLCBlcXVhbEZ1bmMsIHN0YWNrKTtcbiAgICAgICAgICAgICAgcmV0dXJuIHN0YWNrLmRlbGV0ZShvYmplY3QpLCByZXN1bHQyO1xuICAgICAgICAgICAgY2FzZSBzeW1ib2xUYWc6XG4gICAgICAgICAgICAgIGlmIChzeW1ib2xWYWx1ZU9mKVxuICAgICAgICAgICAgICAgIHJldHVybiBzeW1ib2xWYWx1ZU9mLmNhbGwob2JqZWN0KSA9PSBzeW1ib2xWYWx1ZU9mLmNhbGwob3RoZXIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZXF1YWxPYmplY3RzKG9iamVjdCwgb3RoZXIsIGJpdG1hc2ssIGN1c3RvbWl6ZXIsIGVxdWFsRnVuYywgc3RhY2spIHtcbiAgICAgICAgICB2YXIgaXNQYXJ0aWFsID0gYml0bWFzayAmIENPTVBBUkVfUEFSVElBTF9GTEFHLCBvYmpQcm9wcyA9IGdldEFsbEtleXMob2JqZWN0KSwgb2JqTGVuZ3RoID0gb2JqUHJvcHMubGVuZ3RoLCBvdGhQcm9wcyA9IGdldEFsbEtleXMob3RoZXIpLCBvdGhMZW5ndGggPSBvdGhQcm9wcy5sZW5ndGg7XG4gICAgICAgICAgaWYgKG9iakxlbmd0aCAhPSBvdGhMZW5ndGggJiYgIWlzUGFydGlhbClcbiAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IG9iakxlbmd0aDsgaW5kZXgtLTsgKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgICAgICAgICAgaWYgKCEoaXNQYXJ0aWFsID8ga2V5IGluIG90aGVyIDogaGFzT3duUHJvcGVydHkuY2FsbChvdGhlciwga2V5KSkpXG4gICAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIG9ialN0YWNrZWQgPSBzdGFjay5nZXQob2JqZWN0KSwgb3RoU3RhY2tlZCA9IHN0YWNrLmdldChvdGhlcik7XG4gICAgICAgICAgaWYgKG9ialN0YWNrZWQgJiYgb3RoU3RhY2tlZClcbiAgICAgICAgICAgIHJldHVybiBvYmpTdGFja2VkID09IG90aGVyICYmIG90aFN0YWNrZWQgPT0gb2JqZWN0O1xuICAgICAgICAgIHZhciByZXN1bHQyID0gITA7XG4gICAgICAgICAgc3RhY2suc2V0KG9iamVjdCwgb3RoZXIpLCBzdGFjay5zZXQob3RoZXIsIG9iamVjdCk7XG4gICAgICAgICAgZm9yICh2YXIgc2tpcEN0b3IgPSBpc1BhcnRpYWw7ICsraW5kZXggPCBvYmpMZW5ndGg7ICkge1xuICAgICAgICAgICAga2V5ID0gb2JqUHJvcHNbaW5kZXhdO1xuICAgICAgICAgICAgdmFyIG9ialZhbHVlID0gb2JqZWN0W2tleV0sIG90aFZhbHVlID0gb3RoZXJba2V5XTtcbiAgICAgICAgICAgIGlmIChjdXN0b21pemVyKVxuICAgICAgICAgICAgICB2YXIgY29tcGFyZWQgPSBpc1BhcnRpYWwgPyBjdXN0b21pemVyKG90aFZhbHVlLCBvYmpWYWx1ZSwga2V5LCBvdGhlciwgb2JqZWN0LCBzdGFjaykgOiBjdXN0b21pemVyKG9ialZhbHVlLCBvdGhWYWx1ZSwga2V5LCBvYmplY3QsIG90aGVyLCBzdGFjayk7XG4gICAgICAgICAgICBpZiAoIShjb21wYXJlZCA9PT0gdW5kZWZpbmVkJDEgPyBvYmpWYWx1ZSA9PT0gb3RoVmFsdWUgfHwgZXF1YWxGdW5jKG9ialZhbHVlLCBvdGhWYWx1ZSwgYml0bWFzaywgY3VzdG9taXplciwgc3RhY2spIDogY29tcGFyZWQpKSB7XG4gICAgICAgICAgICAgIHJlc3VsdDIgPSAhMTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBza2lwQ3RvciB8fCAoc2tpcEN0b3IgPSBrZXkgPT0gXCJjb25zdHJ1Y3RvclwiKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKHJlc3VsdDIgJiYgIXNraXBDdG9yKSB7XG4gICAgICAgICAgICB2YXIgb2JqQ3RvciA9IG9iamVjdC5jb25zdHJ1Y3Rvciwgb3RoQ3RvciA9IG90aGVyLmNvbnN0cnVjdG9yO1xuICAgICAgICAgICAgb2JqQ3RvciAhPSBvdGhDdG9yICYmIFwiY29uc3RydWN0b3JcIiBpbiBvYmplY3QgJiYgXCJjb25zdHJ1Y3RvclwiIGluIG90aGVyICYmICEodHlwZW9mIG9iakN0b3IgPT0gXCJmdW5jdGlvblwiICYmIG9iakN0b3IgaW5zdGFuY2VvZiBvYmpDdG9yICYmIHR5cGVvZiBvdGhDdG9yID09IFwiZnVuY3Rpb25cIiAmJiBvdGhDdG9yIGluc3RhbmNlb2Ygb3RoQ3RvcikgJiYgKHJlc3VsdDIgPSAhMSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBzdGFjay5kZWxldGUob2JqZWN0KSwgc3RhY2suZGVsZXRlKG90aGVyKSwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBmbGF0UmVzdChmdW5jKSB7XG4gICAgICAgICAgcmV0dXJuIHNldFRvU3RyaW5nKG92ZXJSZXN0KGZ1bmMsIHVuZGVmaW5lZCQxLCBmbGF0dGVuKSwgZnVuYyArIFwiXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldEFsbEtleXMob2JqZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VHZXRBbGxLZXlzKG9iamVjdCwga2V5cywgZ2V0U3ltYm9scyk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZ2V0QWxsS2V5c0luKG9iamVjdCkge1xuICAgICAgICAgIHJldHVybiBiYXNlR2V0QWxsS2V5cyhvYmplY3QsIGtleXNJbiwgZ2V0U3ltYm9sc0luKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZ2V0RGF0YSA9IG1ldGFNYXAgPyBmdW5jdGlvbihmdW5jKSB7XG4gICAgICAgICAgcmV0dXJuIG1ldGFNYXAuZ2V0KGZ1bmMpO1xuICAgICAgICB9IDogbm9vcDtcbiAgICAgICAgZnVuY3Rpb24gZ2V0RnVuY05hbWUoZnVuYykge1xuICAgICAgICAgIGZvciAodmFyIHJlc3VsdDIgPSBmdW5jLm5hbWUgKyBcIlwiLCBhcnJheSA9IHJlYWxOYW1lc1tyZXN1bHQyXSwgbGVuZ3RoID0gaGFzT3duUHJvcGVydHkuY2FsbChyZWFsTmFtZXMsIHJlc3VsdDIpID8gYXJyYXkubGVuZ3RoIDogMDsgbGVuZ3RoLS07ICkge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSBhcnJheVtsZW5ndGhdLCBvdGhlckZ1bmMgPSBkYXRhLmZ1bmM7XG4gICAgICAgICAgICBpZiAob3RoZXJGdW5jID09IG51bGwgfHwgb3RoZXJGdW5jID09IGZ1bmMpXG4gICAgICAgICAgICAgIHJldHVybiBkYXRhLm5hbWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldEhvbGRlcihmdW5jKSB7XG4gICAgICAgICAgdmFyIG9iamVjdCA9IGhhc093blByb3BlcnR5LmNhbGwobG9kYXNoMiwgXCJwbGFjZWhvbGRlclwiKSA/IGxvZGFzaDIgOiBmdW5jO1xuICAgICAgICAgIHJldHVybiBvYmplY3QucGxhY2Vob2xkZXI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZ2V0SXRlcmF0ZWUoKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBsb2Rhc2gyLml0ZXJhdGVlIHx8IGl0ZXJhdGVlO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyID0gcmVzdWx0MiA9PT0gaXRlcmF0ZWUgPyBiYXNlSXRlcmF0ZWUgOiByZXN1bHQyLCBhcmd1bWVudHMubGVuZ3RoID8gcmVzdWx0Mihhcmd1bWVudHNbMF0sIGFyZ3VtZW50c1sxXSkgOiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldE1hcERhdGEobWFwMiwga2V5KSB7XG4gICAgICAgICAgdmFyIGRhdGEgPSBtYXAyLl9fZGF0YV9fO1xuICAgICAgICAgIHJldHVybiBpc0tleWFibGUoa2V5KSA/IGRhdGFbdHlwZW9mIGtleSA9PSBcInN0cmluZ1wiID8gXCJzdHJpbmdcIiA6IFwiaGFzaFwiXSA6IGRhdGEubWFwO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldE1hdGNoRGF0YShvYmplY3QpIHtcbiAgICAgICAgICBmb3IgKHZhciByZXN1bHQyID0ga2V5cyhvYmplY3QpLCBsZW5ndGggPSByZXN1bHQyLmxlbmd0aDsgbGVuZ3RoLS07ICkge1xuICAgICAgICAgICAgdmFyIGtleSA9IHJlc3VsdDJbbGVuZ3RoXSwgdmFsdWUgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAgIHJlc3VsdDJbbGVuZ3RoXSA9IFtrZXksIHZhbHVlLCBpc1N0cmljdENvbXBhcmFibGUodmFsdWUpXTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZ2V0TmF0aXZlKG9iamVjdCwga2V5KSB7XG4gICAgICAgICAgdmFyIHZhbHVlID0gZ2V0VmFsdWUob2JqZWN0LCBrZXkpO1xuICAgICAgICAgIHJldHVybiBiYXNlSXNOYXRpdmUodmFsdWUpID8gdmFsdWUgOiB1bmRlZmluZWQkMTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBnZXRSYXdUYWcodmFsdWUpIHtcbiAgICAgICAgICB2YXIgaXNPd24gPSBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBzeW1Ub1N0cmluZ1RhZyksIHRhZyA9IHZhbHVlW3N5bVRvU3RyaW5nVGFnXTtcbiAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdW5kZWZpbmVkJDE7XG4gICAgICAgICAgICB2YXIgdW5tYXNrZWQgPSAhMDtcbiAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICB9XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbiAgICAgICAgICByZXR1cm4gdW5tYXNrZWQgJiYgKGlzT3duID8gdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdGFnIDogZGVsZXRlIHZhbHVlW3N5bVRvU3RyaW5nVGFnXSksIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGdldFN5bWJvbHMgPSBuYXRpdmVHZXRTeW1ib2xzID8gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gW10gOiAob2JqZWN0ID0gT2JqZWN0MihvYmplY3QpLCBhcnJheUZpbHRlcihuYXRpdmVHZXRTeW1ib2xzKG9iamVjdCksIGZ1bmN0aW9uKHN5bWJvbCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwob2JqZWN0LCBzeW1ib2wpO1xuICAgICAgICAgIH0pKTtcbiAgICAgICAgfSA6IHN0dWJBcnJheSwgZ2V0U3ltYm9sc0luID0gbmF0aXZlR2V0U3ltYm9scyA/IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgICAgICAgIGZvciAodmFyIHJlc3VsdDIgPSBbXTsgb2JqZWN0OyApXG4gICAgICAgICAgICBhcnJheVB1c2gocmVzdWx0MiwgZ2V0U3ltYm9scyhvYmplY3QpKSwgb2JqZWN0ID0gZ2V0UHJvdG90eXBlKG9iamVjdCk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH0gOiBzdHViQXJyYXksIGdldFRhZyA9IGJhc2VHZXRUYWc7XG4gICAgICAgIChEYXRhVmlldyAmJiBnZXRUYWcobmV3IERhdGFWaWV3KG5ldyBBcnJheUJ1ZmZlcigxKSkpICE9IGRhdGFWaWV3VGFnIHx8IE1hcCAmJiBnZXRUYWcobmV3IE1hcCgpKSAhPSBtYXBUYWcgfHwgUHJvbWlzZTIgJiYgZ2V0VGFnKFByb21pc2UyLnJlc29sdmUoKSkgIT0gcHJvbWlzZVRhZyB8fCBTZXQgJiYgZ2V0VGFnKG5ldyBTZXQoKSkgIT0gc2V0VGFnIHx8IFdlYWtNYXAgJiYgZ2V0VGFnKG5ldyBXZWFrTWFwKCkpICE9IHdlYWtNYXBUYWcpICYmIChnZXRUYWcgPSBmdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gYmFzZUdldFRhZyh2YWx1ZSksIEN0b3IgPSByZXN1bHQyID09IG9iamVjdFRhZyA/IHZhbHVlLmNvbnN0cnVjdG9yIDogdW5kZWZpbmVkJDEsIGN0b3JTdHJpbmcgPSBDdG9yID8gdG9Tb3VyY2UoQ3RvcikgOiBcIlwiO1xuICAgICAgICAgIGlmIChjdG9yU3RyaW5nKVxuICAgICAgICAgICAgc3dpdGNoIChjdG9yU3RyaW5nKSB7XG4gICAgICAgICAgICAgIGNhc2UgZGF0YVZpZXdDdG9yU3RyaW5nOlxuICAgICAgICAgICAgICAgIHJldHVybiBkYXRhVmlld1RhZztcbiAgICAgICAgICAgICAgY2FzZSBtYXBDdG9yU3RyaW5nOlxuICAgICAgICAgICAgICAgIHJldHVybiBtYXBUYWc7XG4gICAgICAgICAgICAgIGNhc2UgcHJvbWlzZUN0b3JTdHJpbmc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHByb21pc2VUYWc7XG4gICAgICAgICAgICAgIGNhc2Ugc2V0Q3RvclN0cmluZzpcbiAgICAgICAgICAgICAgICByZXR1cm4gc2V0VGFnO1xuICAgICAgICAgICAgICBjYXNlIHdlYWtNYXBDdG9yU3RyaW5nOlxuICAgICAgICAgICAgICAgIHJldHVybiB3ZWFrTWFwVGFnO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gZ2V0VmlldyhzdGFydCwgZW5kLCB0cmFuc2Zvcm1zKSB7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gdHJhbnNmb3Jtcy5sZW5ndGg7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIGRhdGEgPSB0cmFuc2Zvcm1zW2luZGV4XSwgc2l6ZTIgPSBkYXRhLnNpemU7XG4gICAgICAgICAgICBzd2l0Y2ggKGRhdGEudHlwZSkge1xuICAgICAgICAgICAgICBjYXNlIFwiZHJvcFwiOlxuICAgICAgICAgICAgICAgIHN0YXJ0ICs9IHNpemUyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBjYXNlIFwiZHJvcFJpZ2h0XCI6XG4gICAgICAgICAgICAgICAgZW5kIC09IHNpemUyO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBjYXNlIFwidGFrZVwiOlxuICAgICAgICAgICAgICAgIGVuZCA9IG5hdGl2ZU1pbihlbmQsIHN0YXJ0ICsgc2l6ZTIpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICBjYXNlIFwidGFrZVJpZ2h0XCI6XG4gICAgICAgICAgICAgICAgc3RhcnQgPSBuYXRpdmVNYXgoc3RhcnQsIGVuZCAtIHNpemUyKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHsgc3RhcnQsIGVuZCB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGdldFdyYXBEZXRhaWxzKHNvdXJjZSkge1xuICAgICAgICAgIHZhciBtYXRjaCA9IHNvdXJjZS5tYXRjaChyZVdyYXBEZXRhaWxzKTtcbiAgICAgICAgICByZXR1cm4gbWF0Y2ggPyBtYXRjaFsxXS5zcGxpdChyZVNwbGl0RGV0YWlscykgOiBbXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoYXNQYXRoKG9iamVjdCwgcGF0aCwgaGFzRnVuYykge1xuICAgICAgICAgIHBhdGggPSBjYXN0UGF0aChwYXRoLCBvYmplY3QpO1xuICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IHBhdGgubGVuZ3RoLCByZXN1bHQyID0gITE7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIGtleSA9IHRvS2V5KHBhdGhbaW5kZXhdKTtcbiAgICAgICAgICAgIGlmICghKHJlc3VsdDIgPSBvYmplY3QgIT0gbnVsbCAmJiBoYXNGdW5jKG9iamVjdCwga2V5KSkpXG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgb2JqZWN0ID0gb2JqZWN0W2tleV07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQyIHx8ICsraW5kZXggIT0gbGVuZ3RoID8gcmVzdWx0MiA6IChsZW5ndGggPSBvYmplY3QgPT0gbnVsbCA/IDAgOiBvYmplY3QubGVuZ3RoLCAhIWxlbmd0aCAmJiBpc0xlbmd0aChsZW5ndGgpICYmIGlzSW5kZXgoa2V5LCBsZW5ndGgpICYmIChpc0FycmF5KG9iamVjdCkgfHwgaXNBcmd1bWVudHMob2JqZWN0KSkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGluaXRDbG9uZUFycmF5KGFycmF5KSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgcmVzdWx0MiA9IG5ldyBhcnJheS5jb25zdHJ1Y3RvcihsZW5ndGgpO1xuICAgICAgICAgIHJldHVybiBsZW5ndGggJiYgdHlwZW9mIGFycmF5WzBdID09IFwic3RyaW5nXCIgJiYgaGFzT3duUHJvcGVydHkuY2FsbChhcnJheSwgXCJpbmRleFwiKSAmJiAocmVzdWx0Mi5pbmRleCA9IGFycmF5LmluZGV4LCByZXN1bHQyLmlucHV0ID0gYXJyYXkuaW5wdXQpLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGluaXRDbG9uZU9iamVjdChvYmplY3QpIHtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIG9iamVjdC5jb25zdHJ1Y3RvciA9PSBcImZ1bmN0aW9uXCIgJiYgIWlzUHJvdG90eXBlKG9iamVjdCkgPyBiYXNlQ3JlYXRlKGdldFByb3RvdHlwZShvYmplY3QpKSA6IHt9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGluaXRDbG9uZUJ5VGFnKG9iamVjdCwgdGFnLCBpc0RlZXApIHtcbiAgICAgICAgICB2YXIgQ3RvciA9IG9iamVjdC5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICBzd2l0Y2ggKHRhZykge1xuICAgICAgICAgICAgY2FzZSBhcnJheUJ1ZmZlclRhZzpcbiAgICAgICAgICAgICAgcmV0dXJuIGNsb25lQXJyYXlCdWZmZXIob2JqZWN0KTtcbiAgICAgICAgICAgIGNhc2UgYm9vbFRhZzpcbiAgICAgICAgICAgIGNhc2UgZGF0ZVRhZzpcbiAgICAgICAgICAgICAgcmV0dXJuIG5ldyBDdG9yKCtvYmplY3QpO1xuICAgICAgICAgICAgY2FzZSBkYXRhVmlld1RhZzpcbiAgICAgICAgICAgICAgcmV0dXJuIGNsb25lRGF0YVZpZXcob2JqZWN0LCBpc0RlZXApO1xuICAgICAgICAgICAgY2FzZSBmbG9hdDMyVGFnOlxuICAgICAgICAgICAgY2FzZSBmbG9hdDY0VGFnOlxuICAgICAgICAgICAgY2FzZSBpbnQ4VGFnOlxuICAgICAgICAgICAgY2FzZSBpbnQxNlRhZzpcbiAgICAgICAgICAgIGNhc2UgaW50MzJUYWc6XG4gICAgICAgICAgICBjYXNlIHVpbnQ4VGFnOlxuICAgICAgICAgICAgY2FzZSB1aW50OENsYW1wZWRUYWc6XG4gICAgICAgICAgICBjYXNlIHVpbnQxNlRhZzpcbiAgICAgICAgICAgIGNhc2UgdWludDMyVGFnOlxuICAgICAgICAgICAgICByZXR1cm4gY2xvbmVUeXBlZEFycmF5KG9iamVjdCwgaXNEZWVwKTtcbiAgICAgICAgICAgIGNhc2UgbWFwVGFnOlxuICAgICAgICAgICAgICByZXR1cm4gbmV3IEN0b3IoKTtcbiAgICAgICAgICAgIGNhc2UgbnVtYmVyVGFnOlxuICAgICAgICAgICAgY2FzZSBzdHJpbmdUYWc6XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcihvYmplY3QpO1xuICAgICAgICAgICAgY2FzZSByZWdleHBUYWc6XG4gICAgICAgICAgICAgIHJldHVybiBjbG9uZVJlZ0V4cChvYmplY3QpO1xuICAgICAgICAgICAgY2FzZSBzZXRUYWc6XG4gICAgICAgICAgICAgIHJldHVybiBuZXcgQ3RvcigpO1xuICAgICAgICAgICAgY2FzZSBzeW1ib2xUYWc6XG4gICAgICAgICAgICAgIHJldHVybiBjbG9uZVN5bWJvbChvYmplY3QpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpbnNlcnRXcmFwRGV0YWlscyhzb3VyY2UsIGRldGFpbHMpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gZGV0YWlscy5sZW5ndGg7XG4gICAgICAgICAgaWYgKCFsZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gc291cmNlO1xuICAgICAgICAgIHZhciBsYXN0SW5kZXggPSBsZW5ndGggLSAxO1xuICAgICAgICAgIHJldHVybiBkZXRhaWxzW2xhc3RJbmRleF0gPSAobGVuZ3RoID4gMSA/IFwiJiBcIiA6IFwiXCIpICsgZGV0YWlsc1tsYXN0SW5kZXhdLCBkZXRhaWxzID0gZGV0YWlscy5qb2luKGxlbmd0aCA+IDIgPyBcIiwgXCIgOiBcIiBcIiksIHNvdXJjZS5yZXBsYWNlKHJlV3JhcENvbW1lbnQsIGB7XG4vKiBbd3JhcHBlZCB3aXRoIGAgKyBkZXRhaWxzICsgYF0gKi9cbmApO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzRmxhdHRlbmFibGUodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaXNBcnJheSh2YWx1ZSkgfHwgaXNBcmd1bWVudHModmFsdWUpIHx8ICEhKHNwcmVhZGFibGVTeW1ib2wgJiYgdmFsdWUgJiYgdmFsdWVbc3ByZWFkYWJsZVN5bWJvbF0pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzSW5kZXgodmFsdWUsIGxlbmd0aCkge1xuICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICAgICAgICAgIHJldHVybiBsZW5ndGggPSBsZW5ndGggPz8gTUFYX1NBRkVfSU5URUdFUiwgISFsZW5ndGggJiYgKHR5cGUgPT0gXCJudW1iZXJcIiB8fCB0eXBlICE9IFwic3ltYm9sXCIgJiYgcmVJc1VpbnQudGVzdCh2YWx1ZSkpICYmIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPCBsZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNJdGVyYXRlZUNhbGwodmFsdWUsIGluZGV4LCBvYmplY3QpIHtcbiAgICAgICAgICBpZiAoIWlzT2JqZWN0KG9iamVjdCkpXG4gICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgaW5kZXg7XG4gICAgICAgICAgcmV0dXJuICh0eXBlID09IFwibnVtYmVyXCIgPyBpc0FycmF5TGlrZShvYmplY3QpICYmIGlzSW5kZXgoaW5kZXgsIG9iamVjdC5sZW5ndGgpIDogdHlwZSA9PSBcInN0cmluZ1wiICYmIGluZGV4IGluIG9iamVjdCkgPyBlcShvYmplY3RbaW5kZXhdLCB2YWx1ZSkgOiAhMTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc0tleSh2YWx1ZSwgb2JqZWN0KSB7XG4gICAgICAgICAgaWYgKGlzQXJyYXkodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICAgICAgICAgIHJldHVybiB0eXBlID09IFwibnVtYmVyXCIgfHwgdHlwZSA9PSBcInN5bWJvbFwiIHx8IHR5cGUgPT0gXCJib29sZWFuXCIgfHwgdmFsdWUgPT0gbnVsbCB8fCBpc1N5bWJvbCh2YWx1ZSkgPyAhMCA6IHJlSXNQbGFpblByb3AudGVzdCh2YWx1ZSkgfHwgIXJlSXNEZWVwUHJvcC50ZXN0KHZhbHVlKSB8fCBvYmplY3QgIT0gbnVsbCAmJiB2YWx1ZSBpbiBPYmplY3QyKG9iamVjdCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNLZXlhYmxlKHZhbHVlKSB7XG4gICAgICAgICAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XG4gICAgICAgICAgcmV0dXJuIHR5cGUgPT0gXCJzdHJpbmdcIiB8fCB0eXBlID09IFwibnVtYmVyXCIgfHwgdHlwZSA9PSBcInN5bWJvbFwiIHx8IHR5cGUgPT0gXCJib29sZWFuXCIgPyB2YWx1ZSAhPT0gXCJfX3Byb3RvX19cIiA6IHZhbHVlID09PSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzTGF6aWFibGUoZnVuYykge1xuICAgICAgICAgIHZhciBmdW5jTmFtZSA9IGdldEZ1bmNOYW1lKGZ1bmMpLCBvdGhlciA9IGxvZGFzaDJbZnVuY05hbWVdO1xuICAgICAgICAgIGlmICh0eXBlb2Ygb3RoZXIgIT0gXCJmdW5jdGlvblwiIHx8ICEoZnVuY05hbWUgaW4gTGF6eVdyYXBwZXIucHJvdG90eXBlKSlcbiAgICAgICAgICAgIHJldHVybiAhMTtcbiAgICAgICAgICBpZiAoZnVuYyA9PT0gb3RoZXIpXG4gICAgICAgICAgICByZXR1cm4gITA7XG4gICAgICAgICAgdmFyIGRhdGEgPSBnZXREYXRhKG90aGVyKTtcbiAgICAgICAgICByZXR1cm4gISFkYXRhICYmIGZ1bmMgPT09IGRhdGFbMF07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNNYXNrZWQoZnVuYykge1xuICAgICAgICAgIHJldHVybiAhIW1hc2tTcmNLZXkgJiYgbWFza1NyY0tleSBpbiBmdW5jO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc01hc2thYmxlID0gY29yZUpzRGF0YSA/IGlzRnVuY3Rpb24gOiBzdHViRmFsc2U7XG4gICAgICAgIGZ1bmN0aW9uIGlzUHJvdG90eXBlKHZhbHVlKSB7XG4gICAgICAgICAgdmFyIEN0b3IgPSB2YWx1ZSAmJiB2YWx1ZS5jb25zdHJ1Y3RvciwgcHJvdG8gPSB0eXBlb2YgQ3RvciA9PSBcImZ1bmN0aW9uXCIgJiYgQ3Rvci5wcm90b3R5cGUgfHwgb2JqZWN0UHJvdG87XG4gICAgICAgICAgcmV0dXJuIHZhbHVlID09PSBwcm90bztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc1N0cmljdENvbXBhcmFibGUodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgPT09IHZhbHVlICYmICFpc09iamVjdCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWF0Y2hlc1N0cmljdENvbXBhcmFibGUoa2V5LCBzcmNWYWx1ZSkge1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/ICExIDogb2JqZWN0W2tleV0gPT09IHNyY1ZhbHVlICYmIChzcmNWYWx1ZSAhPT0gdW5kZWZpbmVkJDEgfHwga2V5IGluIE9iamVjdDIob2JqZWN0KSk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBtZW1vaXplQ2FwcGVkKGZ1bmMpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IG1lbW9pemUoZnVuYywgZnVuY3Rpb24oa2V5KSB7XG4gICAgICAgICAgICByZXR1cm4gY2FjaGUuc2l6ZSA9PT0gTUFYX01FTU9JWkVfU0laRSAmJiBjYWNoZS5jbGVhcigpLCBrZXk7XG4gICAgICAgICAgfSksIGNhY2hlID0gcmVzdWx0Mi5jYWNoZTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBtZXJnZURhdGEoZGF0YSwgc291cmNlKSB7XG4gICAgICAgICAgdmFyIGJpdG1hc2sgPSBkYXRhWzFdLCBzcmNCaXRtYXNrID0gc291cmNlWzFdLCBuZXdCaXRtYXNrID0gYml0bWFzayB8IHNyY0JpdG1hc2ssIGlzQ29tbW9uID0gbmV3Qml0bWFzayA8IChXUkFQX0JJTkRfRkxBRyB8IFdSQVBfQklORF9LRVlfRkxBRyB8IFdSQVBfQVJZX0ZMQUcpLCBpc0NvbWJvID0gc3JjQml0bWFzayA9PSBXUkFQX0FSWV9GTEFHICYmIGJpdG1hc2sgPT0gV1JBUF9DVVJSWV9GTEFHIHx8IHNyY0JpdG1hc2sgPT0gV1JBUF9BUllfRkxBRyAmJiBiaXRtYXNrID09IFdSQVBfUkVBUkdfRkxBRyAmJiBkYXRhWzddLmxlbmd0aCA8PSBzb3VyY2VbOF0gfHwgc3JjQml0bWFzayA9PSAoV1JBUF9BUllfRkxBRyB8IFdSQVBfUkVBUkdfRkxBRykgJiYgc291cmNlWzddLmxlbmd0aCA8PSBzb3VyY2VbOF0gJiYgYml0bWFzayA9PSBXUkFQX0NVUlJZX0ZMQUc7XG4gICAgICAgICAgaWYgKCEoaXNDb21tb24gfHwgaXNDb21ibykpXG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgICBzcmNCaXRtYXNrICYgV1JBUF9CSU5EX0ZMQUcgJiYgKGRhdGFbMl0gPSBzb3VyY2VbMl0sIG5ld0JpdG1hc2sgfD0gYml0bWFzayAmIFdSQVBfQklORF9GTEFHID8gMCA6IFdSQVBfQ1VSUllfQk9VTkRfRkxBRyk7XG4gICAgICAgICAgdmFyIHZhbHVlID0gc291cmNlWzNdO1xuICAgICAgICAgIGlmICh2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIHBhcnRpYWxzID0gZGF0YVszXTtcbiAgICAgICAgICAgIGRhdGFbM10gPSBwYXJ0aWFscyA/IGNvbXBvc2VBcmdzKHBhcnRpYWxzLCB2YWx1ZSwgc291cmNlWzRdKSA6IHZhbHVlLCBkYXRhWzRdID0gcGFydGlhbHMgPyByZXBsYWNlSG9sZGVycyhkYXRhWzNdLCBQTEFDRUhPTERFUikgOiBzb3VyY2VbNF07XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB2YWx1ZSA9IHNvdXJjZVs1XSwgdmFsdWUgJiYgKHBhcnRpYWxzID0gZGF0YVs1XSwgZGF0YVs1XSA9IHBhcnRpYWxzID8gY29tcG9zZUFyZ3NSaWdodChwYXJ0aWFscywgdmFsdWUsIHNvdXJjZVs2XSkgOiB2YWx1ZSwgZGF0YVs2XSA9IHBhcnRpYWxzID8gcmVwbGFjZUhvbGRlcnMoZGF0YVs1XSwgUExBQ0VIT0xERVIpIDogc291cmNlWzZdKSwgdmFsdWUgPSBzb3VyY2VbN10sIHZhbHVlICYmIChkYXRhWzddID0gdmFsdWUpLCBzcmNCaXRtYXNrICYgV1JBUF9BUllfRkxBRyAmJiAoZGF0YVs4XSA9IGRhdGFbOF0gPT0gbnVsbCA/IHNvdXJjZVs4XSA6IG5hdGl2ZU1pbihkYXRhWzhdLCBzb3VyY2VbOF0pKSwgZGF0YVs5XSA9PSBudWxsICYmIChkYXRhWzldID0gc291cmNlWzldKSwgZGF0YVswXSA9IHNvdXJjZVswXSwgZGF0YVsxXSA9IG5ld0JpdG1hc2ssIGRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbmF0aXZlS2V5c0luKG9iamVjdCkge1xuICAgICAgICAgIHZhciByZXN1bHQyID0gW107XG4gICAgICAgICAgaWYgKG9iamVjdCAhPSBudWxsKVxuICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIE9iamVjdDIob2JqZWN0KSlcbiAgICAgICAgICAgICAgcmVzdWx0Mi5wdXNoKGtleSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb3ZlclJlc3QoZnVuYywgc3RhcnQsIHRyYW5zZm9ybTIpIHtcbiAgICAgICAgICByZXR1cm4gc3RhcnQgPSBuYXRpdmVNYXgoc3RhcnQgPT09IHVuZGVmaW5lZCQxID8gZnVuYy5sZW5ndGggLSAxIDogc3RhcnQsIDApLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGFyZ3MgPSBhcmd1bWVudHMsIGluZGV4ID0gLTEsIGxlbmd0aCA9IG5hdGl2ZU1heChhcmdzLmxlbmd0aCAtIHN0YXJ0LCAwKSwgYXJyYXkgPSBBcnJheTIobGVuZ3RoKTsgKytpbmRleCA8IGxlbmd0aDsgKVxuICAgICAgICAgICAgICBhcnJheVtpbmRleF0gPSBhcmdzW3N0YXJ0ICsgaW5kZXhdO1xuICAgICAgICAgICAgaW5kZXggPSAtMTtcbiAgICAgICAgICAgIGZvciAodmFyIG90aGVyQXJncyA9IEFycmF5MihzdGFydCArIDEpOyArK2luZGV4IDwgc3RhcnQ7IClcbiAgICAgICAgICAgICAgb3RoZXJBcmdzW2luZGV4XSA9IGFyZ3NbaW5kZXhdO1xuICAgICAgICAgICAgcmV0dXJuIG90aGVyQXJnc1tzdGFydF0gPSB0cmFuc2Zvcm0yKGFycmF5KSwgYXBwbHkoZnVuYywgdGhpcywgb3RoZXJBcmdzKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHBhcmVudChvYmplY3QsIHBhdGgpIHtcbiAgICAgICAgICByZXR1cm4gcGF0aC5sZW5ndGggPCAyID8gb2JqZWN0IDogYmFzZUdldChvYmplY3QsIGJhc2VTbGljZShwYXRoLCAwLCAtMSkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlb3JkZXIoYXJyYXksIGluZGV4ZXMpIHtcbiAgICAgICAgICBmb3IgKHZhciBhcnJMZW5ndGggPSBhcnJheS5sZW5ndGgsIGxlbmd0aCA9IG5hdGl2ZU1pbihpbmRleGVzLmxlbmd0aCwgYXJyTGVuZ3RoKSwgb2xkQXJyYXkgPSBjb3B5QXJyYXkoYXJyYXkpOyBsZW5ndGgtLTsgKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBpbmRleGVzW2xlbmd0aF07XG4gICAgICAgICAgICBhcnJheVtsZW5ndGhdID0gaXNJbmRleChpbmRleCwgYXJyTGVuZ3RoKSA/IG9sZEFycmF5W2luZGV4XSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gYXJyYXk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc2FmZUdldChvYmplY3QsIGtleSkge1xuICAgICAgICAgIGlmICghKGtleSA9PT0gXCJjb25zdHJ1Y3RvclwiICYmIHR5cGVvZiBvYmplY3Rba2V5XSA9PSBcImZ1bmN0aW9uXCIpICYmIGtleSAhPSBcIl9fcHJvdG9fX1wiKVxuICAgICAgICAgICAgcmV0dXJuIG9iamVjdFtrZXldO1xuICAgICAgICB9XG4gICAgICAgIHZhciBzZXREYXRhID0gc2hvcnRPdXQoYmFzZVNldERhdGEpLCBzZXRUaW1lb3V0ID0gY3R4U2V0VGltZW91dCB8fCBmdW5jdGlvbihmdW5jLCB3YWl0KSB7XG4gICAgICAgICAgcmV0dXJuIHJvb3Quc2V0VGltZW91dChmdW5jLCB3YWl0KTtcbiAgICAgICAgfSwgc2V0VG9TdHJpbmcgPSBzaG9ydE91dChiYXNlU2V0VG9TdHJpbmcpO1xuICAgICAgICBmdW5jdGlvbiBzZXRXcmFwVG9TdHJpbmcod3JhcHBlciwgcmVmZXJlbmNlLCBiaXRtYXNrKSB7XG4gICAgICAgICAgdmFyIHNvdXJjZSA9IHJlZmVyZW5jZSArIFwiXCI7XG4gICAgICAgICAgcmV0dXJuIHNldFRvU3RyaW5nKHdyYXBwZXIsIGluc2VydFdyYXBEZXRhaWxzKHNvdXJjZSwgdXBkYXRlV3JhcERldGFpbHMoZ2V0V3JhcERldGFpbHMoc291cmNlKSwgYml0bWFzaykpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzaG9ydE91dChmdW5jKSB7XG4gICAgICAgICAgdmFyIGNvdW50ID0gMCwgbGFzdENhbGxlZCA9IDA7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIHN0YW1wID0gbmF0aXZlTm93KCksIHJlbWFpbmluZyA9IEhPVF9TUEFOIC0gKHN0YW1wIC0gbGFzdENhbGxlZCk7XG4gICAgICAgICAgICBpZiAobGFzdENhbGxlZCA9IHN0YW1wLCByZW1haW5pbmcgPiAwKSB7XG4gICAgICAgICAgICAgIGlmICgrK2NvdW50ID49IEhPVF9DT1VOVClcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJndW1lbnRzWzBdO1xuICAgICAgICAgICAgfSBlbHNlXG4gICAgICAgICAgICAgIGNvdW50ID0gMDtcbiAgICAgICAgICAgIHJldHVybiBmdW5jLmFwcGx5KHVuZGVmaW5lZCQxLCBhcmd1bWVudHMpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc2h1ZmZsZVNlbGYoYXJyYXksIHNpemUyKSB7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIGxlbmd0aCA9IGFycmF5Lmxlbmd0aCwgbGFzdEluZGV4ID0gbGVuZ3RoIC0gMTtcbiAgICAgICAgICBmb3IgKHNpemUyID0gc2l6ZTIgPT09IHVuZGVmaW5lZCQxID8gbGVuZ3RoIDogc2l6ZTI7ICsraW5kZXggPCBzaXplMjsgKSB7XG4gICAgICAgICAgICB2YXIgcmFuZCA9IGJhc2VSYW5kb20oaW5kZXgsIGxhc3RJbmRleCksIHZhbHVlID0gYXJyYXlbcmFuZF07XG4gICAgICAgICAgICBhcnJheVtyYW5kXSA9IGFycmF5W2luZGV4XSwgYXJyYXlbaW5kZXhdID0gdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBhcnJheS5sZW5ndGggPSBzaXplMiwgYXJyYXk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHN0cmluZ1RvUGF0aCA9IG1lbW9pemVDYXBwZWQoZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBbXTtcbiAgICAgICAgICByZXR1cm4gc3RyaW5nLmNoYXJDb2RlQXQoMCkgPT09IDQ2ICYmIHJlc3VsdDIucHVzaChcIlwiKSwgc3RyaW5nLnJlcGxhY2UocmVQcm9wTmFtZSwgZnVuY3Rpb24obWF0Y2gsIG51bWJlciwgcXVvdGUsIHN1YlN0cmluZykge1xuICAgICAgICAgICAgcmVzdWx0Mi5wdXNoKHF1b3RlID8gc3ViU3RyaW5nLnJlcGxhY2UocmVFc2NhcGVDaGFyLCBcIiQxXCIpIDogbnVtYmVyIHx8IG1hdGNoKTtcbiAgICAgICAgICB9KSwgcmVzdWx0MjtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIHRvS2V5KHZhbHVlKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PSBcInN0cmluZ1wiIHx8IGlzU3ltYm9sKHZhbHVlKSlcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IHZhbHVlICsgXCJcIjtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0MiA9PSBcIjBcIiAmJiAxIC8gdmFsdWUgPT0gLUlORklOSVRZID8gXCItMFwiIDogcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b1NvdXJjZShmdW5jKSB7XG4gICAgICAgICAgaWYgKGZ1bmMgIT0gbnVsbCkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZ1bmNUb1N0cmluZy5jYWxsKGZ1bmMpO1xuICAgICAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICByZXR1cm4gZnVuYyArIFwiXCI7XG4gICAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIFwiXCI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlV3JhcERldGFpbHMoZGV0YWlscywgYml0bWFzaykge1xuICAgICAgICAgIHJldHVybiBhcnJheUVhY2god3JhcEZsYWdzLCBmdW5jdGlvbihwYWlyKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBcIl8uXCIgKyBwYWlyWzBdO1xuICAgICAgICAgICAgYml0bWFzayAmIHBhaXJbMV0gJiYgIWFycmF5SW5jbHVkZXMoZGV0YWlscywgdmFsdWUpICYmIGRldGFpbHMucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgfSksIGRldGFpbHMuc29ydCgpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHdyYXBwZXJDbG9uZSh3cmFwcGVyKSB7XG4gICAgICAgICAgaWYgKHdyYXBwZXIgaW5zdGFuY2VvZiBMYXp5V3JhcHBlcilcbiAgICAgICAgICAgIHJldHVybiB3cmFwcGVyLmNsb25lKCk7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBuZXcgTG9kYXNoV3JhcHBlcih3cmFwcGVyLl9fd3JhcHBlZF9fLCB3cmFwcGVyLl9fY2hhaW5fXyk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIuX19hY3Rpb25zX18gPSBjb3B5QXJyYXkod3JhcHBlci5fX2FjdGlvbnNfXyksIHJlc3VsdDIuX19pbmRleF9fID0gd3JhcHBlci5fX2luZGV4X18sIHJlc3VsdDIuX192YWx1ZXNfXyA9IHdyYXBwZXIuX192YWx1ZXNfXywgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjaHVuayhhcnJheSwgc2l6ZTIsIGd1YXJkKSB7XG4gICAgICAgICAgKGd1YXJkID8gaXNJdGVyYXRlZUNhbGwoYXJyYXksIHNpemUyLCBndWFyZCkgOiBzaXplMiA9PT0gdW5kZWZpbmVkJDEpID8gc2l6ZTIgPSAxIDogc2l6ZTIgPSBuYXRpdmVNYXgodG9JbnRlZ2VyKHNpemUyKSwgMCk7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIGlmICghbGVuZ3RoIHx8IHNpemUyIDwgMSlcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDAsIHJlc0luZGV4ID0gMCwgcmVzdWx0MiA9IEFycmF5MihuYXRpdmVDZWlsKGxlbmd0aCAvIHNpemUyKSk7IGluZGV4IDwgbGVuZ3RoOyApXG4gICAgICAgICAgICByZXN1bHQyW3Jlc0luZGV4KytdID0gYmFzZVNsaWNlKGFycmF5LCBpbmRleCwgaW5kZXggKz0gc2l6ZTIpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvbXBhY3QoYXJyYXkpIHtcbiAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IC0xLCBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aCwgcmVzSW5kZXggPSAwLCByZXN1bHQyID0gW107ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgdmFyIHZhbHVlID0gYXJyYXlbaW5kZXhdO1xuICAgICAgICAgICAgdmFsdWUgJiYgKHJlc3VsdDJbcmVzSW5kZXgrK10gPSB2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvbmNhdCgpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICAgICAgICBpZiAoIWxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICBmb3IgKHZhciBhcmdzID0gQXJyYXkyKGxlbmd0aCAtIDEpLCBhcnJheSA9IGFyZ3VtZW50c1swXSwgaW5kZXggPSBsZW5ndGg7IGluZGV4LS07IClcbiAgICAgICAgICAgIGFyZ3NbaW5kZXggLSAxXSA9IGFyZ3VtZW50c1tpbmRleF07XG4gICAgICAgICAgcmV0dXJuIGFycmF5UHVzaChpc0FycmF5KGFycmF5KSA/IGNvcHlBcnJheShhcnJheSkgOiBbYXJyYXldLCBiYXNlRmxhdHRlbihhcmdzLCAxKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRpZmZlcmVuY2UgPSBiYXNlUmVzdChmdW5jdGlvbihhcnJheSwgdmFsdWVzMikge1xuICAgICAgICAgIHJldHVybiBpc0FycmF5TGlrZU9iamVjdChhcnJheSkgPyBiYXNlRGlmZmVyZW5jZShhcnJheSwgYmFzZUZsYXR0ZW4odmFsdWVzMiwgMSwgaXNBcnJheUxpa2VPYmplY3QsICEwKSkgOiBbXTtcbiAgICAgICAgfSksIGRpZmZlcmVuY2VCeSA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5LCB2YWx1ZXMyKSB7XG4gICAgICAgICAgdmFyIGl0ZXJhdGVlMiA9IGxhc3QodmFsdWVzMik7XG4gICAgICAgICAgcmV0dXJuIGlzQXJyYXlMaWtlT2JqZWN0KGl0ZXJhdGVlMikgJiYgKGl0ZXJhdGVlMiA9IHVuZGVmaW5lZCQxKSwgaXNBcnJheUxpa2VPYmplY3QoYXJyYXkpID8gYmFzZURpZmZlcmVuY2UoYXJyYXksIGJhc2VGbGF0dGVuKHZhbHVlczIsIDEsIGlzQXJyYXlMaWtlT2JqZWN0LCAhMCksIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMikpIDogW107XG4gICAgICAgIH0pLCBkaWZmZXJlbmNlV2l0aCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5LCB2YWx1ZXMyKSB7XG4gICAgICAgICAgdmFyIGNvbXBhcmF0b3IgPSBsYXN0KHZhbHVlczIpO1xuICAgICAgICAgIHJldHVybiBpc0FycmF5TGlrZU9iamVjdChjb21wYXJhdG9yKSAmJiAoY29tcGFyYXRvciA9IHVuZGVmaW5lZCQxKSwgaXNBcnJheUxpa2VPYmplY3QoYXJyYXkpID8gYmFzZURpZmZlcmVuY2UoYXJyYXksIGJhc2VGbGF0dGVuKHZhbHVlczIsIDEsIGlzQXJyYXlMaWtlT2JqZWN0LCAhMCksIHVuZGVmaW5lZCQxLCBjb21wYXJhdG9yKSA6IFtdO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gZHJvcChhcnJheSwgbiwgZ3VhcmQpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA/IChuID0gZ3VhcmQgfHwgbiA9PT0gdW5kZWZpbmVkJDEgPyAxIDogdG9JbnRlZ2VyKG4pLCBiYXNlU2xpY2UoYXJyYXksIG4gPCAwID8gMCA6IG4sIGxlbmd0aCkpIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZHJvcFJpZ2h0KGFycmF5LCBuLCBndWFyZCkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gbGVuZ3RoID8gKG4gPSBndWFyZCB8fCBuID09PSB1bmRlZmluZWQkMSA/IDEgOiB0b0ludGVnZXIobiksIG4gPSBsZW5ndGggLSBuLCBiYXNlU2xpY2UoYXJyYXksIDAsIG4gPCAwID8gMCA6IG4pKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGRyb3BSaWdodFdoaWxlKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVdoaWxlKGFycmF5LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCAhMCwgITApIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZHJvcFdoaWxlKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVdoaWxlKGFycmF5LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCAhMCkgOiBbXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBmaWxsKGFycmF5LCB2YWx1ZSwgc3RhcnQsIGVuZCkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gbGVuZ3RoID8gKHN0YXJ0ICYmIHR5cGVvZiBzdGFydCAhPSBcIm51bWJlclwiICYmIGlzSXRlcmF0ZWVDYWxsKGFycmF5LCB2YWx1ZSwgc3RhcnQpICYmIChzdGFydCA9IDAsIGVuZCA9IGxlbmd0aCksIGJhc2VGaWxsKGFycmF5LCB2YWx1ZSwgc3RhcnQsIGVuZCkpIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZmluZEluZGV4KGFycmF5LCBwcmVkaWNhdGUsIGZyb21JbmRleCkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICBpZiAoIWxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICB2YXIgaW5kZXggPSBmcm9tSW5kZXggPT0gbnVsbCA/IDAgOiB0b0ludGVnZXIoZnJvbUluZGV4KTtcbiAgICAgICAgICByZXR1cm4gaW5kZXggPCAwICYmIChpbmRleCA9IG5hdGl2ZU1heChsZW5ndGggKyBpbmRleCwgMCkpLCBiYXNlRmluZEluZGV4KGFycmF5LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCBpbmRleCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZmluZExhc3RJbmRleChhcnJheSwgcHJlZGljYXRlLCBmcm9tSW5kZXgpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgaWYgKCFsZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgdmFyIGluZGV4ID0gbGVuZ3RoIC0gMTtcbiAgICAgICAgICByZXR1cm4gZnJvbUluZGV4ICE9PSB1bmRlZmluZWQkMSAmJiAoaW5kZXggPSB0b0ludGVnZXIoZnJvbUluZGV4KSwgaW5kZXggPSBmcm9tSW5kZXggPCAwID8gbmF0aXZlTWF4KGxlbmd0aCArIGluZGV4LCAwKSA6IG5hdGl2ZU1pbihpbmRleCwgbGVuZ3RoIC0gMSkpLCBiYXNlRmluZEluZGV4KGFycmF5LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCBpbmRleCwgITApO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZsYXR0ZW4oYXJyYXkpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA/IGJhc2VGbGF0dGVuKGFycmF5LCAxKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZsYXR0ZW5EZWVwKGFycmF5KSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBsZW5ndGggPyBiYXNlRmxhdHRlbihhcnJheSwgSU5GSU5JVFkpIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZmxhdHRlbkRlcHRoKGFycmF5LCBkZXB0aCkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gbGVuZ3RoID8gKGRlcHRoID0gZGVwdGggPT09IHVuZGVmaW5lZCQxID8gMSA6IHRvSW50ZWdlcihkZXB0aCksIGJhc2VGbGF0dGVuKGFycmF5LCBkZXB0aCkpIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZnJvbVBhaXJzKHBhaXJzKSB7XG4gICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gcGFpcnMgPT0gbnVsbCA/IDAgOiBwYWlycy5sZW5ndGgsIHJlc3VsdDIgPSB7fTsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgICB2YXIgcGFpciA9IHBhaXJzW2luZGV4XTtcbiAgICAgICAgICAgIHJlc3VsdDJbcGFpclswXV0gPSBwYWlyWzFdO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoZWFkKGFycmF5KSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCA/IGFycmF5WzBdIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaW5kZXhPZihhcnJheSwgdmFsdWUsIGZyb21JbmRleCkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICBpZiAoIWxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgICB2YXIgaW5kZXggPSBmcm9tSW5kZXggPT0gbnVsbCA/IDAgOiB0b0ludGVnZXIoZnJvbUluZGV4KTtcbiAgICAgICAgICByZXR1cm4gaW5kZXggPCAwICYmIChpbmRleCA9IG5hdGl2ZU1heChsZW5ndGggKyBpbmRleCwgMCkpLCBiYXNlSW5kZXhPZihhcnJheSwgdmFsdWUsIGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpbml0aWFsKGFycmF5KSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBsZW5ndGggPyBiYXNlU2xpY2UoYXJyYXksIDAsIC0xKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpbnRlcnNlY3Rpb24gPSBiYXNlUmVzdChmdW5jdGlvbihhcnJheXMpIHtcbiAgICAgICAgICB2YXIgbWFwcGVkID0gYXJyYXlNYXAoYXJyYXlzLCBjYXN0QXJyYXlMaWtlT2JqZWN0KTtcbiAgICAgICAgICByZXR1cm4gbWFwcGVkLmxlbmd0aCAmJiBtYXBwZWRbMF0gPT09IGFycmF5c1swXSA/IGJhc2VJbnRlcnNlY3Rpb24obWFwcGVkKSA6IFtdO1xuICAgICAgICB9KSwgaW50ZXJzZWN0aW9uQnkgPSBiYXNlUmVzdChmdW5jdGlvbihhcnJheXMpIHtcbiAgICAgICAgICB2YXIgaXRlcmF0ZWUyID0gbGFzdChhcnJheXMpLCBtYXBwZWQgPSBhcnJheU1hcChhcnJheXMsIGNhc3RBcnJheUxpa2VPYmplY3QpO1xuICAgICAgICAgIHJldHVybiBpdGVyYXRlZTIgPT09IGxhc3QobWFwcGVkKSA/IGl0ZXJhdGVlMiA9IHVuZGVmaW5lZCQxIDogbWFwcGVkLnBvcCgpLCBtYXBwZWQubGVuZ3RoICYmIG1hcHBlZFswXSA9PT0gYXJyYXlzWzBdID8gYmFzZUludGVyc2VjdGlvbihtYXBwZWQsIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMikpIDogW107XG4gICAgICAgIH0pLCBpbnRlcnNlY3Rpb25XaXRoID0gYmFzZVJlc3QoZnVuY3Rpb24oYXJyYXlzKSB7XG4gICAgICAgICAgdmFyIGNvbXBhcmF0b3IgPSBsYXN0KGFycmF5cyksIG1hcHBlZCA9IGFycmF5TWFwKGFycmF5cywgY2FzdEFycmF5TGlrZU9iamVjdCk7XG4gICAgICAgICAgcmV0dXJuIGNvbXBhcmF0b3IgPSB0eXBlb2YgY29tcGFyYXRvciA9PSBcImZ1bmN0aW9uXCIgPyBjb21wYXJhdG9yIDogdW5kZWZpbmVkJDEsIGNvbXBhcmF0b3IgJiYgbWFwcGVkLnBvcCgpLCBtYXBwZWQubGVuZ3RoICYmIG1hcHBlZFswXSA9PT0gYXJyYXlzWzBdID8gYmFzZUludGVyc2VjdGlvbihtYXBwZWQsIHVuZGVmaW5lZCQxLCBjb21wYXJhdG9yKSA6IFtdO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gam9pbihhcnJheSwgc2VwYXJhdG9yKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ID09IG51bGwgPyBcIlwiIDogbmF0aXZlSm9pbi5jYWxsKGFycmF5LCBzZXBhcmF0b3IpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGxhc3QoYXJyYXkpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA/IGFycmF5W2xlbmd0aCAtIDFdIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbGFzdEluZGV4T2YoYXJyYXksIHZhbHVlLCBmcm9tSW5kZXgpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgaWYgKCFsZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgICAgdmFyIGluZGV4ID0gbGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBmcm9tSW5kZXggIT09IHVuZGVmaW5lZCQxICYmIChpbmRleCA9IHRvSW50ZWdlcihmcm9tSW5kZXgpLCBpbmRleCA9IGluZGV4IDwgMCA/IG5hdGl2ZU1heChsZW5ndGggKyBpbmRleCwgMCkgOiBuYXRpdmVNaW4oaW5kZXgsIGxlbmd0aCAtIDEpKSwgdmFsdWUgPT09IHZhbHVlID8gc3RyaWN0TGFzdEluZGV4T2YoYXJyYXksIHZhbHVlLCBpbmRleCkgOiBiYXNlRmluZEluZGV4KGFycmF5LCBiYXNlSXNOYU4sIGluZGV4LCAhMCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbnRoKGFycmF5LCBuKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCA/IGJhc2VOdGgoYXJyYXksIHRvSW50ZWdlcihuKSkgOiB1bmRlZmluZWQkMTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHVsbCA9IGJhc2VSZXN0KHB1bGxBbGwpO1xuICAgICAgICBmdW5jdGlvbiBwdWxsQWxsKGFycmF5LCB2YWx1ZXMyKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCAmJiB2YWx1ZXMyICYmIHZhbHVlczIubGVuZ3RoID8gYmFzZVB1bGxBbGwoYXJyYXksIHZhbHVlczIpIDogYXJyYXk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcHVsbEFsbEJ5KGFycmF5LCB2YWx1ZXMyLCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoICYmIHZhbHVlczIgJiYgdmFsdWVzMi5sZW5ndGggPyBiYXNlUHVsbEFsbChhcnJheSwgdmFsdWVzMiwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCAyKSkgOiBhcnJheTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwdWxsQWxsV2l0aChhcnJheSwgdmFsdWVzMiwgY29tcGFyYXRvcikge1xuICAgICAgICAgIHJldHVybiBhcnJheSAmJiBhcnJheS5sZW5ndGggJiYgdmFsdWVzMiAmJiB2YWx1ZXMyLmxlbmd0aCA/IGJhc2VQdWxsQWxsKGFycmF5LCB2YWx1ZXMyLCB1bmRlZmluZWQkMSwgY29tcGFyYXRvcikgOiBhcnJheTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcHVsbEF0ID0gZmxhdFJlc3QoZnVuY3Rpb24oYXJyYXksIGluZGV4ZXMpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGgsIHJlc3VsdDIgPSBiYXNlQXQoYXJyYXksIGluZGV4ZXMpO1xuICAgICAgICAgIHJldHVybiBiYXNlUHVsbEF0KGFycmF5LCBhcnJheU1hcChpbmRleGVzLCBmdW5jdGlvbihpbmRleCkge1xuICAgICAgICAgICAgcmV0dXJuIGlzSW5kZXgoaW5kZXgsIGxlbmd0aCkgPyAraW5kZXggOiBpbmRleDtcbiAgICAgICAgICB9KS5zb3J0KGNvbXBhcmVBc2NlbmRpbmcpKSwgcmVzdWx0MjtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIHJlbW92ZShhcnJheSwgcHJlZGljYXRlKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBbXTtcbiAgICAgICAgICBpZiAoIShhcnJheSAmJiBhcnJheS5sZW5ndGgpKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgICAgdmFyIGluZGV4ID0gLTEsIGluZGV4ZXMgPSBbXSwgbGVuZ3RoID0gYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIGZvciAocHJlZGljYXRlID0gZ2V0SXRlcmF0ZWUocHJlZGljYXRlLCAzKTsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBhcnJheVtpbmRleF07XG4gICAgICAgICAgICBwcmVkaWNhdGUodmFsdWUsIGluZGV4LCBhcnJheSkgJiYgKHJlc3VsdDIucHVzaCh2YWx1ZSksIGluZGV4ZXMucHVzaChpbmRleCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gYmFzZVB1bGxBdChhcnJheSwgaW5kZXhlcyksIHJlc3VsdDI7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmV2ZXJzZShhcnJheSkge1xuICAgICAgICAgIHJldHVybiBhcnJheSA9PSBudWxsID8gYXJyYXkgOiBuYXRpdmVSZXZlcnNlLmNhbGwoYXJyYXkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNsaWNlKGFycmF5LCBzdGFydCwgZW5kKSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGFycmF5ID09IG51bGwgPyAwIDogYXJyYXkubGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBsZW5ndGggPyAoZW5kICYmIHR5cGVvZiBlbmQgIT0gXCJudW1iZXJcIiAmJiBpc0l0ZXJhdGVlQ2FsbChhcnJheSwgc3RhcnQsIGVuZCkgPyAoc3RhcnQgPSAwLCBlbmQgPSBsZW5ndGgpIDogKHN0YXJ0ID0gc3RhcnQgPT0gbnVsbCA/IDAgOiB0b0ludGVnZXIoc3RhcnQpLCBlbmQgPSBlbmQgPT09IHVuZGVmaW5lZCQxID8gbGVuZ3RoIDogdG9JbnRlZ2VyKGVuZCkpLCBiYXNlU2xpY2UoYXJyYXksIHN0YXJ0LCBlbmQpKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNvcnRlZEluZGV4KGFycmF5LCB2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBiYXNlU29ydGVkSW5kZXgoYXJyYXksIHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzb3J0ZWRJbmRleEJ5KGFycmF5LCB2YWx1ZSwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VTb3J0ZWRJbmRleEJ5KGFycmF5LCB2YWx1ZSwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCAyKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc29ydGVkSW5kZXhPZihhcnJheSwgdmFsdWUpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgaWYgKGxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIGluZGV4ID0gYmFzZVNvcnRlZEluZGV4KGFycmF5LCB2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPCBsZW5ndGggJiYgZXEoYXJyYXlbaW5kZXhdLCB2YWx1ZSkpXG4gICAgICAgICAgICAgIHJldHVybiBpbmRleDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNvcnRlZExhc3RJbmRleChhcnJheSwgdmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZVNvcnRlZEluZGV4KGFycmF5LCB2YWx1ZSwgITApO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNvcnRlZExhc3RJbmRleEJ5KGFycmF5LCB2YWx1ZSwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VTb3J0ZWRJbmRleEJ5KGFycmF5LCB2YWx1ZSwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCAyKSwgITApO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNvcnRlZExhc3RJbmRleE9mKGFycmF5LCB2YWx1ZSkge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgICBpZiAobGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSBiYXNlU29ydGVkSW5kZXgoYXJyYXksIHZhbHVlLCAhMCkgLSAxO1xuICAgICAgICAgICAgaWYgKGVxKGFycmF5W2luZGV4XSwgdmFsdWUpKVxuICAgICAgICAgICAgICByZXR1cm4gaW5kZXg7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAtMTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzb3J0ZWRVbmlxKGFycmF5KSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCA/IGJhc2VTb3J0ZWRVbmlxKGFycmF5KSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNvcnRlZFVuaXFCeShhcnJheSwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCA/IGJhc2VTb3J0ZWRVbmlxKGFycmF5LCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDIpKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRhaWwoYXJyYXkpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA/IGJhc2VTbGljZShhcnJheSwgMSwgbGVuZ3RoKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRha2UoYXJyYXksIG4sIGd1YXJkKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCA/IChuID0gZ3VhcmQgfHwgbiA9PT0gdW5kZWZpbmVkJDEgPyAxIDogdG9JbnRlZ2VyKG4pLCBiYXNlU2xpY2UoYXJyYXksIDAsIG4gPCAwID8gMCA6IG4pKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRha2VSaWdodChhcnJheSwgbiwgZ3VhcmQpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gYXJyYXkgPT0gbnVsbCA/IDAgOiBhcnJheS5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA/IChuID0gZ3VhcmQgfHwgbiA9PT0gdW5kZWZpbmVkJDEgPyAxIDogdG9JbnRlZ2VyKG4pLCBuID0gbGVuZ3RoIC0gbiwgYmFzZVNsaWNlKGFycmF5LCBuIDwgMCA/IDAgOiBuLCBsZW5ndGgpKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRha2VSaWdodFdoaWxlKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVdoaWxlKGFycmF5LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCAhMSwgITApIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdGFrZVdoaWxlKGFycmF5LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVdoaWxlKGFycmF5LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHZhciB1bmlvbiA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5cykge1xuICAgICAgICAgIHJldHVybiBiYXNlVW5pcShiYXNlRmxhdHRlbihhcnJheXMsIDEsIGlzQXJyYXlMaWtlT2JqZWN0LCAhMCkpO1xuICAgICAgICB9KSwgdW5pb25CeSA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5cykge1xuICAgICAgICAgIHZhciBpdGVyYXRlZTIgPSBsYXN0KGFycmF5cyk7XG4gICAgICAgICAgcmV0dXJuIGlzQXJyYXlMaWtlT2JqZWN0KGl0ZXJhdGVlMikgJiYgKGl0ZXJhdGVlMiA9IHVuZGVmaW5lZCQxKSwgYmFzZVVuaXEoYmFzZUZsYXR0ZW4oYXJyYXlzLCAxLCBpc0FycmF5TGlrZU9iamVjdCwgITApLCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDIpKTtcbiAgICAgICAgfSksIHVuaW9uV2l0aCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5cykge1xuICAgICAgICAgIHZhciBjb21wYXJhdG9yID0gbGFzdChhcnJheXMpO1xuICAgICAgICAgIHJldHVybiBjb21wYXJhdG9yID0gdHlwZW9mIGNvbXBhcmF0b3IgPT0gXCJmdW5jdGlvblwiID8gY29tcGFyYXRvciA6IHVuZGVmaW5lZCQxLCBiYXNlVW5pcShiYXNlRmxhdHRlbihhcnJheXMsIDEsIGlzQXJyYXlMaWtlT2JqZWN0LCAhMCksIHVuZGVmaW5lZCQxLCBjb21wYXJhdG9yKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIHVuaXEoYXJyYXkpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVVuaXEoYXJyYXkpIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdW5pcUJ5KGFycmF5LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVVuaXEoYXJyYXksIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMikpIDogW107XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdW5pcVdpdGgoYXJyYXksIGNvbXBhcmF0b3IpIHtcbiAgICAgICAgICByZXR1cm4gY29tcGFyYXRvciA9IHR5cGVvZiBjb21wYXJhdG9yID09IFwiZnVuY3Rpb25cIiA/IGNvbXBhcmF0b3IgOiB1bmRlZmluZWQkMSwgYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVVuaXEoYXJyYXksIHVuZGVmaW5lZCQxLCBjb21wYXJhdG9yKSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHVuemlwKGFycmF5KSB7XG4gICAgICAgICAgaWYgKCEoYXJyYXkgJiYgYXJyYXkubGVuZ3RoKSlcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gMDtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgPSBhcnJheUZpbHRlcihhcnJheSwgZnVuY3Rpb24oZ3JvdXApIHtcbiAgICAgICAgICAgIGlmIChpc0FycmF5TGlrZU9iamVjdChncm91cCkpXG4gICAgICAgICAgICAgIHJldHVybiBsZW5ndGggPSBuYXRpdmVNYXgoZ3JvdXAubGVuZ3RoLCBsZW5ndGgpLCAhMDtcbiAgICAgICAgICB9KSwgYmFzZVRpbWVzKGxlbmd0aCwgZnVuY3Rpb24oaW5kZXgpIHtcbiAgICAgICAgICAgIHJldHVybiBhcnJheU1hcChhcnJheSwgYmFzZVByb3BlcnR5KGluZGV4KSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdW56aXBXaXRoKGFycmF5LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICBpZiAoIShhcnJheSAmJiBhcnJheS5sZW5ndGgpKVxuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgIHZhciByZXN1bHQyID0gdW56aXAoYXJyYXkpO1xuICAgICAgICAgIHJldHVybiBpdGVyYXRlZTIgPT0gbnVsbCA/IHJlc3VsdDIgOiBhcnJheU1hcChyZXN1bHQyLCBmdW5jdGlvbihncm91cCkge1xuICAgICAgICAgICAgcmV0dXJuIGFwcGx5KGl0ZXJhdGVlMiwgdW5kZWZpbmVkJDEsIGdyb3VwKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgd2l0aG91dCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5LCB2YWx1ZXMyKSB7XG4gICAgICAgICAgcmV0dXJuIGlzQXJyYXlMaWtlT2JqZWN0KGFycmF5KSA/IGJhc2VEaWZmZXJlbmNlKGFycmF5LCB2YWx1ZXMyKSA6IFtdO1xuICAgICAgICB9KSwgeG9yID0gYmFzZVJlc3QoZnVuY3Rpb24oYXJyYXlzKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VYb3IoYXJyYXlGaWx0ZXIoYXJyYXlzLCBpc0FycmF5TGlrZU9iamVjdCkpO1xuICAgICAgICB9KSwgeG9yQnkgPSBiYXNlUmVzdChmdW5jdGlvbihhcnJheXMpIHtcbiAgICAgICAgICB2YXIgaXRlcmF0ZWUyID0gbGFzdChhcnJheXMpO1xuICAgICAgICAgIHJldHVybiBpc0FycmF5TGlrZU9iamVjdChpdGVyYXRlZTIpICYmIChpdGVyYXRlZTIgPSB1bmRlZmluZWQkMSksIGJhc2VYb3IoYXJyYXlGaWx0ZXIoYXJyYXlzLCBpc0FycmF5TGlrZU9iamVjdCksIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMikpO1xuICAgICAgICB9KSwgeG9yV2l0aCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5cykge1xuICAgICAgICAgIHZhciBjb21wYXJhdG9yID0gbGFzdChhcnJheXMpO1xuICAgICAgICAgIHJldHVybiBjb21wYXJhdG9yID0gdHlwZW9mIGNvbXBhcmF0b3IgPT0gXCJmdW5jdGlvblwiID8gY29tcGFyYXRvciA6IHVuZGVmaW5lZCQxLCBiYXNlWG9yKGFycmF5RmlsdGVyKGFycmF5cywgaXNBcnJheUxpa2VPYmplY3QpLCB1bmRlZmluZWQkMSwgY29tcGFyYXRvcik7XG4gICAgICAgIH0pLCB6aXAgPSBiYXNlUmVzdCh1bnppcCk7XG4gICAgICAgIGZ1bmN0aW9uIHppcE9iamVjdChwcm9wcywgdmFsdWVzMikge1xuICAgICAgICAgIHJldHVybiBiYXNlWmlwT2JqZWN0KHByb3BzIHx8IFtdLCB2YWx1ZXMyIHx8IFtdLCBhc3NpZ25WYWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gemlwT2JqZWN0RGVlcChwcm9wcywgdmFsdWVzMikge1xuICAgICAgICAgIHJldHVybiBiYXNlWmlwT2JqZWN0KHByb3BzIHx8IFtdLCB2YWx1ZXMyIHx8IFtdLCBiYXNlU2V0KTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgemlwV2l0aCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFycmF5cykge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBhcnJheXMubGVuZ3RoLCBpdGVyYXRlZTIgPSBsZW5ndGggPiAxID8gYXJyYXlzW2xlbmd0aCAtIDFdIDogdW5kZWZpbmVkJDE7XG4gICAgICAgICAgcmV0dXJuIGl0ZXJhdGVlMiA9IHR5cGVvZiBpdGVyYXRlZTIgPT0gXCJmdW5jdGlvblwiID8gKGFycmF5cy5wb3AoKSwgaXRlcmF0ZWUyKSA6IHVuZGVmaW5lZCQxLCB1bnppcFdpdGgoYXJyYXlzLCBpdGVyYXRlZTIpO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gY2hhaW4odmFsdWUpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IGxvZGFzaDIodmFsdWUpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyLl9fY2hhaW5fXyA9ICEwLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRhcCh2YWx1ZSwgaW50ZXJjZXB0b3IpIHtcbiAgICAgICAgICByZXR1cm4gaW50ZXJjZXB0b3IodmFsdWUpLCB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0aHJ1KHZhbHVlLCBpbnRlcmNlcHRvcikge1xuICAgICAgICAgIHJldHVybiBpbnRlcmNlcHRvcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHdyYXBwZXJBdCA9IGZsYXRSZXN0KGZ1bmN0aW9uKHBhdGhzKSB7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IHBhdGhzLmxlbmd0aCwgc3RhcnQgPSBsZW5ndGggPyBwYXRoc1swXSA6IDAsIHZhbHVlID0gdGhpcy5fX3dyYXBwZWRfXywgaW50ZXJjZXB0b3IgPSBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlQXQob2JqZWN0LCBwYXRocyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgICByZXR1cm4gbGVuZ3RoID4gMSB8fCB0aGlzLl9fYWN0aW9uc19fLmxlbmd0aCB8fCAhKHZhbHVlIGluc3RhbmNlb2YgTGF6eVdyYXBwZXIpIHx8ICFpc0luZGV4KHN0YXJ0KSA/IHRoaXMudGhydShpbnRlcmNlcHRvcikgOiAodmFsdWUgPSB2YWx1ZS5zbGljZShzdGFydCwgK3N0YXJ0ICsgKGxlbmd0aCA/IDEgOiAwKSksIHZhbHVlLl9fYWN0aW9uc19fLnB1c2goe1xuICAgICAgICAgICAgZnVuYzogdGhydSxcbiAgICAgICAgICAgIGFyZ3M6IFtpbnRlcmNlcHRvcl0sXG4gICAgICAgICAgICB0aGlzQXJnOiB1bmRlZmluZWQkMVxuICAgICAgICAgIH0pLCBuZXcgTG9kYXNoV3JhcHBlcih2YWx1ZSwgdGhpcy5fX2NoYWluX18pLnRocnUoZnVuY3Rpb24oYXJyYXkpIHtcbiAgICAgICAgICAgIHJldHVybiBsZW5ndGggJiYgIWFycmF5Lmxlbmd0aCAmJiBhcnJheS5wdXNoKHVuZGVmaW5lZCQxKSwgYXJyYXk7XG4gICAgICAgICAgfSkpO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gd3JhcHBlckNoYWluKCkge1xuICAgICAgICAgIHJldHVybiBjaGFpbih0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB3cmFwcGVyQ29tbWl0KCkge1xuICAgICAgICAgIHJldHVybiBuZXcgTG9kYXNoV3JhcHBlcih0aGlzLnZhbHVlKCksIHRoaXMuX19jaGFpbl9fKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB3cmFwcGVyTmV4dCgpIHtcbiAgICAgICAgICB0aGlzLl9fdmFsdWVzX18gPT09IHVuZGVmaW5lZCQxICYmICh0aGlzLl9fdmFsdWVzX18gPSB0b0FycmF5KHRoaXMudmFsdWUoKSkpO1xuICAgICAgICAgIHZhciBkb25lID0gdGhpcy5fX2luZGV4X18gPj0gdGhpcy5fX3ZhbHVlc19fLmxlbmd0aCwgdmFsdWUgPSBkb25lID8gdW5kZWZpbmVkJDEgOiB0aGlzLl9fdmFsdWVzX19bdGhpcy5fX2luZGV4X18rK107XG4gICAgICAgICAgcmV0dXJuIHsgZG9uZSwgdmFsdWUgfTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB3cmFwcGVyVG9JdGVyYXRvcigpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB3cmFwcGVyUGxhbnQodmFsdWUpIHtcbiAgICAgICAgICBmb3IgKHZhciByZXN1bHQyLCBwYXJlbnQyID0gdGhpczsgcGFyZW50MiBpbnN0YW5jZW9mIGJhc2VMb2Rhc2g7ICkge1xuICAgICAgICAgICAgdmFyIGNsb25lMiA9IHdyYXBwZXJDbG9uZShwYXJlbnQyKTtcbiAgICAgICAgICAgIGNsb25lMi5fX2luZGV4X18gPSAwLCBjbG9uZTIuX192YWx1ZXNfXyA9IHVuZGVmaW5lZCQxLCByZXN1bHQyID8gcHJldmlvdXMuX193cmFwcGVkX18gPSBjbG9uZTIgOiByZXN1bHQyID0gY2xvbmUyO1xuICAgICAgICAgICAgdmFyIHByZXZpb3VzID0gY2xvbmUyO1xuICAgICAgICAgICAgcGFyZW50MiA9IHBhcmVudDIuX193cmFwcGVkX187XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBwcmV2aW91cy5fX3dyYXBwZWRfXyA9IHZhbHVlLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHdyYXBwZXJSZXZlcnNlKCkge1xuICAgICAgICAgIHZhciB2YWx1ZSA9IHRoaXMuX193cmFwcGVkX187XG4gICAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgTGF6eVdyYXBwZXIpIHtcbiAgICAgICAgICAgIHZhciB3cmFwcGVkID0gdmFsdWU7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fX2FjdGlvbnNfXy5sZW5ndGggJiYgKHdyYXBwZWQgPSBuZXcgTGF6eVdyYXBwZXIodGhpcykpLCB3cmFwcGVkID0gd3JhcHBlZC5yZXZlcnNlKCksIHdyYXBwZWQuX19hY3Rpb25zX18ucHVzaCh7XG4gICAgICAgICAgICAgIGZ1bmM6IHRocnUsXG4gICAgICAgICAgICAgIGFyZ3M6IFtyZXZlcnNlXSxcbiAgICAgICAgICAgICAgdGhpc0FyZzogdW5kZWZpbmVkJDFcbiAgICAgICAgICAgIH0pLCBuZXcgTG9kYXNoV3JhcHBlcih3cmFwcGVkLCB0aGlzLl9fY2hhaW5fXyk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aGlzLnRocnUocmV2ZXJzZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gd3JhcHBlclZhbHVlKCkge1xuICAgICAgICAgIHJldHVybiBiYXNlV3JhcHBlclZhbHVlKHRoaXMuX193cmFwcGVkX18sIHRoaXMuX19hY3Rpb25zX18pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBjb3VudEJ5ID0gY3JlYXRlQWdncmVnYXRvcihmdW5jdGlvbihyZXN1bHQyLCB2YWx1ZSwga2V5KSB7XG4gICAgICAgICAgaGFzT3duUHJvcGVydHkuY2FsbChyZXN1bHQyLCBrZXkpID8gKytyZXN1bHQyW2tleV0gOiBiYXNlQXNzaWduVmFsdWUocmVzdWx0Miwga2V5LCAxKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIGV2ZXJ5KGNvbGxlY3Rpb24sIHByZWRpY2F0ZSwgZ3VhcmQpIHtcbiAgICAgICAgICB2YXIgZnVuYyA9IGlzQXJyYXkoY29sbGVjdGlvbikgPyBhcnJheUV2ZXJ5IDogYmFzZUV2ZXJ5O1xuICAgICAgICAgIHJldHVybiBndWFyZCAmJiBpc0l0ZXJhdGVlQ2FsbChjb2xsZWN0aW9uLCBwcmVkaWNhdGUsIGd1YXJkKSAmJiAocHJlZGljYXRlID0gdW5kZWZpbmVkJDEpLCBmdW5jKGNvbGxlY3Rpb24sIGdldEl0ZXJhdGVlKHByZWRpY2F0ZSwgMykpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZpbHRlcihjb2xsZWN0aW9uLCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICB2YXIgZnVuYyA9IGlzQXJyYXkoY29sbGVjdGlvbikgPyBhcnJheUZpbHRlciA6IGJhc2VGaWx0ZXI7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgZ2V0SXRlcmF0ZWUocHJlZGljYXRlLCAzKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGZpbmQgPSBjcmVhdGVGaW5kKGZpbmRJbmRleCksIGZpbmRMYXN0ID0gY3JlYXRlRmluZChmaW5kTGFzdEluZGV4KTtcbiAgICAgICAgZnVuY3Rpb24gZmxhdE1hcChjb2xsZWN0aW9uLCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUZsYXR0ZW4obWFwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlMiksIDEpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZsYXRNYXBEZWVwKGNvbGxlY3Rpb24sIGl0ZXJhdGVlMikge1xuICAgICAgICAgIHJldHVybiBiYXNlRmxhdHRlbihtYXAoY29sbGVjdGlvbiwgaXRlcmF0ZWUyKSwgSU5GSU5JVFkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZsYXRNYXBEZXB0aChjb2xsZWN0aW9uLCBpdGVyYXRlZTIsIGRlcHRoKSB7XG4gICAgICAgICAgcmV0dXJuIGRlcHRoID0gZGVwdGggPT09IHVuZGVmaW5lZCQxID8gMSA6IHRvSW50ZWdlcihkZXB0aCksIGJhc2VGbGF0dGVuKG1hcChjb2xsZWN0aW9uLCBpdGVyYXRlZTIpLCBkZXB0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZm9yRWFjaChjb2xsZWN0aW9uLCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICB2YXIgZnVuYyA9IGlzQXJyYXkoY29sbGVjdGlvbikgPyBhcnJheUVhY2ggOiBiYXNlRWFjaDtcbiAgICAgICAgICByZXR1cm4gZnVuYyhjb2xsZWN0aW9uLCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDMpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBmb3JFYWNoUmlnaHQoY29sbGVjdGlvbiwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlFYWNoUmlnaHQgOiBiYXNlRWFjaFJpZ2h0O1xuICAgICAgICAgIHJldHVybiBmdW5jKGNvbGxlY3Rpb24sIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMykpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBncm91cEJ5ID0gY3JlYXRlQWdncmVnYXRvcihmdW5jdGlvbihyZXN1bHQyLCB2YWx1ZSwga2V5KSB7XG4gICAgICAgICAgaGFzT3duUHJvcGVydHkuY2FsbChyZXN1bHQyLCBrZXkpID8gcmVzdWx0MltrZXldLnB1c2godmFsdWUpIDogYmFzZUFzc2lnblZhbHVlKHJlc3VsdDIsIGtleSwgW3ZhbHVlXSk7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBpbmNsdWRlcyhjb2xsZWN0aW9uLCB2YWx1ZSwgZnJvbUluZGV4LCBndWFyZCkge1xuICAgICAgICAgIGNvbGxlY3Rpb24gPSBpc0FycmF5TGlrZShjb2xsZWN0aW9uKSA/IGNvbGxlY3Rpb24gOiB2YWx1ZXMoY29sbGVjdGlvbiksIGZyb21JbmRleCA9IGZyb21JbmRleCAmJiAhZ3VhcmQgPyB0b0ludGVnZXIoZnJvbUluZGV4KSA6IDA7XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuICAgICAgICAgIHJldHVybiBmcm9tSW5kZXggPCAwICYmIChmcm9tSW5kZXggPSBuYXRpdmVNYXgobGVuZ3RoICsgZnJvbUluZGV4LCAwKSksIGlzU3RyaW5nKGNvbGxlY3Rpb24pID8gZnJvbUluZGV4IDw9IGxlbmd0aCAmJiBjb2xsZWN0aW9uLmluZGV4T2YodmFsdWUsIGZyb21JbmRleCkgPiAtMSA6ICEhbGVuZ3RoICYmIGJhc2VJbmRleE9mKGNvbGxlY3Rpb24sIHZhbHVlLCBmcm9tSW5kZXgpID4gLTE7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGludm9rZU1hcCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGNvbGxlY3Rpb24sIHBhdGgsIGFyZ3MpIHtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMSwgaXNGdW5jID0gdHlwZW9mIHBhdGggPT0gXCJmdW5jdGlvblwiLCByZXN1bHQyID0gaXNBcnJheUxpa2UoY29sbGVjdGlvbikgPyBBcnJheTIoY29sbGVjdGlvbi5sZW5ndGgpIDogW107XG4gICAgICAgICAgcmV0dXJuIGJhc2VFYWNoKGNvbGxlY3Rpb24sIGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgICByZXN1bHQyWysraW5kZXhdID0gaXNGdW5jID8gYXBwbHkocGF0aCwgdmFsdWUsIGFyZ3MpIDogYmFzZUludm9rZSh2YWx1ZSwgcGF0aCwgYXJncyk7XG4gICAgICAgICAgfSksIHJlc3VsdDI7XG4gICAgICAgIH0pLCBrZXlCeSA9IGNyZWF0ZUFnZ3JlZ2F0b3IoZnVuY3Rpb24ocmVzdWx0MiwgdmFsdWUsIGtleSkge1xuICAgICAgICAgIGJhc2VBc3NpZ25WYWx1ZShyZXN1bHQyLCBrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIG1hcChjb2xsZWN0aW9uLCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICB2YXIgZnVuYyA9IGlzQXJyYXkoY29sbGVjdGlvbikgPyBhcnJheU1hcCA6IGJhc2VNYXA7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCAzKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb3JkZXJCeShjb2xsZWN0aW9uLCBpdGVyYXRlZXMsIG9yZGVycywgZ3VhcmQpIHtcbiAgICAgICAgICByZXR1cm4gY29sbGVjdGlvbiA9PSBudWxsID8gW10gOiAoaXNBcnJheShpdGVyYXRlZXMpIHx8IChpdGVyYXRlZXMgPSBpdGVyYXRlZXMgPT0gbnVsbCA/IFtdIDogW2l0ZXJhdGVlc10pLCBvcmRlcnMgPSBndWFyZCA/IHVuZGVmaW5lZCQxIDogb3JkZXJzLCBpc0FycmF5KG9yZGVycykgfHwgKG9yZGVycyA9IG9yZGVycyA9PSBudWxsID8gW10gOiBbb3JkZXJzXSksIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sIGl0ZXJhdGVlcywgb3JkZXJzKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHBhcnRpdGlvbiA9IGNyZWF0ZUFnZ3JlZ2F0b3IoZnVuY3Rpb24ocmVzdWx0MiwgdmFsdWUsIGtleSkge1xuICAgICAgICAgIHJlc3VsdDJba2V5ID8gMCA6IDFdLnB1c2godmFsdWUpO1xuICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gW1tdLCBbXV07XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiByZWR1Y2UoY29sbGVjdGlvbiwgaXRlcmF0ZWUyLCBhY2N1bXVsYXRvcikge1xuICAgICAgICAgIHZhciBmdW5jID0gaXNBcnJheShjb2xsZWN0aW9uKSA/IGFycmF5UmVkdWNlIDogYmFzZVJlZHVjZSwgaW5pdEFjY3VtID0gYXJndW1lbnRzLmxlbmd0aCA8IDM7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCA0KSwgYWNjdW11bGF0b3IsIGluaXRBY2N1bSwgYmFzZUVhY2gpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlZHVjZVJpZ2h0KGNvbGxlY3Rpb24sIGl0ZXJhdGVlMiwgYWNjdW11bGF0b3IpIHtcbiAgICAgICAgICB2YXIgZnVuYyA9IGlzQXJyYXkoY29sbGVjdGlvbikgPyBhcnJheVJlZHVjZVJpZ2h0IDogYmFzZVJlZHVjZSwgaW5pdEFjY3VtID0gYXJndW1lbnRzLmxlbmd0aCA8IDM7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCA0KSwgYWNjdW11bGF0b3IsIGluaXRBY2N1bSwgYmFzZUVhY2hSaWdodCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0KGNvbGxlY3Rpb24sIHByZWRpY2F0ZSkge1xuICAgICAgICAgIHZhciBmdW5jID0gaXNBcnJheShjb2xsZWN0aW9uKSA/IGFycmF5RmlsdGVyIDogYmFzZUZpbHRlcjtcbiAgICAgICAgICByZXR1cm4gZnVuYyhjb2xsZWN0aW9uLCBuZWdhdGUoZ2V0SXRlcmF0ZWUocHJlZGljYXRlLCAzKSkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNhbXBsZShjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlTYW1wbGUgOiBiYXNlU2FtcGxlO1xuICAgICAgICAgIHJldHVybiBmdW5jKGNvbGxlY3Rpb24pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNhbXBsZVNpemUoY29sbGVjdGlvbiwgbiwgZ3VhcmQpIHtcbiAgICAgICAgICAoZ3VhcmQgPyBpc0l0ZXJhdGVlQ2FsbChjb2xsZWN0aW9uLCBuLCBndWFyZCkgOiBuID09PSB1bmRlZmluZWQkMSkgPyBuID0gMSA6IG4gPSB0b0ludGVnZXIobik7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlTYW1wbGVTaXplIDogYmFzZVNhbXBsZVNpemU7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbiwgbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc2h1ZmZsZShjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlTaHVmZmxlIDogYmFzZVNodWZmbGU7XG4gICAgICAgICAgcmV0dXJuIGZ1bmMoY29sbGVjdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc2l6ZShjb2xsZWN0aW9uKSB7XG4gICAgICAgICAgaWYgKGNvbGxlY3Rpb24gPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgIGlmIChpc0FycmF5TGlrZShjb2xsZWN0aW9uKSlcbiAgICAgICAgICAgIHJldHVybiBpc1N0cmluZyhjb2xsZWN0aW9uKSA/IHN0cmluZ1NpemUoY29sbGVjdGlvbikgOiBjb2xsZWN0aW9uLmxlbmd0aDtcbiAgICAgICAgICB2YXIgdGFnID0gZ2V0VGFnKGNvbGxlY3Rpb24pO1xuICAgICAgICAgIHJldHVybiB0YWcgPT0gbWFwVGFnIHx8IHRhZyA9PSBzZXRUYWcgPyBjb2xsZWN0aW9uLnNpemUgOiBiYXNlS2V5cyhjb2xsZWN0aW9uKS5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc29tZShjb2xsZWN0aW9uLCBwcmVkaWNhdGUsIGd1YXJkKSB7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBpc0FycmF5KGNvbGxlY3Rpb24pID8gYXJyYXlTb21lIDogYmFzZVNvbWU7XG4gICAgICAgICAgcmV0dXJuIGd1YXJkICYmIGlzSXRlcmF0ZWVDYWxsKGNvbGxlY3Rpb24sIHByZWRpY2F0ZSwgZ3VhcmQpICYmIChwcmVkaWNhdGUgPSB1bmRlZmluZWQkMSksIGZ1bmMoY29sbGVjdGlvbiwgZ2V0SXRlcmF0ZWUocHJlZGljYXRlLCAzKSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHNvcnRCeSA9IGJhc2VSZXN0KGZ1bmN0aW9uKGNvbGxlY3Rpb24sIGl0ZXJhdGVlcykge1xuICAgICAgICAgIGlmIChjb2xsZWN0aW9uID09IG51bGwpXG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgdmFyIGxlbmd0aCA9IGl0ZXJhdGVlcy5sZW5ndGg7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCA+IDEgJiYgaXNJdGVyYXRlZUNhbGwoY29sbGVjdGlvbiwgaXRlcmF0ZWVzWzBdLCBpdGVyYXRlZXNbMV0pID8gaXRlcmF0ZWVzID0gW10gOiBsZW5ndGggPiAyICYmIGlzSXRlcmF0ZWVDYWxsKGl0ZXJhdGVlc1swXSwgaXRlcmF0ZWVzWzFdLCBpdGVyYXRlZXNbMl0pICYmIChpdGVyYXRlZXMgPSBbaXRlcmF0ZWVzWzBdXSksIGJhc2VPcmRlckJ5KGNvbGxlY3Rpb24sIGJhc2VGbGF0dGVuKGl0ZXJhdGVlcywgMSksIFtdKTtcbiAgICAgICAgfSksIG5vdyA9IGN0eE5vdyB8fCBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gcm9vdC5EYXRlLm5vdygpO1xuICAgICAgICB9O1xuICAgICAgICBmdW5jdGlvbiBhZnRlcihuLCBmdW5jKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBmdW5jICE9IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgICAgICAgICByZXR1cm4gbiA9IHRvSW50ZWdlcihuKSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBpZiAoLS1uIDwgMSlcbiAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGFyeShmdW5jLCBuLCBndWFyZCkge1xuICAgICAgICAgIHJldHVybiBuID0gZ3VhcmQgPyB1bmRlZmluZWQkMSA6IG4sIG4gPSBmdW5jICYmIG4gPT0gbnVsbCA/IGZ1bmMubGVuZ3RoIDogbiwgY3JlYXRlV3JhcChmdW5jLCBXUkFQX0FSWV9GTEFHLCB1bmRlZmluZWQkMSwgdW5kZWZpbmVkJDEsIHVuZGVmaW5lZCQxLCB1bmRlZmluZWQkMSwgbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gYmVmb3JlKG4sIGZ1bmMpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MjtcbiAgICAgICAgICBpZiAodHlwZW9mIGZ1bmMgIT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgICAgIHJldHVybiBuID0gdG9JbnRlZ2VyKG4pLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiAtLW4gPiAwICYmIChyZXN1bHQyID0gZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpKSwgbiA8PSAxICYmIChmdW5jID0gdW5kZWZpbmVkJDEpLCByZXN1bHQyO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGJpbmQgPSBiYXNlUmVzdChmdW5jdGlvbihmdW5jLCB0aGlzQXJnLCBwYXJ0aWFscykge1xuICAgICAgICAgIHZhciBiaXRtYXNrID0gV1JBUF9CSU5EX0ZMQUc7XG4gICAgICAgICAgaWYgKHBhcnRpYWxzLmxlbmd0aCkge1xuICAgICAgICAgICAgdmFyIGhvbGRlcnMgPSByZXBsYWNlSG9sZGVycyhwYXJ0aWFscywgZ2V0SG9sZGVyKGJpbmQpKTtcbiAgICAgICAgICAgIGJpdG1hc2sgfD0gV1JBUF9QQVJUSUFMX0ZMQUc7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBjcmVhdGVXcmFwKGZ1bmMsIGJpdG1hc2ssIHRoaXNBcmcsIHBhcnRpYWxzLCBob2xkZXJzKTtcbiAgICAgICAgfSksIGJpbmRLZXkgPSBiYXNlUmVzdChmdW5jdGlvbihvYmplY3QsIGtleSwgcGFydGlhbHMpIHtcbiAgICAgICAgICB2YXIgYml0bWFzayA9IFdSQVBfQklORF9GTEFHIHwgV1JBUF9CSU5EX0tFWV9GTEFHO1xuICAgICAgICAgIGlmIChwYXJ0aWFscy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBob2xkZXJzID0gcmVwbGFjZUhvbGRlcnMocGFydGlhbHMsIGdldEhvbGRlcihiaW5kS2V5KSk7XG4gICAgICAgICAgICBiaXRtYXNrIHw9IFdSQVBfUEFSVElBTF9GTEFHO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gY3JlYXRlV3JhcChrZXksIGJpdG1hc2ssIG9iamVjdCwgcGFydGlhbHMsIGhvbGRlcnMpO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gY3VycnkoZnVuYywgYXJpdHksIGd1YXJkKSB7XG4gICAgICAgICAgYXJpdHkgPSBndWFyZCA/IHVuZGVmaW5lZCQxIDogYXJpdHk7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBjcmVhdGVXcmFwKGZ1bmMsIFdSQVBfQ1VSUllfRkxBRywgdW5kZWZpbmVkJDEsIHVuZGVmaW5lZCQxLCB1bmRlZmluZWQkMSwgdW5kZWZpbmVkJDEsIHVuZGVmaW5lZCQxLCBhcml0eSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIucGxhY2Vob2xkZXIgPSBjdXJyeS5wbGFjZWhvbGRlciwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjdXJyeVJpZ2h0KGZ1bmMsIGFyaXR5LCBndWFyZCkge1xuICAgICAgICAgIGFyaXR5ID0gZ3VhcmQgPyB1bmRlZmluZWQkMSA6IGFyaXR5O1xuICAgICAgICAgIHZhciByZXN1bHQyID0gY3JlYXRlV3JhcChmdW5jLCBXUkFQX0NVUlJZX1JJR0hUX0ZMQUcsIHVuZGVmaW5lZCQxLCB1bmRlZmluZWQkMSwgdW5kZWZpbmVkJDEsIHVuZGVmaW5lZCQxLCB1bmRlZmluZWQkMSwgYXJpdHkpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyLnBsYWNlaG9sZGVyID0gY3VycnlSaWdodC5wbGFjZWhvbGRlciwgcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkZWJvdW5jZShmdW5jLCB3YWl0LCBvcHRpb25zKSB7XG4gICAgICAgICAgdmFyIGxhc3RBcmdzLCBsYXN0VGhpcywgbWF4V2FpdCwgcmVzdWx0MiwgdGltZXJJZCwgbGFzdENhbGxUaW1lLCBsYXN0SW52b2tlVGltZSA9IDAsIGxlYWRpbmcgPSAhMSwgbWF4aW5nID0gITEsIHRyYWlsaW5nID0gITA7XG4gICAgICAgICAgaWYgKHR5cGVvZiBmdW5jICE9IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgICAgICAgICB3YWl0ID0gdG9OdW1iZXIod2FpdCkgfHwgMCwgaXNPYmplY3Qob3B0aW9ucykgJiYgKGxlYWRpbmcgPSAhIW9wdGlvbnMubGVhZGluZywgbWF4aW5nID0gXCJtYXhXYWl0XCIgaW4gb3B0aW9ucywgbWF4V2FpdCA9IG1heGluZyA/IG5hdGl2ZU1heCh0b051bWJlcihvcHRpb25zLm1heFdhaXQpIHx8IDAsIHdhaXQpIDogbWF4V2FpdCwgdHJhaWxpbmcgPSBcInRyYWlsaW5nXCIgaW4gb3B0aW9ucyA/ICEhb3B0aW9ucy50cmFpbGluZyA6IHRyYWlsaW5nKTtcbiAgICAgICAgICBmdW5jdGlvbiBpbnZva2VGdW5jKHRpbWUpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gbGFzdEFyZ3MsIHRoaXNBcmcgPSBsYXN0VGhpcztcbiAgICAgICAgICAgIHJldHVybiBsYXN0QXJncyA9IGxhc3RUaGlzID0gdW5kZWZpbmVkJDEsIGxhc3RJbnZva2VUaW1lID0gdGltZSwgcmVzdWx0MiA9IGZ1bmMuYXBwbHkodGhpc0FyZywgYXJncyksIHJlc3VsdDI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZ1bmN0aW9uIGxlYWRpbmdFZGdlKHRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiBsYXN0SW52b2tlVGltZSA9IHRpbWUsIHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCksIGxlYWRpbmcgPyBpbnZva2VGdW5jKHRpbWUpIDogcmVzdWx0MjtcbiAgICAgICAgICB9XG4gICAgICAgICAgZnVuY3Rpb24gcmVtYWluaW5nV2FpdCh0aW1lKSB7XG4gICAgICAgICAgICB2YXIgdGltZVNpbmNlTGFzdENhbGwgPSB0aW1lIC0gbGFzdENhbGxUaW1lLCB0aW1lU2luY2VMYXN0SW52b2tlID0gdGltZSAtIGxhc3RJbnZva2VUaW1lLCB0aW1lV2FpdGluZyA9IHdhaXQgLSB0aW1lU2luY2VMYXN0Q2FsbDtcbiAgICAgICAgICAgIHJldHVybiBtYXhpbmcgPyBuYXRpdmVNaW4odGltZVdhaXRpbmcsIG1heFdhaXQgLSB0aW1lU2luY2VMYXN0SW52b2tlKSA6IHRpbWVXYWl0aW5nO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmdW5jdGlvbiBzaG91bGRJbnZva2UodGltZSkge1xuICAgICAgICAgICAgdmFyIHRpbWVTaW5jZUxhc3RDYWxsID0gdGltZSAtIGxhc3RDYWxsVGltZSwgdGltZVNpbmNlTGFzdEludm9rZSA9IHRpbWUgLSBsYXN0SW52b2tlVGltZTtcbiAgICAgICAgICAgIHJldHVybiBsYXN0Q2FsbFRpbWUgPT09IHVuZGVmaW5lZCQxIHx8IHRpbWVTaW5jZUxhc3RDYWxsID49IHdhaXQgfHwgdGltZVNpbmNlTGFzdENhbGwgPCAwIHx8IG1heGluZyAmJiB0aW1lU2luY2VMYXN0SW52b2tlID49IG1heFdhaXQ7XG4gICAgICAgICAgfVxuICAgICAgICAgIGZ1bmN0aW9uIHRpbWVyRXhwaXJlZCgpIHtcbiAgICAgICAgICAgIHZhciB0aW1lID0gbm93KCk7XG4gICAgICAgICAgICBpZiAoc2hvdWxkSW52b2tlKHRpbWUpKVxuICAgICAgICAgICAgICByZXR1cm4gdHJhaWxpbmdFZGdlKHRpbWUpO1xuICAgICAgICAgICAgdGltZXJJZCA9IHNldFRpbWVvdXQodGltZXJFeHBpcmVkLCByZW1haW5pbmdXYWl0KHRpbWUpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZnVuY3Rpb24gdHJhaWxpbmdFZGdlKHRpbWUpIHtcbiAgICAgICAgICAgIHJldHVybiB0aW1lcklkID0gdW5kZWZpbmVkJDEsIHRyYWlsaW5nICYmIGxhc3RBcmdzID8gaW52b2tlRnVuYyh0aW1lKSA6IChsYXN0QXJncyA9IGxhc3RUaGlzID0gdW5kZWZpbmVkJDEsIHJlc3VsdDIpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBmdW5jdGlvbiBjYW5jZWwoKSB7XG4gICAgICAgICAgICB0aW1lcklkICE9PSB1bmRlZmluZWQkMSAmJiBjbGVhclRpbWVvdXQodGltZXJJZCksIGxhc3RJbnZva2VUaW1lID0gMCwgbGFzdEFyZ3MgPSBsYXN0Q2FsbFRpbWUgPSBsYXN0VGhpcyA9IHRpbWVySWQgPSB1bmRlZmluZWQkMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZnVuY3Rpb24gZmx1c2goKSB7XG4gICAgICAgICAgICByZXR1cm4gdGltZXJJZCA9PT0gdW5kZWZpbmVkJDEgPyByZXN1bHQyIDogdHJhaWxpbmdFZGdlKG5vdygpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZnVuY3Rpb24gZGVib3VuY2VkKCkge1xuICAgICAgICAgICAgdmFyIHRpbWUgPSBub3coKSwgaXNJbnZva2luZyA9IHNob3VsZEludm9rZSh0aW1lKTtcbiAgICAgICAgICAgIGlmIChsYXN0QXJncyA9IGFyZ3VtZW50cywgbGFzdFRoaXMgPSB0aGlzLCBsYXN0Q2FsbFRpbWUgPSB0aW1lLCBpc0ludm9raW5nKSB7XG4gICAgICAgICAgICAgIGlmICh0aW1lcklkID09PSB1bmRlZmluZWQkMSlcbiAgICAgICAgICAgICAgICByZXR1cm4gbGVhZGluZ0VkZ2UobGFzdENhbGxUaW1lKTtcbiAgICAgICAgICAgICAgaWYgKG1heGluZylcbiAgICAgICAgICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KHRpbWVySWQpLCB0aW1lcklkID0gc2V0VGltZW91dCh0aW1lckV4cGlyZWQsIHdhaXQpLCBpbnZva2VGdW5jKGxhc3RDYWxsVGltZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGltZXJJZCA9PT0gdW5kZWZpbmVkJDEgJiYgKHRpbWVySWQgPSBzZXRUaW1lb3V0KHRpbWVyRXhwaXJlZCwgd2FpdCkpLCByZXN1bHQyO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gZGVib3VuY2VkLmNhbmNlbCA9IGNhbmNlbCwgZGVib3VuY2VkLmZsdXNoID0gZmx1c2gsIGRlYm91bmNlZDtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZGVmZXIgPSBiYXNlUmVzdChmdW5jdGlvbihmdW5jLCBhcmdzKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VEZWxheShmdW5jLCAxLCBhcmdzKTtcbiAgICAgICAgfSksIGRlbGF5ID0gYmFzZVJlc3QoZnVuY3Rpb24oZnVuYywgd2FpdCwgYXJncykge1xuICAgICAgICAgIHJldHVybiBiYXNlRGVsYXkoZnVuYywgdG9OdW1iZXIod2FpdCkgfHwgMCwgYXJncyk7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBmbGlwKGZ1bmMpIHtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlV3JhcChmdW5jLCBXUkFQX0ZMSVBfRkxBRyk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWVtb2l6ZShmdW5jLCByZXNvbHZlcikge1xuICAgICAgICAgIGlmICh0eXBlb2YgZnVuYyAhPSBcImZ1bmN0aW9uXCIgfHwgcmVzb2x2ZXIgIT0gbnVsbCAmJiB0eXBlb2YgcmVzb2x2ZXIgIT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgICAgIHZhciBtZW1vaXplZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsIGtleSA9IHJlc29sdmVyID8gcmVzb2x2ZXIuYXBwbHkodGhpcywgYXJncykgOiBhcmdzWzBdLCBjYWNoZSA9IG1lbW9pemVkLmNhY2hlO1xuICAgICAgICAgICAgaWYgKGNhY2hlLmhhcyhrZXkpKVxuICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuZ2V0KGtleSk7XG4gICAgICAgICAgICB2YXIgcmVzdWx0MiA9IGZ1bmMuYXBwbHkodGhpcywgYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gbWVtb2l6ZWQuY2FjaGUgPSBjYWNoZS5zZXQoa2V5LCByZXN1bHQyKSB8fCBjYWNoZSwgcmVzdWx0MjtcbiAgICAgICAgICB9O1xuICAgICAgICAgIHJldHVybiBtZW1vaXplZC5jYWNoZSA9IG5ldyAobWVtb2l6ZS5DYWNoZSB8fCBNYXBDYWNoZSkoKSwgbWVtb2l6ZWQ7XG4gICAgICAgIH1cbiAgICAgICAgbWVtb2l6ZS5DYWNoZSA9IE1hcENhY2hlO1xuICAgICAgICBmdW5jdGlvbiBuZWdhdGUocHJlZGljYXRlKSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBwcmVkaWNhdGUgIT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgcmV0dXJuICFwcmVkaWNhdGUuY2FsbCh0aGlzKTtcbiAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIHJldHVybiAhcHJlZGljYXRlLmNhbGwodGhpcywgYXJnc1swXSk7XG4gICAgICAgICAgICAgIGNhc2UgMjpcbiAgICAgICAgICAgICAgICByZXR1cm4gIXByZWRpY2F0ZS5jYWxsKHRoaXMsIGFyZ3NbMF0sIGFyZ3NbMV0pO1xuICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgcmV0dXJuICFwcmVkaWNhdGUuY2FsbCh0aGlzLCBhcmdzWzBdLCBhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiAhcHJlZGljYXRlLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gb25jZShmdW5jKSB7XG4gICAgICAgICAgcmV0dXJuIGJlZm9yZSgyLCBmdW5jKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgb3ZlckFyZ3MgPSBjYXN0UmVzdChmdW5jdGlvbihmdW5jLCB0cmFuc2Zvcm1zKSB7XG4gICAgICAgICAgdHJhbnNmb3JtcyA9IHRyYW5zZm9ybXMubGVuZ3RoID09IDEgJiYgaXNBcnJheSh0cmFuc2Zvcm1zWzBdKSA/IGFycmF5TWFwKHRyYW5zZm9ybXNbMF0sIGJhc2VVbmFyeShnZXRJdGVyYXRlZSgpKSkgOiBhcnJheU1hcChiYXNlRmxhdHRlbih0cmFuc2Zvcm1zLCAxKSwgYmFzZVVuYXJ5KGdldEl0ZXJhdGVlKCkpKTtcbiAgICAgICAgICB2YXIgZnVuY3NMZW5ndGggPSB0cmFuc2Zvcm1zLmxlbmd0aDtcbiAgICAgICAgICByZXR1cm4gYmFzZVJlc3QoZnVuY3Rpb24oYXJncykge1xuICAgICAgICAgICAgZm9yICh2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gbmF0aXZlTWluKGFyZ3MubGVuZ3RoLCBmdW5jc0xlbmd0aCk7ICsraW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICAgICAgYXJnc1tpbmRleF0gPSB0cmFuc2Zvcm1zW2luZGV4XS5jYWxsKHRoaXMsIGFyZ3NbaW5kZXhdKTtcbiAgICAgICAgICAgIHJldHVybiBhcHBseShmdW5jLCB0aGlzLCBhcmdzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSksIHBhcnRpYWwgPSBiYXNlUmVzdChmdW5jdGlvbihmdW5jLCBwYXJ0aWFscykge1xuICAgICAgICAgIHZhciBob2xkZXJzID0gcmVwbGFjZUhvbGRlcnMocGFydGlhbHMsIGdldEhvbGRlcihwYXJ0aWFsKSk7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZVdyYXAoZnVuYywgV1JBUF9QQVJUSUFMX0ZMQUcsIHVuZGVmaW5lZCQxLCBwYXJ0aWFscywgaG9sZGVycyk7XG4gICAgICAgIH0pLCBwYXJ0aWFsUmlnaHQgPSBiYXNlUmVzdChmdW5jdGlvbihmdW5jLCBwYXJ0aWFscykge1xuICAgICAgICAgIHZhciBob2xkZXJzID0gcmVwbGFjZUhvbGRlcnMocGFydGlhbHMsIGdldEhvbGRlcihwYXJ0aWFsUmlnaHQpKTtcbiAgICAgICAgICByZXR1cm4gY3JlYXRlV3JhcChmdW5jLCBXUkFQX1BBUlRJQUxfUklHSFRfRkxBRywgdW5kZWZpbmVkJDEsIHBhcnRpYWxzLCBob2xkZXJzKTtcbiAgICAgICAgfSksIHJlYXJnID0gZmxhdFJlc3QoZnVuY3Rpb24oZnVuYywgaW5kZXhlcykge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVXcmFwKGZ1bmMsIFdSQVBfUkVBUkdfRkxBRywgdW5kZWZpbmVkJDEsIHVuZGVmaW5lZCQxLCB1bmRlZmluZWQkMSwgaW5kZXhlcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiByZXN0KGZ1bmMsIHN0YXJ0KSB7XG4gICAgICAgICAgaWYgKHR5cGVvZiBmdW5jICE9IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgICAgICAgICByZXR1cm4gc3RhcnQgPSBzdGFydCA9PT0gdW5kZWZpbmVkJDEgPyBzdGFydCA6IHRvSW50ZWdlcihzdGFydCksIGJhc2VSZXN0KGZ1bmMsIHN0YXJ0KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzcHJlYWQoZnVuYywgc3RhcnQpIHtcbiAgICAgICAgICBpZiAodHlwZW9mIGZ1bmMgIT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihGVU5DX0VSUk9SX1RFWFQpO1xuICAgICAgICAgIHJldHVybiBzdGFydCA9IHN0YXJ0ID09IG51bGwgPyAwIDogbmF0aXZlTWF4KHRvSW50ZWdlcihzdGFydCksIDApLCBiYXNlUmVzdChmdW5jdGlvbihhcmdzKSB7XG4gICAgICAgICAgICB2YXIgYXJyYXkgPSBhcmdzW3N0YXJ0XSwgb3RoZXJBcmdzID0gY2FzdFNsaWNlKGFyZ3MsIDAsIHN0YXJ0KTtcbiAgICAgICAgICAgIHJldHVybiBhcnJheSAmJiBhcnJheVB1c2gob3RoZXJBcmdzLCBhcnJheSksIGFwcGx5KGZ1bmMsIHRoaXMsIG90aGVyQXJncyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdGhyb3R0bGUoZnVuYywgd2FpdCwgb3B0aW9ucykge1xuICAgICAgICAgIHZhciBsZWFkaW5nID0gITAsIHRyYWlsaW5nID0gITA7XG4gICAgICAgICAgaWYgKHR5cGVvZiBmdW5jICE9IFwiZnVuY3Rpb25cIilcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoRlVOQ19FUlJPUl9URVhUKTtcbiAgICAgICAgICByZXR1cm4gaXNPYmplY3Qob3B0aW9ucykgJiYgKGxlYWRpbmcgPSBcImxlYWRpbmdcIiBpbiBvcHRpb25zID8gISFvcHRpb25zLmxlYWRpbmcgOiBsZWFkaW5nLCB0cmFpbGluZyA9IFwidHJhaWxpbmdcIiBpbiBvcHRpb25zID8gISFvcHRpb25zLnRyYWlsaW5nIDogdHJhaWxpbmcpLCBkZWJvdW5jZShmdW5jLCB3YWl0LCB7XG4gICAgICAgICAgICBsZWFkaW5nLFxuICAgICAgICAgICAgbWF4V2FpdDogd2FpdCxcbiAgICAgICAgICAgIHRyYWlsaW5nXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdW5hcnkoZnVuYykge1xuICAgICAgICAgIHJldHVybiBhcnkoZnVuYywgMSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gd3JhcCh2YWx1ZSwgd3JhcHBlcikge1xuICAgICAgICAgIHJldHVybiBwYXJ0aWFsKGNhc3RGdW5jdGlvbih3cmFwcGVyKSwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNhc3RBcnJheSgpIHtcbiAgICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgdmFyIHZhbHVlID0gYXJndW1lbnRzWzBdO1xuICAgICAgICAgIHJldHVybiBpc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW3ZhbHVlXTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjbG9uZSh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBiYXNlQ2xvbmUodmFsdWUsIENMT05FX1NZTUJPTFNfRkxBRyk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gY2xvbmVXaXRoKHZhbHVlLCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgcmV0dXJuIGN1c3RvbWl6ZXIgPSB0eXBlb2YgY3VzdG9taXplciA9PSBcImZ1bmN0aW9uXCIgPyBjdXN0b21pemVyIDogdW5kZWZpbmVkJDEsIGJhc2VDbG9uZSh2YWx1ZSwgQ0xPTkVfU1lNQk9MU19GTEFHLCBjdXN0b21pemVyKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjbG9uZURlZXAodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUNsb25lKHZhbHVlLCBDTE9ORV9ERUVQX0ZMQUcgfCBDTE9ORV9TWU1CT0xTX0ZMQUcpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNsb25lRGVlcFdpdGgodmFsdWUsIGN1c3RvbWl6ZXIpIHtcbiAgICAgICAgICByZXR1cm4gY3VzdG9taXplciA9IHR5cGVvZiBjdXN0b21pemVyID09IFwiZnVuY3Rpb25cIiA/IGN1c3RvbWl6ZXIgOiB1bmRlZmluZWQkMSwgYmFzZUNsb25lKHZhbHVlLCBDTE9ORV9ERUVQX0ZMQUcgfCBDTE9ORV9TWU1CT0xTX0ZMQUcsIGN1c3RvbWl6ZXIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvbmZvcm1zVG8ob2JqZWN0LCBzb3VyY2UpIHtcbiAgICAgICAgICByZXR1cm4gc291cmNlID09IG51bGwgfHwgYmFzZUNvbmZvcm1zVG8ob2JqZWN0LCBzb3VyY2UsIGtleXMoc291cmNlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZXEodmFsdWUsIG90aGVyKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbHVlID09PSBvdGhlciB8fCB2YWx1ZSAhPT0gdmFsdWUgJiYgb3RoZXIgIT09IG90aGVyO1xuICAgICAgICB9XG4gICAgICAgIHZhciBndCA9IGNyZWF0ZVJlbGF0aW9uYWxPcGVyYXRpb24oYmFzZUd0KSwgZ3RlID0gY3JlYXRlUmVsYXRpb25hbE9wZXJhdGlvbihmdW5jdGlvbih2YWx1ZSwgb3RoZXIpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgPj0gb3RoZXI7XG4gICAgICAgIH0pLCBpc0FyZ3VtZW50cyA9IGJhc2VJc0FyZ3VtZW50cygvKiBAX19QVVJFX18gKi8gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuIGFyZ3VtZW50cztcbiAgICAgICAgfSgpKSA/IGJhc2VJc0FyZ3VtZW50cyA6IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgaGFzT3duUHJvcGVydHkuY2FsbCh2YWx1ZSwgXCJjYWxsZWVcIikgJiYgIXByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwodmFsdWUsIFwiY2FsbGVlXCIpO1xuICAgICAgICB9LCBpc0FycmF5ID0gQXJyYXkyLmlzQXJyYXksIGlzQXJyYXlCdWZmZXIgPSBub2RlSXNBcnJheUJ1ZmZlciA/IGJhc2VVbmFyeShub2RlSXNBcnJheUJ1ZmZlcikgOiBiYXNlSXNBcnJheUJ1ZmZlcjtcbiAgICAgICAgZnVuY3Rpb24gaXNBcnJheUxpa2UodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiBpc0xlbmd0aCh2YWx1ZS5sZW5ndGgpICYmICFpc0Z1bmN0aW9uKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc0FycmF5TGlrZU9iamVjdCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGlzQXJyYXlMaWtlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc0Jvb2xlYW4odmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgPT09ICEwIHx8IHZhbHVlID09PSAhMSB8fCBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IGJvb2xUYWc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzQnVmZmVyID0gbmF0aXZlSXNCdWZmZXIgfHwgc3R1YkZhbHNlLCBpc0RhdGUgPSBub2RlSXNEYXRlID8gYmFzZVVuYXJ5KG5vZGVJc0RhdGUpIDogYmFzZUlzRGF0ZTtcbiAgICAgICAgZnVuY3Rpb24gaXNFbGVtZW50KHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgdmFsdWUubm9kZVR5cGUgPT09IDEgJiYgIWlzUGxhaW5PYmplY3QodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgICAgICAgICBpZiAodmFsdWUgPT0gbnVsbClcbiAgICAgICAgICAgIHJldHVybiAhMDtcbiAgICAgICAgICBpZiAoaXNBcnJheUxpa2UodmFsdWUpICYmIChpc0FycmF5KHZhbHVlKSB8fCB0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIiB8fCB0eXBlb2YgdmFsdWUuc3BsaWNlID09IFwiZnVuY3Rpb25cIiB8fCBpc0J1ZmZlcih2YWx1ZSkgfHwgaXNUeXBlZEFycmF5KHZhbHVlKSB8fCBpc0FyZ3VtZW50cyh2YWx1ZSkpKVxuICAgICAgICAgICAgcmV0dXJuICF2YWx1ZS5sZW5ndGg7XG4gICAgICAgICAgdmFyIHRhZyA9IGdldFRhZyh2YWx1ZSk7XG4gICAgICAgICAgaWYgKHRhZyA9PSBtYXBUYWcgfHwgdGFnID09IHNldFRhZylcbiAgICAgICAgICAgIHJldHVybiAhdmFsdWUuc2l6ZTtcbiAgICAgICAgICBpZiAoaXNQcm90b3R5cGUodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuICFiYXNlS2V5cyh2YWx1ZSkubGVuZ3RoO1xuICAgICAgICAgIGZvciAodmFyIGtleSBpbiB2YWx1ZSlcbiAgICAgICAgICAgIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBrZXkpKVxuICAgICAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgICAgcmV0dXJuICEwO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzRXF1YWwodmFsdWUsIG90aGVyKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VJc0VxdWFsKHZhbHVlLCBvdGhlcik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNFcXVhbFdpdGgodmFsdWUsIG90aGVyLCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgY3VzdG9taXplciA9IHR5cGVvZiBjdXN0b21pemVyID09IFwiZnVuY3Rpb25cIiA/IGN1c3RvbWl6ZXIgOiB1bmRlZmluZWQkMTtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IGN1c3RvbWl6ZXIgPyBjdXN0b21pemVyKHZhbHVlLCBvdGhlcikgOiB1bmRlZmluZWQkMTtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0MiA9PT0gdW5kZWZpbmVkJDEgPyBiYXNlSXNFcXVhbCh2YWx1ZSwgb3RoZXIsIHVuZGVmaW5lZCQxLCBjdXN0b21pemVyKSA6ICEhcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc0Vycm9yKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKCFpc09iamVjdExpa2UodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgICAgICAgICByZXR1cm4gdGFnID09IGVycm9yVGFnIHx8IHRhZyA9PSBkb21FeGNUYWcgfHwgdHlwZW9mIHZhbHVlLm1lc3NhZ2UgPT0gXCJzdHJpbmdcIiAmJiB0eXBlb2YgdmFsdWUubmFtZSA9PSBcInN0cmluZ1wiICYmICFpc1BsYWluT2JqZWN0KHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc0Zpbml0ZSh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJudW1iZXJcIiAmJiBuYXRpdmVJc0Zpbml0ZSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNGdW5jdGlvbih2YWx1ZSkge1xuICAgICAgICAgIGlmICghaXNPYmplY3QodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgIHZhciB0YWcgPSBiYXNlR2V0VGFnKHZhbHVlKTtcbiAgICAgICAgICByZXR1cm4gdGFnID09IGZ1bmNUYWcgfHwgdGFnID09IGdlblRhZyB8fCB0YWcgPT0gYXN5bmNUYWcgfHwgdGFnID09IHByb3h5VGFnO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzSW50ZWdlcih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJudW1iZXJcIiAmJiB2YWx1ZSA9PSB0b0ludGVnZXIodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzTGVuZ3RoKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSBcIm51bWJlclwiICYmIHZhbHVlID4gLTEgJiYgdmFsdWUgJSAxID09IDAgJiYgdmFsdWUgPD0gTUFYX1NBRkVfSU5URUdFUjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc09iamVjdCh2YWx1ZSkge1xuICAgICAgICAgIHZhciB0eXBlID0gdHlwZW9mIHZhbHVlO1xuICAgICAgICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmICh0eXBlID09IFwib2JqZWN0XCIgfHwgdHlwZSA9PSBcImZ1bmN0aW9uXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSBcIm9iamVjdFwiO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc01hcCA9IG5vZGVJc01hcCA/IGJhc2VVbmFyeShub2RlSXNNYXApIDogYmFzZUlzTWFwO1xuICAgICAgICBmdW5jdGlvbiBpc01hdGNoKG9iamVjdCwgc291cmNlKSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCA9PT0gc291cmNlIHx8IGJhc2VJc01hdGNoKG9iamVjdCwgc291cmNlLCBnZXRNYXRjaERhdGEoc291cmNlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNNYXRjaFdpdGgob2JqZWN0LCBzb3VyY2UsIGN1c3RvbWl6ZXIpIHtcbiAgICAgICAgICByZXR1cm4gY3VzdG9taXplciA9IHR5cGVvZiBjdXN0b21pemVyID09IFwiZnVuY3Rpb25cIiA/IGN1c3RvbWl6ZXIgOiB1bmRlZmluZWQkMSwgYmFzZUlzTWF0Y2gob2JqZWN0LCBzb3VyY2UsIGdldE1hdGNoRGF0YShzb3VyY2UpLCBjdXN0b21pemVyKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc05hTih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc051bWJlcih2YWx1ZSkgJiYgdmFsdWUgIT0gK3ZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzTmF0aXZlKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKGlzTWFza2FibGUodmFsdWUpKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yMihDT1JFX0VSUk9SX1RFWFQpO1xuICAgICAgICAgIHJldHVybiBiYXNlSXNOYXRpdmUodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzTnVsbCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpc05pbCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzTnVtYmVyKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSBcIm51bWJlclwiIHx8IGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgYmFzZUdldFRhZyh2YWx1ZSkgPT0gbnVtYmVyVGFnO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgICAgICAgICBpZiAoIWlzT2JqZWN0TGlrZSh2YWx1ZSkgfHwgYmFzZUdldFRhZyh2YWx1ZSkgIT0gb2JqZWN0VGFnKVxuICAgICAgICAgICAgcmV0dXJuICExO1xuICAgICAgICAgIHZhciBwcm90byA9IGdldFByb3RvdHlwZSh2YWx1ZSk7XG4gICAgICAgICAgaWYgKHByb3RvID09PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuICEwO1xuICAgICAgICAgIHZhciBDdG9yID0gaGFzT3duUHJvcGVydHkuY2FsbChwcm90bywgXCJjb25zdHJ1Y3RvclwiKSAmJiBwcm90by5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIEN0b3IgPT0gXCJmdW5jdGlvblwiICYmIEN0b3IgaW5zdGFuY2VvZiBDdG9yICYmIGZ1bmNUb1N0cmluZy5jYWxsKEN0b3IpID09IG9iamVjdEN0b3JTdHJpbmc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzUmVnRXhwID0gbm9kZUlzUmVnRXhwID8gYmFzZVVuYXJ5KG5vZGVJc1JlZ0V4cCkgOiBiYXNlSXNSZWdFeHA7XG4gICAgICAgIGZ1bmN0aW9uIGlzU2FmZUludGVnZXIodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gaXNJbnRlZ2VyKHZhbHVlKSAmJiB2YWx1ZSA+PSAtTUFYX1NBRkVfSU5URUdFUiAmJiB2YWx1ZSA8PSBNQVhfU0FGRV9JTlRFR0VSO1xuICAgICAgICB9XG4gICAgICAgIHZhciBpc1NldCA9IG5vZGVJc1NldCA/IGJhc2VVbmFyeShub2RlSXNTZXQpIDogYmFzZUlzU2V0O1xuICAgICAgICBmdW5jdGlvbiBpc1N0cmluZyh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT0gXCJzdHJpbmdcIiB8fCAhaXNBcnJheSh2YWx1ZSkgJiYgaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBzdHJpbmdUYWc7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNTeW1ib2wodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09IFwic3ltYm9sXCIgfHwgaXNPYmplY3RMaWtlKHZhbHVlKSAmJiBiYXNlR2V0VGFnKHZhbHVlKSA9PSBzeW1ib2xUYWc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGlzVHlwZWRBcnJheSA9IG5vZGVJc1R5cGVkQXJyYXkgPyBiYXNlVW5hcnkobm9kZUlzVHlwZWRBcnJheSkgOiBiYXNlSXNUeXBlZEFycmF5O1xuICAgICAgICBmdW5jdGlvbiBpc1VuZGVmaW5lZCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gaXNXZWFrTWFwKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGlzT2JqZWN0TGlrZSh2YWx1ZSkgJiYgZ2V0VGFnKHZhbHVlKSA9PSB3ZWFrTWFwVGFnO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGlzV2Vha1NldCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHdlYWtTZXRUYWc7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGx0ID0gY3JlYXRlUmVsYXRpb25hbE9wZXJhdGlvbihiYXNlTHQpLCBsdGUgPSBjcmVhdGVSZWxhdGlvbmFsT3BlcmF0aW9uKGZ1bmN0aW9uKHZhbHVlLCBvdGhlcikge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA8PSBvdGhlcjtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIHRvQXJyYXkodmFsdWUpIHtcbiAgICAgICAgICBpZiAoIXZhbHVlKVxuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgIGlmIChpc0FycmF5TGlrZSh2YWx1ZSkpXG4gICAgICAgICAgICByZXR1cm4gaXNTdHJpbmcodmFsdWUpID8gc3RyaW5nVG9BcnJheSh2YWx1ZSkgOiBjb3B5QXJyYXkodmFsdWUpO1xuICAgICAgICAgIGlmIChzeW1JdGVyYXRvciAmJiB2YWx1ZVtzeW1JdGVyYXRvcl0pXG4gICAgICAgICAgICByZXR1cm4gaXRlcmF0b3JUb0FycmF5KHZhbHVlW3N5bUl0ZXJhdG9yXSgpKTtcbiAgICAgICAgICB2YXIgdGFnID0gZ2V0VGFnKHZhbHVlKSwgZnVuYyA9IHRhZyA9PSBtYXBUYWcgPyBtYXBUb0FycmF5IDogdGFnID09IHNldFRhZyA/IHNldFRvQXJyYXkgOiB2YWx1ZXM7XG4gICAgICAgICAgcmV0dXJuIGZ1bmModmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvRmluaXRlKHZhbHVlKSB7XG4gICAgICAgICAgaWYgKCF2YWx1ZSlcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogMDtcbiAgICAgICAgICBpZiAodmFsdWUgPSB0b051bWJlcih2YWx1ZSksIHZhbHVlID09PSBJTkZJTklUWSB8fCB2YWx1ZSA9PT0gLUlORklOSVRZKSB7XG4gICAgICAgICAgICB2YXIgc2lnbiA9IHZhbHVlIDwgMCA/IC0xIDogMTtcbiAgICAgICAgICAgIHJldHVybiBzaWduICogTUFYX0lOVEVHRVI7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyB2YWx1ZSA6IDA7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdG9JbnRlZ2VyKHZhbHVlKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSB0b0Zpbml0ZSh2YWx1ZSksIHJlbWFpbmRlciA9IHJlc3VsdDIgJSAxO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyID09PSByZXN1bHQyID8gcmVtYWluZGVyID8gcmVzdWx0MiAtIHJlbWFpbmRlciA6IHJlc3VsdDIgOiAwO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvTGVuZ3RoKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbHVlID8gYmFzZUNsYW1wKHRvSW50ZWdlcih2YWx1ZSksIDAsIE1BWF9BUlJBWV9MRU5HVEgpIDogMDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b051bWJlcih2YWx1ZSkge1xuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT0gXCJudW1iZXJcIilcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICBpZiAoaXNTeW1ib2wodmFsdWUpKVxuICAgICAgICAgICAgcmV0dXJuIE5BTjtcbiAgICAgICAgICBpZiAoaXNPYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICB2YXIgb3RoZXIgPSB0eXBlb2YgdmFsdWUudmFsdWVPZiA9PSBcImZ1bmN0aW9uXCIgPyB2YWx1ZS52YWx1ZU9mKCkgOiB2YWx1ZTtcbiAgICAgICAgICAgIHZhbHVlID0gaXNPYmplY3Qob3RoZXIpID8gb3RoZXIgKyBcIlwiIDogb3RoZXI7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgIT0gXCJzdHJpbmdcIilcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogK3ZhbHVlO1xuICAgICAgICAgIHZhbHVlID0gYmFzZVRyaW0odmFsdWUpO1xuICAgICAgICAgIHZhciBpc0JpbmFyeSA9IHJlSXNCaW5hcnkudGVzdCh2YWx1ZSk7XG4gICAgICAgICAgcmV0dXJuIGlzQmluYXJ5IHx8IHJlSXNPY3RhbC50ZXN0KHZhbHVlKSA/IGZyZWVQYXJzZUludCh2YWx1ZS5zbGljZSgyKSwgaXNCaW5hcnkgPyAyIDogOCkgOiByZUlzQmFkSGV4LnRlc3QodmFsdWUpID8gTkFOIDogK3ZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvUGxhaW5PYmplY3QodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gY29weU9iamVjdCh2YWx1ZSwga2V5c0luKHZhbHVlKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdG9TYWZlSW50ZWdlcih2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA/IGJhc2VDbGFtcCh0b0ludGVnZXIodmFsdWUpLCAtTUFYX1NBRkVfSU5URUdFUiwgTUFYX1NBRkVfSU5URUdFUikgOiB2YWx1ZSA9PT0gMCA/IHZhbHVlIDogMDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b1N0cmluZyh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IGJhc2VUb1N0cmluZyh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGFzc2lnbiA9IGNyZWF0ZUFzc2lnbmVyKGZ1bmN0aW9uKG9iamVjdCwgc291cmNlKSB7XG4gICAgICAgICAgaWYgKGlzUHJvdG90eXBlKHNvdXJjZSkgfHwgaXNBcnJheUxpa2Uoc291cmNlKSkge1xuICAgICAgICAgICAgY29weU9iamVjdChzb3VyY2UsIGtleXMoc291cmNlKSwgb2JqZWN0KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG4gICAgICAgICAgZm9yICh2YXIga2V5IGluIHNvdXJjZSlcbiAgICAgICAgICAgIGhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpICYmIGFzc2lnblZhbHVlKG9iamVjdCwga2V5LCBzb3VyY2Vba2V5XSk7XG4gICAgICAgIH0pLCBhc3NpZ25JbiA9IGNyZWF0ZUFzc2lnbmVyKGZ1bmN0aW9uKG9iamVjdCwgc291cmNlKSB7XG4gICAgICAgICAgY29weU9iamVjdChzb3VyY2UsIGtleXNJbihzb3VyY2UpLCBvYmplY3QpO1xuICAgICAgICB9KSwgYXNzaWduSW5XaXRoID0gY3JlYXRlQXNzaWduZXIoZnVuY3Rpb24ob2JqZWN0LCBzb3VyY2UsIHNyY0luZGV4LCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgY29weU9iamVjdChzb3VyY2UsIGtleXNJbihzb3VyY2UpLCBvYmplY3QsIGN1c3RvbWl6ZXIpO1xuICAgICAgICB9KSwgYXNzaWduV2l0aCA9IGNyZWF0ZUFzc2lnbmVyKGZ1bmN0aW9uKG9iamVjdCwgc291cmNlLCBzcmNJbmRleCwgY3VzdG9taXplcikge1xuICAgICAgICAgIGNvcHlPYmplY3Qoc291cmNlLCBrZXlzKHNvdXJjZSksIG9iamVjdCwgY3VzdG9taXplcik7XG4gICAgICAgIH0pLCBhdCA9IGZsYXRSZXN0KGJhc2VBdCk7XG4gICAgICAgIGZ1bmN0aW9uIGNyZWF0ZTIocHJvdG90eXBlLCBwcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBiYXNlQ3JlYXRlKHByb3RvdHlwZSk7XG4gICAgICAgICAgcmV0dXJuIHByb3BlcnRpZXMgPT0gbnVsbCA/IHJlc3VsdDIgOiBiYXNlQXNzaWduKHJlc3VsdDIsIHByb3BlcnRpZXMpO1xuICAgICAgICB9XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IGJhc2VSZXN0KGZ1bmN0aW9uKG9iamVjdCwgc291cmNlcykge1xuICAgICAgICAgIG9iamVjdCA9IE9iamVjdDIob2JqZWN0KTtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gc291cmNlcy5sZW5ndGgsIGd1YXJkID0gbGVuZ3RoID4gMiA/IHNvdXJjZXNbMl0gOiB1bmRlZmluZWQkMTtcbiAgICAgICAgICBmb3IgKGd1YXJkICYmIGlzSXRlcmF0ZWVDYWxsKHNvdXJjZXNbMF0sIHNvdXJjZXNbMV0sIGd1YXJkKSAmJiAobGVuZ3RoID0gMSk7ICsraW5kZXggPCBsZW5ndGg7IClcbiAgICAgICAgICAgIGZvciAodmFyIHNvdXJjZSA9IHNvdXJjZXNbaW5kZXhdLCBwcm9wcyA9IGtleXNJbihzb3VyY2UpLCBwcm9wc0luZGV4ID0gLTEsIHByb3BzTGVuZ3RoID0gcHJvcHMubGVuZ3RoOyArK3Byb3BzSW5kZXggPCBwcm9wc0xlbmd0aDsgKSB7XG4gICAgICAgICAgICAgIHZhciBrZXkgPSBwcm9wc1twcm9wc0luZGV4XSwgdmFsdWUgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAgICAgKHZhbHVlID09PSB1bmRlZmluZWQkMSB8fCBlcSh2YWx1ZSwgb2JqZWN0UHJvdG9ba2V5XSkgJiYgIWhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBrZXkpKSAmJiAob2JqZWN0W2tleV0gPSBzb3VyY2Vba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICAgICAgfSksIGRlZmF1bHRzRGVlcCA9IGJhc2VSZXN0KGZ1bmN0aW9uKGFyZ3MpIHtcbiAgICAgICAgICByZXR1cm4gYXJncy5wdXNoKHVuZGVmaW5lZCQxLCBjdXN0b21EZWZhdWx0c01lcmdlKSwgYXBwbHkobWVyZ2VXaXRoLCB1bmRlZmluZWQkMSwgYXJncyk7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBmaW5kS2V5KG9iamVjdCwgcHJlZGljYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VGaW5kS2V5KG9iamVjdCwgZ2V0SXRlcmF0ZWUocHJlZGljYXRlLCAzKSwgYmFzZUZvck93bik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZmluZExhc3RLZXkob2JqZWN0LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUZpbmRLZXkob2JqZWN0LCBnZXRJdGVyYXRlZShwcmVkaWNhdGUsIDMpLCBiYXNlRm9yT3duUmlnaHQpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZvckluKG9iamVjdCwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gb2JqZWN0IDogYmFzZUZvcihvYmplY3QsIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMyksIGtleXNJbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZm9ySW5SaWdodChvYmplY3QsIGl0ZXJhdGVlMikge1xuICAgICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IG9iamVjdCA6IGJhc2VGb3JSaWdodChvYmplY3QsIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMyksIGtleXNJbik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZm9yT3duKG9iamVjdCwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCAmJiBiYXNlRm9yT3duKG9iamVjdCwgZ2V0SXRlcmF0ZWUoaXRlcmF0ZWUyLCAzKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZm9yT3duUmlnaHQob2JqZWN0LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ICYmIGJhc2VGb3JPd25SaWdodChvYmplY3QsIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMykpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZ1bmN0aW9ucyhvYmplY3QpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyBbXSA6IGJhc2VGdW5jdGlvbnMob2JqZWN0LCBrZXlzKG9iamVjdCkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGZ1bmN0aW9uc0luKG9iamVjdCkge1xuICAgICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IFtdIDogYmFzZUZ1bmN0aW9ucyhvYmplY3QsIGtleXNJbihvYmplY3QpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBnZXQob2JqZWN0LCBwYXRoLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkJDEgOiBiYXNlR2V0KG9iamVjdCwgcGF0aCk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIgPT09IHVuZGVmaW5lZCQxID8gZGVmYXVsdFZhbHVlIDogcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoYXMob2JqZWN0LCBwYXRoKSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCAhPSBudWxsICYmIGhhc1BhdGgob2JqZWN0LCBwYXRoLCBiYXNlSGFzKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBoYXNJbihvYmplY3QsIHBhdGgpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ICE9IG51bGwgJiYgaGFzUGF0aChvYmplY3QsIHBhdGgsIGJhc2VIYXNJbik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGludmVydCA9IGNyZWF0ZUludmVydGVyKGZ1bmN0aW9uKHJlc3VsdDIsIHZhbHVlLCBrZXkpIHtcbiAgICAgICAgICB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZS50b1N0cmluZyAhPSBcImZ1bmN0aW9uXCIgJiYgKHZhbHVlID0gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSkpLCByZXN1bHQyW3ZhbHVlXSA9IGtleTtcbiAgICAgICAgfSwgY29uc3RhbnQoaWRlbnRpdHkpKSwgaW52ZXJ0QnkgPSBjcmVhdGVJbnZlcnRlcihmdW5jdGlvbihyZXN1bHQyLCB2YWx1ZSwga2V5KSB7XG4gICAgICAgICAgdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUudG9TdHJpbmcgIT0gXCJmdW5jdGlvblwiICYmICh2YWx1ZSA9IG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpKSwgaGFzT3duUHJvcGVydHkuY2FsbChyZXN1bHQyLCB2YWx1ZSkgPyByZXN1bHQyW3ZhbHVlXS5wdXNoKGtleSkgOiByZXN1bHQyW3ZhbHVlXSA9IFtrZXldO1xuICAgICAgICB9LCBnZXRJdGVyYXRlZSksIGludm9rZSA9IGJhc2VSZXN0KGJhc2VJbnZva2UpO1xuICAgICAgICBmdW5jdGlvbiBrZXlzKG9iamVjdCkge1xuICAgICAgICAgIHJldHVybiBpc0FycmF5TGlrZShvYmplY3QpID8gYXJyYXlMaWtlS2V5cyhvYmplY3QpIDogYmFzZUtleXMob2JqZWN0KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBrZXlzSW4ob2JqZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIGlzQXJyYXlMaWtlKG9iamVjdCkgPyBhcnJheUxpa2VLZXlzKG9iamVjdCwgITApIDogYmFzZUtleXNJbihvYmplY3QpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1hcEtleXMob2JqZWN0LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IHt9O1xuICAgICAgICAgIHJldHVybiBpdGVyYXRlZTIgPSBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDMpLCBiYXNlRm9yT3duKG9iamVjdCwgZnVuY3Rpb24odmFsdWUsIGtleSwgb2JqZWN0Mikge1xuICAgICAgICAgICAgYmFzZUFzc2lnblZhbHVlKHJlc3VsdDIsIGl0ZXJhdGVlMih2YWx1ZSwga2V5LCBvYmplY3QyKSwgdmFsdWUpO1xuICAgICAgICAgIH0pLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1hcFZhbHVlcyhvYmplY3QsIGl0ZXJhdGVlMikge1xuICAgICAgICAgIHZhciByZXN1bHQyID0ge307XG4gICAgICAgICAgcmV0dXJuIGl0ZXJhdGVlMiA9IGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMyksIGJhc2VGb3JPd24ob2JqZWN0LCBmdW5jdGlvbih2YWx1ZSwga2V5LCBvYmplY3QyKSB7XG4gICAgICAgICAgICBiYXNlQXNzaWduVmFsdWUocmVzdWx0Miwga2V5LCBpdGVyYXRlZTIodmFsdWUsIGtleSwgb2JqZWN0MikpO1xuICAgICAgICAgIH0pLCByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIHZhciBtZXJnZSA9IGNyZWF0ZUFzc2lnbmVyKGZ1bmN0aW9uKG9iamVjdCwgc291cmNlLCBzcmNJbmRleCkge1xuICAgICAgICAgIGJhc2VNZXJnZShvYmplY3QsIHNvdXJjZSwgc3JjSW5kZXgpO1xuICAgICAgICB9KSwgbWVyZ2VXaXRoID0gY3JlYXRlQXNzaWduZXIoZnVuY3Rpb24ob2JqZWN0LCBzb3VyY2UsIHNyY0luZGV4LCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgYmFzZU1lcmdlKG9iamVjdCwgc291cmNlLCBzcmNJbmRleCwgY3VzdG9taXplcik7XG4gICAgICAgIH0pLCBvbWl0ID0gZmxhdFJlc3QoZnVuY3Rpb24ob2JqZWN0LCBwYXRocykge1xuICAgICAgICAgIHZhciByZXN1bHQyID0ge307XG4gICAgICAgICAgaWYgKG9iamVjdCA9PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgICAgdmFyIGlzRGVlcCA9ICExO1xuICAgICAgICAgIHBhdGhzID0gYXJyYXlNYXAocGF0aHMsIGZ1bmN0aW9uKHBhdGgpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KSwgaXNEZWVwIHx8IChpc0RlZXAgPSBwYXRoLmxlbmd0aCA+IDEpLCBwYXRoO1xuICAgICAgICAgIH0pLCBjb3B5T2JqZWN0KG9iamVjdCwgZ2V0QWxsS2V5c0luKG9iamVjdCksIHJlc3VsdDIpLCBpc0RlZXAgJiYgKHJlc3VsdDIgPSBiYXNlQ2xvbmUocmVzdWx0MiwgQ0xPTkVfREVFUF9GTEFHIHwgQ0xPTkVfRkxBVF9GTEFHIHwgQ0xPTkVfU1lNQk9MU19GTEFHLCBjdXN0b21PbWl0Q2xvbmUpKTtcbiAgICAgICAgICBmb3IgKHZhciBsZW5ndGggPSBwYXRocy5sZW5ndGg7IGxlbmd0aC0tOyApXG4gICAgICAgICAgICBiYXNlVW5zZXQocmVzdWx0MiwgcGF0aHNbbGVuZ3RoXSk7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDI7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBvbWl0Qnkob2JqZWN0LCBwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gcGlja0J5KG9iamVjdCwgbmVnYXRlKGdldEl0ZXJhdGVlKHByZWRpY2F0ZSkpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcGljayA9IGZsYXRSZXN0KGZ1bmN0aW9uKG9iamVjdCwgcGF0aHMpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyB7fSA6IGJhc2VQaWNrKG9iamVjdCwgcGF0aHMpO1xuICAgICAgICB9KTtcbiAgICAgICAgZnVuY3Rpb24gcGlja0J5KG9iamVjdCwgcHJlZGljYXRlKSB7XG4gICAgICAgICAgaWYgKG9iamVjdCA9PSBudWxsKVxuICAgICAgICAgICAgcmV0dXJuIHt9O1xuICAgICAgICAgIHZhciBwcm9wcyA9IGFycmF5TWFwKGdldEFsbEtleXNJbihvYmplY3QpLCBmdW5jdGlvbihwcm9wKSB7XG4gICAgICAgICAgICByZXR1cm4gW3Byb3BdO1xuICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBwcmVkaWNhdGUgPSBnZXRJdGVyYXRlZShwcmVkaWNhdGUpLCBiYXNlUGlja0J5KG9iamVjdCwgcHJvcHMsIGZ1bmN0aW9uKHZhbHVlLCBwYXRoKSB7XG4gICAgICAgICAgICByZXR1cm4gcHJlZGljYXRlKHZhbHVlLCBwYXRoWzBdKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiByZXN1bHQob2JqZWN0LCBwYXRoLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICBwYXRoID0gY2FzdFBhdGgocGF0aCwgb2JqZWN0KTtcbiAgICAgICAgICB2YXIgaW5kZXggPSAtMSwgbGVuZ3RoID0gcGF0aC5sZW5ndGg7XG4gICAgICAgICAgZm9yIChsZW5ndGggfHwgKGxlbmd0aCA9IDEsIG9iamVjdCA9IHVuZGVmaW5lZCQxKTsgKytpbmRleCA8IGxlbmd0aDsgKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBvYmplY3QgPT0gbnVsbCA/IHVuZGVmaW5lZCQxIDogb2JqZWN0W3RvS2V5KHBhdGhbaW5kZXhdKV07XG4gICAgICAgICAgICB2YWx1ZSA9PT0gdW5kZWZpbmVkJDEgJiYgKGluZGV4ID0gbGVuZ3RoLCB2YWx1ZSA9IGRlZmF1bHRWYWx1ZSksIG9iamVjdCA9IGlzRnVuY3Rpb24odmFsdWUpID8gdmFsdWUuY2FsbChvYmplY3QpIDogdmFsdWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc2V0KG9iamVjdCwgcGF0aCwgdmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gb2JqZWN0ID09IG51bGwgPyBvYmplY3QgOiBiYXNlU2V0KG9iamVjdCwgcGF0aCwgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHNldFdpdGgob2JqZWN0LCBwYXRoLCB2YWx1ZSwgY3VzdG9taXplcikge1xuICAgICAgICAgIHJldHVybiBjdXN0b21pemVyID0gdHlwZW9mIGN1c3RvbWl6ZXIgPT0gXCJmdW5jdGlvblwiID8gY3VzdG9taXplciA6IHVuZGVmaW5lZCQxLCBvYmplY3QgPT0gbnVsbCA/IG9iamVjdCA6IGJhc2VTZXQob2JqZWN0LCBwYXRoLCB2YWx1ZSwgY3VzdG9taXplcik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIHRvUGFpcnMgPSBjcmVhdGVUb1BhaXJzKGtleXMpLCB0b1BhaXJzSW4gPSBjcmVhdGVUb1BhaXJzKGtleXNJbik7XG4gICAgICAgIGZ1bmN0aW9uIHRyYW5zZm9ybShvYmplY3QsIGl0ZXJhdGVlMiwgYWNjdW11bGF0b3IpIHtcbiAgICAgICAgICB2YXIgaXNBcnIgPSBpc0FycmF5KG9iamVjdCksIGlzQXJyTGlrZSA9IGlzQXJyIHx8IGlzQnVmZmVyKG9iamVjdCkgfHwgaXNUeXBlZEFycmF5KG9iamVjdCk7XG4gICAgICAgICAgaWYgKGl0ZXJhdGVlMiA9IGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgNCksIGFjY3VtdWxhdG9yID09IG51bGwpIHtcbiAgICAgICAgICAgIHZhciBDdG9yID0gb2JqZWN0ICYmIG9iamVjdC5jb25zdHJ1Y3RvcjtcbiAgICAgICAgICAgIGlzQXJyTGlrZSA/IGFjY3VtdWxhdG9yID0gaXNBcnIgPyBuZXcgQ3RvcigpIDogW10gOiBpc09iamVjdChvYmplY3QpID8gYWNjdW11bGF0b3IgPSBpc0Z1bmN0aW9uKEN0b3IpID8gYmFzZUNyZWF0ZShnZXRQcm90b3R5cGUob2JqZWN0KSkgOiB7fSA6IGFjY3VtdWxhdG9yID0ge307XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiAoaXNBcnJMaWtlID8gYXJyYXlFYWNoIDogYmFzZUZvck93bikob2JqZWN0LCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIG9iamVjdDIpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVyYXRlZTIoYWNjdW11bGF0b3IsIHZhbHVlLCBpbmRleCwgb2JqZWN0Mik7XG4gICAgICAgICAgfSksIGFjY3VtdWxhdG9yO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHVuc2V0KG9iamVjdCwgcGF0aCkge1xuICAgICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/ICEwIDogYmFzZVVuc2V0KG9iamVjdCwgcGF0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdXBkYXRlKG9iamVjdCwgcGF0aCwgdXBkYXRlcikge1xuICAgICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IG9iamVjdCA6IGJhc2VVcGRhdGUob2JqZWN0LCBwYXRoLCBjYXN0RnVuY3Rpb24odXBkYXRlcikpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVdpdGgob2JqZWN0LCBwYXRoLCB1cGRhdGVyLCBjdXN0b21pemVyKSB7XG4gICAgICAgICAgcmV0dXJuIGN1c3RvbWl6ZXIgPSB0eXBlb2YgY3VzdG9taXplciA9PSBcImZ1bmN0aW9uXCIgPyBjdXN0b21pemVyIDogdW5kZWZpbmVkJDEsIG9iamVjdCA9PSBudWxsID8gb2JqZWN0IDogYmFzZVVwZGF0ZShvYmplY3QsIHBhdGgsIGNhc3RGdW5jdGlvbih1cGRhdGVyKSwgY3VzdG9taXplcik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdmFsdWVzKG9iamVjdCkge1xuICAgICAgICAgIHJldHVybiBvYmplY3QgPT0gbnVsbCA/IFtdIDogYmFzZVZhbHVlcyhvYmplY3QsIGtleXMob2JqZWN0KSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdmFsdWVzSW4ob2JqZWN0KSB7XG4gICAgICAgICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gW10gOiBiYXNlVmFsdWVzKG9iamVjdCwga2V5c0luKG9iamVjdCkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNsYW1wKG51bWJlciwgbG93ZXIsIHVwcGVyKSB7XG4gICAgICAgICAgcmV0dXJuIHVwcGVyID09PSB1bmRlZmluZWQkMSAmJiAodXBwZXIgPSBsb3dlciwgbG93ZXIgPSB1bmRlZmluZWQkMSksIHVwcGVyICE9PSB1bmRlZmluZWQkMSAmJiAodXBwZXIgPSB0b051bWJlcih1cHBlciksIHVwcGVyID0gdXBwZXIgPT09IHVwcGVyID8gdXBwZXIgOiAwKSwgbG93ZXIgIT09IHVuZGVmaW5lZCQxICYmIChsb3dlciA9IHRvTnVtYmVyKGxvd2VyKSwgbG93ZXIgPSBsb3dlciA9PT0gbG93ZXIgPyBsb3dlciA6IDApLCBiYXNlQ2xhbXAodG9OdW1iZXIobnVtYmVyKSwgbG93ZXIsIHVwcGVyKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBpblJhbmdlKG51bWJlciwgc3RhcnQsIGVuZCkge1xuICAgICAgICAgIHJldHVybiBzdGFydCA9IHRvRmluaXRlKHN0YXJ0KSwgZW5kID09PSB1bmRlZmluZWQkMSA/IChlbmQgPSBzdGFydCwgc3RhcnQgPSAwKSA6IGVuZCA9IHRvRmluaXRlKGVuZCksIG51bWJlciA9IHRvTnVtYmVyKG51bWJlciksIGJhc2VJblJhbmdlKG51bWJlciwgc3RhcnQsIGVuZCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcmFuZG9tKGxvd2VyLCB1cHBlciwgZmxvYXRpbmcpIHtcbiAgICAgICAgICBpZiAoZmxvYXRpbmcgJiYgdHlwZW9mIGZsb2F0aW5nICE9IFwiYm9vbGVhblwiICYmIGlzSXRlcmF0ZWVDYWxsKGxvd2VyLCB1cHBlciwgZmxvYXRpbmcpICYmICh1cHBlciA9IGZsb2F0aW5nID0gdW5kZWZpbmVkJDEpLCBmbG9hdGluZyA9PT0gdW5kZWZpbmVkJDEgJiYgKHR5cGVvZiB1cHBlciA9PSBcImJvb2xlYW5cIiA/IChmbG9hdGluZyA9IHVwcGVyLCB1cHBlciA9IHVuZGVmaW5lZCQxKSA6IHR5cGVvZiBsb3dlciA9PSBcImJvb2xlYW5cIiAmJiAoZmxvYXRpbmcgPSBsb3dlciwgbG93ZXIgPSB1bmRlZmluZWQkMSkpLCBsb3dlciA9PT0gdW5kZWZpbmVkJDEgJiYgdXBwZXIgPT09IHVuZGVmaW5lZCQxID8gKGxvd2VyID0gMCwgdXBwZXIgPSAxKSA6IChsb3dlciA9IHRvRmluaXRlKGxvd2VyKSwgdXBwZXIgPT09IHVuZGVmaW5lZCQxID8gKHVwcGVyID0gbG93ZXIsIGxvd2VyID0gMCkgOiB1cHBlciA9IHRvRmluaXRlKHVwcGVyKSksIGxvd2VyID4gdXBwZXIpIHtcbiAgICAgICAgICAgIHZhciB0ZW1wID0gbG93ZXI7XG4gICAgICAgICAgICBsb3dlciA9IHVwcGVyLCB1cHBlciA9IHRlbXA7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChmbG9hdGluZyB8fCBsb3dlciAlIDEgfHwgdXBwZXIgJSAxKSB7XG4gICAgICAgICAgICB2YXIgcmFuZCA9IG5hdGl2ZVJhbmRvbSgpO1xuICAgICAgICAgICAgcmV0dXJuIG5hdGl2ZU1pbihsb3dlciArIHJhbmQgKiAodXBwZXIgLSBsb3dlciArIGZyZWVQYXJzZUZsb2F0KFwiMWUtXCIgKyAoKHJhbmQgKyBcIlwiKS5sZW5ndGggLSAxKSkpLCB1cHBlcik7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBiYXNlUmFuZG9tKGxvd2VyLCB1cHBlcik7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGNhbWVsQ2FzZSA9IGNyZWF0ZUNvbXBvdW5kZXIoZnVuY3Rpb24ocmVzdWx0Miwgd29yZCwgaW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4gd29yZCA9IHdvcmQudG9Mb3dlckNhc2UoKSwgcmVzdWx0MiArIChpbmRleCA/IGNhcGl0YWxpemUod29yZCkgOiB3b3JkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyaW5nKSB7XG4gICAgICAgICAgcmV0dXJuIHVwcGVyRmlyc3QodG9TdHJpbmcoc3RyaW5nKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkZWJ1cnIoc3RyaW5nKSB7XG4gICAgICAgICAgcmV0dXJuIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyksIHN0cmluZyAmJiBzdHJpbmcucmVwbGFjZShyZUxhdGluLCBkZWJ1cnJMZXR0ZXIpLnJlcGxhY2UocmVDb21ib01hcmssIFwiXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGVuZHNXaXRoKHN0cmluZywgdGFyZ2V0LCBwb3NpdGlvbikge1xuICAgICAgICAgIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyksIHRhcmdldCA9IGJhc2VUb1N0cmluZyh0YXJnZXQpO1xuICAgICAgICAgIHZhciBsZW5ndGggPSBzdHJpbmcubGVuZ3RoO1xuICAgICAgICAgIHBvc2l0aW9uID0gcG9zaXRpb24gPT09IHVuZGVmaW5lZCQxID8gbGVuZ3RoIDogYmFzZUNsYW1wKHRvSW50ZWdlcihwb3NpdGlvbiksIDAsIGxlbmd0aCk7XG4gICAgICAgICAgdmFyIGVuZCA9IHBvc2l0aW9uO1xuICAgICAgICAgIHJldHVybiBwb3NpdGlvbiAtPSB0YXJnZXQubGVuZ3RoLCBwb3NpdGlvbiA+PSAwICYmIHN0cmluZy5zbGljZShwb3NpdGlvbiwgZW5kKSA9PSB0YXJnZXQ7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZXNjYXBlKHN0cmluZykge1xuICAgICAgICAgIHJldHVybiBzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpLCBzdHJpbmcgJiYgcmVIYXNVbmVzY2FwZWRIdG1sLnRlc3Qoc3RyaW5nKSA/IHN0cmluZy5yZXBsYWNlKHJlVW5lc2NhcGVkSHRtbCwgZXNjYXBlSHRtbENoYXIpIDogc3RyaW5nO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGVzY2FwZVJlZ0V4cChzdHJpbmcpIHtcbiAgICAgICAgICByZXR1cm4gc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKSwgc3RyaW5nICYmIHJlSGFzUmVnRXhwQ2hhci50ZXN0KHN0cmluZykgPyBzdHJpbmcucmVwbGFjZShyZVJlZ0V4cENoYXIsIFwiXFxcXCQmXCIpIDogc3RyaW5nO1xuICAgICAgICB9XG4gICAgICAgIHZhciBrZWJhYkNhc2UgPSBjcmVhdGVDb21wb3VuZGVyKGZ1bmN0aW9uKHJlc3VsdDIsIHdvcmQsIGluZGV4KSB7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIgKyAoaW5kZXggPyBcIi1cIiA6IFwiXCIpICsgd29yZC50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB9KSwgbG93ZXJDYXNlID0gY3JlYXRlQ29tcG91bmRlcihmdW5jdGlvbihyZXN1bHQyLCB3b3JkLCBpbmRleCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQyICsgKGluZGV4ID8gXCIgXCIgOiBcIlwiKSArIHdvcmQudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfSksIGxvd2VyRmlyc3QgPSBjcmVhdGVDYXNlRmlyc3QoXCJ0b0xvd2VyQ2FzZVwiKTtcbiAgICAgICAgZnVuY3Rpb24gcGFkKHN0cmluZywgbGVuZ3RoLCBjaGFycykge1xuICAgICAgICAgIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyksIGxlbmd0aCA9IHRvSW50ZWdlcihsZW5ndGgpO1xuICAgICAgICAgIHZhciBzdHJMZW5ndGggPSBsZW5ndGggPyBzdHJpbmdTaXplKHN0cmluZykgOiAwO1xuICAgICAgICAgIGlmICghbGVuZ3RoIHx8IHN0ckxlbmd0aCA+PSBsZW5ndGgpXG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgICAgICAgIHZhciBtaWQgPSAobGVuZ3RoIC0gc3RyTGVuZ3RoKSAvIDI7XG4gICAgICAgICAgcmV0dXJuIGNyZWF0ZVBhZGRpbmcobmF0aXZlRmxvb3IobWlkKSwgY2hhcnMpICsgc3RyaW5nICsgY3JlYXRlUGFkZGluZyhuYXRpdmVDZWlsKG1pZCksIGNoYXJzKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwYWRFbmQoc3RyaW5nLCBsZW5ndGgsIGNoYXJzKSB7XG4gICAgICAgICAgc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKSwgbGVuZ3RoID0gdG9JbnRlZ2VyKGxlbmd0aCk7XG4gICAgICAgICAgdmFyIHN0ckxlbmd0aCA9IGxlbmd0aCA/IHN0cmluZ1NpemUoc3RyaW5nKSA6IDA7XG4gICAgICAgICAgcmV0dXJuIGxlbmd0aCAmJiBzdHJMZW5ndGggPCBsZW5ndGggPyBzdHJpbmcgKyBjcmVhdGVQYWRkaW5nKGxlbmd0aCAtIHN0ckxlbmd0aCwgY2hhcnMpIDogc3RyaW5nO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHBhZFN0YXJ0KHN0cmluZywgbGVuZ3RoLCBjaGFycykge1xuICAgICAgICAgIHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyksIGxlbmd0aCA9IHRvSW50ZWdlcihsZW5ndGgpO1xuICAgICAgICAgIHZhciBzdHJMZW5ndGggPSBsZW5ndGggPyBzdHJpbmdTaXplKHN0cmluZykgOiAwO1xuICAgICAgICAgIHJldHVybiBsZW5ndGggJiYgc3RyTGVuZ3RoIDwgbGVuZ3RoID8gY3JlYXRlUGFkZGluZyhsZW5ndGggLSBzdHJMZW5ndGgsIGNoYXJzKSArIHN0cmluZyA6IHN0cmluZztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBwYXJzZUludDIoc3RyaW5nLCByYWRpeCwgZ3VhcmQpIHtcbiAgICAgICAgICByZXR1cm4gZ3VhcmQgfHwgcmFkaXggPT0gbnVsbCA/IHJhZGl4ID0gMCA6IHJhZGl4ICYmIChyYWRpeCA9ICtyYWRpeCksIG5hdGl2ZVBhcnNlSW50KHRvU3RyaW5nKHN0cmluZykucmVwbGFjZShyZVRyaW1TdGFydCwgXCJcIiksIHJhZGl4IHx8IDApO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlcGVhdChzdHJpbmcsIG4sIGd1YXJkKSB7XG4gICAgICAgICAgcmV0dXJuIChndWFyZCA/IGlzSXRlcmF0ZWVDYWxsKHN0cmluZywgbiwgZ3VhcmQpIDogbiA9PT0gdW5kZWZpbmVkJDEpID8gbiA9IDEgOiBuID0gdG9JbnRlZ2VyKG4pLCBiYXNlUmVwZWF0KHRvU3RyaW5nKHN0cmluZyksIG4pO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHJlcGxhY2UoKSB7XG4gICAgICAgICAgdmFyIGFyZ3MgPSBhcmd1bWVudHMsIHN0cmluZyA9IHRvU3RyaW5nKGFyZ3NbMF0pO1xuICAgICAgICAgIHJldHVybiBhcmdzLmxlbmd0aCA8IDMgPyBzdHJpbmcgOiBzdHJpbmcucmVwbGFjZShhcmdzWzFdLCBhcmdzWzJdKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc25ha2VDYXNlID0gY3JlYXRlQ29tcG91bmRlcihmdW5jdGlvbihyZXN1bHQyLCB3b3JkLCBpbmRleCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQyICsgKGluZGV4ID8gXCJfXCIgOiBcIlwiKSArIHdvcmQudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIHNwbGl0KHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgICAgIHJldHVybiBsaW1pdCAmJiB0eXBlb2YgbGltaXQgIT0gXCJudW1iZXJcIiAmJiBpc0l0ZXJhdGVlQ2FsbChzdHJpbmcsIHNlcGFyYXRvciwgbGltaXQpICYmIChzZXBhcmF0b3IgPSBsaW1pdCA9IHVuZGVmaW5lZCQxKSwgbGltaXQgPSBsaW1pdCA9PT0gdW5kZWZpbmVkJDEgPyBNQVhfQVJSQVlfTEVOR1RIIDogbGltaXQgPj4+IDAsIGxpbWl0ID8gKHN0cmluZyA9IHRvU3RyaW5nKHN0cmluZyksIHN0cmluZyAmJiAodHlwZW9mIHNlcGFyYXRvciA9PSBcInN0cmluZ1wiIHx8IHNlcGFyYXRvciAhPSBudWxsICYmICFpc1JlZ0V4cChzZXBhcmF0b3IpKSAmJiAoc2VwYXJhdG9yID0gYmFzZVRvU3RyaW5nKHNlcGFyYXRvciksICFzZXBhcmF0b3IgJiYgaGFzVW5pY29kZShzdHJpbmcpKSA/IGNhc3RTbGljZShzdHJpbmdUb0FycmF5KHN0cmluZyksIDAsIGxpbWl0KSA6IHN0cmluZy5zcGxpdChzZXBhcmF0b3IsIGxpbWl0KSkgOiBbXTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgc3RhcnRDYXNlID0gY3JlYXRlQ29tcG91bmRlcihmdW5jdGlvbihyZXN1bHQyLCB3b3JkLCBpbmRleCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQyICsgKGluZGV4ID8gXCIgXCIgOiBcIlwiKSArIHVwcGVyRmlyc3Qod29yZCk7XG4gICAgICAgIH0pO1xuICAgICAgICBmdW5jdGlvbiBzdGFydHNXaXRoMihzdHJpbmcsIHRhcmdldCwgcG9zaXRpb24pIHtcbiAgICAgICAgICByZXR1cm4gc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKSwgcG9zaXRpb24gPSBwb3NpdGlvbiA9PSBudWxsID8gMCA6IGJhc2VDbGFtcCh0b0ludGVnZXIocG9zaXRpb24pLCAwLCBzdHJpbmcubGVuZ3RoKSwgdGFyZ2V0ID0gYmFzZVRvU3RyaW5nKHRhcmdldCksIHN0cmluZy5zbGljZShwb3NpdGlvbiwgcG9zaXRpb24gKyB0YXJnZXQubGVuZ3RoKSA9PSB0YXJnZXQ7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdGVtcGxhdGUoc3RyaW5nLCBvcHRpb25zLCBndWFyZCkge1xuICAgICAgICAgIHZhciBzZXR0aW5ncyA9IGxvZGFzaDIudGVtcGxhdGVTZXR0aW5ncztcbiAgICAgICAgICBndWFyZCAmJiBpc0l0ZXJhdGVlQ2FsbChzdHJpbmcsIG9wdGlvbnMsIGd1YXJkKSAmJiAob3B0aW9ucyA9IHVuZGVmaW5lZCQxKSwgc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKSwgb3B0aW9ucyA9IGFzc2lnbkluV2l0aCh7fSwgb3B0aW9ucywgc2V0dGluZ3MsIGN1c3RvbURlZmF1bHRzQXNzaWduSW4pO1xuICAgICAgICAgIHZhciBpbXBvcnRzID0gYXNzaWduSW5XaXRoKHt9LCBvcHRpb25zLmltcG9ydHMsIHNldHRpbmdzLmltcG9ydHMsIGN1c3RvbURlZmF1bHRzQXNzaWduSW4pLCBpbXBvcnRzS2V5cyA9IGtleXMoaW1wb3J0cyksIGltcG9ydHNWYWx1ZXMgPSBiYXNlVmFsdWVzKGltcG9ydHMsIGltcG9ydHNLZXlzKSwgaXNFc2NhcGluZywgaXNFdmFsdWF0aW5nLCBpbmRleCA9IDAsIGludGVycG9sYXRlID0gb3B0aW9ucy5pbnRlcnBvbGF0ZSB8fCByZU5vTWF0Y2gsIHNvdXJjZSA9IFwiX19wICs9ICdcIiwgcmVEZWxpbWl0ZXJzID0gUmVnRXhwMihcbiAgICAgICAgICAgIChvcHRpb25zLmVzY2FwZSB8fCByZU5vTWF0Y2gpLnNvdXJjZSArIFwifFwiICsgaW50ZXJwb2xhdGUuc291cmNlICsgXCJ8XCIgKyAoaW50ZXJwb2xhdGUgPT09IHJlSW50ZXJwb2xhdGUgPyByZUVzVGVtcGxhdGUgOiByZU5vTWF0Y2gpLnNvdXJjZSArIFwifFwiICsgKG9wdGlvbnMuZXZhbHVhdGUgfHwgcmVOb01hdGNoKS5zb3VyY2UgKyBcInwkXCIsXG4gICAgICAgICAgICBcImdcIlxuICAgICAgICAgICksIHNvdXJjZVVSTCA9IFwiLy8jIHNvdXJjZVVSTD1cIiArIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMsIFwic291cmNlVVJMXCIpID8gKG9wdGlvbnMuc291cmNlVVJMICsgXCJcIikucmVwbGFjZSgvXFxzL2csIFwiIFwiKSA6IFwibG9kYXNoLnRlbXBsYXRlU291cmNlc1tcIiArICsrdGVtcGxhdGVDb3VudGVyICsgXCJdXCIpICsgYFxuYDtcbiAgICAgICAgICBzdHJpbmcucmVwbGFjZShyZURlbGltaXRlcnMsIGZ1bmN0aW9uKG1hdGNoLCBlc2NhcGVWYWx1ZSwgaW50ZXJwb2xhdGVWYWx1ZSwgZXNUZW1wbGF0ZVZhbHVlLCBldmFsdWF0ZVZhbHVlLCBvZmZzZXQpIHtcbiAgICAgICAgICAgIHJldHVybiBpbnRlcnBvbGF0ZVZhbHVlIHx8IChpbnRlcnBvbGF0ZVZhbHVlID0gZXNUZW1wbGF0ZVZhbHVlKSwgc291cmNlICs9IHN0cmluZy5zbGljZShpbmRleCwgb2Zmc2V0KS5yZXBsYWNlKHJlVW5lc2NhcGVkU3RyaW5nLCBlc2NhcGVTdHJpbmdDaGFyKSwgZXNjYXBlVmFsdWUgJiYgKGlzRXNjYXBpbmcgPSAhMCwgc291cmNlICs9IGAnICtcbl9fZShgICsgZXNjYXBlVmFsdWUgKyBgKSArXG4nYCksIGV2YWx1YXRlVmFsdWUgJiYgKGlzRXZhbHVhdGluZyA9ICEwLCBzb3VyY2UgKz0gYCc7XG5gICsgZXZhbHVhdGVWYWx1ZSArIGA7XG5fX3AgKz0gJ2ApLCBpbnRlcnBvbGF0ZVZhbHVlICYmIChzb3VyY2UgKz0gYCcgK1xuKChfX3QgPSAoYCArIGludGVycG9sYXRlVmFsdWUgKyBgKSkgPT0gbnVsbCA/ICcnIDogX190KSArXG4nYCksIGluZGV4ID0gb2Zmc2V0ICsgbWF0Y2gubGVuZ3RoLCBtYXRjaDtcbiAgICAgICAgICB9KSwgc291cmNlICs9IGAnO1xuYDtcbiAgICAgICAgICB2YXIgdmFyaWFibGUgPSBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9wdGlvbnMsIFwidmFyaWFibGVcIikgJiYgb3B0aW9ucy52YXJpYWJsZTtcbiAgICAgICAgICBpZiAoIXZhcmlhYmxlKVxuICAgICAgICAgICAgc291cmNlID0gYHdpdGggKG9iaikge1xuYCArIHNvdXJjZSArIGBcbn1cbmA7XG4gICAgICAgICAgZWxzZSBpZiAocmVGb3JiaWRkZW5JZGVudGlmaWVyQ2hhcnMudGVzdCh2YXJpYWJsZSkpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IyKElOVkFMSURfVEVNUExfVkFSX0VSUk9SX1RFWFQpO1xuICAgICAgICAgIHNvdXJjZSA9IChpc0V2YWx1YXRpbmcgPyBzb3VyY2UucmVwbGFjZShyZUVtcHR5U3RyaW5nTGVhZGluZywgXCJcIikgOiBzb3VyY2UpLnJlcGxhY2UocmVFbXB0eVN0cmluZ01pZGRsZSwgXCIkMVwiKS5yZXBsYWNlKHJlRW1wdHlTdHJpbmdUcmFpbGluZywgXCIkMTtcIiksIHNvdXJjZSA9IFwiZnVuY3Rpb24oXCIgKyAodmFyaWFibGUgfHwgXCJvYmpcIikgKyBgKSB7XG5gICsgKHZhcmlhYmxlID8gXCJcIiA6IGBvYmogfHwgKG9iaiA9IHt9KTtcbmApICsgXCJ2YXIgX190LCBfX3AgPSAnJ1wiICsgKGlzRXNjYXBpbmcgPyBcIiwgX19lID0gXy5lc2NhcGVcIiA6IFwiXCIpICsgKGlzRXZhbHVhdGluZyA/IGAsIF9faiA9IEFycmF5LnByb3RvdHlwZS5qb2luO1xuZnVuY3Rpb24gcHJpbnQoKSB7IF9fcCArPSBfX2ouY2FsbChhcmd1bWVudHMsICcnKSB9XG5gIDogYDtcbmApICsgc291cmNlICsgYHJldHVybiBfX3Bcbn1gO1xuICAgICAgICAgIHZhciByZXN1bHQyID0gYXR0ZW1wdChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHJldHVybiBGdW5jdGlvbjIoaW1wb3J0c0tleXMsIHNvdXJjZVVSTCArIFwicmV0dXJuIFwiICsgc291cmNlKS5hcHBseSh1bmRlZmluZWQkMSwgaW1wb3J0c1ZhbHVlcyk7XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgaWYgKHJlc3VsdDIuc291cmNlID0gc291cmNlLCBpc0Vycm9yKHJlc3VsdDIpKVxuICAgICAgICAgICAgdGhyb3cgcmVzdWx0MjtcbiAgICAgICAgICByZXR1cm4gcmVzdWx0MjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB0b0xvd2VyKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHRvU3RyaW5nKHZhbHVlKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvVXBwZXIodmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdG9TdHJpbmcodmFsdWUpLnRvVXBwZXJDYXNlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdHJpbShzdHJpbmcsIGNoYXJzLCBndWFyZCkge1xuICAgICAgICAgIGlmIChzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpLCBzdHJpbmcgJiYgKGd1YXJkIHx8IGNoYXJzID09PSB1bmRlZmluZWQkMSkpXG4gICAgICAgICAgICByZXR1cm4gYmFzZVRyaW0oc3RyaW5nKTtcbiAgICAgICAgICBpZiAoIXN0cmluZyB8fCAhKGNoYXJzID0gYmFzZVRvU3RyaW5nKGNoYXJzKSkpXG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nO1xuICAgICAgICAgIHZhciBzdHJTeW1ib2xzID0gc3RyaW5nVG9BcnJheShzdHJpbmcpLCBjaHJTeW1ib2xzID0gc3RyaW5nVG9BcnJheShjaGFycyksIHN0YXJ0ID0gY2hhcnNTdGFydEluZGV4KHN0clN5bWJvbHMsIGNoclN5bWJvbHMpLCBlbmQgPSBjaGFyc0VuZEluZGV4KHN0clN5bWJvbHMsIGNoclN5bWJvbHMpICsgMTtcbiAgICAgICAgICByZXR1cm4gY2FzdFNsaWNlKHN0clN5bWJvbHMsIHN0YXJ0LCBlbmQpLmpvaW4oXCJcIik7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdHJpbUVuZChzdHJpbmcsIGNoYXJzLCBndWFyZCkge1xuICAgICAgICAgIGlmIChzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpLCBzdHJpbmcgJiYgKGd1YXJkIHx8IGNoYXJzID09PSB1bmRlZmluZWQkMSkpXG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nLnNsaWNlKDAsIHRyaW1tZWRFbmRJbmRleChzdHJpbmcpICsgMSk7XG4gICAgICAgICAgaWYgKCFzdHJpbmcgfHwgIShjaGFycyA9IGJhc2VUb1N0cmluZyhjaGFycykpKVxuICAgICAgICAgICAgcmV0dXJuIHN0cmluZztcbiAgICAgICAgICB2YXIgc3RyU3ltYm9scyA9IHN0cmluZ1RvQXJyYXkoc3RyaW5nKSwgZW5kID0gY2hhcnNFbmRJbmRleChzdHJTeW1ib2xzLCBzdHJpbmdUb0FycmF5KGNoYXJzKSkgKyAxO1xuICAgICAgICAgIHJldHVybiBjYXN0U2xpY2Uoc3RyU3ltYm9scywgMCwgZW5kKS5qb2luKFwiXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRyaW1TdGFydChzdHJpbmcsIGNoYXJzLCBndWFyZCkge1xuICAgICAgICAgIGlmIChzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpLCBzdHJpbmcgJiYgKGd1YXJkIHx8IGNoYXJzID09PSB1bmRlZmluZWQkMSkpXG4gICAgICAgICAgICByZXR1cm4gc3RyaW5nLnJlcGxhY2UocmVUcmltU3RhcnQsIFwiXCIpO1xuICAgICAgICAgIGlmICghc3RyaW5nIHx8ICEoY2hhcnMgPSBiYXNlVG9TdHJpbmcoY2hhcnMpKSlcbiAgICAgICAgICAgIHJldHVybiBzdHJpbmc7XG4gICAgICAgICAgdmFyIHN0clN5bWJvbHMgPSBzdHJpbmdUb0FycmF5KHN0cmluZyksIHN0YXJ0ID0gY2hhcnNTdGFydEluZGV4KHN0clN5bWJvbHMsIHN0cmluZ1RvQXJyYXkoY2hhcnMpKTtcbiAgICAgICAgICByZXR1cm4gY2FzdFNsaWNlKHN0clN5bWJvbHMsIHN0YXJ0KS5qb2luKFwiXCIpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRydW5jYXRlKHN0cmluZywgb3B0aW9ucykge1xuICAgICAgICAgIHZhciBsZW5ndGggPSBERUZBVUxUX1RSVU5DX0xFTkdUSCwgb21pc3Npb24gPSBERUZBVUxUX1RSVU5DX09NSVNTSU9OO1xuICAgICAgICAgIGlmIChpc09iamVjdChvcHRpb25zKSkge1xuICAgICAgICAgICAgdmFyIHNlcGFyYXRvciA9IFwic2VwYXJhdG9yXCIgaW4gb3B0aW9ucyA/IG9wdGlvbnMuc2VwYXJhdG9yIDogc2VwYXJhdG9yO1xuICAgICAgICAgICAgbGVuZ3RoID0gXCJsZW5ndGhcIiBpbiBvcHRpb25zID8gdG9JbnRlZ2VyKG9wdGlvbnMubGVuZ3RoKSA6IGxlbmd0aCwgb21pc3Npb24gPSBcIm9taXNzaW9uXCIgaW4gb3B0aW9ucyA/IGJhc2VUb1N0cmluZyhvcHRpb25zLm9taXNzaW9uKSA6IG9taXNzaW9uO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpO1xuICAgICAgICAgIHZhciBzdHJMZW5ndGggPSBzdHJpbmcubGVuZ3RoO1xuICAgICAgICAgIGlmIChoYXNVbmljb2RlKHN0cmluZykpIHtcbiAgICAgICAgICAgIHZhciBzdHJTeW1ib2xzID0gc3RyaW5nVG9BcnJheShzdHJpbmcpO1xuICAgICAgICAgICAgc3RyTGVuZ3RoID0gc3RyU3ltYm9scy5sZW5ndGg7XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChsZW5ndGggPj0gc3RyTGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuIHN0cmluZztcbiAgICAgICAgICB2YXIgZW5kID0gbGVuZ3RoIC0gc3RyaW5nU2l6ZShvbWlzc2lvbik7XG4gICAgICAgICAgaWYgKGVuZCA8IDEpXG4gICAgICAgICAgICByZXR1cm4gb21pc3Npb247XG4gICAgICAgICAgdmFyIHJlc3VsdDIgPSBzdHJTeW1ib2xzID8gY2FzdFNsaWNlKHN0clN5bWJvbHMsIDAsIGVuZCkuam9pbihcIlwiKSA6IHN0cmluZy5zbGljZSgwLCBlbmQpO1xuICAgICAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCQxKVxuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDIgKyBvbWlzc2lvbjtcbiAgICAgICAgICBpZiAoc3RyU3ltYm9scyAmJiAoZW5kICs9IHJlc3VsdDIubGVuZ3RoIC0gZW5kKSwgaXNSZWdFeHAoc2VwYXJhdG9yKSkge1xuICAgICAgICAgICAgaWYgKHN0cmluZy5zbGljZShlbmQpLnNlYXJjaChzZXBhcmF0b3IpKSB7XG4gICAgICAgICAgICAgIHZhciBtYXRjaCwgc3Vic3RyaW5nID0gcmVzdWx0MjtcbiAgICAgICAgICAgICAgZm9yIChzZXBhcmF0b3IuZ2xvYmFsIHx8IChzZXBhcmF0b3IgPSBSZWdFeHAyKHNlcGFyYXRvci5zb3VyY2UsIHRvU3RyaW5nKHJlRmxhZ3MuZXhlYyhzZXBhcmF0b3IpKSArIFwiZ1wiKSksIHNlcGFyYXRvci5sYXN0SW5kZXggPSAwOyBtYXRjaCA9IHNlcGFyYXRvci5leGVjKHN1YnN0cmluZyk7IClcbiAgICAgICAgICAgICAgICB2YXIgbmV3RW5kID0gbWF0Y2guaW5kZXg7XG4gICAgICAgICAgICAgIHJlc3VsdDIgPSByZXN1bHQyLnNsaWNlKDAsIG5ld0VuZCA9PT0gdW5kZWZpbmVkJDEgPyBlbmQgOiBuZXdFbmQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZSBpZiAoc3RyaW5nLmluZGV4T2YoYmFzZVRvU3RyaW5nKHNlcGFyYXRvciksIGVuZCkgIT0gZW5kKSB7XG4gICAgICAgICAgICB2YXIgaW5kZXggPSByZXN1bHQyLmxhc3RJbmRleE9mKHNlcGFyYXRvcik7XG4gICAgICAgICAgICBpbmRleCA+IC0xICYmIChyZXN1bHQyID0gcmVzdWx0Mi5zbGljZSgwLCBpbmRleCkpO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4gcmVzdWx0MiArIG9taXNzaW9uO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHVuZXNjYXBlKHN0cmluZykge1xuICAgICAgICAgIHJldHVybiBzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpLCBzdHJpbmcgJiYgcmVIYXNFc2NhcGVkSHRtbC50ZXN0KHN0cmluZykgPyBzdHJpbmcucmVwbGFjZShyZUVzY2FwZWRIdG1sLCB1bmVzY2FwZUh0bWxDaGFyKSA6IHN0cmluZztcbiAgICAgICAgfVxuICAgICAgICB2YXIgdXBwZXJDYXNlID0gY3JlYXRlQ29tcG91bmRlcihmdW5jdGlvbihyZXN1bHQyLCB3b3JkLCBpbmRleCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQyICsgKGluZGV4ID8gXCIgXCIgOiBcIlwiKSArIHdvcmQudG9VcHBlckNhc2UoKTtcbiAgICAgICAgfSksIHVwcGVyRmlyc3QgPSBjcmVhdGVDYXNlRmlyc3QoXCJ0b1VwcGVyQ2FzZVwiKTtcbiAgICAgICAgZnVuY3Rpb24gd29yZHMoc3RyaW5nLCBwYXR0ZXJuLCBndWFyZCkge1xuICAgICAgICAgIHJldHVybiBzdHJpbmcgPSB0b1N0cmluZyhzdHJpbmcpLCBwYXR0ZXJuID0gZ3VhcmQgPyB1bmRlZmluZWQkMSA6IHBhdHRlcm4sIHBhdHRlcm4gPT09IHVuZGVmaW5lZCQxID8gaGFzVW5pY29kZVdvcmQoc3RyaW5nKSA/IHVuaWNvZGVXb3JkcyhzdHJpbmcpIDogYXNjaWlXb3JkcyhzdHJpbmcpIDogc3RyaW5nLm1hdGNoKHBhdHRlcm4pIHx8IFtdO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhdHRlbXB0ID0gYmFzZVJlc3QoZnVuY3Rpb24oZnVuYywgYXJncykge1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gYXBwbHkoZnVuYywgdW5kZWZpbmVkJDEsIGFyZ3MpO1xuICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBpc0Vycm9yKGUpID8gZSA6IG5ldyBFcnJvcjIoZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KSwgYmluZEFsbCA9IGZsYXRSZXN0KGZ1bmN0aW9uKG9iamVjdCwgbWV0aG9kTmFtZXMpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXlFYWNoKG1ldGhvZE5hbWVzLCBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgICAgIGtleSA9IHRvS2V5KGtleSksIGJhc2VBc3NpZ25WYWx1ZShvYmplY3QsIGtleSwgYmluZChvYmplY3Rba2V5XSwgb2JqZWN0KSk7XG4gICAgICAgICAgfSksIG9iamVjdDtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIGNvbmQocGFpcnMpIHtcbiAgICAgICAgICB2YXIgbGVuZ3RoID0gcGFpcnMgPT0gbnVsbCA/IDAgOiBwYWlycy5sZW5ndGgsIHRvSXRlcmF0ZWUgPSBnZXRJdGVyYXRlZSgpO1xuICAgICAgICAgIHJldHVybiBwYWlycyA9IGxlbmd0aCA/IGFycmF5TWFwKHBhaXJzLCBmdW5jdGlvbihwYWlyKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHBhaXJbMV0gIT0gXCJmdW5jdGlvblwiKVxuICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKEZVTkNfRVJST1JfVEVYVCk7XG4gICAgICAgICAgICByZXR1cm4gW3RvSXRlcmF0ZWUocGFpclswXSksIHBhaXJbMV1dO1xuICAgICAgICAgIH0pIDogW10sIGJhc2VSZXN0KGZ1bmN0aW9uKGFyZ3MpIHtcbiAgICAgICAgICAgIGZvciAodmFyIGluZGV4ID0gLTE7ICsraW5kZXggPCBsZW5ndGg7ICkge1xuICAgICAgICAgICAgICB2YXIgcGFpciA9IHBhaXJzW2luZGV4XTtcbiAgICAgICAgICAgICAgaWYgKGFwcGx5KHBhaXJbMF0sIHRoaXMsIGFyZ3MpKVxuICAgICAgICAgICAgICAgIHJldHVybiBhcHBseShwYWlyWzFdLCB0aGlzLCBhcmdzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBjb25mb3Jtcyhzb3VyY2UpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUNvbmZvcm1zKGJhc2VDbG9uZShzb3VyY2UsIENMT05FX0RFRVBfRkxBRykpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGNvbnN0YW50KHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gZGVmYXVsdFRvKHZhbHVlLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICByZXR1cm4gdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgPyBkZWZhdWx0VmFsdWUgOiB2YWx1ZTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgZmxvdyA9IGNyZWF0ZUZsb3coKSwgZmxvd1JpZ2h0ID0gY3JlYXRlRmxvdyghMCk7XG4gICAgICAgIGZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIGl0ZXJhdGVlKGZ1bmMpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZUl0ZXJhdGVlKHR5cGVvZiBmdW5jID09IFwiZnVuY3Rpb25cIiA/IGZ1bmMgOiBiYXNlQ2xvbmUoZnVuYywgQ0xPTkVfREVFUF9GTEFHKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWF0Y2hlcyhzb3VyY2UpIHtcbiAgICAgICAgICByZXR1cm4gYmFzZU1hdGNoZXMoYmFzZUNsb25lKHNvdXJjZSwgQ0xPTkVfREVFUF9GTEFHKSk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWF0Y2hlc1Byb3BlcnR5KHBhdGgsIHNyY1ZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VNYXRjaGVzUHJvcGVydHkocGF0aCwgYmFzZUNsb25lKHNyY1ZhbHVlLCBDTE9ORV9ERUVQX0ZMQUcpKTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgbWV0aG9kID0gYmFzZVJlc3QoZnVuY3Rpb24ocGF0aCwgYXJncykge1xuICAgICAgICAgIHJldHVybiBmdW5jdGlvbihvYmplY3QpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlSW52b2tlKG9iamVjdCwgcGF0aCwgYXJncyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSksIG1ldGhvZE9mID0gYmFzZVJlc3QoZnVuY3Rpb24ob2JqZWN0LCBhcmdzKSB7XG4gICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKHBhdGgpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlSW52b2tlKG9iamVjdCwgcGF0aCwgYXJncyk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgICAgIGZ1bmN0aW9uIG1peGluKG9iamVjdCwgc291cmNlLCBvcHRpb25zKSB7XG4gICAgICAgICAgdmFyIHByb3BzID0ga2V5cyhzb3VyY2UpLCBtZXRob2ROYW1lcyA9IGJhc2VGdW5jdGlvbnMoc291cmNlLCBwcm9wcyk7XG4gICAgICAgICAgb3B0aW9ucyA9PSBudWxsICYmICEoaXNPYmplY3Qoc291cmNlKSAmJiAobWV0aG9kTmFtZXMubGVuZ3RoIHx8ICFwcm9wcy5sZW5ndGgpKSAmJiAob3B0aW9ucyA9IHNvdXJjZSwgc291cmNlID0gb2JqZWN0LCBvYmplY3QgPSB0aGlzLCBtZXRob2ROYW1lcyA9IGJhc2VGdW5jdGlvbnMoc291cmNlLCBrZXlzKHNvdXJjZSkpKTtcbiAgICAgICAgICB2YXIgY2hhaW4yID0gIShpc09iamVjdChvcHRpb25zKSAmJiBcImNoYWluXCIgaW4gb3B0aW9ucykgfHwgISFvcHRpb25zLmNoYWluLCBpc0Z1bmMgPSBpc0Z1bmN0aW9uKG9iamVjdCk7XG4gICAgICAgICAgcmV0dXJuIGFycmF5RWFjaChtZXRob2ROYW1lcywgZnVuY3Rpb24obWV0aG9kTmFtZSkge1xuICAgICAgICAgICAgdmFyIGZ1bmMgPSBzb3VyY2VbbWV0aG9kTmFtZV07XG4gICAgICAgICAgICBvYmplY3RbbWV0aG9kTmFtZV0gPSBmdW5jLCBpc0Z1bmMgJiYgKG9iamVjdC5wcm90b3R5cGVbbWV0aG9kTmFtZV0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgdmFyIGNoYWluQWxsID0gdGhpcy5fX2NoYWluX187XG4gICAgICAgICAgICAgIGlmIChjaGFpbjIgfHwgY2hhaW5BbGwpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVzdWx0MiA9IG9iamVjdCh0aGlzLl9fd3JhcHBlZF9fKSwgYWN0aW9ucyA9IHJlc3VsdDIuX19hY3Rpb25zX18gPSBjb3B5QXJyYXkodGhpcy5fX2FjdGlvbnNfXyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFjdGlvbnMucHVzaCh7IGZ1bmMsIGFyZ3M6IGFyZ3VtZW50cywgdGhpc0FyZzogb2JqZWN0IH0pLCByZXN1bHQyLl9fY2hhaW5fXyA9IGNoYWluQWxsLCByZXN1bHQyO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIHJldHVybiBmdW5jLmFwcGx5KG9iamVjdCwgYXJyYXlQdXNoKFt0aGlzLnZhbHVlKCldLCBhcmd1bWVudHMpKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pLCBvYmplY3Q7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbm9Db25mbGljdCgpIHtcbiAgICAgICAgICByZXR1cm4gcm9vdC5fID09PSB0aGlzICYmIChyb290Ll8gPSBvbGREYXNoKSwgdGhpcztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBub29wKCkge1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG50aEFyZyhuKSB7XG4gICAgICAgICAgcmV0dXJuIG4gPSB0b0ludGVnZXIobiksIGJhc2VSZXN0KGZ1bmN0aW9uKGFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlTnRoKGFyZ3MsIG4pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHZhciBvdmVyID0gY3JlYXRlT3ZlcihhcnJheU1hcCksIG92ZXJFdmVyeSA9IGNyZWF0ZU92ZXIoYXJyYXlFdmVyeSksIG92ZXJTb21lID0gY3JlYXRlT3ZlcihhcnJheVNvbWUpO1xuICAgICAgICBmdW5jdGlvbiBwcm9wZXJ0eShwYXRoKSB7XG4gICAgICAgICAgcmV0dXJuIGlzS2V5KHBhdGgpID8gYmFzZVByb3BlcnR5KHRvS2V5KHBhdGgpKSA6IGJhc2VQcm9wZXJ0eURlZXAocGF0aCk7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gcHJvcGVydHlPZihvYmplY3QpIHtcbiAgICAgICAgICByZXR1cm4gZnVuY3Rpb24ocGF0aCkge1xuICAgICAgICAgICAgcmV0dXJuIG9iamVjdCA9PSBudWxsID8gdW5kZWZpbmVkJDEgOiBiYXNlR2V0KG9iamVjdCwgcGF0aCk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgcmFuZ2UgPSBjcmVhdGVSYW5nZSgpLCByYW5nZVJpZ2h0ID0gY3JlYXRlUmFuZ2UoITApO1xuICAgICAgICBmdW5jdGlvbiBzdHViQXJyYXkoKSB7XG4gICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHN0dWJGYWxzZSgpIHtcbiAgICAgICAgICByZXR1cm4gITE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc3R1Yk9iamVjdCgpIHtcbiAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gc3R1YlN0cmluZygpIHtcbiAgICAgICAgICByZXR1cm4gXCJcIjtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzdHViVHJ1ZSgpIHtcbiAgICAgICAgICByZXR1cm4gITA7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gdGltZXMobiwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgaWYgKG4gPSB0b0ludGVnZXIobiksIG4gPCAxIHx8IG4gPiBNQVhfU0FGRV9JTlRFR0VSKVxuICAgICAgICAgICAgcmV0dXJuIFtdO1xuICAgICAgICAgIHZhciBpbmRleCA9IE1BWF9BUlJBWV9MRU5HVEgsIGxlbmd0aCA9IG5hdGl2ZU1pbihuLCBNQVhfQVJSQVlfTEVOR1RIKTtcbiAgICAgICAgICBpdGVyYXRlZTIgPSBnZXRJdGVyYXRlZShpdGVyYXRlZTIpLCBuIC09IE1BWF9BUlJBWV9MRU5HVEg7XG4gICAgICAgICAgZm9yICh2YXIgcmVzdWx0MiA9IGJhc2VUaW1lcyhsZW5ndGgsIGl0ZXJhdGVlMik7ICsraW5kZXggPCBuOyApXG4gICAgICAgICAgICBpdGVyYXRlZTIoaW5kZXgpO1xuICAgICAgICAgIHJldHVybiByZXN1bHQyO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIHRvUGF0aCh2YWx1ZSkge1xuICAgICAgICAgIHJldHVybiBpc0FycmF5KHZhbHVlKSA/IGFycmF5TWFwKHZhbHVlLCB0b0tleSkgOiBpc1N5bWJvbCh2YWx1ZSkgPyBbdmFsdWVdIDogY29weUFycmF5KHN0cmluZ1RvUGF0aCh0b1N0cmluZyh2YWx1ZSkpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiB1bmlxdWVJZChwcmVmaXgpIHtcbiAgICAgICAgICB2YXIgaWQgPSArK2lkQ291bnRlcjtcbiAgICAgICAgICByZXR1cm4gdG9TdHJpbmcocHJlZml4KSArIGlkO1xuICAgICAgICB9XG4gICAgICAgIHZhciBhZGQgPSBjcmVhdGVNYXRoT3BlcmF0aW9uKGZ1bmN0aW9uKGF1Z2VuZCwgYWRkZW5kKSB7XG4gICAgICAgICAgcmV0dXJuIGF1Z2VuZCArIGFkZGVuZDtcbiAgICAgICAgfSwgMCksIGNlaWwgPSBjcmVhdGVSb3VuZChcImNlaWxcIiksIGRpdmlkZSA9IGNyZWF0ZU1hdGhPcGVyYXRpb24oZnVuY3Rpb24oZGl2aWRlbmQsIGRpdmlzb3IpIHtcbiAgICAgICAgICByZXR1cm4gZGl2aWRlbmQgLyBkaXZpc29yO1xuICAgICAgICB9LCAxKSwgZmxvb3IgPSBjcmVhdGVSb3VuZChcImZsb29yXCIpO1xuICAgICAgICBmdW5jdGlvbiBtYXgoYXJyYXkpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZUV4dHJlbXVtKGFycmF5LCBpZGVudGl0eSwgYmFzZUd0KSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1heEJ5KGFycmF5LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZUV4dHJlbXVtKGFycmF5LCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDIpLCBiYXNlR3QpIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgZnVuY3Rpb24gbWVhbihhcnJheSkge1xuICAgICAgICAgIHJldHVybiBiYXNlTWVhbihhcnJheSwgaWRlbnRpdHkpO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1lYW5CeShhcnJheSwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIGJhc2VNZWFuKGFycmF5LCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDIpKTtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBtaW4oYXJyYXkpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZUV4dHJlbXVtKGFycmF5LCBpZGVudGl0eSwgYmFzZUx0KSA6IHVuZGVmaW5lZCQxO1xuICAgICAgICB9XG4gICAgICAgIGZ1bmN0aW9uIG1pbkJ5KGFycmF5LCBpdGVyYXRlZTIpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZUV4dHJlbXVtKGFycmF5LCBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDIpLCBiYXNlTHQpIDogdW5kZWZpbmVkJDE7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIG11bHRpcGx5ID0gY3JlYXRlTWF0aE9wZXJhdGlvbihmdW5jdGlvbihtdWx0aXBsaWVyLCBtdWx0aXBsaWNhbmQpIHtcbiAgICAgICAgICByZXR1cm4gbXVsdGlwbGllciAqIG11bHRpcGxpY2FuZDtcbiAgICAgICAgfSwgMSksIHJvdW5kID0gY3JlYXRlUm91bmQoXCJyb3VuZFwiKSwgc3VidHJhY3QgPSBjcmVhdGVNYXRoT3BlcmF0aW9uKGZ1bmN0aW9uKG1pbnVlbmQsIHN1YnRyYWhlbmQpIHtcbiAgICAgICAgICByZXR1cm4gbWludWVuZCAtIHN1YnRyYWhlbmQ7XG4gICAgICAgIH0sIDApO1xuICAgICAgICBmdW5jdGlvbiBzdW0oYXJyYXkpIHtcbiAgICAgICAgICByZXR1cm4gYXJyYXkgJiYgYXJyYXkubGVuZ3RoID8gYmFzZVN1bShhcnJheSwgaWRlbnRpdHkpIDogMDtcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBzdW1CeShhcnJheSwgaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgcmV0dXJuIGFycmF5ICYmIGFycmF5Lmxlbmd0aCA/IGJhc2VTdW0oYXJyYXksIGdldEl0ZXJhdGVlKGl0ZXJhdGVlMiwgMikpIDogMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbG9kYXNoMi5hZnRlciA9IGFmdGVyLCBsb2Rhc2gyLmFyeSA9IGFyeSwgbG9kYXNoMi5hc3NpZ24gPSBhc3NpZ24sIGxvZGFzaDIuYXNzaWduSW4gPSBhc3NpZ25JbiwgbG9kYXNoMi5hc3NpZ25JbldpdGggPSBhc3NpZ25JbldpdGgsIGxvZGFzaDIuYXNzaWduV2l0aCA9IGFzc2lnbldpdGgsIGxvZGFzaDIuYXQgPSBhdCwgbG9kYXNoMi5iZWZvcmUgPSBiZWZvcmUsIGxvZGFzaDIuYmluZCA9IGJpbmQsIGxvZGFzaDIuYmluZEFsbCA9IGJpbmRBbGwsIGxvZGFzaDIuYmluZEtleSA9IGJpbmRLZXksIGxvZGFzaDIuY2FzdEFycmF5ID0gY2FzdEFycmF5LCBsb2Rhc2gyLmNoYWluID0gY2hhaW4sIGxvZGFzaDIuY2h1bmsgPSBjaHVuaywgbG9kYXNoMi5jb21wYWN0ID0gY29tcGFjdCwgbG9kYXNoMi5jb25jYXQgPSBjb25jYXQsIGxvZGFzaDIuY29uZCA9IGNvbmQsIGxvZGFzaDIuY29uZm9ybXMgPSBjb25mb3JtcywgbG9kYXNoMi5jb25zdGFudCA9IGNvbnN0YW50LCBsb2Rhc2gyLmNvdW50QnkgPSBjb3VudEJ5LCBsb2Rhc2gyLmNyZWF0ZSA9IGNyZWF0ZTIsIGxvZGFzaDIuY3VycnkgPSBjdXJyeSwgbG9kYXNoMi5jdXJyeVJpZ2h0ID0gY3VycnlSaWdodCwgbG9kYXNoMi5kZWJvdW5jZSA9IGRlYm91bmNlLCBsb2Rhc2gyLmRlZmF1bHRzID0gZGVmYXVsdHMsIGxvZGFzaDIuZGVmYXVsdHNEZWVwID0gZGVmYXVsdHNEZWVwLCBsb2Rhc2gyLmRlZmVyID0gZGVmZXIsIGxvZGFzaDIuZGVsYXkgPSBkZWxheSwgbG9kYXNoMi5kaWZmZXJlbmNlID0gZGlmZmVyZW5jZSwgbG9kYXNoMi5kaWZmZXJlbmNlQnkgPSBkaWZmZXJlbmNlQnksIGxvZGFzaDIuZGlmZmVyZW5jZVdpdGggPSBkaWZmZXJlbmNlV2l0aCwgbG9kYXNoMi5kcm9wID0gZHJvcCwgbG9kYXNoMi5kcm9wUmlnaHQgPSBkcm9wUmlnaHQsIGxvZGFzaDIuZHJvcFJpZ2h0V2hpbGUgPSBkcm9wUmlnaHRXaGlsZSwgbG9kYXNoMi5kcm9wV2hpbGUgPSBkcm9wV2hpbGUsIGxvZGFzaDIuZmlsbCA9IGZpbGwsIGxvZGFzaDIuZmlsdGVyID0gZmlsdGVyLCBsb2Rhc2gyLmZsYXRNYXAgPSBmbGF0TWFwLCBsb2Rhc2gyLmZsYXRNYXBEZWVwID0gZmxhdE1hcERlZXAsIGxvZGFzaDIuZmxhdE1hcERlcHRoID0gZmxhdE1hcERlcHRoLCBsb2Rhc2gyLmZsYXR0ZW4gPSBmbGF0dGVuLCBsb2Rhc2gyLmZsYXR0ZW5EZWVwID0gZmxhdHRlbkRlZXAsIGxvZGFzaDIuZmxhdHRlbkRlcHRoID0gZmxhdHRlbkRlcHRoLCBsb2Rhc2gyLmZsaXAgPSBmbGlwLCBsb2Rhc2gyLmZsb3cgPSBmbG93LCBsb2Rhc2gyLmZsb3dSaWdodCA9IGZsb3dSaWdodCwgbG9kYXNoMi5mcm9tUGFpcnMgPSBmcm9tUGFpcnMsIGxvZGFzaDIuZnVuY3Rpb25zID0gZnVuY3Rpb25zLCBsb2Rhc2gyLmZ1bmN0aW9uc0luID0gZnVuY3Rpb25zSW4sIGxvZGFzaDIuZ3JvdXBCeSA9IGdyb3VwQnksIGxvZGFzaDIuaW5pdGlhbCA9IGluaXRpYWwsIGxvZGFzaDIuaW50ZXJzZWN0aW9uID0gaW50ZXJzZWN0aW9uLCBsb2Rhc2gyLmludGVyc2VjdGlvbkJ5ID0gaW50ZXJzZWN0aW9uQnksIGxvZGFzaDIuaW50ZXJzZWN0aW9uV2l0aCA9IGludGVyc2VjdGlvbldpdGgsIGxvZGFzaDIuaW52ZXJ0ID0gaW52ZXJ0LCBsb2Rhc2gyLmludmVydEJ5ID0gaW52ZXJ0QnksIGxvZGFzaDIuaW52b2tlTWFwID0gaW52b2tlTWFwLCBsb2Rhc2gyLml0ZXJhdGVlID0gaXRlcmF0ZWUsIGxvZGFzaDIua2V5QnkgPSBrZXlCeSwgbG9kYXNoMi5rZXlzID0ga2V5cywgbG9kYXNoMi5rZXlzSW4gPSBrZXlzSW4sIGxvZGFzaDIubWFwID0gbWFwLCBsb2Rhc2gyLm1hcEtleXMgPSBtYXBLZXlzLCBsb2Rhc2gyLm1hcFZhbHVlcyA9IG1hcFZhbHVlcywgbG9kYXNoMi5tYXRjaGVzID0gbWF0Y2hlcywgbG9kYXNoMi5tYXRjaGVzUHJvcGVydHkgPSBtYXRjaGVzUHJvcGVydHksIGxvZGFzaDIubWVtb2l6ZSA9IG1lbW9pemUsIGxvZGFzaDIubWVyZ2UgPSBtZXJnZSwgbG9kYXNoMi5tZXJnZVdpdGggPSBtZXJnZVdpdGgsIGxvZGFzaDIubWV0aG9kID0gbWV0aG9kLCBsb2Rhc2gyLm1ldGhvZE9mID0gbWV0aG9kT2YsIGxvZGFzaDIubWl4aW4gPSBtaXhpbiwgbG9kYXNoMi5uZWdhdGUgPSBuZWdhdGUsIGxvZGFzaDIubnRoQXJnID0gbnRoQXJnLCBsb2Rhc2gyLm9taXQgPSBvbWl0LCBsb2Rhc2gyLm9taXRCeSA9IG9taXRCeSwgbG9kYXNoMi5vbmNlID0gb25jZSwgbG9kYXNoMi5vcmRlckJ5ID0gb3JkZXJCeSwgbG9kYXNoMi5vdmVyID0gb3ZlciwgbG9kYXNoMi5vdmVyQXJncyA9IG92ZXJBcmdzLCBsb2Rhc2gyLm92ZXJFdmVyeSA9IG92ZXJFdmVyeSwgbG9kYXNoMi5vdmVyU29tZSA9IG92ZXJTb21lLCBsb2Rhc2gyLnBhcnRpYWwgPSBwYXJ0aWFsLCBsb2Rhc2gyLnBhcnRpYWxSaWdodCA9IHBhcnRpYWxSaWdodCwgbG9kYXNoMi5wYXJ0aXRpb24gPSBwYXJ0aXRpb24sIGxvZGFzaDIucGljayA9IHBpY2ssIGxvZGFzaDIucGlja0J5ID0gcGlja0J5LCBsb2Rhc2gyLnByb3BlcnR5ID0gcHJvcGVydHksIGxvZGFzaDIucHJvcGVydHlPZiA9IHByb3BlcnR5T2YsIGxvZGFzaDIucHVsbCA9IHB1bGwsIGxvZGFzaDIucHVsbEFsbCA9IHB1bGxBbGwsIGxvZGFzaDIucHVsbEFsbEJ5ID0gcHVsbEFsbEJ5LCBsb2Rhc2gyLnB1bGxBbGxXaXRoID0gcHVsbEFsbFdpdGgsIGxvZGFzaDIucHVsbEF0ID0gcHVsbEF0LCBsb2Rhc2gyLnJhbmdlID0gcmFuZ2UsIGxvZGFzaDIucmFuZ2VSaWdodCA9IHJhbmdlUmlnaHQsIGxvZGFzaDIucmVhcmcgPSByZWFyZywgbG9kYXNoMi5yZWplY3QgPSByZWplY3QsIGxvZGFzaDIucmVtb3ZlID0gcmVtb3ZlLCBsb2Rhc2gyLnJlc3QgPSByZXN0LCBsb2Rhc2gyLnJldmVyc2UgPSByZXZlcnNlLCBsb2Rhc2gyLnNhbXBsZVNpemUgPSBzYW1wbGVTaXplLCBsb2Rhc2gyLnNldCA9IHNldCwgbG9kYXNoMi5zZXRXaXRoID0gc2V0V2l0aCwgbG9kYXNoMi5zaHVmZmxlID0gc2h1ZmZsZSwgbG9kYXNoMi5zbGljZSA9IHNsaWNlLCBsb2Rhc2gyLnNvcnRCeSA9IHNvcnRCeSwgbG9kYXNoMi5zb3J0ZWRVbmlxID0gc29ydGVkVW5pcSwgbG9kYXNoMi5zb3J0ZWRVbmlxQnkgPSBzb3J0ZWRVbmlxQnksIGxvZGFzaDIuc3BsaXQgPSBzcGxpdCwgbG9kYXNoMi5zcHJlYWQgPSBzcHJlYWQsIGxvZGFzaDIudGFpbCA9IHRhaWwsIGxvZGFzaDIudGFrZSA9IHRha2UsIGxvZGFzaDIudGFrZVJpZ2h0ID0gdGFrZVJpZ2h0LCBsb2Rhc2gyLnRha2VSaWdodFdoaWxlID0gdGFrZVJpZ2h0V2hpbGUsIGxvZGFzaDIudGFrZVdoaWxlID0gdGFrZVdoaWxlLCBsb2Rhc2gyLnRhcCA9IHRhcCwgbG9kYXNoMi50aHJvdHRsZSA9IHRocm90dGxlLCBsb2Rhc2gyLnRocnUgPSB0aHJ1LCBsb2Rhc2gyLnRvQXJyYXkgPSB0b0FycmF5LCBsb2Rhc2gyLnRvUGFpcnMgPSB0b1BhaXJzLCBsb2Rhc2gyLnRvUGFpcnNJbiA9IHRvUGFpcnNJbiwgbG9kYXNoMi50b1BhdGggPSB0b1BhdGgsIGxvZGFzaDIudG9QbGFpbk9iamVjdCA9IHRvUGxhaW5PYmplY3QsIGxvZGFzaDIudHJhbnNmb3JtID0gdHJhbnNmb3JtLCBsb2Rhc2gyLnVuYXJ5ID0gdW5hcnksIGxvZGFzaDIudW5pb24gPSB1bmlvbiwgbG9kYXNoMi51bmlvbkJ5ID0gdW5pb25CeSwgbG9kYXNoMi51bmlvbldpdGggPSB1bmlvbldpdGgsIGxvZGFzaDIudW5pcSA9IHVuaXEsIGxvZGFzaDIudW5pcUJ5ID0gdW5pcUJ5LCBsb2Rhc2gyLnVuaXFXaXRoID0gdW5pcVdpdGgsIGxvZGFzaDIudW5zZXQgPSB1bnNldCwgbG9kYXNoMi51bnppcCA9IHVuemlwLCBsb2Rhc2gyLnVuemlwV2l0aCA9IHVuemlwV2l0aCwgbG9kYXNoMi51cGRhdGUgPSB1cGRhdGUsIGxvZGFzaDIudXBkYXRlV2l0aCA9IHVwZGF0ZVdpdGgsIGxvZGFzaDIudmFsdWVzID0gdmFsdWVzLCBsb2Rhc2gyLnZhbHVlc0luID0gdmFsdWVzSW4sIGxvZGFzaDIud2l0aG91dCA9IHdpdGhvdXQsIGxvZGFzaDIud29yZHMgPSB3b3JkcywgbG9kYXNoMi53cmFwID0gd3JhcCwgbG9kYXNoMi54b3IgPSB4b3IsIGxvZGFzaDIueG9yQnkgPSB4b3JCeSwgbG9kYXNoMi54b3JXaXRoID0geG9yV2l0aCwgbG9kYXNoMi56aXAgPSB6aXAsIGxvZGFzaDIuemlwT2JqZWN0ID0gemlwT2JqZWN0LCBsb2Rhc2gyLnppcE9iamVjdERlZXAgPSB6aXBPYmplY3REZWVwLCBsb2Rhc2gyLnppcFdpdGggPSB6aXBXaXRoLCBsb2Rhc2gyLmVudHJpZXMgPSB0b1BhaXJzLCBsb2Rhc2gyLmVudHJpZXNJbiA9IHRvUGFpcnNJbiwgbG9kYXNoMi5leHRlbmQgPSBhc3NpZ25JbiwgbG9kYXNoMi5leHRlbmRXaXRoID0gYXNzaWduSW5XaXRoLCBtaXhpbihsb2Rhc2gyLCBsb2Rhc2gyKSwgbG9kYXNoMi5hZGQgPSBhZGQsIGxvZGFzaDIuYXR0ZW1wdCA9IGF0dGVtcHQsIGxvZGFzaDIuY2FtZWxDYXNlID0gY2FtZWxDYXNlLCBsb2Rhc2gyLmNhcGl0YWxpemUgPSBjYXBpdGFsaXplLCBsb2Rhc2gyLmNlaWwgPSBjZWlsLCBsb2Rhc2gyLmNsYW1wID0gY2xhbXAsIGxvZGFzaDIuY2xvbmUgPSBjbG9uZSwgbG9kYXNoMi5jbG9uZURlZXAgPSBjbG9uZURlZXAsIGxvZGFzaDIuY2xvbmVEZWVwV2l0aCA9IGNsb25lRGVlcFdpdGgsIGxvZGFzaDIuY2xvbmVXaXRoID0gY2xvbmVXaXRoLCBsb2Rhc2gyLmNvbmZvcm1zVG8gPSBjb25mb3Jtc1RvLCBsb2Rhc2gyLmRlYnVyciA9IGRlYnVyciwgbG9kYXNoMi5kZWZhdWx0VG8gPSBkZWZhdWx0VG8sIGxvZGFzaDIuZGl2aWRlID0gZGl2aWRlLCBsb2Rhc2gyLmVuZHNXaXRoID0gZW5kc1dpdGgsIGxvZGFzaDIuZXEgPSBlcSwgbG9kYXNoMi5lc2NhcGUgPSBlc2NhcGUsIGxvZGFzaDIuZXNjYXBlUmVnRXhwID0gZXNjYXBlUmVnRXhwLCBsb2Rhc2gyLmV2ZXJ5ID0gZXZlcnksIGxvZGFzaDIuZmluZCA9IGZpbmQsIGxvZGFzaDIuZmluZEluZGV4ID0gZmluZEluZGV4LCBsb2Rhc2gyLmZpbmRLZXkgPSBmaW5kS2V5LCBsb2Rhc2gyLmZpbmRMYXN0ID0gZmluZExhc3QsIGxvZGFzaDIuZmluZExhc3RJbmRleCA9IGZpbmRMYXN0SW5kZXgsIGxvZGFzaDIuZmluZExhc3RLZXkgPSBmaW5kTGFzdEtleSwgbG9kYXNoMi5mbG9vciA9IGZsb29yLCBsb2Rhc2gyLmZvckVhY2ggPSBmb3JFYWNoLCBsb2Rhc2gyLmZvckVhY2hSaWdodCA9IGZvckVhY2hSaWdodCwgbG9kYXNoMi5mb3JJbiA9IGZvckluLCBsb2Rhc2gyLmZvckluUmlnaHQgPSBmb3JJblJpZ2h0LCBsb2Rhc2gyLmZvck93biA9IGZvck93biwgbG9kYXNoMi5mb3JPd25SaWdodCA9IGZvck93blJpZ2h0LCBsb2Rhc2gyLmdldCA9IGdldCwgbG9kYXNoMi5ndCA9IGd0LCBsb2Rhc2gyLmd0ZSA9IGd0ZSwgbG9kYXNoMi5oYXMgPSBoYXMsIGxvZGFzaDIuaGFzSW4gPSBoYXNJbiwgbG9kYXNoMi5oZWFkID0gaGVhZCwgbG9kYXNoMi5pZGVudGl0eSA9IGlkZW50aXR5LCBsb2Rhc2gyLmluY2x1ZGVzID0gaW5jbHVkZXMsIGxvZGFzaDIuaW5kZXhPZiA9IGluZGV4T2YsIGxvZGFzaDIuaW5SYW5nZSA9IGluUmFuZ2UsIGxvZGFzaDIuaW52b2tlID0gaW52b2tlLCBsb2Rhc2gyLmlzQXJndW1lbnRzID0gaXNBcmd1bWVudHMsIGxvZGFzaDIuaXNBcnJheSA9IGlzQXJyYXksIGxvZGFzaDIuaXNBcnJheUJ1ZmZlciA9IGlzQXJyYXlCdWZmZXIsIGxvZGFzaDIuaXNBcnJheUxpa2UgPSBpc0FycmF5TGlrZSwgbG9kYXNoMi5pc0FycmF5TGlrZU9iamVjdCA9IGlzQXJyYXlMaWtlT2JqZWN0LCBsb2Rhc2gyLmlzQm9vbGVhbiA9IGlzQm9vbGVhbiwgbG9kYXNoMi5pc0J1ZmZlciA9IGlzQnVmZmVyLCBsb2Rhc2gyLmlzRGF0ZSA9IGlzRGF0ZSwgbG9kYXNoMi5pc0VsZW1lbnQgPSBpc0VsZW1lbnQsIGxvZGFzaDIuaXNFbXB0eSA9IGlzRW1wdHksIGxvZGFzaDIuaXNFcXVhbCA9IGlzRXF1YWwsIGxvZGFzaDIuaXNFcXVhbFdpdGggPSBpc0VxdWFsV2l0aCwgbG9kYXNoMi5pc0Vycm9yID0gaXNFcnJvciwgbG9kYXNoMi5pc0Zpbml0ZSA9IGlzRmluaXRlLCBsb2Rhc2gyLmlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uLCBsb2Rhc2gyLmlzSW50ZWdlciA9IGlzSW50ZWdlciwgbG9kYXNoMi5pc0xlbmd0aCA9IGlzTGVuZ3RoLCBsb2Rhc2gyLmlzTWFwID0gaXNNYXAsIGxvZGFzaDIuaXNNYXRjaCA9IGlzTWF0Y2gsIGxvZGFzaDIuaXNNYXRjaFdpdGggPSBpc01hdGNoV2l0aCwgbG9kYXNoMi5pc05hTiA9IGlzTmFOLCBsb2Rhc2gyLmlzTmF0aXZlID0gaXNOYXRpdmUsIGxvZGFzaDIuaXNOaWwgPSBpc05pbCwgbG9kYXNoMi5pc051bGwgPSBpc051bGwsIGxvZGFzaDIuaXNOdW1iZXIgPSBpc051bWJlciwgbG9kYXNoMi5pc09iamVjdCA9IGlzT2JqZWN0LCBsb2Rhc2gyLmlzT2JqZWN0TGlrZSA9IGlzT2JqZWN0TGlrZSwgbG9kYXNoMi5pc1BsYWluT2JqZWN0ID0gaXNQbGFpbk9iamVjdCwgbG9kYXNoMi5pc1JlZ0V4cCA9IGlzUmVnRXhwLCBsb2Rhc2gyLmlzU2FmZUludGVnZXIgPSBpc1NhZmVJbnRlZ2VyLCBsb2Rhc2gyLmlzU2V0ID0gaXNTZXQsIGxvZGFzaDIuaXNTdHJpbmcgPSBpc1N0cmluZywgbG9kYXNoMi5pc1N5bWJvbCA9IGlzU3ltYm9sLCBsb2Rhc2gyLmlzVHlwZWRBcnJheSA9IGlzVHlwZWRBcnJheSwgbG9kYXNoMi5pc1VuZGVmaW5lZCA9IGlzVW5kZWZpbmVkLCBsb2Rhc2gyLmlzV2Vha01hcCA9IGlzV2Vha01hcCwgbG9kYXNoMi5pc1dlYWtTZXQgPSBpc1dlYWtTZXQsIGxvZGFzaDIuam9pbiA9IGpvaW4sIGxvZGFzaDIua2ViYWJDYXNlID0ga2ViYWJDYXNlLCBsb2Rhc2gyLmxhc3QgPSBsYXN0LCBsb2Rhc2gyLmxhc3RJbmRleE9mID0gbGFzdEluZGV4T2YsIGxvZGFzaDIubG93ZXJDYXNlID0gbG93ZXJDYXNlLCBsb2Rhc2gyLmxvd2VyRmlyc3QgPSBsb3dlckZpcnN0LCBsb2Rhc2gyLmx0ID0gbHQsIGxvZGFzaDIubHRlID0gbHRlLCBsb2Rhc2gyLm1heCA9IG1heCwgbG9kYXNoMi5tYXhCeSA9IG1heEJ5LCBsb2Rhc2gyLm1lYW4gPSBtZWFuLCBsb2Rhc2gyLm1lYW5CeSA9IG1lYW5CeSwgbG9kYXNoMi5taW4gPSBtaW4sIGxvZGFzaDIubWluQnkgPSBtaW5CeSwgbG9kYXNoMi5zdHViQXJyYXkgPSBzdHViQXJyYXksIGxvZGFzaDIuc3R1YkZhbHNlID0gc3R1YkZhbHNlLCBsb2Rhc2gyLnN0dWJPYmplY3QgPSBzdHViT2JqZWN0LCBsb2Rhc2gyLnN0dWJTdHJpbmcgPSBzdHViU3RyaW5nLCBsb2Rhc2gyLnN0dWJUcnVlID0gc3R1YlRydWUsIGxvZGFzaDIubXVsdGlwbHkgPSBtdWx0aXBseSwgbG9kYXNoMi5udGggPSBudGgsIGxvZGFzaDIubm9Db25mbGljdCA9IG5vQ29uZmxpY3QsIGxvZGFzaDIubm9vcCA9IG5vb3AsIGxvZGFzaDIubm93ID0gbm93LCBsb2Rhc2gyLnBhZCA9IHBhZCwgbG9kYXNoMi5wYWRFbmQgPSBwYWRFbmQsIGxvZGFzaDIucGFkU3RhcnQgPSBwYWRTdGFydCwgbG9kYXNoMi5wYXJzZUludCA9IHBhcnNlSW50MiwgbG9kYXNoMi5yYW5kb20gPSByYW5kb20sIGxvZGFzaDIucmVkdWNlID0gcmVkdWNlLCBsb2Rhc2gyLnJlZHVjZVJpZ2h0ID0gcmVkdWNlUmlnaHQsIGxvZGFzaDIucmVwZWF0ID0gcmVwZWF0LCBsb2Rhc2gyLnJlcGxhY2UgPSByZXBsYWNlLCBsb2Rhc2gyLnJlc3VsdCA9IHJlc3VsdCwgbG9kYXNoMi5yb3VuZCA9IHJvdW5kLCBsb2Rhc2gyLnJ1bkluQ29udGV4dCA9IHJ1bkluQ29udGV4dDIsIGxvZGFzaDIuc2FtcGxlID0gc2FtcGxlLCBsb2Rhc2gyLnNpemUgPSBzaXplLCBsb2Rhc2gyLnNuYWtlQ2FzZSA9IHNuYWtlQ2FzZSwgbG9kYXNoMi5zb21lID0gc29tZSwgbG9kYXNoMi5zb3J0ZWRJbmRleCA9IHNvcnRlZEluZGV4LCBsb2Rhc2gyLnNvcnRlZEluZGV4QnkgPSBzb3J0ZWRJbmRleEJ5LCBsb2Rhc2gyLnNvcnRlZEluZGV4T2YgPSBzb3J0ZWRJbmRleE9mLCBsb2Rhc2gyLnNvcnRlZExhc3RJbmRleCA9IHNvcnRlZExhc3RJbmRleCwgbG9kYXNoMi5zb3J0ZWRMYXN0SW5kZXhCeSA9IHNvcnRlZExhc3RJbmRleEJ5LCBsb2Rhc2gyLnNvcnRlZExhc3RJbmRleE9mID0gc29ydGVkTGFzdEluZGV4T2YsIGxvZGFzaDIuc3RhcnRDYXNlID0gc3RhcnRDYXNlLCBsb2Rhc2gyLnN0YXJ0c1dpdGggPSBzdGFydHNXaXRoMiwgbG9kYXNoMi5zdWJ0cmFjdCA9IHN1YnRyYWN0LCBsb2Rhc2gyLnN1bSA9IHN1bSwgbG9kYXNoMi5zdW1CeSA9IHN1bUJ5LCBsb2Rhc2gyLnRlbXBsYXRlID0gdGVtcGxhdGUsIGxvZGFzaDIudGltZXMgPSB0aW1lcywgbG9kYXNoMi50b0Zpbml0ZSA9IHRvRmluaXRlLCBsb2Rhc2gyLnRvSW50ZWdlciA9IHRvSW50ZWdlciwgbG9kYXNoMi50b0xlbmd0aCA9IHRvTGVuZ3RoLCBsb2Rhc2gyLnRvTG93ZXIgPSB0b0xvd2VyLCBsb2Rhc2gyLnRvTnVtYmVyID0gdG9OdW1iZXIsIGxvZGFzaDIudG9TYWZlSW50ZWdlciA9IHRvU2FmZUludGVnZXIsIGxvZGFzaDIudG9TdHJpbmcgPSB0b1N0cmluZywgbG9kYXNoMi50b1VwcGVyID0gdG9VcHBlciwgbG9kYXNoMi50cmltID0gdHJpbSwgbG9kYXNoMi50cmltRW5kID0gdHJpbUVuZCwgbG9kYXNoMi50cmltU3RhcnQgPSB0cmltU3RhcnQsIGxvZGFzaDIudHJ1bmNhdGUgPSB0cnVuY2F0ZSwgbG9kYXNoMi51bmVzY2FwZSA9IHVuZXNjYXBlLCBsb2Rhc2gyLnVuaXF1ZUlkID0gdW5pcXVlSWQsIGxvZGFzaDIudXBwZXJDYXNlID0gdXBwZXJDYXNlLCBsb2Rhc2gyLnVwcGVyRmlyc3QgPSB1cHBlckZpcnN0LCBsb2Rhc2gyLmVhY2ggPSBmb3JFYWNoLCBsb2Rhc2gyLmVhY2hSaWdodCA9IGZvckVhY2hSaWdodCwgbG9kYXNoMi5maXJzdCA9IGhlYWQsIG1peGluKGxvZGFzaDIsIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciBzb3VyY2UgPSB7fTtcbiAgICAgICAgICByZXR1cm4gYmFzZUZvck93bihsb2Rhc2gyLCBmdW5jdGlvbihmdW5jLCBtZXRob2ROYW1lKSB7XG4gICAgICAgICAgICBoYXNPd25Qcm9wZXJ0eS5jYWxsKGxvZGFzaDIucHJvdG90eXBlLCBtZXRob2ROYW1lKSB8fCAoc291cmNlW21ldGhvZE5hbWVdID0gZnVuYyk7XG4gICAgICAgICAgfSksIHNvdXJjZTtcbiAgICAgICAgfSgpLCB7IGNoYWluOiAhMSB9KSwgbG9kYXNoMi5WRVJTSU9OID0gVkVSU0lPTiwgYXJyYXlFYWNoKFtcImJpbmRcIiwgXCJiaW5kS2V5XCIsIFwiY3VycnlcIiwgXCJjdXJyeVJpZ2h0XCIsIFwicGFydGlhbFwiLCBcInBhcnRpYWxSaWdodFwiXSwgZnVuY3Rpb24obWV0aG9kTmFtZSkge1xuICAgICAgICAgIGxvZGFzaDJbbWV0aG9kTmFtZV0ucGxhY2Vob2xkZXIgPSBsb2Rhc2gyO1xuICAgICAgICB9KSwgYXJyYXlFYWNoKFtcImRyb3BcIiwgXCJ0YWtlXCJdLCBmdW5jdGlvbihtZXRob2ROYW1lLCBpbmRleCkge1xuICAgICAgICAgIExhenlXcmFwcGVyLnByb3RvdHlwZVttZXRob2ROYW1lXSA9IGZ1bmN0aW9uKG4pIHtcbiAgICAgICAgICAgIG4gPSBuID09PSB1bmRlZmluZWQkMSA/IDEgOiBuYXRpdmVNYXgodG9JbnRlZ2VyKG4pLCAwKTtcbiAgICAgICAgICAgIHZhciByZXN1bHQyID0gdGhpcy5fX2ZpbHRlcmVkX18gJiYgIWluZGV4ID8gbmV3IExhenlXcmFwcGVyKHRoaXMpIDogdGhpcy5jbG9uZSgpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdDIuX19maWx0ZXJlZF9fID8gcmVzdWx0Mi5fX3Rha2VDb3VudF9fID0gbmF0aXZlTWluKG4sIHJlc3VsdDIuX190YWtlQ291bnRfXykgOiByZXN1bHQyLl9fdmlld3NfXy5wdXNoKHtcbiAgICAgICAgICAgICAgc2l6ZTogbmF0aXZlTWluKG4sIE1BWF9BUlJBWV9MRU5HVEgpLFxuICAgICAgICAgICAgICB0eXBlOiBtZXRob2ROYW1lICsgKHJlc3VsdDIuX19kaXJfXyA8IDAgPyBcIlJpZ2h0XCIgOiBcIlwiKVxuICAgICAgICAgICAgfSksIHJlc3VsdDI7XG4gICAgICAgICAgfSwgTGF6eVdyYXBwZXIucHJvdG90eXBlW21ldGhvZE5hbWUgKyBcIlJpZ2h0XCJdID0gZnVuY3Rpb24obikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmV2ZXJzZSgpW21ldGhvZE5hbWVdKG4pLnJldmVyc2UoKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KSwgYXJyYXlFYWNoKFtcImZpbHRlclwiLCBcIm1hcFwiLCBcInRha2VXaGlsZVwiXSwgZnVuY3Rpb24obWV0aG9kTmFtZSwgaW5kZXgpIHtcbiAgICAgICAgICB2YXIgdHlwZSA9IGluZGV4ICsgMSwgaXNGaWx0ZXIgPSB0eXBlID09IExBWllfRklMVEVSX0ZMQUcgfHwgdHlwZSA9PSBMQVpZX1dISUxFX0ZMQUc7XG4gICAgICAgICAgTGF6eVdyYXBwZXIucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oaXRlcmF0ZWUyKSB7XG4gICAgICAgICAgICB2YXIgcmVzdWx0MiA9IHRoaXMuY2xvbmUoKTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQyLl9faXRlcmF0ZWVzX18ucHVzaCh7XG4gICAgICAgICAgICAgIGl0ZXJhdGVlOiBnZXRJdGVyYXRlZShpdGVyYXRlZTIsIDMpLFxuICAgICAgICAgICAgICB0eXBlXG4gICAgICAgICAgICB9KSwgcmVzdWx0Mi5fX2ZpbHRlcmVkX18gPSByZXN1bHQyLl9fZmlsdGVyZWRfXyB8fCBpc0ZpbHRlciwgcmVzdWx0MjtcbiAgICAgICAgICB9O1xuICAgICAgICB9KSwgYXJyYXlFYWNoKFtcImhlYWRcIiwgXCJsYXN0XCJdLCBmdW5jdGlvbihtZXRob2ROYW1lLCBpbmRleCkge1xuICAgICAgICAgIHZhciB0YWtlTmFtZSA9IFwidGFrZVwiICsgKGluZGV4ID8gXCJSaWdodFwiIDogXCJcIik7XG4gICAgICAgICAgTGF6eVdyYXBwZXIucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpc1t0YWtlTmFtZV0oMSkudmFsdWUoKVswXTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KSwgYXJyYXlFYWNoKFtcImluaXRpYWxcIiwgXCJ0YWlsXCJdLCBmdW5jdGlvbihtZXRob2ROYW1lLCBpbmRleCkge1xuICAgICAgICAgIHZhciBkcm9wTmFtZSA9IFwiZHJvcFwiICsgKGluZGV4ID8gXCJcIiA6IFwiUmlnaHRcIik7XG4gICAgICAgICAgTGF6eVdyYXBwZXIucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fX2ZpbHRlcmVkX18gPyBuZXcgTGF6eVdyYXBwZXIodGhpcykgOiB0aGlzW2Ryb3BOYW1lXSgxKTtcbiAgICAgICAgICB9O1xuICAgICAgICB9KSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLmNvbXBhY3QgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIoaWRlbnRpdHkpO1xuICAgICAgICB9LCBMYXp5V3JhcHBlci5wcm90b3R5cGUuZmluZCA9IGZ1bmN0aW9uKHByZWRpY2F0ZSkge1xuICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlcihwcmVkaWNhdGUpLmhlYWQoKTtcbiAgICAgICAgfSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLmZpbmRMYXN0ID0gZnVuY3Rpb24ocHJlZGljYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucmV2ZXJzZSgpLmZpbmQocHJlZGljYXRlKTtcbiAgICAgICAgfSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLmludm9rZU1hcCA9IGJhc2VSZXN0KGZ1bmN0aW9uKHBhdGgsIGFyZ3MpIHtcbiAgICAgICAgICByZXR1cm4gdHlwZW9mIHBhdGggPT0gXCJmdW5jdGlvblwiID8gbmV3IExhenlXcmFwcGVyKHRoaXMpIDogdGhpcy5tYXAoZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIHJldHVybiBiYXNlSW52b2tlKHZhbHVlLCBwYXRoLCBhcmdzKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSksIExhenlXcmFwcGVyLnByb3RvdHlwZS5yZWplY3QgPSBmdW5jdGlvbihwcmVkaWNhdGUpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIobmVnYXRlKGdldEl0ZXJhdGVlKHByZWRpY2F0ZSkpKTtcbiAgICAgICAgfSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLnNsaWNlID0gZnVuY3Rpb24oc3RhcnQsIGVuZCkge1xuICAgICAgICAgIHN0YXJ0ID0gdG9JbnRlZ2VyKHN0YXJ0KTtcbiAgICAgICAgICB2YXIgcmVzdWx0MiA9IHRoaXM7XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDIuX19maWx0ZXJlZF9fICYmIChzdGFydCA+IDAgfHwgZW5kIDwgMCkgPyBuZXcgTGF6eVdyYXBwZXIocmVzdWx0MikgOiAoc3RhcnQgPCAwID8gcmVzdWx0MiA9IHJlc3VsdDIudGFrZVJpZ2h0KC1zdGFydCkgOiBzdGFydCAmJiAocmVzdWx0MiA9IHJlc3VsdDIuZHJvcChzdGFydCkpLCBlbmQgIT09IHVuZGVmaW5lZCQxICYmIChlbmQgPSB0b0ludGVnZXIoZW5kKSwgcmVzdWx0MiA9IGVuZCA8IDAgPyByZXN1bHQyLmRyb3BSaWdodCgtZW5kKSA6IHJlc3VsdDIudGFrZShlbmQgLSBzdGFydCkpLCByZXN1bHQyKTtcbiAgICAgICAgfSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLnRha2VSaWdodFdoaWxlID0gZnVuY3Rpb24ocHJlZGljYXRlKSB7XG4gICAgICAgICAgcmV0dXJuIHRoaXMucmV2ZXJzZSgpLnRha2VXaGlsZShwcmVkaWNhdGUpLnJldmVyc2UoKTtcbiAgICAgICAgfSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLnRvQXJyYXkgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gdGhpcy50YWtlKE1BWF9BUlJBWV9MRU5HVEgpO1xuICAgICAgICB9LCBiYXNlRm9yT3duKExhenlXcmFwcGVyLnByb3RvdHlwZSwgZnVuY3Rpb24oZnVuYywgbWV0aG9kTmFtZSkge1xuICAgICAgICAgIHZhciBjaGVja0l0ZXJhdGVlID0gL14oPzpmaWx0ZXJ8ZmluZHxtYXB8cmVqZWN0KXxXaGlsZSQvLnRlc3QobWV0aG9kTmFtZSksIGlzVGFrZXIgPSAvXig/OmhlYWR8bGFzdCkkLy50ZXN0KG1ldGhvZE5hbWUpLCBsb2Rhc2hGdW5jID0gbG9kYXNoMltpc1Rha2VyID8gXCJ0YWtlXCIgKyAobWV0aG9kTmFtZSA9PSBcImxhc3RcIiA/IFwiUmlnaHRcIiA6IFwiXCIpIDogbWV0aG9kTmFtZV0sIHJldFVud3JhcHBlZCA9IGlzVGFrZXIgfHwgL15maW5kLy50ZXN0KG1ldGhvZE5hbWUpO1xuICAgICAgICAgIGxvZGFzaEZ1bmMgJiYgKGxvZGFzaDIucHJvdG90eXBlW21ldGhvZE5hbWVdID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSB0aGlzLl9fd3JhcHBlZF9fLCBhcmdzID0gaXNUYWtlciA/IFsxXSA6IGFyZ3VtZW50cywgaXNMYXp5ID0gdmFsdWUgaW5zdGFuY2VvZiBMYXp5V3JhcHBlciwgaXRlcmF0ZWUyID0gYXJnc1swXSwgdXNlTGF6eSA9IGlzTGF6eSB8fCBpc0FycmF5KHZhbHVlKSwgaW50ZXJjZXB0b3IgPSBmdW5jdGlvbih2YWx1ZTIpIHtcbiAgICAgICAgICAgICAgdmFyIHJlc3VsdDMgPSBsb2Rhc2hGdW5jLmFwcGx5KGxvZGFzaDIsIGFycmF5UHVzaChbdmFsdWUyXSwgYXJncykpO1xuICAgICAgICAgICAgICByZXR1cm4gaXNUYWtlciAmJiBjaGFpbkFsbCA/IHJlc3VsdDNbMF0gOiByZXN1bHQzO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHVzZUxhenkgJiYgY2hlY2tJdGVyYXRlZSAmJiB0eXBlb2YgaXRlcmF0ZWUyID09IFwiZnVuY3Rpb25cIiAmJiBpdGVyYXRlZTIubGVuZ3RoICE9IDEgJiYgKGlzTGF6eSA9IHVzZUxhenkgPSAhMSk7XG4gICAgICAgICAgICB2YXIgY2hhaW5BbGwgPSB0aGlzLl9fY2hhaW5fXywgaXNIeWJyaWQgPSAhIXRoaXMuX19hY3Rpb25zX18ubGVuZ3RoLCBpc1Vud3JhcHBlZCA9IHJldFVud3JhcHBlZCAmJiAhY2hhaW5BbGwsIG9ubHlMYXp5ID0gaXNMYXp5ICYmICFpc0h5YnJpZDtcbiAgICAgICAgICAgIGlmICghcmV0VW53cmFwcGVkICYmIHVzZUxhenkpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSBvbmx5TGF6eSA/IHZhbHVlIDogbmV3IExhenlXcmFwcGVyKHRoaXMpO1xuICAgICAgICAgICAgICB2YXIgcmVzdWx0MiA9IGZ1bmMuYXBwbHkodmFsdWUsIGFyZ3MpO1xuICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0Mi5fX2FjdGlvbnNfXy5wdXNoKHsgZnVuYzogdGhydSwgYXJnczogW2ludGVyY2VwdG9yXSwgdGhpc0FyZzogdW5kZWZpbmVkJDEgfSksIG5ldyBMb2Rhc2hXcmFwcGVyKHJlc3VsdDIsIGNoYWluQWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBpc1Vud3JhcHBlZCAmJiBvbmx5TGF6eSA/IGZ1bmMuYXBwbHkodGhpcywgYXJncykgOiAocmVzdWx0MiA9IHRoaXMudGhydShpbnRlcmNlcHRvciksIGlzVW53cmFwcGVkID8gaXNUYWtlciA/IHJlc3VsdDIudmFsdWUoKVswXSA6IHJlc3VsdDIudmFsdWUoKSA6IHJlc3VsdDIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9KSwgYXJyYXlFYWNoKFtcInBvcFwiLCBcInB1c2hcIiwgXCJzaGlmdFwiLCBcInNvcnRcIiwgXCJzcGxpY2VcIiwgXCJ1bnNoaWZ0XCJdLCBmdW5jdGlvbihtZXRob2ROYW1lKSB7XG4gICAgICAgICAgdmFyIGZ1bmMgPSBhcnJheVByb3RvW21ldGhvZE5hbWVdLCBjaGFpbk5hbWUgPSAvXig/OnB1c2h8c29ydHx1bnNoaWZ0KSQvLnRlc3QobWV0aG9kTmFtZSkgPyBcInRhcFwiIDogXCJ0aHJ1XCIsIHJldFVud3JhcHBlZCA9IC9eKD86cG9wfHNoaWZ0KSQvLnRlc3QobWV0aG9kTmFtZSk7XG4gICAgICAgICAgbG9kYXNoMi5wcm90b3R5cGVbbWV0aG9kTmFtZV0gPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZhciBhcmdzID0gYXJndW1lbnRzO1xuICAgICAgICAgICAgaWYgKHJldFVud3JhcHBlZCAmJiAhdGhpcy5fX2NoYWluX18pIHtcbiAgICAgICAgICAgICAgdmFyIHZhbHVlID0gdGhpcy52YWx1ZSgpO1xuICAgICAgICAgICAgICByZXR1cm4gZnVuYy5hcHBseShpc0FycmF5KHZhbHVlKSA/IHZhbHVlIDogW10sIGFyZ3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXNbY2hhaW5OYW1lXShmdW5jdGlvbih2YWx1ZTIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkoaXNBcnJheSh2YWx1ZTIpID8gdmFsdWUyIDogW10sIGFyZ3MpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfTtcbiAgICAgICAgfSksIGJhc2VGb3JPd24oTGF6eVdyYXBwZXIucHJvdG90eXBlLCBmdW5jdGlvbihmdW5jLCBtZXRob2ROYW1lKSB7XG4gICAgICAgICAgdmFyIGxvZGFzaEZ1bmMgPSBsb2Rhc2gyW21ldGhvZE5hbWVdO1xuICAgICAgICAgIGlmIChsb2Rhc2hGdW5jKSB7XG4gICAgICAgICAgICB2YXIga2V5ID0gbG9kYXNoRnVuYy5uYW1lICsgXCJcIjtcbiAgICAgICAgICAgIGhhc093blByb3BlcnR5LmNhbGwocmVhbE5hbWVzLCBrZXkpIHx8IChyZWFsTmFtZXNba2V5XSA9IFtdKSwgcmVhbE5hbWVzW2tleV0ucHVzaCh7IG5hbWU6IG1ldGhvZE5hbWUsIGZ1bmM6IGxvZGFzaEZ1bmMgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9KSwgcmVhbE5hbWVzW2NyZWF0ZUh5YnJpZCh1bmRlZmluZWQkMSwgV1JBUF9CSU5EX0tFWV9GTEFHKS5uYW1lXSA9IFt7XG4gICAgICAgICAgbmFtZTogXCJ3cmFwcGVyXCIsXG4gICAgICAgICAgZnVuYzogdW5kZWZpbmVkJDFcbiAgICAgICAgfV0sIExhenlXcmFwcGVyLnByb3RvdHlwZS5jbG9uZSA9IGxhenlDbG9uZSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLnJldmVyc2UgPSBsYXp5UmV2ZXJzZSwgTGF6eVdyYXBwZXIucHJvdG90eXBlLnZhbHVlID0gbGF6eVZhbHVlLCBsb2Rhc2gyLnByb3RvdHlwZS5hdCA9IHdyYXBwZXJBdCwgbG9kYXNoMi5wcm90b3R5cGUuY2hhaW4gPSB3cmFwcGVyQ2hhaW4sIGxvZGFzaDIucHJvdG90eXBlLmNvbW1pdCA9IHdyYXBwZXJDb21taXQsIGxvZGFzaDIucHJvdG90eXBlLm5leHQgPSB3cmFwcGVyTmV4dCwgbG9kYXNoMi5wcm90b3R5cGUucGxhbnQgPSB3cmFwcGVyUGxhbnQsIGxvZGFzaDIucHJvdG90eXBlLnJldmVyc2UgPSB3cmFwcGVyUmV2ZXJzZSwgbG9kYXNoMi5wcm90b3R5cGUudG9KU09OID0gbG9kYXNoMi5wcm90b3R5cGUudmFsdWVPZiA9IGxvZGFzaDIucHJvdG90eXBlLnZhbHVlID0gd3JhcHBlclZhbHVlLCBsb2Rhc2gyLnByb3RvdHlwZS5maXJzdCA9IGxvZGFzaDIucHJvdG90eXBlLmhlYWQsIHN5bUl0ZXJhdG9yICYmIChsb2Rhc2gyLnByb3RvdHlwZVtzeW1JdGVyYXRvcl0gPSB3cmFwcGVyVG9JdGVyYXRvciksIGxvZGFzaDI7XG4gICAgICB9LCBfID0gcnVuSW5Db250ZXh0KCk7XG4gICAgICBmcmVlTW9kdWxlID8gKChmcmVlTW9kdWxlLmV4cG9ydHMgPSBfKS5fID0gXywgZnJlZUV4cG9ydHMuXyA9IF8pIDogcm9vdC5fID0gXztcbiAgICB9KS5jYWxsKGxvZGFzaCk7XG4gIH0obG9kYXNoJDEsIGxvZGFzaCQxLmV4cG9ydHMpKSwgbG9kYXNoJDEuZXhwb3J0cztcbn1cbnZhciBsb2Rhc2hFeHBvcnRzID0gcmVxdWlyZUxvZGFzaCgpO1xuZnVuY3Rpb24gbWVyZ2VNdXRhdGlvbkdyb3VwcyhtdXRhdGlvbkdyb3Vwcykge1xuICByZXR1cm4gY2h1bmtXaGlsZShtdXRhdGlvbkdyb3VwcywgKGdyb3VwKSA9PiAhZ3JvdXAudHJhbnNhY3Rpb24pLmZsYXRNYXAoXG4gICAgKGNodW5rKSA9PiAoe1xuICAgICAgLi4uY2h1bmtbMF0sXG4gICAgICBtdXRhdGlvbnM6IGNodW5rLmZsYXRNYXAoKGMpID0+IGMubXV0YXRpb25zKVxuICAgIH0pXG4gICk7XG59XG5mdW5jdGlvbiBjaHVua1doaWxlKGFyciwgcHJlZGljYXRlKSB7XG4gIGNvbnN0IHJlcyA9IFtdO1xuICBsZXQgY3VycmVudENodW5rID0gW107XG4gIHJldHVybiBhcnIuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgIHByZWRpY2F0ZShpdGVtKSA/IGN1cnJlbnRDaHVuay5wdXNoKGl0ZW0pIDogKGN1cnJlbnRDaHVuay5sZW5ndGggPiAwICYmIHJlcy5wdXNoKGN1cnJlbnRDaHVuayksIGN1cnJlbnRDaHVuayA9IFtdLCByZXMucHVzaChbaXRlbV0pKTtcbiAgfSksIGN1cnJlbnRDaHVuay5sZW5ndGggPiAwICYmIHJlcy5wdXNoKGN1cnJlbnRDaHVuayksIHJlcztcbn1cbmZ1bmN0aW9uIHNxdWFzaE11dGF0aW9uR3JvdXBzKHN0YWdlZCkge1xuICByZXR1cm4gbWVyZ2VNdXRhdGlvbkdyb3VwcyhzdGFnZWQpLm1hcCgodHJhbnNhY3Rpb24pID0+ICh7XG4gICAgLi4udHJhbnNhY3Rpb24sXG4gICAgbXV0YXRpb25zOiBzcXVhc2hNdXRhdGlvbnModHJhbnNhY3Rpb24ubXV0YXRpb25zKVxuICB9KSkubWFwKCh0cmFuc2FjdGlvbikgPT4gKHtcbiAgICAuLi50cmFuc2FjdGlvbixcbiAgICBtdXRhdGlvbnM6IHRyYW5zYWN0aW9uLm11dGF0aW9ucy5tYXAoKG11dGF0aW9uKSA9PiBtdXRhdGlvbi50eXBlICE9PSBcInBhdGNoXCIgPyBtdXRhdGlvbiA6IHtcbiAgICAgIC4uLm11dGF0aW9uLFxuICAgICAgcGF0Y2hlczogc3F1YXNoTm9kZVBhdGNoZXMobXV0YXRpb24ucGF0Y2hlcylcbiAgICB9KVxuICB9KSk7XG59XG5mdW5jdGlvbiBzcXVhc2hNdXRhdGlvbnMobXV0YXRpb25zKSB7XG4gIGNvbnN0IGJ5RG9jdW1lbnQgPSBsb2Rhc2hFeHBvcnRzLmdyb3VwQnkobXV0YXRpb25zLCBnZXRNdXRhdGlvbkRvY3VtZW50SWQpO1xuICByZXR1cm4gT2JqZWN0LnZhbHVlcyhieURvY3VtZW50KS5mbGF0TWFwKChkb2N1bWVudE11dGF0aW9ucykgPT4gc3F1YXNoQ3JlYXRlSWZOb3RFeGlzdHMoc3F1YXNoRGVsZXRlKGRvY3VtZW50TXV0YXRpb25zKSkuZmxhdCgpLnJlZHVjZSgoYWNjLCBkb2NNdXRhdGlvbikgPT4ge1xuICAgIGNvbnN0IHByZXYgPSBhY2NbYWNjLmxlbmd0aCAtIDFdO1xuICAgIHJldHVybiAoIXByZXYgfHwgcHJldi50eXBlID09PSBcInBhdGNoXCIpICYmIGRvY011dGF0aW9uLnR5cGUgPT09IFwicGF0Y2hcIiA/IGFjYy5zbGljZSgwLCAtMSkuY29uY2F0KHtcbiAgICAgIC4uLmRvY011dGF0aW9uLFxuICAgICAgcGF0Y2hlczogKHByZXY/LnBhdGNoZXMgfHwgW10pLmNvbmNhdChkb2NNdXRhdGlvbi5wYXRjaGVzKVxuICAgIH0pIDogYWNjLmNvbmNhdChkb2NNdXRhdGlvbik7XG4gIH0sIFtdKSk7XG59XG5mdW5jdGlvbiBzcXVhc2hDcmVhdGVJZk5vdEV4aXN0cyhtdXRhdGlvbnMpIHtcbiAgcmV0dXJuIG11dGF0aW9ucy5sZW5ndGggPT09IDAgPyBtdXRhdGlvbnMgOiBtdXRhdGlvbnMucmVkdWNlKChwcmV2aW91c011dHMsIGxhdGVyTXV0KSA9PiBsYXRlck11dC50eXBlICE9PSBcImNyZWF0ZUlmTm90RXhpc3RzXCIgPyAocHJldmlvdXNNdXRzLnB1c2gobGF0ZXJNdXQpLCBwcmV2aW91c011dHMpIDogKHRha2VVbnRpbFJpZ2h0KHByZXZpb3VzTXV0cywgKG0pID0+IG0udHlwZSA9PT0gXCJkZWxldGVcIikuZmluZChcbiAgICAocHJlY2VkaW5nUGF0Y2gpID0+IHByZWNlZGluZ1BhdGNoLnR5cGUgPT09IFwiY3JlYXRlSWZOb3RFeGlzdHNcIlxuICApIHx8IHByZXZpb3VzTXV0cy5wdXNoKGxhdGVyTXV0KSwgcHJldmlvdXNNdXRzKSwgW10pO1xufVxuZnVuY3Rpb24gc3F1YXNoRGVsZXRlKG11dGF0aW9ucykge1xuICByZXR1cm4gbXV0YXRpb25zLmxlbmd0aCA9PT0gMCA/IG11dGF0aW9ucyA6IG11dGF0aW9ucy5yZWR1Y2UoKHByZXZpb3VzTXV0cywgbGF0ZXJNdXQpID0+IGxhdGVyTXV0LnR5cGUgPT09IFwiZGVsZXRlXCIgPyBbbGF0ZXJNdXRdIDogKHByZXZpb3VzTXV0cy5wdXNoKGxhdGVyTXV0KSwgcHJldmlvdXNNdXRzKSwgW10pO1xufVxuZnVuY3Rpb24gcmViYXNlKGRvY3VtZW50SWQsIG9sZEJhc2UsIG5ld0Jhc2UsIHN0YWdlZE11dGF0aW9ucykge1xuICBsZXQgZWRnZSA9IG9sZEJhc2U7XG4gIGNvbnN0IGRtcGlmaWVkID0gc3RhZ2VkTXV0YXRpb25zLm1hcCgodHJhbnNhY3Rpb24pID0+IHtcbiAgICBjb25zdCBtdXRhdGlvbnMgPSB0cmFuc2FjdGlvbi5tdXRhdGlvbnMuZmxhdE1hcCgobXV0KSA9PiB7XG4gICAgICBpZiAoZ2V0TXV0YXRpb25Eb2N1bWVudElkKG11dCkgIT09IGRvY3VtZW50SWQpXG4gICAgICAgIHJldHVybiBbXTtcbiAgICAgIGNvbnN0IGJlZm9yZSA9IGVkZ2U7XG4gICAgICByZXR1cm4gZWRnZSA9IGFwcGx5QWxsKGVkZ2UsIFttdXRdKSwgIWJlZm9yZSB8fCBtdXQudHlwZSAhPT0gXCJwYXRjaFwiID8gbXV0IDoge1xuICAgICAgICB0eXBlOiBcImRtcGlmaWVkXCIsXG4gICAgICAgIG11dGF0aW9uOiB7XG4gICAgICAgICAgLi4ubXV0LFxuICAgICAgICAgIC8vIFRvZG86IG1ha2UgY29tcGFjdERNUFNldFBhdGNoZXMgcmV0dXJuIHBhaXJzIG9mIHBhdGNoZXMgdGhhdCB3YXMgZG1waWZpZWQgd2l0aCB0aGVpclxuICAgICAgICAgIC8vICBvcmlnaW5hbCBhcyBkbXBQYXRjaGVzIGFuZCBvcmlnaW5hbCBpcyBub3QgMToxIChlLi5nIHNvbWUgb2YgdGhlIG9yaWdpbmFsIG1heSBub3QgYmUgZG1waWZpZWQpXG4gICAgICAgICAgZG1wUGF0Y2hlczogY29tcGFjdERNUFNldFBhdGNoZXMoYmVmb3JlLCBtdXQucGF0Y2hlcyksXG4gICAgICAgICAgb3JpZ2luYWw6IG11dC5wYXRjaGVzXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgLi4udHJhbnNhY3Rpb24sIG11dGF0aW9ucyB9O1xuICB9KTtcbiAgbGV0IG5ld0Jhc2VXaXRoRE1QRm9yT2xkQmFzZUFwcGxpZWQgPSBuZXdCYXNlO1xuICByZXR1cm4gZG1waWZpZWQubWFwKCh0cmFuc2FjdGlvbikgPT4ge1xuICAgIGNvbnN0IGFwcGxpZWQgPSBbXTtcbiAgICByZXR1cm4gdHJhbnNhY3Rpb24ubXV0YXRpb25zLmZvckVhY2goKG11dCkgPT4ge1xuICAgICAgaWYgKG11dC50eXBlID09PSBcImRtcGlmaWVkXCIpXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgbmV3QmFzZVdpdGhETVBGb3JPbGRCYXNlQXBwbGllZCA9IGFwcGx5UGF0Y2hlcyhcbiAgICAgICAgICAgIG11dC5tdXRhdGlvbi5kbXBQYXRjaGVzLFxuICAgICAgICAgICAgbmV3QmFzZVdpdGhETVBGb3JPbGRCYXNlQXBwbGllZFxuICAgICAgICAgICksIGFwcGxpZWQucHVzaChtdXQpO1xuICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oXCJGYWlsZWQgdG8gYXBwbHkgZG1wIHBhdGNoLCBmYWxsaW5nIGJhY2sgdG8gb3JpZ2luYWxcIik7XG4gICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5ld0Jhc2VXaXRoRE1QRm9yT2xkQmFzZUFwcGxpZWQgPSBhcHBseVBhdGNoZXMoXG4gICAgICAgICAgICAgIG11dC5tdXRhdGlvbi5vcmlnaW5hbCxcbiAgICAgICAgICAgICAgbmV3QmFzZVdpdGhETVBGb3JPbGRCYXNlQXBwbGllZFxuICAgICAgICAgICAgKSwgYXBwbGllZC5wdXNoKG11dCk7XG4gICAgICAgICAgfSBjYXRjaCAoc2Vjb25kKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgICAgIGBGYWlsZWQgdG8gYXBwbHkgcGF0Y2ggZm9yIGRvY3VtZW50IFwiJHtkb2N1bWVudElkfVwiOiAke3NlY29uZC5tZXNzYWdlfWBcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBlbHNlXG4gICAgICAgIG5ld0Jhc2VXaXRoRE1QRm9yT2xkQmFzZUFwcGxpZWQgPSBhcHBseUFsbChcbiAgICAgICAgICBuZXdCYXNlV2l0aERNUEZvck9sZEJhc2VBcHBsaWVkLFxuICAgICAgICAgIFttdXRdXG4gICAgICAgICk7XG4gICAgfSk7XG4gIH0pLCBbc3RhZ2VkTXV0YXRpb25zLm1hcCgodHJhbnNhY3Rpb24pID0+ICh7XG4gICAgLi4udHJhbnNhY3Rpb24sXG4gICAgbXV0YXRpb25zOiB0cmFuc2FjdGlvbi5tdXRhdGlvbnMubWFwKChtdXQpID0+IG11dC50eXBlICE9PSBcInBhdGNoXCIgfHwgZ2V0TXV0YXRpb25Eb2N1bWVudElkKG11dCkgIT09IGRvY3VtZW50SWQgPyBtdXQgOiB7XG4gICAgICAuLi5tdXQsXG4gICAgICBwYXRjaGVzOiBtdXQucGF0Y2hlcy5tYXAoKHBhdGNoMikgPT4gcGF0Y2gyLm9wLnR5cGUgIT09IFwic2V0XCIgPyBwYXRjaDIgOiB7XG4gICAgICAgIC4uLnBhdGNoMixcbiAgICAgICAgb3A6IHtcbiAgICAgICAgICAuLi5wYXRjaDIub3AsXG4gICAgICAgICAgdmFsdWU6IGdldEF0UGF0aChwYXRjaDIucGF0aCwgbmV3QmFzZVdpdGhETVBGb3JPbGRCYXNlQXBwbGllZClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICB9KSksIG5ld0Jhc2VXaXRoRE1QRm9yT2xkQmFzZUFwcGxpZWRdO1xufVxuZnVuY3Rpb24gdG9UcmFuc2FjdGlvbnMoZ3JvdXBzKSB7XG4gIHJldHVybiBncm91cHMubWFwKChncm91cCkgPT4gZ3JvdXAudHJhbnNhY3Rpb24gJiYgZ3JvdXAuaWQgIT09IHZvaWQgMCA/IHsgaWQ6IGdyb3VwLmlkLCBtdXRhdGlvbnM6IGdyb3VwLm11dGF0aW9ucyB9IDogeyBtdXRhdGlvbnM6IGdyb3VwLm11dGF0aW9ucyB9KTtcbn1cbmV4cG9ydCB7XG4gIGFwcGx5TXV0YXRpb25zLFxuICBjb21taXQsXG4gIGdldE11dGF0aW9uRG9jdW1lbnRJZCxcbiAgcmViYXNlLFxuICBzcXVhc2hETVBTdHJpbmdzLFxuICBzcXVhc2hNdXRhdGlvbkdyb3VwcyxcbiAgdG9UcmFuc2FjdGlvbnNcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b1RyYW5zYWN0aW9ucy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/utils.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/utils.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyNodePatch: () => (/* binding */ applyNodePatch),\n/* harmony export */   applyOp: () => (/* binding */ applyOp),\n/* harmony export */   applyPatchMutation: () => (/* binding */ applyPatchMutation),\n/* harmony export */   applyPatches: () => (/* binding */ applyPatches),\n/* harmony export */   assignId: () => (/* binding */ assignId),\n/* harmony export */   hasId: () => (/* binding */ hasId),\n/* harmony export */   splice: () => (/* binding */ splice)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./stringify.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n/* harmony import */ var _isObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isObject.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\");\n/* harmony import */ var _sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sanity/diff-match-patch */ \"(app-pages-browser)/./node_modules/@sanity/diff-match-patch/dist/index.js\");\n\n\n\nfunction keyOf(value) {\n  return value !== null && typeof value == \"object\" && typeof value._key == \"string\" && value._key || null;\n}\nfunction findTargetIndex(array, pathSegment) {\n  if (typeof pathSegment == \"number\")\n    return normalizeIndex(array.length, pathSegment);\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isKeyedElement)(pathSegment)) {\n    const idx = array.findIndex((value) => keyOf(value) === pathSegment._key);\n    return idx === -1 ? null : idx;\n  }\n  throw new Error(\n    `Expected path segment to be addressing a single array item either by numeric index or by '_key'. Instead saw ${JSON.stringify(\n      pathSegment\n    )}`\n  );\n}\nfunction getTargetIdx(position, index) {\n  return position === \"before\" ? index : index + 1;\n}\nfunction normalizeIndex(length, index) {\n  if (length === 0 && (index === -1 || index === 0))\n    return 0;\n  const normalized = index < 0 ? length + index : index;\n  return normalized >= length || normalized < 0 ? null : normalized;\n}\nfunction splice(arr, start, deleteCount, items) {\n  const copy = arr.slice();\n  return copy.splice(start, deleteCount, ...items || []), copy;\n}\nfunction insert(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"insert()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(`Found no matching array element to insert ${op.position}`);\n  return currentValue.length === 0 ? op.items : splice(currentValue, getTargetIdx(op.position, index), 0, op.items);\n}\nfunction upsert(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"upsert()\" on non-array value');\n  if (op.items.length === 0)\n    return currentValue;\n  const replaceItemsMap = [], insertItems = [];\n  if (op.items.forEach((itemToBeUpserted, i) => {\n    const existingIndex = currentValue.findIndex(\n      (existingItem) => existingItem?._key === itemToBeUpserted._key\n    );\n    existingIndex >= 0 ? replaceItemsMap[existingIndex] = i : insertItems.push(itemToBeUpserted);\n  }), replaceItemsMap.length === 0 && insertItems.length == 0)\n    return currentValue;\n  const next = [...currentValue];\n  for (const i of replaceItemsMap)\n    next[i] = op.items[replaceItemsMap[i]];\n  return insert(\n    {\n      type: \"insert\",\n      items: insertItems,\n      referenceItem: op.referenceItem,\n      position: op.position\n    },\n    next\n  );\n}\nfunction replace(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"replace()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(\"Found no matching array element to replace\");\n  return splice(currentValue, index, op.items.length, op.items);\n}\nfunction remove(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"remove()\" on non-array value');\n  const index = findTargetIndex(currentValue, op.referenceItem);\n  if (index === null)\n    throw new Error(\"Found no matching array element to replace\");\n  return splice(currentValue, index, 1, []);\n}\nfunction truncate(op, currentValue) {\n  if (!Array.isArray(currentValue))\n    throw new TypeError('Cannot apply \"truncate()\" on non-array value');\n  return typeof op.endIndex == \"number\" ? currentValue.slice(0, op.startIndex).concat(currentValue.slice(op.endIndex)) : currentValue.slice(0, op.startIndex);\n}\nfunction set(op, currentValue) {\n  return op.value;\n}\nfunction setIfMissing(op, currentValue) {\n  return currentValue ?? op.value;\n}\nfunction unset(op) {\n}\nfunction inc(op, currentValue) {\n  if (typeof currentValue != \"number\")\n    throw new TypeError('Cannot apply \"inc()\" on non-numeric value');\n  return currentValue + op.amount;\n}\nfunction dec(op, currentValue) {\n  if (typeof currentValue != \"number\")\n    throw new TypeError('Cannot apply \"dec()\" on non-numeric value');\n  return currentValue - op.amount;\n}\nconst hasOwn = Object.prototype.hasOwnProperty.call.bind(\n  Object.prototype.hasOwnProperty\n);\nfunction isEmpty(v) {\n  for (const key in v)\n    if (hasOwn(v, key))\n      return !1;\n  return !0;\n}\nfunction omit(val, props) {\n  const copy = { ...val };\n  for (const prop of props)\n    delete copy[prop];\n  return copy;\n}\nfunction unassign(op, currentValue) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(currentValue))\n    throw new TypeError('Cannot apply \"unassign()\" on non-object value');\n  return op.keys.length === 0 ? currentValue : omit(currentValue, op.keys);\n}\nfunction assign(op, currentValue) {\n  if (!(0,_isObject_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(currentValue))\n    throw new TypeError('Cannot apply \"assign()\" on non-object value');\n  return isEmpty(op.value) ? currentValue : { ...currentValue, ...op.value };\n}\nfunction diffMatchPatch(op, currentValue) {\n  if (typeof currentValue != \"string\")\n    throw new TypeError('Cannot apply \"diffMatchPatch()\" on non-string value');\n  return (0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_2__.applyPatches)((0,_sanity_diff_match_patch__WEBPACK_IMPORTED_MODULE_2__.parsePatch)(op.value), currentValue)[0];\n}\nvar operations = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  assign,\n  dec,\n  diffMatchPatch,\n  inc,\n  insert,\n  remove,\n  replace,\n  set,\n  setIfMissing,\n  truncate,\n  unassign,\n  unset,\n  upsert\n});\nfunction applyOp(op, currentValue) {\n  if (!(op.type in operations))\n    throw new Error(`Invalid operation type: \"${op.type}\"`);\n  return operations[op.type](op, currentValue);\n}\nfunction applyPatches(patches, document) {\n  return patches.reduce(\n    (prev, patch) => applyNodePatch(patch, prev),\n    document\n  );\n}\nfunction applyNodePatch(patch, document) {\n  return applyAtPath(patch.path, patch.op, document);\n}\nfunction applyAtPath(path, op, value) {\n  if (!isNonEmptyArray(path))\n    return applyOp(op, value);\n  const [head, ...tail] = path;\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isArrayElement)(head) && Array.isArray(value))\n    return applyInArray(head, tail, op, value);\n  if ((0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.isPropertyElement)(head) && (0,_isObject_js__WEBPACK_IMPORTED_MODULE_1__.isObject)(value))\n    return applyInObject(head, tail, op, value);\n  throw new Error(\n    `Cannot apply operation of type \"${op.type}\" to path ${(0,_stringify_js__WEBPACK_IMPORTED_MODULE_0__.stringify)(\n      path\n    )} on ${typeof value} value`\n  );\n}\nfunction applyInObject(head, tail, op, object) {\n  const current = object[head];\n  if (current === void 0 && tail.length > 0)\n    return object;\n  const patchedValue = applyAtPath(tail, op, current);\n  return patchedValue === current ? object : { ...object, [head]: patchedValue };\n}\nfunction applyInArray(head, tail, op, value) {\n  const index = findTargetIndex(value, head);\n  if (index === null || index === -1)\n    return value;\n  const current = value[index], patchedItem = applyAtPath(tail, op, current);\n  return patchedItem === current ? value : splice(value, index, 1, [patchedItem]);\n}\nfunction isNonEmptyArray(a) {\n  return a.length > 0;\n}\nfunction applyPatchMutation(mutation, document) {\n  if (mutation.options?.ifRevision && document._rev !== mutation.options.ifRevision)\n    throw new Error(\"Revision mismatch\");\n  if (mutation.id !== document._id)\n    throw new Error(\n      `Document id mismatch. Refusing to apply mutation for document with id=\"${mutation.id}\" on the given document with id=\"${document._id}\"`\n    );\n  return applyPatches(mutation.patches, document);\n}\nfunction hasId(doc) {\n  return \"_id\" in doc;\n}\nfunction assignId(doc, generateId) {\n  return hasId(doc) ? doc : { ...doc, _id: generateId() };\n}\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/utils.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_unstable_machine.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_unstable_machine.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyMutations: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.applyMutations),\n/* harmony export */   commit: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.commit),\n/* harmony export */   createSharedListener: () => (/* binding */ createSharedListener),\n/* harmony export */   documentMutatorMachine: () => (/* binding */ documentMutatorMachine),\n/* harmony export */   rebase: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase),\n/* harmony export */   squashDMPStrings: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashDMPStrings),\n/* harmony export */   squashMutationGroups: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashMutationGroups),\n/* harmony export */   toTransactions: () => (/* reexport safe */ _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.toTransactions)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./_chunks-es/toTransactions.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/toTransactions.js\");\n/* harmony import */ var mendoza__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! mendoza */ \"(app-pages-browser)/./node_modules/mendoza/dist/index.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/share.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/defer.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/observeOn.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/scheduler/asap.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/log-ef30c65f.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./_chunks-es/encode.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\");\n\n\n\n\n\nfunction createSharedListener(client) {\n  const allEvents$ = client.listen(\n    '*[!(_id in path(\"_.**\"))]',\n    {},\n    {\n      events: [\"welcome\", \"mutation\", \"reconnect\"],\n      includeResult: !1,\n      includePreviousRevision: !1,\n      visibility: \"transaction\",\n      effectFormat: \"mendoza\",\n      includeMutations: !1\n    }\n  ).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_0__.share)({ resetOnRefCountZero: !0 })), reconnect = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"reconnect\")\n  ), welcome = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"welcome\")\n  ), mutations = allEvents$.pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((event) => event.type === \"mutation\")\n  ), replayWelcome = (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(welcome, reconnect).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_3__.shareReplay)({ bufferSize: 1, refCount: !0 })\n  ).pipe(\n    (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)((latestConnectionEvent) => latestConnectionEvent.type === \"welcome\")\n  );\n  return (0,rxjs__WEBPACK_IMPORTED_MODULE_2__.merge)(replayWelcome, mutations, reconnect);\n}\nconst documentMutatorMachine = (0,xstate__WEBPACK_IMPORTED_MODULE_4__.setup)({\n  types: {},\n  actions: {\n    \"assign error to context\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ error: ({ event }) => event }),\n    \"clear error from context\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({ error: void 0 }),\n    \"connect to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.O)({ type: \"connect\" }),\n    \"listen to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.P)(\"server-sent events\", {\n      id: \"listener\",\n      input: ({ context }) => ({\n        listener: context.sharedListener || createSharedListener(context.client),\n        id: context.id\n      })\n    }),\n    \"stop listening to server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_6__.R)(\"listener\"),\n    \"buffer remote mutation events\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      mutationEvents: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), [...context.mutationEvents, event])\n    }),\n    \"restore stashed changes\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stagedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"xstate.done.actor.submitTransactions\"), context.stashedChanges),\n      stashedChanges: []\n    }),\n    \"rebase fetched remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue }) => {\n      enqueue.assign(({ event, context }) => {\n        (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"xstate.done.actor.getDocument\");\n        const previousRemote = context.remote;\n        let nextRemote = event.output, seenCurrentRev = !1;\n        for (const patch of context.mutationEvents)\n          !patch.effects?.apply || !patch.previousRev && patch.transition !== \"appear\" || (!seenCurrentRev && patch.previousRev === nextRemote?._rev && (seenCurrentRev = !0), seenCurrentRev && (nextRemote = applyMendozaPatch(\n            nextRemote,\n            patch.effects.apply,\n            patch.resultRev\n          )));\n        context.cache && // If the shared cache don't have the document already we can just set it\n        (!context.cache.has(context.id) || // But when it's in the cache, make sure it's necessary to update it\n        context.cache.get(context.id)._rev !== nextRemote?._rev) && context.cache.set(context.id, nextRemote);\n        const [stagedChanges, local] = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase)(\n          context.id,\n          // It's annoying to convert between null and undefined, reach consensus\n          previousRemote === null ? void 0 : previousRemote,\n          nextRemote === null ? void 0 : nextRemote,\n          context.stagedChanges\n        );\n        return {\n          remote: nextRemote,\n          local,\n          stagedChanges,\n          // Since the snapshot handler applies all the patches they are no longer needed, allow GC\n          mutationEvents: []\n        };\n      }), enqueue.sendParent(\n        ({ context }) => ({\n          type: \"rebased.remote\",\n          id: context.id,\n          document: context.remote\n        })\n      );\n    }),\n    \"apply mendoza patch\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)(({ event, context }) => {\n      (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\");\n      const previousRemote = context.remote;\n      if (event.transactionId === previousRemote?._rev)\n        return {};\n      const nextRemote = applyMendozaPatch(\n        previousRemote,\n        event.effects.apply,\n        event.resultRev\n      );\n      context.cache && // If the shared cache don't have the document already we can just set it\n      (!context.cache.has(context.id) || // But when it's in the cache, make sure it's necessary to update it\n      context.cache.get(context.id)._rev !== nextRemote?._rev) && context.cache.set(context.id, nextRemote);\n      const [stagedChanges, local] = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.rebase)(\n        context.id,\n        // It's annoying to convert between null and undefined, reach consensus\n        previousRemote === null ? void 0 : previousRemote,\n        nextRemote === null ? void 0 : nextRemote,\n        context.stagedChanges\n      );\n      return {\n        remote: nextRemote,\n        local,\n        stagedChanges\n      };\n    }),\n    \"increment fetch attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fetchRemoteSnapshotAttempts: ({ context }) => context.fetchRemoteSnapshotAttempts + 1\n    }),\n    \"reset fetch attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      fetchRemoteSnapshotAttempts: 0\n    }),\n    \"increment submit attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      submitTransactionsAttempts: ({ context }) => context.submitTransactionsAttempts + 1\n    }),\n    \"reset submit attempts\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      submitTransactionsAttempts: 0\n    }),\n    \"stage mutation\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stagedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\"), [\n        ...context.stagedChanges,\n        { transaction: !1, mutations: event.mutations }\n      ])\n    }),\n    \"stash mutation\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.a)({\n      stashedChanges: ({ event, context }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\"), [\n        ...context.stashedChanges,\n        { transaction: !1, mutations: event.mutations }\n      ])\n    }),\n    \"rebase local snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.b)(({ enqueue }) => {\n      enqueue.assign({\n        local: ({ event, context }) => {\n          (0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutate\");\n          const localDataset = /* @__PURE__ */ new Map();\n          context.local && localDataset.set(context.id, context.local);\n          const results = (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.applyMutations)(event.mutations, localDataset);\n          return (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.commit)(results, localDataset), localDataset.get(context.id);\n        }\n      }), enqueue.sendParent(\n        ({ context }) => ({\n          type: \"rebased.local\",\n          id: context.id,\n          document: context.local\n        })\n      );\n    }),\n    \"send pristine event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(\n      ({ context }) => ({\n        type: \"pristine\",\n        id: context.id\n      })\n    ),\n    \"send sync event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(\n      ({ context }) => ({\n        type: \"sync\",\n        id: context.id,\n        document: context.remote\n      })\n    ),\n    \"send mutation event to parent\": (0,xstate__WEBPACK_IMPORTED_MODULE_5__.s)(({ context, event }) => ((0,xstate__WEBPACK_IMPORTED_MODULE_4__.assertEvent)(event, \"mutation\"), {\n      type: \"mutation\",\n      id: context.id,\n      previousRev: event.previousRev,\n      resultRev: event.resultRev,\n      effects: event.effects\n    }))\n  },\n  actors: {\n    \"server-sent events\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromEventObservable)(\n      ({\n        input\n      }) => {\n        const { listener, id } = input;\n        return (0,rxjs__WEBPACK_IMPORTED_MODULE_9__.defer)(() => listener).pipe(\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.filter)(\n            (event) => event.type === \"welcome\" || event.type === \"reconnect\" || event.type === \"mutation\" && event.documentId === id\n          ),\n          // This is necessary to avoid sync emitted events from `shareReplay` from happening before the actor is ready to receive them\n          (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.observeOn)(rxjs__WEBPACK_IMPORTED_MODULE_11__.asapScheduler)\n        );\n      }\n    ),\n    \"fetch remote snapshot\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromPromise)(\n      async ({\n        input,\n        signal\n      }) => {\n        const { client, id } = input;\n        return await client.getDocument(id, {\n          signal\n        }).catch((e) => {\n          if (!(e instanceof Error && e.name === \"AbortError\"))\n            throw e;\n        });\n      }\n    ),\n    \"submit mutations as transactions\": (0,xstate__WEBPACK_IMPORTED_MODULE_8__.fromPromise)(\n      async ({\n        input,\n        signal\n      }) => {\n        const { client, transactions } = input;\n        for (const transaction of transactions) {\n          if (signal.aborted) return;\n          await client.dataRequest(\"mutate\", (0,_chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_12__.encodeTransaction)(transaction), {\n            visibility: \"async\",\n            returnDocuments: !1,\n            signal\n          }).catch((e) => {\n            if (!(e instanceof Error && e.name === \"AbortError\"))\n              throw e;\n          });\n        }\n      }\n    )\n  },\n  delays: {\n    // Exponential backoff delay function\n    fetchRemoteSnapshotTimeout: ({ context }) => Math.pow(2, context.fetchRemoteSnapshotAttempts) * 1e3,\n    submitTransactionsTimeout: ({ context }) => Math.pow(2, context.submitTransactionsAttempts) * 1e3\n  }\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QQPYGMCuBbMA7ALgLRYb4CG+KATgMQnn5gDaADALqKgAOKsAlvj4pcnEAA9EADhYAWAHQA2GSwUBmAKwBOaQEZJkhQBoQAT0Q6ATAF8rx1JhwFipCtTkQ+sNMNxg0jCBpvXF9-Vg4kEB5+QWFRCQQLFhY5PQB2dRU1SQsdGSVjMwRlHTkWNM00nR1VKryKmzt0bDwielcqOWDQwVwoGgB3MAAbbxxw0WiBIRFIhPUKuQ1NVU0tTU0WFdVCxAt1dTlNhX2WdRltGUk061sQexandspO7r9e-qo-H3eJyKnYrNQPNJJollpVutNttdghVCo5MoTgoMpo8jIkqpGvdmo42i4Xl0fv4+H0aGAqFRqH9uLxpnE5ogFrCLFd5CtNBYFJkdOpuaosXcHnjnAw3G9-AAxMh8YYYL5BYn4GlROmA+KIFEs1R6ORpZYWHIXGR6bHC1qijpyL4Sj6DEZjZjsSZqmYaxK1ORcvlc-ZqSoyNKwnRpGTyK4WDK5BQ6BQ5BRm3EW55uG1K0n9ClUqgqgFuxketJe7nIv2rUNB0x7LmSL2qGMsSySevcmSJhzJgnipWQOgEma510M4HmcqHZYyWqaOMqTQyWGh0osVSGiwC5uGyftx74sWvHuBNMhX7O-5DoHiPae72lvnlwPBydFlRVS7qPIl7cilP74-+SByMMKBkB4ZKoL4cikgAbigADWYByDA+AACJJgQg4xPmI7FHkZQrKGsjqKcCiaMG9YpJOxySBiCiyPoX6dnuRJ-gEgHAaBmaUm4XDDBQABm1BYIhYAoWhyqnrSmHDpeCAKCicjUbU6g6nkFichYsJrLWVxaPsk7KdICZCmJlqEraAFASBvbPAOEmqlJF4JJURbVDcy4Yvk1GVkUsabApMjKZGqjNg2kgMU8Xa-j0FnsQBXBUJ4vRgH2DBOhEkn0o5TLKV6y6WDG6lhkYVYIDoKzyBkeR8pUDZqOFu5WuZEBsVZzUeFQ+AmDQsAYAARlgAgYZl7o6I2tYLJINSSO+3JaMGlQpGkhFhryo2jW2xkdhFTFNS1EAAT1-UCHa4EIdBcEIYdA34AAKlQZC4LAZAksIsBDeqBbrdpym8iuByxlcLK5BYqQLBUZyTcFvL1aZ3YsTFrVyFdx0ZuSXGdDx-GCUjfXXXdD1PS9j3vVhMnrWCFRxtNaRLdcfIsiwuS5fkgZaOUlhpDDP7MdFzWWftzXI-gdrPGlLoOSNyiHFstRySisjcgzahyFoUYBbRsac5tO6w1F7wIwLONHfg0qyvKyVfPgVAmCT0kJGt41pJD02xgcpElUkcZ6rI+q5JcckbU0W0NWZB57QduMCKbcoKmIsCpXIZB8YwVAABRC-jj3PYCsA3XwOAoKQACUNDmttjVh-zEfG9H5u21lpVjSrTtTTNbsstUYJJAFWgA37XORTz+t8+xtcKpb1v1+6KJFopGQqRi6nBlstYcqNK5riusYDztlejzKMfJXHCdJynqd8SJaAABYAEpgFgKCMAAyrgZBcLAV+P3nBfF6XJnc7tfmY8xZnglgWGe-klILzUhYDSJVRpnCONNOcWxWRKBRDYO4uAUD7XgJEMuIdqDi2GgWQgOhgxMyRKyFc8IuQkXUDvK0HgvAHmIR9bCD4SoeSWCoLkoZpxrmXIw0OLEMxsNJgkSc418KhnrHyG4oZYTcPhMifhJx4SCiDjrABSpgHiLtogAUhwW77DRIGXkk55wexKCrJQsg1jBTnPsYRqZviiL6PohuORgyhhBhGKMsZYzxhcXrf8EBPHulUJOPCtRlABWIu7IoORVBIIhMpNYGJyghKHmEvaYjQEkOwhkxQrJtBES0JDOBPlkgKD1JYZSjZORyTXNkwBsVwkFPYTJVYS58JxPKbOYM0gUj7FjGcEMOpciaJxMHXWOTWJV2avFRKpIwARILJRGJBF4mZBIkDE0KtIxLSSDkDYGhWl70Ru1Tq6zsLURBkoLyWRmz8PmlUZmcY1zXDKdMghcy2mIyFh8W5ZN4RFmOFyKaZwiLeT2GVJcy5pBrguCiMK2tvyDwBYbIWejOkSMQBkeQORJq0RNCUDIDNondxuGpPQmRqIXPhiPECuKMpdMkbILZ-SEnLxyjqOJMZsj1jRTYIAA */\n  id: \"document-mutator\",\n  context: ({ input }) => ({\n    client: input.client.withConfig({ allowReconfigure: !1 }),\n    sharedListener: input.sharedListener,\n    id: input.id,\n    remote: void 0,\n    local: void 0,\n    mutationEvents: [],\n    stagedChanges: [],\n    stashedChanges: [],\n    error: void 0,\n    fetchRemoteSnapshotAttempts: 0,\n    submitTransactionsAttempts: 0,\n    cache: input.cache\n  }),\n  // Auto start the connection by default\n  entry: [\"connect to server-sent events\"],\n  on: {\n    mutate: {\n      actions: [\"rebase local snapshot\", \"stage mutation\"]\n    }\n  },\n  initial: \"disconnected\",\n  states: {\n    disconnected: {\n      on: {\n        connect: {\n          target: \"connecting\",\n          actions: [\"listen to server-sent events\"]\n        }\n      }\n    },\n    connecting: {\n      on: {\n        welcome: \"connected\",\n        reconnect: \"reconnecting\",\n        error: \"connectFailure\"\n      },\n      tags: [\"busy\"]\n    },\n    connectFailure: {\n      on: {\n        connect: {\n          target: \"connecting\",\n          actions: [\"listen to server-sent events\"]\n        }\n      },\n      entry: [\n        \"stop listening to server-sent events\",\n        \"assign error to context\"\n      ],\n      exit: [\"clear error from context\"],\n      tags: [\"error\"]\n    },\n    reconnecting: {\n      on: {\n        welcome: {\n          target: \"connected\"\n        },\n        error: {\n          target: \"connectFailure\"\n        }\n      },\n      tags: [\"busy\", \"error\"]\n    },\n    connected: {\n      on: {\n        mutation: {\n          actions: [\"buffer remote mutation events\"]\n        },\n        reconnect: \"reconnecting\"\n      },\n      entry: [\"clear error from context\"],\n      initial: \"loading\",\n      states: {\n        loading: {\n          invoke: {\n            src: \"fetch remote snapshot\",\n            id: \"getDocument\",\n            input: ({ context }) => ({\n              client: context.client,\n              id: context.id\n            }),\n            onError: {\n              target: \"loadFailure\"\n            },\n            onDone: {\n              target: \"loaded\",\n              actions: [\n                \"rebase fetched remote snapshot\",\n                \"reset fetch attempts\"\n              ]\n            }\n          },\n          tags: [\"busy\"]\n        },\n        loaded: {\n          entry: [\"send sync event to parent\"],\n          on: {\n            mutation: {\n              actions: [\"apply mendoza patch\", \"send mutation event to parent\"]\n            }\n          },\n          initial: \"pristine\",\n          states: {\n            pristine: {\n              on: {\n                mutate: {\n                  actions: [\"rebase local snapshot\", \"stage mutation\"],\n                  target: \"dirty\"\n                }\n              },\n              tags: [\"ready\"]\n            },\n            dirty: {\n              on: {\n                submit: \"submitting\"\n              },\n              tags: [\"ready\"]\n            },\n            submitting: {\n              on: {\n                mutate: {\n                  actions: [\"rebase local snapshot\", \"stash mutation\"]\n                }\n              },\n              invoke: {\n                src: \"submit mutations as transactions\",\n                id: \"submitTransactions\",\n                input: ({ context }) => {\n                  const remoteDataset = /* @__PURE__ */ new Map();\n                  return remoteDataset.set(context.id, context.remote), {\n                    client: context.client,\n                    transactions: (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.toTransactions)(\n                      // Squashing DMP strings is the last thing we do before submitting\n                      (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashDMPStrings)(\n                        remoteDataset,\n                        (0,_chunks_es_toTransactions_js__WEBPACK_IMPORTED_MODULE_7__.squashMutationGroups)(context.stagedChanges)\n                      )\n                    )\n                  };\n                },\n                onError: {\n                  target: \"submitFailure\"\n                },\n                onDone: {\n                  target: \"pristine\",\n                  actions: [\n                    \"restore stashed changes\",\n                    \"reset submit attempts\",\n                    \"send pristine event to parent\"\n                  ]\n                }\n              },\n              /**\n               * 'busy' means we should show a spinner, 'ready' means we can still accept mutations, they'll be applied optimistically right away, and queued for submissions after the current submission settles\n               */\n              tags: [\"busy\", \"ready\"]\n            },\n            submitFailure: {\n              exit: [\"clear error from context\"],\n              after: {\n                submitTransactionsTimeout: {\n                  actions: [\"increment submit attempts\"],\n                  target: \"submitting\"\n                }\n              },\n              on: {\n                retry: \"submitting\"\n              },\n              /**\n               * How can it be both `ready` and `error`? `ready` means it can receive mutations, optimistically apply them, and queue them for submission. `error` means it failed to submit previously applied mutations.\n               * It's completely fine to keep queueing up more mutations and applying them optimistically, while showing UI that notifies that mutations didn't submit, and show a count down until the next automatic retry.\n               */\n              tags: [\"error\", \"ready\"]\n            }\n          }\n        },\n        loadFailure: {\n          exit: [\"clear error from context\"],\n          after: {\n            fetchRemoteSnapshotTimeout: {\n              actions: [\"increment fetch attempts\"],\n              target: \"loading\"\n            }\n          },\n          on: {\n            retry: \"loading\"\n          },\n          tags: [\"error\"]\n        }\n      }\n    }\n  }\n});\nfunction applyMendozaPatch(document, patch, nextRevision) {\n  const next = (0,mendoza__WEBPACK_IMPORTED_MODULE_13__.applyPatch)(omitRev(document), patch);\n  return next ? Object.assign(next, { _rev: nextRevision }) : null;\n}\nfunction omitRev(document) {\n  if (!document)\n    return null;\n  const { _rev, ...doc } = document;\n  return doc;\n}\n\n//# sourceMappingURL=_unstable_machine.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_unstable_machine.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/mutate/dist/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompactEncoder: () => (/* binding */ index$1),\n/* harmony export */   CompactFormatter: () => (/* binding */ compact),\n/* harmony export */   SanityEncoder: () => (/* binding */ index),\n/* harmony export */   append: () => (/* binding */ append),\n/* harmony export */   assign: () => (/* binding */ assign),\n/* harmony export */   at: () => (/* binding */ at),\n/* harmony export */   autoKeys: () => (/* binding */ autoKeys),\n/* harmony export */   create: () => (/* binding */ create),\n/* harmony export */   createIfNotExists: () => (/* binding */ createIfNotExists),\n/* harmony export */   createOrReplace: () => (/* binding */ createOrReplace),\n/* harmony export */   dec: () => (/* binding */ dec),\n/* harmony export */   del: () => (/* binding */ del),\n/* harmony export */   delete_: () => (/* binding */ delete_),\n/* harmony export */   destroy: () => (/* binding */ destroy),\n/* harmony export */   diffMatchPatch: () => (/* binding */ diffMatchPatch),\n/* harmony export */   inc: () => (/* binding */ inc),\n/* harmony export */   insert: () => (/* binding */ insert),\n/* harmony export */   insertAfter: () => (/* binding */ insertAfter),\n/* harmony export */   insertBefore: () => (/* binding */ insertBefore),\n/* harmony export */   patch: () => (/* binding */ patch),\n/* harmony export */   prepend: () => (/* binding */ prepend),\n/* harmony export */   remove: () => (/* binding */ remove),\n/* harmony export */   replace: () => (/* binding */ replace),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setIfMissing: () => (/* binding */ setIfMissing),\n/* harmony export */   truncate: () => (/* binding */ truncate),\n/* harmony export */   unassign: () => (/* binding */ unassign),\n/* harmony export */   unset: () => (/* binding */ unset),\n/* harmony export */   upsert: () => (/* binding */ upsert)\n/* harmony export */ });\n/* harmony import */ var _chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_chunks-es/parse.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/parse.js\");\n/* harmony import */ var _chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_chunks-es/stringify.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/stringify.js\");\n/* harmony import */ var _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_chunks-es/decode.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/decode.js\");\n/* harmony import */ var _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_chunks-es/encode.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/encode.js\");\n/* harmony import */ var _chunks_es_isObject_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./_chunks-es/isObject.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/isObject.js\");\n/* harmony import */ var _chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./_chunks-es/arrify.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_chunks-es/arrify.js\");\n\n\n\n\n\n\nfunction decode(mutations) {\n  return mutations.map(decodeMutation);\n}\nfunction decodeMutation(mutation) {\n  const [type] = mutation;\n  if (type === \"delete\") {\n    const [, id] = mutation;\n    return { id, type };\n  } else if (type === \"create\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"createIfNotExists\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"createOrReplace\") {\n    const [, document] = mutation;\n    return { type, document };\n  } else if (type === \"patch\")\n    return decodePatchMutation(mutation);\n  throw new Error(`Unrecognized mutation: ${JSON.stringify(mutation)}`);\n}\nfunction decodePatchMutation(mutation) {\n  const [, type, id, serializedPath, , revisionId] = mutation, path = (0,_chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(serializedPath);\n  if (type === \"dec\" || type === \"inc\") {\n    const [, , , , [amount]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"inc\", amount } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"unset\")\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"unset\" } }],\n      ...createOpts(revisionId)\n    };\n  if (type === \"insert\") {\n    const [, , , , [position, ref, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        {\n          path,\n          op: {\n            type: \"insert\",\n            position,\n            items,\n            referenceItem: typeof ref == \"string\" ? { _key: ref } : ref\n          }\n        }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"set\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"set\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"setIfMissing\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"setIfMissing\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"diffMatchPatch\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"diffMatchPatch\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"truncate\") {\n    const [, , , , [startIndex, endIndex]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"truncate\", startIndex, endIndex } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"assign\") {\n    const [, , , , [value]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [{ path, op: { type: \"assign\", value } }],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"replace\") {\n    const [, , , , [ref, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        { path, op: { type: \"replace\", items, referenceItem: decodeItemRef(ref) } }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  if (type === \"upsert\") {\n    const [, , , , [position, referenceItem, items]] = mutation;\n    return {\n      type: \"patch\",\n      id,\n      patches: [\n        {\n          path,\n          op: {\n            type: \"upsert\",\n            items,\n            referenceItem: decodeItemRef(referenceItem),\n            position\n          }\n        }\n      ],\n      ...createOpts(revisionId)\n    };\n  }\n  throw new Error(`Invalid mutation type: ${type}`);\n}\nfunction decodeItemRef(ref) {\n  return typeof ref == \"string\" ? { _key: ref } : ref;\n}\nfunction createOpts(revisionId) {\n  return revisionId ? { options: { ifRevision: revisionId } } : null;\n}\nfunction encode(mutations) {\n  return mutations.flatMap((m) => encodeMutation$1(m));\n}\nfunction encodeItemRef$1(ref) {\n  return typeof ref == \"number\" ? ref : ref._key;\n}\nfunction encodeMutation$1(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return [[mutation.type, mutation.document]];\n  if (mutation.type === \"delete\")\n    return [[\"delete\", mutation.id]];\n  if (mutation.type === \"patch\")\n    return mutation.patches.map(\n      (patch2) => maybeAddRevision(\n        mutation.options?.ifRevision,\n        encodePatchMutation(mutation.id, patch2)\n      )\n    );\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction encodePatchMutation(id, patch2) {\n  const { op } = patch2, path = (0,_chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(patch2.path);\n  if (op.type === \"unset\")\n    return [\"patch\", \"unset\", id, path, []];\n  if (op.type === \"diffMatchPatch\")\n    return [\"patch\", \"diffMatchPatch\", id, path, [op.value]];\n  if (op.type === \"inc\" || op.type === \"dec\")\n    return [\"patch\", op.type, id, path, [op.amount]];\n  if (op.type === \"set\")\n    return [\"patch\", op.type, id, path, [op.value]];\n  if (op.type === \"setIfMissing\")\n    return [\"patch\", op.type, id, path, [op.value]];\n  if (op.type === \"insert\")\n    return [\n      \"patch\",\n      \"insert\",\n      id,\n      path,\n      [op.position, encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"upsert\")\n    return [\n      \"patch\",\n      \"upsert\",\n      id,\n      path,\n      [op.position, encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"assign\")\n    return [\"patch\", \"assign\", id, path, [op.value]];\n  if (op.type === \"unassign\")\n    return [\"patch\", \"assign\", id, path, [op.keys]];\n  if (op.type === \"replace\")\n    return [\n      \"patch\",\n      \"replace\",\n      id,\n      path,\n      [encodeItemRef$1(op.referenceItem), op.items]\n    ];\n  if (op.type === \"truncate\")\n    return [\"patch\", \"truncate\", id, path, [op.startIndex, op.endIndex]];\n  if (op.type === \"remove\")\n    return [\"patch\", \"remove\", id, path, [encodeItemRef$1(op.referenceItem)]];\n  throw new Error(`Invalid operation type: ${op.type}`);\n}\nfunction maybeAddRevision(revision, mut) {\n  const [mutType, patchType, id, path, args] = mut;\n  return revision ? [mutType, patchType, id, path, args, revision] : mut;\n}\nvar index$1 = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  decode,\n  encode\n}), index = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  decode: _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__.decode,\n  decodeAll: _chunks_es_decode_js__WEBPACK_IMPORTED_MODULE_2__.decodeAll,\n  encode: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encode,\n  encodeAll: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeAll,\n  encodeMutation: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeMutation,\n  encodeTransaction: _chunks_es_encode_js__WEBPACK_IMPORTED_MODULE_3__.encodeTransaction\n});\nfunction format(mutations) {\n  return mutations.flatMap((m) => encodeMutation(m)).join(`\n`);\n}\nfunction encodeItemRef(ref) {\n  return typeof ref == \"number\" ? ref : ref._key;\n}\nfunction encodeMutation(mutation) {\n  if (mutation.type === \"create\" || mutation.type === \"createIfNotExists\" || mutation.type === \"createOrReplace\")\n    return [mutation.type, \": \", JSON.stringify(mutation.document)].join(\"\");\n  if (mutation.type === \"delete\")\n    return [\"delete \", mutation.id].join(\": \");\n  if (mutation.type === \"patch\") {\n    const ifRevision = mutation.options?.ifRevision;\n    return [\n      \"patch\",\n      \" \",\n      `id=${mutation.id}`,\n      ifRevision ? ` (if revision==${ifRevision})` : \"\",\n      `:\n`,\n      mutation.patches.map((nodePatch) => `  ${formatPatchMutation(nodePatch)}`).join(`\n`)\n    ].join(\"\");\n  }\n  throw new Error(`Invalid mutation type: ${mutation.type}`);\n}\nfunction formatPatchMutation(patch2) {\n  const { op } = patch2, path = (0,_chunks_es_stringify_js__WEBPACK_IMPORTED_MODULE_1__.stringify)(patch2.path);\n  if (op.type === \"unset\")\n    return [path, \"unset()\"].join(\": \");\n  if (op.type === \"diffMatchPatch\")\n    return [path, `diffMatchPatch(${op.value})`].join(\": \");\n  if (op.type === \"inc\" || op.type === \"dec\")\n    return [path, `${op.type}(${op.amount})`].join(\": \");\n  if (op.type === \"set\" || op.type === \"setIfMissing\")\n    return [path, `${op.type}(${JSON.stringify(op.value)})`].join(\": \");\n  if (op.type === \"assign\")\n    return [path, `${op.type}(${JSON.stringify(op.value)})`].join(\": \");\n  if (op.type === \"unassign\")\n    return [path, `${op.type}(${JSON.stringify(op.keys)})`].join(\": \");\n  if (op.type === \"insert\" || op.type === \"upsert\")\n    return [\n      path,\n      `${op.type}(${op.position}, ${encodeItemRef(\n        op.referenceItem\n      )}, ${JSON.stringify(op.items)})`\n    ].join(\": \");\n  if (op.type === \"replace\")\n    return [\n      path,\n      `replace(${encodeItemRef(op.referenceItem)}, ${JSON.stringify(\n        op.items\n      )})`\n    ].join(\": \");\n  if (op.type === \"truncate\")\n    return [path, `truncate(${op.startIndex}, ${op.endIndex}`].join(\": \");\n  if (op.type === \"remove\")\n    return [path, `remove(${encodeItemRef(op.referenceItem)})`].join(\": \");\n  throw new Error(`Invalid operation type: ${op.type}`);\n}\nvar compact = /* @__PURE__ */ Object.freeze({\n  __proto__: null,\n  format\n});\nconst set = (value) => ({ type: \"set\", value }), assign = (value) => ({\n  type: \"assign\",\n  value\n}), unassign = (keys) => ({\n  type: \"unassign\",\n  keys\n}), setIfMissing = (value) => ({\n  type: \"setIfMissing\",\n  value\n}), unset = () => ({ type: \"unset\" }), inc = (amount = 1) => ({\n  type: \"inc\",\n  amount\n}), dec = (amount = 1) => ({\n  type: \"dec\",\n  amount\n}), diffMatchPatch = (value) => ({\n  type: \"diffMatchPatch\",\n  value\n});\nfunction insert(items, position, indexOrReferenceItem) {\n  return {\n    type: \"insert\",\n    referenceItem: indexOrReferenceItem,\n    position,\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items)\n  };\n}\nfunction append(items) {\n  return insert(items, \"after\", -1);\n}\nfunction prepend(items) {\n  return insert(items, \"before\", 0);\n}\nfunction insertBefore(items, indexOrReferenceItem) {\n  return insert(items, \"before\", indexOrReferenceItem);\n}\nconst insertAfter = (items, indexOrReferenceItem) => insert(items, \"after\", indexOrReferenceItem);\nfunction truncate(startIndex, endIndex) {\n  return {\n    type: \"truncate\",\n    startIndex,\n    endIndex\n  };\n}\nfunction replace(items, referenceItem) {\n  return {\n    type: \"replace\",\n    referenceItem,\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items)\n  };\n}\nfunction remove(referenceItem) {\n  return {\n    type: \"remove\",\n    referenceItem\n  };\n}\nfunction upsert(items, position, referenceItem) {\n  return {\n    type: \"upsert\",\n    items: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(items),\n    referenceItem,\n    position\n  };\n}\nfunction autoKeys(generateKey) {\n  const ensureKeys = createEnsureKeys(generateKey), insert$1 = (position, referenceItem, items) => insert(ensureKeys(items), position, referenceItem), upsert$1 = (items, position, referenceItem) => upsert(ensureKeys(items), position, referenceItem), replace$1 = (items, position, referenceItem) => replace(ensureKeys(items), referenceItem), insertBefore2 = (ref, items) => insert$1(\"before\", ref, items);\n  return { insert: insert$1, upsert: upsert$1, replace: replace$1, insertBefore: insertBefore2, prepend: (items) => insertBefore2(0, items), insertAfter: (ref, items) => insert$1(\"after\", ref, items), append: (items) => insert$1(\"after\", -1, items) };\n}\nfunction hasKey(item) {\n  return \"_key\" in item;\n}\nfunction createEnsureKeys(generateKey) {\n  return (array) => {\n    let didModify = !1;\n    const withKeys = array.map((item) => needsKey(item) ? (didModify = !0, { ...item, _key: generateKey(item) }) : item);\n    return didModify ? withKeys : array;\n  };\n}\nfunction needsKey(arrayItem) {\n  return (0,_chunks_es_isObject_js__WEBPACK_IMPORTED_MODULE_5__.isObject)(arrayItem) && !hasKey(arrayItem);\n}\nfunction create(document) {\n  return { type: \"create\", document };\n}\nfunction patch(id, patches, options) {\n  return {\n    type: \"patch\",\n    id,\n    patches: (0,_chunks_es_arrify_js__WEBPACK_IMPORTED_MODULE_4__.arrify)(patches),\n    ...options ? { options } : {}\n  };\n}\nfunction at(path, operation) {\n  return {\n    path: typeof path == \"string\" ? (0,_chunks_es_parse_js__WEBPACK_IMPORTED_MODULE_0__.parse)(path) : path,\n    op: operation\n  };\n}\nfunction createIfNotExists(document) {\n  return { type: \"createIfNotExists\", document };\n}\nfunction createOrReplace(document) {\n  return { type: \"createOrReplace\", document };\n}\nfunction delete_(id) {\n  return { type: \"delete\", id };\n}\nconst del = delete_, destroy = delete_;\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS9tdXRhdGUvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUE4QztBQUNRO0FBQ2lCO0FBQ3VEO0FBQzFFO0FBQ0o7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsSUFBSTtBQUNKO0FBQ0EsYUFBYTtBQUNiLElBQUk7QUFDSjtBQUNBLGFBQWE7QUFDYixJQUFJO0FBQ0o7QUFDQSxhQUFhO0FBQ2IsSUFBSTtBQUNKO0FBQ0EsNENBQTRDLHlCQUF5QjtBQUNyRTtBQUNBO0FBQ0Esc0VBQXNFLDBEQUFLO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWSx1QkFBdUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWSxpQkFBaUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxZQUFZO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWSxzQkFBc0I7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixZQUFZLCtCQUErQjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLFlBQVksaUNBQWlDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsWUFBWSwwQ0FBMEM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixZQUFZLHlCQUF5QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLFlBQVk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxLQUFLO0FBQ2pEO0FBQ0E7QUFDQSxvQ0FBb0MsWUFBWTtBQUNoRDtBQUNBO0FBQ0Esd0JBQXdCLFdBQVcsMkJBQTJCO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGNBQWM7QUFDMUQ7QUFDQTtBQUNBLFVBQVUsS0FBSyxpQkFBaUIsa0VBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFFBQVE7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsVUFBVSx3REFBUTtBQUNsQixXQUFXO0FBQ1gsVUFBVSx3REFBUTtBQUNsQixXQUFXO0FBQ1gsa0JBQWtCLGdFQUFnQjtBQUNsQyxtQkFBbUI7QUFDbkIsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLFlBQVk7QUFDeEIscUNBQXFDLFdBQVc7QUFDaEQ7QUFDQTtBQUNBLCtDQUErQywrQkFBK0I7QUFDOUU7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLGNBQWM7QUFDMUQ7QUFDQTtBQUNBLFVBQVUsS0FBSyxpQkFBaUIsa0VBQVM7QUFDekM7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLFNBQVM7QUFDN0M7QUFDQSxxQkFBcUIsUUFBUSxHQUFHLFVBQVU7QUFDMUM7QUFDQSxxQkFBcUIsUUFBUSxHQUFHLHlCQUF5QjtBQUN6RDtBQUNBLHFCQUFxQixRQUFRLEdBQUcseUJBQXlCO0FBQ3pEO0FBQ0EscUJBQXFCLFFBQVEsR0FBRyx3QkFBd0I7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsU0FBUyxRQUFRLEdBQUcsWUFBWSxJQUFJO0FBQ3BDO0FBQ0EsUUFBUSxJQUFJLHlCQUF5QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixnQ0FBZ0MsSUFBSTtBQUNyRDtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0EsOEJBQThCLGNBQWMsSUFBSSxZQUFZO0FBQzVEO0FBQ0EsNEJBQTRCLGdDQUFnQztBQUM1RCw2Q0FBNkMsUUFBUTtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCwwQkFBMEIsb0JBQW9CO0FBQzlDO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQyxvQkFBb0IsZUFBZTtBQUNwQztBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0REFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0REFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0REFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2RUFBNkUsa0NBQWtDO0FBQy9HO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxnRUFBUTtBQUNqQjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLDREQUFNO0FBQ25CLG1CQUFtQixVQUFVO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDBEQUFLO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBK0JFO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0NyYWNrZWQvRnJvbnQtZW5kL3N0YXJ0dXAvbm9kZV9tb2R1bGVzL25leHQtc2FuaXR5L25vZGVfbW9kdWxlcy9Ac2FuaXR5L211dGF0ZS9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSBcIi4vX2NodW5rcy1lcy9wYXJzZS5qc1wiO1xuaW1wb3J0IHsgc3RyaW5naWZ5IH0gZnJvbSBcIi4vX2NodW5rcy1lcy9zdHJpbmdpZnkuanNcIjtcbmltcG9ydCB7IGRlY29kZSBhcyBkZWNvZGUkMSwgZGVjb2RlQWxsIH0gZnJvbSBcIi4vX2NodW5rcy1lcy9kZWNvZGUuanNcIjtcbmltcG9ydCB7IGVuY29kZSBhcyBlbmNvZGUkMSwgZW5jb2RlQWxsLCBlbmNvZGVNdXRhdGlvbiBhcyBlbmNvZGVNdXRhdGlvbiQyLCBlbmNvZGVUcmFuc2FjdGlvbiB9IGZyb20gXCIuL19jaHVua3MtZXMvZW5jb2RlLmpzXCI7XG5pbXBvcnQgeyBpc09iamVjdCB9IGZyb20gXCIuL19jaHVua3MtZXMvaXNPYmplY3QuanNcIjtcbmltcG9ydCB7IGFycmlmeSB9IGZyb20gXCIuL19jaHVua3MtZXMvYXJyaWZ5LmpzXCI7XG5mdW5jdGlvbiBkZWNvZGUobXV0YXRpb25zKSB7XG4gIHJldHVybiBtdXRhdGlvbnMubWFwKGRlY29kZU11dGF0aW9uKTtcbn1cbmZ1bmN0aW9uIGRlY29kZU11dGF0aW9uKG11dGF0aW9uKSB7XG4gIGNvbnN0IFt0eXBlXSA9IG11dGF0aW9uO1xuICBpZiAodHlwZSA9PT0gXCJkZWxldGVcIikge1xuICAgIGNvbnN0IFssIGlkXSA9IG11dGF0aW9uO1xuICAgIHJldHVybiB7IGlkLCB0eXBlIH07XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJjcmVhdGVcIikge1xuICAgIGNvbnN0IFssIGRvY3VtZW50XSA9IG11dGF0aW9uO1xuICAgIHJldHVybiB7IHR5cGUsIGRvY3VtZW50IH07XG4gIH0gZWxzZSBpZiAodHlwZSA9PT0gXCJjcmVhdGVJZk5vdEV4aXN0c1wiKSB7XG4gICAgY29uc3QgWywgZG9jdW1lbnRdID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHsgdHlwZSwgZG9jdW1lbnQgfTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSBcImNyZWF0ZU9yUmVwbGFjZVwiKSB7XG4gICAgY29uc3QgWywgZG9jdW1lbnRdID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHsgdHlwZSwgZG9jdW1lbnQgfTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSBcInBhdGNoXCIpXG4gICAgcmV0dXJuIGRlY29kZVBhdGNoTXV0YXRpb24obXV0YXRpb24pO1xuICB0aHJvdyBuZXcgRXJyb3IoYFVucmVjb2duaXplZCBtdXRhdGlvbjogJHtKU09OLnN0cmluZ2lmeShtdXRhdGlvbil9YCk7XG59XG5mdW5jdGlvbiBkZWNvZGVQYXRjaE11dGF0aW9uKG11dGF0aW9uKSB7XG4gIGNvbnN0IFssIHR5cGUsIGlkLCBzZXJpYWxpemVkUGF0aCwgLCByZXZpc2lvbklkXSA9IG11dGF0aW9uLCBwYXRoID0gcGFyc2Uoc2VyaWFsaXplZFBhdGgpO1xuICBpZiAodHlwZSA9PT0gXCJkZWNcIiB8fCB0eXBlID09PSBcImluY1wiKSB7XG4gICAgY29uc3QgWywgLCAsICwgW2Ftb3VudF1dID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkLFxuICAgICAgcGF0Y2hlczogW3sgcGF0aCwgb3A6IHsgdHlwZTogXCJpbmNcIiwgYW1vdW50IH0gfV0sXG4gICAgICAuLi5jcmVhdGVPcHRzKHJldmlzaW9uSWQpXG4gICAgfTtcbiAgfVxuICBpZiAodHlwZSA9PT0gXCJ1bnNldFwiKVxuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcInBhdGNoXCIsXG4gICAgICBpZCxcbiAgICAgIHBhdGNoZXM6IFt7IHBhdGgsIG9wOiB7IHR5cGU6IFwidW5zZXRcIiB9IH1dLFxuICAgICAgLi4uY3JlYXRlT3B0cyhyZXZpc2lvbklkKVxuICAgIH07XG4gIGlmICh0eXBlID09PSBcImluc2VydFwiKSB7XG4gICAgY29uc3QgWywgLCAsICwgW3Bvc2l0aW9uLCByZWYsIGl0ZW1zXV0gPSBtdXRhdGlvbjtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJwYXRjaFwiLFxuICAgICAgaWQsXG4gICAgICBwYXRjaGVzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoLFxuICAgICAgICAgIG9wOiB7XG4gICAgICAgICAgICB0eXBlOiBcImluc2VydFwiLFxuICAgICAgICAgICAgcG9zaXRpb24sXG4gICAgICAgICAgICBpdGVtcyxcbiAgICAgICAgICAgIHJlZmVyZW5jZUl0ZW06IHR5cGVvZiByZWYgPT0gXCJzdHJpbmdcIiA/IHsgX2tleTogcmVmIH0gOiByZWZcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICAuLi5jcmVhdGVPcHRzKHJldmlzaW9uSWQpXG4gICAgfTtcbiAgfVxuICBpZiAodHlwZSA9PT0gXCJzZXRcIikge1xuICAgIGNvbnN0IFssICwgLCAsIFt2YWx1ZV1dID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkLFxuICAgICAgcGF0Y2hlczogW3sgcGF0aCwgb3A6IHsgdHlwZTogXCJzZXRcIiwgdmFsdWUgfSB9XSxcbiAgICAgIC4uLmNyZWF0ZU9wdHMocmV2aXNpb25JZClcbiAgICB9O1xuICB9XG4gIGlmICh0eXBlID09PSBcInNldElmTWlzc2luZ1wiKSB7XG4gICAgY29uc3QgWywgLCAsICwgW3ZhbHVlXV0gPSBtdXRhdGlvbjtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogXCJwYXRjaFwiLFxuICAgICAgaWQsXG4gICAgICBwYXRjaGVzOiBbeyBwYXRoLCBvcDogeyB0eXBlOiBcInNldElmTWlzc2luZ1wiLCB2YWx1ZSB9IH1dLFxuICAgICAgLi4uY3JlYXRlT3B0cyhyZXZpc2lvbklkKVxuICAgIH07XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwiZGlmZk1hdGNoUGF0Y2hcIikge1xuICAgIGNvbnN0IFssICwgLCAsIFt2YWx1ZV1dID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkLFxuICAgICAgcGF0Y2hlczogW3sgcGF0aCwgb3A6IHsgdHlwZTogXCJkaWZmTWF0Y2hQYXRjaFwiLCB2YWx1ZSB9IH1dLFxuICAgICAgLi4uY3JlYXRlT3B0cyhyZXZpc2lvbklkKVxuICAgIH07XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwidHJ1bmNhdGVcIikge1xuICAgIGNvbnN0IFssICwgLCAsIFtzdGFydEluZGV4LCBlbmRJbmRleF1dID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkLFxuICAgICAgcGF0Y2hlczogW3sgcGF0aCwgb3A6IHsgdHlwZTogXCJ0cnVuY2F0ZVwiLCBzdGFydEluZGV4LCBlbmRJbmRleCB9IH1dLFxuICAgICAgLi4uY3JlYXRlT3B0cyhyZXZpc2lvbklkKVxuICAgIH07XG4gIH1cbiAgaWYgKHR5cGUgPT09IFwiYXNzaWduXCIpIHtcbiAgICBjb25zdCBbLCAsICwgLCBbdmFsdWVdXSA9IG11dGF0aW9uO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiBcInBhdGNoXCIsXG4gICAgICBpZCxcbiAgICAgIHBhdGNoZXM6IFt7IHBhdGgsIG9wOiB7IHR5cGU6IFwiYXNzaWduXCIsIHZhbHVlIH0gfV0sXG4gICAgICAuLi5jcmVhdGVPcHRzKHJldmlzaW9uSWQpXG4gICAgfTtcbiAgfVxuICBpZiAodHlwZSA9PT0gXCJyZXBsYWNlXCIpIHtcbiAgICBjb25zdCBbLCAsICwgLCBbcmVmLCBpdGVtc11dID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkLFxuICAgICAgcGF0Y2hlczogW1xuICAgICAgICB7IHBhdGgsIG9wOiB7IHR5cGU6IFwicmVwbGFjZVwiLCBpdGVtcywgcmVmZXJlbmNlSXRlbTogZGVjb2RlSXRlbVJlZihyZWYpIH0gfVxuICAgICAgXSxcbiAgICAgIC4uLmNyZWF0ZU9wdHMocmV2aXNpb25JZClcbiAgICB9O1xuICB9XG4gIGlmICh0eXBlID09PSBcInVwc2VydFwiKSB7XG4gICAgY29uc3QgWywgLCAsICwgW3Bvc2l0aW9uLCByZWZlcmVuY2VJdGVtLCBpdGVtc11dID0gbXV0YXRpb247XG4gICAgcmV0dXJuIHtcbiAgICAgIHR5cGU6IFwicGF0Y2hcIixcbiAgICAgIGlkLFxuICAgICAgcGF0Y2hlczogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0aCxcbiAgICAgICAgICBvcDoge1xuICAgICAgICAgICAgdHlwZTogXCJ1cHNlcnRcIixcbiAgICAgICAgICAgIGl0ZW1zLFxuICAgICAgICAgICAgcmVmZXJlbmNlSXRlbTogZGVjb2RlSXRlbVJlZihyZWZlcmVuY2VJdGVtKSxcbiAgICAgICAgICAgIHBvc2l0aW9uXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgLi4uY3JlYXRlT3B0cyhyZXZpc2lvbklkKVxuICAgIH07XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG11dGF0aW9uIHR5cGU6ICR7dHlwZX1gKTtcbn1cbmZ1bmN0aW9uIGRlY29kZUl0ZW1SZWYocmVmKSB7XG4gIHJldHVybiB0eXBlb2YgcmVmID09IFwic3RyaW5nXCIgPyB7IF9rZXk6IHJlZiB9IDogcmVmO1xufVxuZnVuY3Rpb24gY3JlYXRlT3B0cyhyZXZpc2lvbklkKSB7XG4gIHJldHVybiByZXZpc2lvbklkID8geyBvcHRpb25zOiB7IGlmUmV2aXNpb246IHJldmlzaW9uSWQgfSB9IDogbnVsbDtcbn1cbmZ1bmN0aW9uIGVuY29kZShtdXRhdGlvbnMpIHtcbiAgcmV0dXJuIG11dGF0aW9ucy5mbGF0TWFwKChtKSA9PiBlbmNvZGVNdXRhdGlvbiQxKG0pKTtcbn1cbmZ1bmN0aW9uIGVuY29kZUl0ZW1SZWYkMShyZWYpIHtcbiAgcmV0dXJuIHR5cGVvZiByZWYgPT0gXCJudW1iZXJcIiA/IHJlZiA6IHJlZi5fa2V5O1xufVxuZnVuY3Rpb24gZW5jb2RlTXV0YXRpb24kMShtdXRhdGlvbikge1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVcIiB8fCBtdXRhdGlvbi50eXBlID09PSBcImNyZWF0ZUlmTm90RXhpc3RzXCIgfHwgbXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVPclJlcGxhY2VcIilcbiAgICByZXR1cm4gW1ttdXRhdGlvbi50eXBlLCBtdXRhdGlvbi5kb2N1bWVudF1dO1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJkZWxldGVcIilcbiAgICByZXR1cm4gW1tcImRlbGV0ZVwiLCBtdXRhdGlvbi5pZF1dO1xuICBpZiAobXV0YXRpb24udHlwZSA9PT0gXCJwYXRjaFwiKVxuICAgIHJldHVybiBtdXRhdGlvbi5wYXRjaGVzLm1hcChcbiAgICAgIChwYXRjaDIpID0+IG1heWJlQWRkUmV2aXNpb24oXG4gICAgICAgIG11dGF0aW9uLm9wdGlvbnM/LmlmUmV2aXNpb24sXG4gICAgICAgIGVuY29kZVBhdGNoTXV0YXRpb24obXV0YXRpb24uaWQsIHBhdGNoMilcbiAgICAgIClcbiAgICApO1xuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgbXV0YXRpb24gdHlwZTogJHttdXRhdGlvbi50eXBlfWApO1xufVxuZnVuY3Rpb24gZW5jb2RlUGF0Y2hNdXRhdGlvbihpZCwgcGF0Y2gyKSB7XG4gIGNvbnN0IHsgb3AgfSA9IHBhdGNoMiwgcGF0aCA9IHN0cmluZ2lmeShwYXRjaDIucGF0aCk7XG4gIGlmIChvcC50eXBlID09PSBcInVuc2V0XCIpXG4gICAgcmV0dXJuIFtcInBhdGNoXCIsIFwidW5zZXRcIiwgaWQsIHBhdGgsIFtdXTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiZGlmZk1hdGNoUGF0Y2hcIilcbiAgICByZXR1cm4gW1wicGF0Y2hcIiwgXCJkaWZmTWF0Y2hQYXRjaFwiLCBpZCwgcGF0aCwgW29wLnZhbHVlXV07XG4gIGlmIChvcC50eXBlID09PSBcImluY1wiIHx8IG9wLnR5cGUgPT09IFwiZGVjXCIpXG4gICAgcmV0dXJuIFtcInBhdGNoXCIsIG9wLnR5cGUsIGlkLCBwYXRoLCBbb3AuYW1vdW50XV07XG4gIGlmIChvcC50eXBlID09PSBcInNldFwiKVxuICAgIHJldHVybiBbXCJwYXRjaFwiLCBvcC50eXBlLCBpZCwgcGF0aCwgW29wLnZhbHVlXV07XG4gIGlmIChvcC50eXBlID09PSBcInNldElmTWlzc2luZ1wiKVxuICAgIHJldHVybiBbXCJwYXRjaFwiLCBvcC50eXBlLCBpZCwgcGF0aCwgW29wLnZhbHVlXV07XG4gIGlmIChvcC50eXBlID09PSBcImluc2VydFwiKVxuICAgIHJldHVybiBbXG4gICAgICBcInBhdGNoXCIsXG4gICAgICBcImluc2VydFwiLFxuICAgICAgaWQsXG4gICAgICBwYXRoLFxuICAgICAgW29wLnBvc2l0aW9uLCBlbmNvZGVJdGVtUmVmJDEob3AucmVmZXJlbmNlSXRlbSksIG9wLml0ZW1zXVxuICAgIF07XG4gIGlmIChvcC50eXBlID09PSBcInVwc2VydFwiKVxuICAgIHJldHVybiBbXG4gICAgICBcInBhdGNoXCIsXG4gICAgICBcInVwc2VydFwiLFxuICAgICAgaWQsXG4gICAgICBwYXRoLFxuICAgICAgW29wLnBvc2l0aW9uLCBlbmNvZGVJdGVtUmVmJDEob3AucmVmZXJlbmNlSXRlbSksIG9wLml0ZW1zXVxuICAgIF07XG4gIGlmIChvcC50eXBlID09PSBcImFzc2lnblwiKVxuICAgIHJldHVybiBbXCJwYXRjaFwiLCBcImFzc2lnblwiLCBpZCwgcGF0aCwgW29wLnZhbHVlXV07XG4gIGlmIChvcC50eXBlID09PSBcInVuYXNzaWduXCIpXG4gICAgcmV0dXJuIFtcInBhdGNoXCIsIFwiYXNzaWduXCIsIGlkLCBwYXRoLCBbb3Aua2V5c11dO1xuICBpZiAob3AudHlwZSA9PT0gXCJyZXBsYWNlXCIpXG4gICAgcmV0dXJuIFtcbiAgICAgIFwicGF0Y2hcIixcbiAgICAgIFwicmVwbGFjZVwiLFxuICAgICAgaWQsXG4gICAgICBwYXRoLFxuICAgICAgW2VuY29kZUl0ZW1SZWYkMShvcC5yZWZlcmVuY2VJdGVtKSwgb3AuaXRlbXNdXG4gICAgXTtcbiAgaWYgKG9wLnR5cGUgPT09IFwidHJ1bmNhdGVcIilcbiAgICByZXR1cm4gW1wicGF0Y2hcIiwgXCJ0cnVuY2F0ZVwiLCBpZCwgcGF0aCwgW29wLnN0YXJ0SW5kZXgsIG9wLmVuZEluZGV4XV07XG4gIGlmIChvcC50eXBlID09PSBcInJlbW92ZVwiKVxuICAgIHJldHVybiBbXCJwYXRjaFwiLCBcInJlbW92ZVwiLCBpZCwgcGF0aCwgW2VuY29kZUl0ZW1SZWYkMShvcC5yZWZlcmVuY2VJdGVtKV1dO1xuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgb3BlcmF0aW9uIHR5cGU6ICR7b3AudHlwZX1gKTtcbn1cbmZ1bmN0aW9uIG1heWJlQWRkUmV2aXNpb24ocmV2aXNpb24sIG11dCkge1xuICBjb25zdCBbbXV0VHlwZSwgcGF0Y2hUeXBlLCBpZCwgcGF0aCwgYXJnc10gPSBtdXQ7XG4gIHJldHVybiByZXZpc2lvbiA/IFttdXRUeXBlLCBwYXRjaFR5cGUsIGlkLCBwYXRoLCBhcmdzLCByZXZpc2lvbl0gOiBtdXQ7XG59XG52YXIgaW5kZXgkMSA9IC8qIEBfX1BVUkVfXyAqLyBPYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICBkZWNvZGUsXG4gIGVuY29kZVxufSksIGluZGV4ID0gLyogQF9fUFVSRV9fICovIE9iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIGRlY29kZTogZGVjb2RlJDEsXG4gIGRlY29kZUFsbCxcbiAgZW5jb2RlOiBlbmNvZGUkMSxcbiAgZW5jb2RlQWxsLFxuICBlbmNvZGVNdXRhdGlvbjogZW5jb2RlTXV0YXRpb24kMixcbiAgZW5jb2RlVHJhbnNhY3Rpb25cbn0pO1xuZnVuY3Rpb24gZm9ybWF0KG11dGF0aW9ucykge1xuICByZXR1cm4gbXV0YXRpb25zLmZsYXRNYXAoKG0pID0+IGVuY29kZU11dGF0aW9uKG0pKS5qb2luKGBcbmApO1xufVxuZnVuY3Rpb24gZW5jb2RlSXRlbVJlZihyZWYpIHtcbiAgcmV0dXJuIHR5cGVvZiByZWYgPT0gXCJudW1iZXJcIiA/IHJlZiA6IHJlZi5fa2V5O1xufVxuZnVuY3Rpb24gZW5jb2RlTXV0YXRpb24obXV0YXRpb24pIHtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlXCIgfHwgbXV0YXRpb24udHlwZSA9PT0gXCJjcmVhdGVJZk5vdEV4aXN0c1wiIHx8IG11dGF0aW9uLnR5cGUgPT09IFwiY3JlYXRlT3JSZXBsYWNlXCIpXG4gICAgcmV0dXJuIFttdXRhdGlvbi50eXBlLCBcIjogXCIsIEpTT04uc3RyaW5naWZ5KG11dGF0aW9uLmRvY3VtZW50KV0uam9pbihcIlwiKTtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwiZGVsZXRlXCIpXG4gICAgcmV0dXJuIFtcImRlbGV0ZSBcIiwgbXV0YXRpb24uaWRdLmpvaW4oXCI6IFwiKTtcbiAgaWYgKG11dGF0aW9uLnR5cGUgPT09IFwicGF0Y2hcIikge1xuICAgIGNvbnN0IGlmUmV2aXNpb24gPSBtdXRhdGlvbi5vcHRpb25zPy5pZlJldmlzaW9uO1xuICAgIHJldHVybiBbXG4gICAgICBcInBhdGNoXCIsXG4gICAgICBcIiBcIixcbiAgICAgIGBpZD0ke211dGF0aW9uLmlkfWAsXG4gICAgICBpZlJldmlzaW9uID8gYCAoaWYgcmV2aXNpb249PSR7aWZSZXZpc2lvbn0pYCA6IFwiXCIsXG4gICAgICBgOlxuYCxcbiAgICAgIG11dGF0aW9uLnBhdGNoZXMubWFwKChub2RlUGF0Y2gpID0+IGAgICR7Zm9ybWF0UGF0Y2hNdXRhdGlvbihub2RlUGF0Y2gpfWApLmpvaW4oYFxuYClcbiAgICBdLmpvaW4oXCJcIik7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIG11dGF0aW9uIHR5cGU6ICR7bXV0YXRpb24udHlwZX1gKTtcbn1cbmZ1bmN0aW9uIGZvcm1hdFBhdGNoTXV0YXRpb24ocGF0Y2gyKSB7XG4gIGNvbnN0IHsgb3AgfSA9IHBhdGNoMiwgcGF0aCA9IHN0cmluZ2lmeShwYXRjaDIucGF0aCk7XG4gIGlmIChvcC50eXBlID09PSBcInVuc2V0XCIpXG4gICAgcmV0dXJuIFtwYXRoLCBcInVuc2V0KClcIl0uam9pbihcIjogXCIpO1xuICBpZiAob3AudHlwZSA9PT0gXCJkaWZmTWF0Y2hQYXRjaFwiKVxuICAgIHJldHVybiBbcGF0aCwgYGRpZmZNYXRjaFBhdGNoKCR7b3AudmFsdWV9KWBdLmpvaW4oXCI6IFwiKTtcbiAgaWYgKG9wLnR5cGUgPT09IFwiaW5jXCIgfHwgb3AudHlwZSA9PT0gXCJkZWNcIilcbiAgICByZXR1cm4gW3BhdGgsIGAke29wLnR5cGV9KCR7b3AuYW1vdW50fSlgXS5qb2luKFwiOiBcIik7XG4gIGlmIChvcC50eXBlID09PSBcInNldFwiIHx8IG9wLnR5cGUgPT09IFwic2V0SWZNaXNzaW5nXCIpXG4gICAgcmV0dXJuIFtwYXRoLCBgJHtvcC50eXBlfSgke0pTT04uc3RyaW5naWZ5KG9wLnZhbHVlKX0pYF0uam9pbihcIjogXCIpO1xuICBpZiAob3AudHlwZSA9PT0gXCJhc3NpZ25cIilcbiAgICByZXR1cm4gW3BhdGgsIGAke29wLnR5cGV9KCR7SlNPTi5zdHJpbmdpZnkob3AudmFsdWUpfSlgXS5qb2luKFwiOiBcIik7XG4gIGlmIChvcC50eXBlID09PSBcInVuYXNzaWduXCIpXG4gICAgcmV0dXJuIFtwYXRoLCBgJHtvcC50eXBlfSgke0pTT04uc3RyaW5naWZ5KG9wLmtleXMpfSlgXS5qb2luKFwiOiBcIik7XG4gIGlmIChvcC50eXBlID09PSBcImluc2VydFwiIHx8IG9wLnR5cGUgPT09IFwidXBzZXJ0XCIpXG4gICAgcmV0dXJuIFtcbiAgICAgIHBhdGgsXG4gICAgICBgJHtvcC50eXBlfSgke29wLnBvc2l0aW9ufSwgJHtlbmNvZGVJdGVtUmVmKFxuICAgICAgICBvcC5yZWZlcmVuY2VJdGVtXG4gICAgICApfSwgJHtKU09OLnN0cmluZ2lmeShvcC5pdGVtcyl9KWBcbiAgICBdLmpvaW4oXCI6IFwiKTtcbiAgaWYgKG9wLnR5cGUgPT09IFwicmVwbGFjZVwiKVxuICAgIHJldHVybiBbXG4gICAgICBwYXRoLFxuICAgICAgYHJlcGxhY2UoJHtlbmNvZGVJdGVtUmVmKG9wLnJlZmVyZW5jZUl0ZW0pfSwgJHtKU09OLnN0cmluZ2lmeShcbiAgICAgICAgb3AuaXRlbXNcbiAgICAgICl9KWBcbiAgICBdLmpvaW4oXCI6IFwiKTtcbiAgaWYgKG9wLnR5cGUgPT09IFwidHJ1bmNhdGVcIilcbiAgICByZXR1cm4gW3BhdGgsIGB0cnVuY2F0ZSgke29wLnN0YXJ0SW5kZXh9LCAke29wLmVuZEluZGV4fWBdLmpvaW4oXCI6IFwiKTtcbiAgaWYgKG9wLnR5cGUgPT09IFwicmVtb3ZlXCIpXG4gICAgcmV0dXJuIFtwYXRoLCBgcmVtb3ZlKCR7ZW5jb2RlSXRlbVJlZihvcC5yZWZlcmVuY2VJdGVtKX0pYF0uam9pbihcIjogXCIpO1xuICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgb3BlcmF0aW9uIHR5cGU6ICR7b3AudHlwZX1gKTtcbn1cbnZhciBjb21wYWN0ID0gLyogQF9fUFVSRV9fICovIE9iamVjdC5mcmVlemUoe1xuICBfX3Byb3RvX186IG51bGwsXG4gIGZvcm1hdFxufSk7XG5jb25zdCBzZXQgPSAodmFsdWUpID0+ICh7IHR5cGU6IFwic2V0XCIsIHZhbHVlIH0pLCBhc3NpZ24gPSAodmFsdWUpID0+ICh7XG4gIHR5cGU6IFwiYXNzaWduXCIsXG4gIHZhbHVlXG59KSwgdW5hc3NpZ24gPSAoa2V5cykgPT4gKHtcbiAgdHlwZTogXCJ1bmFzc2lnblwiLFxuICBrZXlzXG59KSwgc2V0SWZNaXNzaW5nID0gKHZhbHVlKSA9PiAoe1xuICB0eXBlOiBcInNldElmTWlzc2luZ1wiLFxuICB2YWx1ZVxufSksIHVuc2V0ID0gKCkgPT4gKHsgdHlwZTogXCJ1bnNldFwiIH0pLCBpbmMgPSAoYW1vdW50ID0gMSkgPT4gKHtcbiAgdHlwZTogXCJpbmNcIixcbiAgYW1vdW50XG59KSwgZGVjID0gKGFtb3VudCA9IDEpID0+ICh7XG4gIHR5cGU6IFwiZGVjXCIsXG4gIGFtb3VudFxufSksIGRpZmZNYXRjaFBhdGNoID0gKHZhbHVlKSA9PiAoe1xuICB0eXBlOiBcImRpZmZNYXRjaFBhdGNoXCIsXG4gIHZhbHVlXG59KTtcbmZ1bmN0aW9uIGluc2VydChpdGVtcywgcG9zaXRpb24sIGluZGV4T3JSZWZlcmVuY2VJdGVtKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJpbnNlcnRcIixcbiAgICByZWZlcmVuY2VJdGVtOiBpbmRleE9yUmVmZXJlbmNlSXRlbSxcbiAgICBwb3NpdGlvbixcbiAgICBpdGVtczogYXJyaWZ5KGl0ZW1zKVxuICB9O1xufVxuZnVuY3Rpb24gYXBwZW5kKGl0ZW1zKSB7XG4gIHJldHVybiBpbnNlcnQoaXRlbXMsIFwiYWZ0ZXJcIiwgLTEpO1xufVxuZnVuY3Rpb24gcHJlcGVuZChpdGVtcykge1xuICByZXR1cm4gaW5zZXJ0KGl0ZW1zLCBcImJlZm9yZVwiLCAwKTtcbn1cbmZ1bmN0aW9uIGluc2VydEJlZm9yZShpdGVtcywgaW5kZXhPclJlZmVyZW5jZUl0ZW0pIHtcbiAgcmV0dXJuIGluc2VydChpdGVtcywgXCJiZWZvcmVcIiwgaW5kZXhPclJlZmVyZW5jZUl0ZW0pO1xufVxuY29uc3QgaW5zZXJ0QWZ0ZXIgPSAoaXRlbXMsIGluZGV4T3JSZWZlcmVuY2VJdGVtKSA9PiBpbnNlcnQoaXRlbXMsIFwiYWZ0ZXJcIiwgaW5kZXhPclJlZmVyZW5jZUl0ZW0pO1xuZnVuY3Rpb24gdHJ1bmNhdGUoc3RhcnRJbmRleCwgZW5kSW5kZXgpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcInRydW5jYXRlXCIsXG4gICAgc3RhcnRJbmRleCxcbiAgICBlbmRJbmRleFxuICB9O1xufVxuZnVuY3Rpb24gcmVwbGFjZShpdGVtcywgcmVmZXJlbmNlSXRlbSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwicmVwbGFjZVwiLFxuICAgIHJlZmVyZW5jZUl0ZW0sXG4gICAgaXRlbXM6IGFycmlmeShpdGVtcylcbiAgfTtcbn1cbmZ1bmN0aW9uIHJlbW92ZShyZWZlcmVuY2VJdGVtKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJyZW1vdmVcIixcbiAgICByZWZlcmVuY2VJdGVtXG4gIH07XG59XG5mdW5jdGlvbiB1cHNlcnQoaXRlbXMsIHBvc2l0aW9uLCByZWZlcmVuY2VJdGVtKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJ1cHNlcnRcIixcbiAgICBpdGVtczogYXJyaWZ5KGl0ZW1zKSxcbiAgICByZWZlcmVuY2VJdGVtLFxuICAgIHBvc2l0aW9uXG4gIH07XG59XG5mdW5jdGlvbiBhdXRvS2V5cyhnZW5lcmF0ZUtleSkge1xuICBjb25zdCBlbnN1cmVLZXlzID0gY3JlYXRlRW5zdXJlS2V5cyhnZW5lcmF0ZUtleSksIGluc2VydCQxID0gKHBvc2l0aW9uLCByZWZlcmVuY2VJdGVtLCBpdGVtcykgPT4gaW5zZXJ0KGVuc3VyZUtleXMoaXRlbXMpLCBwb3NpdGlvbiwgcmVmZXJlbmNlSXRlbSksIHVwc2VydCQxID0gKGl0ZW1zLCBwb3NpdGlvbiwgcmVmZXJlbmNlSXRlbSkgPT4gdXBzZXJ0KGVuc3VyZUtleXMoaXRlbXMpLCBwb3NpdGlvbiwgcmVmZXJlbmNlSXRlbSksIHJlcGxhY2UkMSA9IChpdGVtcywgcG9zaXRpb24sIHJlZmVyZW5jZUl0ZW0pID0+IHJlcGxhY2UoZW5zdXJlS2V5cyhpdGVtcyksIHJlZmVyZW5jZUl0ZW0pLCBpbnNlcnRCZWZvcmUyID0gKHJlZiwgaXRlbXMpID0+IGluc2VydCQxKFwiYmVmb3JlXCIsIHJlZiwgaXRlbXMpO1xuICByZXR1cm4geyBpbnNlcnQ6IGluc2VydCQxLCB1cHNlcnQ6IHVwc2VydCQxLCByZXBsYWNlOiByZXBsYWNlJDEsIGluc2VydEJlZm9yZTogaW5zZXJ0QmVmb3JlMiwgcHJlcGVuZDogKGl0ZW1zKSA9PiBpbnNlcnRCZWZvcmUyKDAsIGl0ZW1zKSwgaW5zZXJ0QWZ0ZXI6IChyZWYsIGl0ZW1zKSA9PiBpbnNlcnQkMShcImFmdGVyXCIsIHJlZiwgaXRlbXMpLCBhcHBlbmQ6IChpdGVtcykgPT4gaW5zZXJ0JDEoXCJhZnRlclwiLCAtMSwgaXRlbXMpIH07XG59XG5mdW5jdGlvbiBoYXNLZXkoaXRlbSkge1xuICByZXR1cm4gXCJfa2V5XCIgaW4gaXRlbTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZUVuc3VyZUtleXMoZ2VuZXJhdGVLZXkpIHtcbiAgcmV0dXJuIChhcnJheSkgPT4ge1xuICAgIGxldCBkaWRNb2RpZnkgPSAhMTtcbiAgICBjb25zdCB3aXRoS2V5cyA9IGFycmF5Lm1hcCgoaXRlbSkgPT4gbmVlZHNLZXkoaXRlbSkgPyAoZGlkTW9kaWZ5ID0gITAsIHsgLi4uaXRlbSwgX2tleTogZ2VuZXJhdGVLZXkoaXRlbSkgfSkgOiBpdGVtKTtcbiAgICByZXR1cm4gZGlkTW9kaWZ5ID8gd2l0aEtleXMgOiBhcnJheTtcbiAgfTtcbn1cbmZ1bmN0aW9uIG5lZWRzS2V5KGFycmF5SXRlbSkge1xuICByZXR1cm4gaXNPYmplY3QoYXJyYXlJdGVtKSAmJiAhaGFzS2V5KGFycmF5SXRlbSk7XG59XG5mdW5jdGlvbiBjcmVhdGUoZG9jdW1lbnQpIHtcbiAgcmV0dXJuIHsgdHlwZTogXCJjcmVhdGVcIiwgZG9jdW1lbnQgfTtcbn1cbmZ1bmN0aW9uIHBhdGNoKGlkLCBwYXRjaGVzLCBvcHRpb25zKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJwYXRjaFwiLFxuICAgIGlkLFxuICAgIHBhdGNoZXM6IGFycmlmeShwYXRjaGVzKSxcbiAgICAuLi5vcHRpb25zID8geyBvcHRpb25zIH0gOiB7fVxuICB9O1xufVxuZnVuY3Rpb24gYXQocGF0aCwgb3BlcmF0aW9uKSB7XG4gIHJldHVybiB7XG4gICAgcGF0aDogdHlwZW9mIHBhdGggPT0gXCJzdHJpbmdcIiA/IHBhcnNlKHBhdGgpIDogcGF0aCxcbiAgICBvcDogb3BlcmF0aW9uXG4gIH07XG59XG5mdW5jdGlvbiBjcmVhdGVJZk5vdEV4aXN0cyhkb2N1bWVudCkge1xuICByZXR1cm4geyB0eXBlOiBcImNyZWF0ZUlmTm90RXhpc3RzXCIsIGRvY3VtZW50IH07XG59XG5mdW5jdGlvbiBjcmVhdGVPclJlcGxhY2UoZG9jdW1lbnQpIHtcbiAgcmV0dXJuIHsgdHlwZTogXCJjcmVhdGVPclJlcGxhY2VcIiwgZG9jdW1lbnQgfTtcbn1cbmZ1bmN0aW9uIGRlbGV0ZV8oaWQpIHtcbiAgcmV0dXJuIHsgdHlwZTogXCJkZWxldGVcIiwgaWQgfTtcbn1cbmNvbnN0IGRlbCA9IGRlbGV0ZV8sIGRlc3Ryb3kgPSBkZWxldGVfO1xuZXhwb3J0IHtcbiAgaW5kZXgkMSBhcyBDb21wYWN0RW5jb2RlcixcbiAgY29tcGFjdCBhcyBDb21wYWN0Rm9ybWF0dGVyLFxuICBpbmRleCBhcyBTYW5pdHlFbmNvZGVyLFxuICBhcHBlbmQsXG4gIGFzc2lnbixcbiAgYXQsXG4gIGF1dG9LZXlzLFxuICBjcmVhdGUsXG4gIGNyZWF0ZUlmTm90RXhpc3RzLFxuICBjcmVhdGVPclJlcGxhY2UsXG4gIGRlYyxcbiAgZGVsLFxuICBkZWxldGVfLFxuICBkZXN0cm95LFxuICBkaWZmTWF0Y2hQYXRjaCxcbiAgaW5jLFxuICBpbnNlcnQsXG4gIGluc2VydEFmdGVyLFxuICBpbnNlcnRCZWZvcmUsXG4gIHBhdGNoLFxuICBwcmVwZW5kLFxuICByZW1vdmUsXG4gIHJlcGxhY2UsXG4gIHNldCxcbiAgc2V0SWZNaXNzaW5nLFxuICB0cnVuY2F0ZSxcbiAgdW5hc3NpZ24sXG4gIHVuc2V0LFxuICB1cHNlcnRcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   D: () => (/* binding */ A),\n/* harmony export */   a: () => (/* binding */ Z),\n/* harmony export */   b: () => (/* binding */ M),\n/* harmony export */   c: () => (/* binding */ R),\n/* harmony export */   d: () => (/* binding */ K),\n/* harmony export */   i: () => (/* binding */ _),\n/* harmony export */   p: () => (/* binding */ w)\n/* harmony export */ });\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sanity/comlink */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/comlink/dist/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sanity/client/csm */ \"(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var valibot__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! valibot */ \"(app-pages-browser)/./node_modules/valibot/dist/index.js\");\nfunction w(t){let e=\"\";for(const n of t)\"string\"!=typeof n?\"number\"!=typeof n?null!==(a=n)&&Array.isArray(a)?(e&&(e+=\":\"),e+=`${n.join(\",\")}}`):n._key&&(e&&(e+=\":\"),e+=`${n._key}`):(e&&(e+=\":\"),e+=`${n}`):(e&&(e+=\".\"),e+=n);var a;return e}const j=/^([A-Za-z]+):([0-9]+)$/,U=/^([A-Za-z]+):([0-9]+),([0-9]+)$/,x=/^([A-Za-z]+):([a-z0-9]+)$/;const A=\"drafts.\",O=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.pipe)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(),(0,valibot__WEBPACK_IMPORTED_MODULE_0__.minLength)(1)),S=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)(O),$=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({baseUrl:O,dataset:S,id:O,path:O,projectId:S,tool:S,type:S,workspace:S,isDraft:(0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)())}),z=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.object)({origin:O,href:O,data:(0,valibot__WEBPACK_IMPORTED_MODULE_0__.optional)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.record)((0,valibot__WEBPACK_IMPORTED_MODULE_0__.string)(),(0,valibot__WEBPACK_IMPORTED_MODULE_0__.unknown)()))});function D(t){return (0,valibot__WEBPACK_IMPORTED_MODULE_0__.is)($,t)}function E(t){const e=t.split(\";\").reduce(((t,e)=>{const[a,n]=e.split(\"=\");if(!a||e.includes(\"=\")&&!n)return t;switch(a){case\"id\":t.id=n;break;case\"type\":t.type=n;break;case\"path\":t.path=_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(function(t){const e=[];for(const a of t.split(\".\")){const t=j.exec(a);if(t){e.push(t[1],Number(t[2]));continue}const n=U.exec(a);if(n){e.push(n[1],[Number(n[2]),Number(n[3])]);continue}const o=x.exec(a);o?e.push(o[1],{_key:o[2]}):e.push(a)}return e}(n));break;case\"base\":t.baseUrl=decodeURIComponent(n);break;case\"tool\":t.tool=n;break;case\"workspace\":t.workspace=n;break;case\"projectId\":t.projectId=n;break;case\"dataset\":t.dataset=n;break;case\"isDraft\":t.isDraft=\"\"}return t}),{});if(D(e))return e}function I(t){const e=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)($,t);if(e.success)return e.output;const a=(0,valibot__WEBPACK_IMPORTED_MODULE_0__.safeParse)(z,t);if(a.success)try{const t=new URL(a.output.href,typeof document>\"u\"?\"https://example.com\":location.origin);return t.searchParams.size>0?(0,valibot__WEBPACK_IMPORTED_MODULE_0__.parse)($,Object.fromEntries(t.searchParams.entries())):a.output}catch(t){return console.error(\"Failed to parse sanity node\",t),a.output}}function K(t){if(\"object\"==typeof t&&null!==t)return I(t);try{return I(JSON.parse(t))}catch{return E(t)}}const P={\"handshake/syn\":_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HANDSHAKE_SYN,\"handshake/syn-ack\":_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HANDSHAKE_SYN_ACK,\"handshake/ack\":_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HANDSHAKE_ACK,\"channel/response\":_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_RESPONSE,\"channel/heartbeat\":_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HEARTBEAT,\"channel/disconnect\":_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_DISCONNECT,\"overlay/focus\":\"visual-editing/focus\",\"overlay/navigate\":\"visual-editing/navigate\",\"overlay/toggle\":\"visual-editing/toggle\",\"presentation/toggleOverlay\":\"presentation/toggle-overlay\"},q={[_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HANDSHAKE_SYN]:\"handshake/syn\",[_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HANDSHAKE_SYN_ACK]:\"handshake/syn-ack\",[_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HANDSHAKE_ACK]:\"handshake/ack\",[_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_RESPONSE]:\"channel/response\",[_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_HEARTBEAT]:\"channel/heartbeat\",[_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.MSG_DISCONNECT]:\"channel/disconnect\",\"visual-editing/focus\":\"overlay/focus\",\"visual-editing/navigate\":\"overlay/navigate\",\"visual-editing/toggle\":\"overlay/toggle\",\"presentation/toggle-overlay\":\"presentation/toggleOverlay\"},N=t=>{const{data:e}=t;return e&&\"object\"==typeof e&&\"domain\"in e&&\"type\"in e&&\"from\"in e&&\"to\"in e&&(\"sanity/channels\"===e.domain&&(e.domain=_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.DOMAIN),\"overlays\"===e.to&&(e.to=\"visual-editing\"),\"overlays\"===e.from&&(e.from=\"visual-editing\"),e.type=P[e.type]??e.type),t},C=({context:t},e)=>{const{sources:n,targetOrigin:o}=t,r=(t=>(t.domain===_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.DOMAIN&&(t.domain=\"sanity/channels\"),\"visual-editing\"===t.to&&(t.to=\"overlays\"),\"visual-editing\"===t.from&&(t.from=\"overlays\"),t.type=q[t.type]??t.type,\"channel/response\"===t.type&&t.responseTo&&!t.data&&(t.data={responseTo:t.responseTo}),t))(e.message);n.forEach((t=>{t.postMessage(r,{targetOrigin:o})}))},M=()=>({listen:(0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.createListenLogic)(N),requestMachine:(0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_2__.createRequestMachine)().provide({actions:{\"send message\":C}})});function R(t){function e(t){return t?\"string\"==typeof t?_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(t):t:[]}function a(t){if(!t.id)throw new Error(\"`id` is required to create a data attribute\");if(!t.type)throw new Error(\"`type` is required to create a data attribute\");if(!t.path||!t.path.length)throw new Error(\"`path` is required to create a data attribute\");return function(t){const{id:e,path:a,baseUrl:n,tool:o,workspace:r,type:s}=t;return D(t)?[[\"id\",(0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.getPublishedId)(e)],[\"type\",s],[\"path\",w(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.fromString(a))],[\"base\",encodeURIComponent(n)],[\"workspace\",r],[\"tool\",o],[\"isDraft\",e.startsWith(A)]].filter((([,t])=>!!t)).map((t=>{const[e,a]=t;return!0===a?e:t.join(\"=\")})).join(\";\"):void 0}({baseUrl:t.baseUrl||\"/\",workspace:t.workspace,tool:t.tool,type:t.type,id:t.id,path:\"string\"==typeof t.path?t.path:_sanity_client_csm__WEBPACK_IMPORTED_MODULE_1__.studioPath.toString(t.path)})}const n=n=>a({...t,path:[...e(t.path),...e(n)]});return n.toString=function(){return a(t)},n.combine=function(e){return R({...t,...e})},n.scope=function(a){return R({...t,path:[...e(t.path),...e(a)]})},n}const T={alt:\"altKey\",ctrl:\"ctrlKey\",mod:typeof window<\"u\"&&/Mac|iPod|iPhone|iPad/.test(window.navigator.platform)?\"metaKey\":\"ctrlKey\",shift:\"shiftKey\"};function Z(t,e){return t.every((t=>T[t]?e[T[t]]:e.key===t.toUpperCase()))}function _(t){return\"Alt\"===t.key}//# sourceMappingURL=create-data-attribute.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   O: () => (/* binding */ V),\n/* harmony export */   a: () => (/* binding */ Ue),\n/* harmony export */   b: () => (/* binding */ Ne),\n/* harmony export */   c: () => (/* binding */ se),\n/* harmony export */   d: () => (/* binding */ ge),\n/* harmony export */   e: () => (/* binding */ ye),\n/* harmony export */   f: () => (/* binding */ Ae),\n/* harmony export */   g: () => (/* binding */ ve),\n/* harmony export */   h: () => (/* binding */ he),\n/* harmony export */   i: () => (/* binding */ Ee),\n/* harmony export */   j: () => (/* binding */ Le),\n/* harmony export */   s: () => (/* binding */ re),\n/* harmony export */   u: () => (/* binding */ Me)\n/* harmony export */ });\n/* harmony import */ var _create_data_attribute_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./create-data-attribute.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js\");\n/* harmony import */ var _vercel_stega__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @vercel/stega */ \"(app-pages-browser)/./node_modules/@vercel/stega/dist/index.mjs\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sanity/mutate */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/xstate.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/log-ef30c65f.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/mutate/_unstable_machine */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_unstable_machine.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-experimental/index.js\");\nfor(var h=[],v=0;v<256;++v)h.push((v+256).toString(16).slice(1));var g,w=new Uint8Array(16);function x(){if(!g&&!(g=typeof crypto<\"u\"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");return g(w)}var b={randomUUID:typeof crypto<\"u\"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function E(e,t,n){if(b.randomUUID&&!t&&!e)return b.randomUUID();var o=(e=e||{}).random||(e.rng||x)();return o[6]=15&o[6]|64,o[8]=63&o[8]|128,function(e,t=0){return(h[e[t+0]]+h[e[t+1]]+h[e[t+2]]+h[e[t+3]]+\"-\"+h[e[t+4]]+h[e[t+5]]+\"-\"+h[e[t+6]]+h[e[t+7]]+\"-\"+h[e[t+8]]+h[e[t+9]]+\"-\"+h[e[t+10]]+h[e[t+11]]+h[e[t+12]]+h[e[t+13]]+h[e[t+14]]+h[e[t+15]]).toLowerCase()}(o)}function L(e){const t=e.getBoundingClientRect();return{x:t.x+scrollX,y:t.y+scrollY,w:t.width,h:t.height}}function M(e,t,n){return\"x\"===n?{x:e.x+t,y:e.y,w:e.w-2*t,h:e.h}:{x:e.x,y:e.y+t,w:e.w,h:e.h-2*t}}function k(e,t){const{x1:n,y1:o,x2:r,y2:i}=e,{x1:s,y1:a,x2:c,y2:u}=t;if(n===r&&o===i||s===c&&a===u)return!1;const d=(u-a)*(r-n)-(c-s)*(i-o);if(0===d)return!1;const l=((c-s)*(o-a)-(u-a)*(n-s))/d,m=((r-n)*(o-a)-(i-o)*(n-s))/d;if(l<0||l>1||m<0||m>1)return!1;return{x:n+l*(r-n),y:o+l*(i-o)}}function I(e,t){return e.x===t.x&&e.y===t.y&&e.w===t.w&&e.h===t.h}function T(e,t){const n=[{x1:t.x,y1:t.y,x2:t.x+t.w,y2:t.y},{x1:t.x+t.w,y1:t.y,x2:t.x+t.w,y2:t.y+t.h},{x1:t.x+t.w,y1:t.y+t.h,x2:t.x,y2:t.y+t.h},{x1:t.x,y1:t.y+t.h,x2:t.x,y2:t.y}],o=[];for(let t=0;t<n.length;t++){const r=k(e,n[t]);if(r){let e=!1;for(let t=0;t<o.length;t++)o[t].x===r.x&&o[t].y===r.y&&(e=!0);e||o.push(r)}}return 0!==o.length&&o.sort(((t,n)=>S(t,{x:e.x1,y:e.y1})-S(n,{x:e.x1,y:e.y1})))}function S(e,t){const n=e.x-t.x,o=e.y-t.y;return Math.sqrt(n*n+o*o)}function D(e,t,n){const o={x:e.x1,y:e.y1};if(t.some((e=>function(e,t){const n=e.x>=t.x&&e.x<=t.x+t.w,o=e.y>=t.y&&e.y<=t.y+t.h;return n&&o}(o,M(e,Math.min(e.w,e.h)/10,\"horizontal\"===n?\"x\":\"y\")))))return null;let r,i;for(const s of t){const t=T(e,M(s,Math.min(s.w,s.h)/10,\"horizontal\"===n?\"x\":\"y\"));if(t){const e=t[0];r?S(o,e)<S(o,r)&&(r=e,i=s):(r=e,i=s)}}return i||null}function U(e,t,n){const{x:o,y:r,w:i,h:s}=e,{x:a,y:c}=n;return{x:a+(o-a)*t,y:c+(r-c)*t,w:i*t,h:s*t}}function A(e){const t=Math.max(0,Math.min(...e.map((e=>e.y)))),n=Math.min(document.body.scrollHeight,Math.max(...e.map((e=>e.y+e.h))));return{min:t,max:n,height:n-t}}function N(e,t){return t.find((t=>I(L(t.elements.measureElement),e)))?.sanity}function R(e,t,n){return Object.values(t).every((e=>null===e))?null:\"horizontal\"===n?{left:t.left?{rect:t.left,sanity:N(t.left,e)}:null,right:t.right?{rect:t.right,sanity:N(t.right,e)}:null}:{top:t.top?{rect:t.top,sanity:N(t.top,e)}:null,bottom:t.bottom?{rect:t.bottom,sanity:N(t.bottom,e)}:null}}function O(e){const t=document.body.getBoundingClientRect();return{x:Math.max(t.x,Math.min(e.clientX,t.x+t.width)),y:e.clientY+window.scrollY}}function P(e,t,n){const o=L(t),r=[...t.querySelectorAll(\":where(h1, h2, h3, h4, p, a, img, span, button):not(:has(*))\")];e.x<=o.x&&(e.x=o.x),e.x>=o.x+o.w&&(e.x=o.x+o.w),e.y>=o.y+o.h&&(e.y=o.y+o.h),e.y<=o.y&&(e.y=o.y);const i=r.map((e=>{const t=U(L(e),n,{x:o.x,y:o.y});return{x:t.x-o.x,y:t.y-o.y,w:t.w,h:t.h,tagName:e.tagName}}));return{offsetX:(o.x-e.x)*n,offsetY:(o.y-e.y)*n,w:o.w*n,h:o.h*n,maxWidth:o.w*n*.75,childRects:i}}function _(e){const t=function(e){const t=Math.max(0,Math.min(...e.map((e=>e.x)))),n=Math.min(document.body.offsetWidth,Math.max(...e.map((e=>e.x+e.w))));return{min:t,max:n,width:n-t}}(e),n=A(e),o=t.min>8&&t.min+t.width<=window.innerWidth-8,r=n.min>8&&n.min+n.height<=document.body.scrollHeight-8,i=o&&r;return{x:i?t.min-8:t.min,y:i?n.min-8:n.min,w:i?t.width+16:t.width,h:i?n.height+16:n.height}}async function C(e,t,n,o,r){return new Promise((i=>{const s=window.getComputedStyle(t).transform;if(1===new DOMMatrix(s).a)return;const a=n-window.innerHeight,c=scrollY;(e-=window.innerHeight/2)<0&&(e=0),t.addEventListener(\"transitionend\",(()=>{t.style.transition=\"none\",t.style.transform=\"none\",scrollTo({top:e,behavior:\"instant\"}),setTimeout((()=>{o({type:\"overlay/dragEndMinimapTransition\"}),o({type:\"overlay/dragToggleMinimap\",display:!1})}),2*r),i()}),{once:!0}),o({type:\"overlay/dragStartMinimapTransition\"}),t.style.transform=`translateY(${Math.max(c-e,-a+c)}px) scale(1)`,document.body.style.overflow=\"auto\"}))}let j=!1,Y={x:0,y:0},G={x:0,y:0},H=typeof document>\"u\"?0:document.documentElement.scrollHeight;function $(e){const{mouseEvent:t,element:n,overlayGroup:o,handler:r,target:i,onSequenceStart:s,onSequenceEnd:a}=e;if(0!==t.button)return;window.focus();const c=150;let u=o.map((e=>L(e.elements.measureElement)));const d=n.getAttribute(\"data-sanity-drag-flow\")||((f=u).some((e=>f.filter((t=>!I(e,t))).some((t=>e.y===t.y))))?\"horizontal\":\"vertical\"),l=n.getAttribute(\"data-sanity-drag-group\"),m=!!n.getAttribute(\"data-sanity-drag-minimap-disable\"),y=!!n.getAttribute(\"data-sanity-drag-prevent-default\");var f;let p=null;const h=O(t),v=document.body,{minYScaled:g,scaleFactor:w}=function(e){let{height:t}=A(e);t+=200;const n=t>window.innerHeight?window.innerHeight/t:1,o=e.map((e=>U(e,n,{x:window.innerWidth/2,y:0}))),{min:r}=A(o);return{scaleFactor:n,minYScaled:r-100*n}}(u);let x=!1,b=!1,E=!0;j||(H=document.documentElement.scrollHeight);const M=setInterval((()=>{u=o.map((e=>L(e.elements.measureElement)))}),c),k=()=>{if(w>=1)return;const e=P(G,n,w);r({type:\"overlay/dragUpdateSkeleton\",skeleton:e}),r({type:\"overlay/dragToggleMinimapPrompt\",display:!1}),r({type:\"overlay/dragToggleMinimap\",display:!0}),j=!0,async function(e,t,n,o,r){return new Promise((i=>{e.addEventListener(\"transitionend\",(()=>{setTimeout((()=>{o({type:\"overlay/dragEndMinimapTransition\"})}),2*r),i()}),{once:!0}),o({type:\"overlay/dragStartMinimapTransition\"}),o({type:\"overlay/dragToggleMinimap\",display:!0}),document.body.style.overflow=\"hidden\",setTimeout((()=>{e.style.transformOrigin=\"50% 0px\",e.style.transition=\"transform 150ms ease\",e.style.transform=`translate3d(0px, ${-n+scrollY}px, 0px) scale(${t})`}),25)}))}(v,w,g,r,c).then((()=>{setTimeout((()=>{r({type:\"overlay/dragUpdateGroupRect\",groupRect:_(u)})}),300)}))},T=e=>{Math.abs(e.deltaY)>=10&&w<1&&!j&&!b&&!m&&E&&(r({type:\"overlay/dragToggleMinimapPrompt\",display:!0}),b=!0),e.shiftKey&&!j&&!m&&k()},N=e=>{if(e.preventDefault(),G=O(e),Y=function(e){const t=document.body,n=window.getComputedStyle(t).transform;if(\"none\"===n)return{x:e.x,y:e.y};const o=new DOMMatrix(n).inverse(),r=new DOMPoint(e.x,e.y).matrixTransform(o);return{x:r.x,y:r.y}}(G),Math.abs(S(G,h))<4)return;if(!x){const e=_(u),t=P(G,n,1);r({type:\"overlay/dragStart\",flow:d}),r({type:\"overlay/dragUpdateSkeleton\",skeleton:t}),r({type:\"overlay/dragUpdateGroupRect\",groupRect:e}),x=!0,s()}r({type:\"overlay/dragUpdateCursorPosition\",x:G.x,y:G.y}),e.shiftKey&&!j&&!m&&k();const t=function(e,t,n){if(\"horizontal\"===n){const o={x1:e.x,y1:e.y,x2:e.x-1e8,y2:e.y},r={x1:e.x,y1:e.y,x2:e.x+1e8,y2:e.y};return{left:D(o,t,n),right:D(r,t,n)}}{const o={x1:e.x,y1:e.y,x2:e.x,y2:e.y-1e8},r={x1:e.x,y1:e.y,x2:e.x,y2:e.y+1e8};return{top:D(o,t,n),bottom:D(r,t,n)}}}(G,u,d);JSON.stringify(p)!==JSON.stringify(t)&&(p=t,r({type:\"overlay/dragUpdateInsertPosition\",insertPosition:R(o,p,d)}))},$=()=>{E=!1,r({type:\"overlay/dragEnd\",target:i,insertPosition:p?R(o,p,d):null,dragGroup:l,flow:d,preventInsertDefault:y}),b&&r({type:\"overlay/dragToggleMinimapPrompt\",display:!1}),j||(clearInterval(M),a(),X(),V()),W()},z=e=>{if(\"Shift\"===e.key&&j){j=!1;const e=P(G,n,1/w);r({type:\"overlay/dragUpdateSkeleton\",skeleton:e}),C(Y.y,v,H,r,c),r({type:\"overlay/dragUpdateGroupRect\",groupRect:null}),E||(clearInterval(M),W(),X(),V(),a())}},q=()=>{r({type:\"overlay/dragUpdateGroupRect\",groupRect:null}),C(Y.y,v,H,r,c).then((()=>{j=!1})),clearInterval(M),W(),X(),V(),a()},W=()=>{window.removeEventListener(\"mousemove\",N),window.removeEventListener(\"wheel\",T),window.removeEventListener(\"mouseup\",$)},V=()=>{window.removeEventListener(\"keyup\",z)},X=()=>{window.removeEventListener(\"blur\",q)};window.addEventListener(\"blur\",q),window.addEventListener(\"keyup\",z),window.addEventListener(\"wheel\",T),window.addEventListener(\"mousemove\",N),window.addEventListener(\"mouseup\",$)}const z=e=>e instanceof HTMLElement||e instanceof SVGElement;function q(e){const{display:t}=window.getComputedStyle(e);if(\"inline\"!==t)return e;const n=e.parentElement;return n?q(n):null}const W=e=>e&&z(e)?e.dataset?.sanityOverlayElement?e:W(e.parentElement):null,V=\"sanity-visual-editing\";function X(e,t=!1){return r=e,_vercel_stega__WEBPACK_IMPORTED_MODULE_0__.VERCEL_STEGA_REGEX.lastIndex=0,_vercel_stega__WEBPACK_IMPORTED_MODULE_0__.VERCEL_STEGA_REGEX.test(r)?function(e,t=!1){try{const n=(0,_vercel_stega__WEBPACK_IMPORTED_MODULE_0__.vercelStegaDecode)(e);return n&&\"sanity.io\"===n.origin?(t&&(n.href=n.href?.replace(\".alt\",\"\")),n):null}catch(t){return console.error(\"Failed to decode stega for string: \",e,\"with the original error: \",t),null}}(e,t):null;var r}const F=e=>e.nodeType===Node.ELEMENT_NODE,B=e=>\"IMG\"===e.tagName,J=e=>\"TIME\"===e.tagName,K=e=>\"SVG\"===e.tagName.toUpperCase();function Q(e){return\"path\"in e}function Z(e,t){let n=e.split(\".\"),o=t.split(\".\");const r=Math.min(n.length,o.length);return n=n.slice(0,r).reverse(),o=o.slice(0,r).reverse(),n.reduce(((e,t,n)=>t===o[n]?[...e,t]:[]),[]).reverse().join(\".\")}function ee(e){if(!e.length||!e.map((e=>Q(e))).every(((e,t,n)=>e===n[0])))return;if(!Q(e[0]))return e[0];const t=e.filter(Q);let n=e[0];const o=[\"projectId\",\"dataset\",\"id\",\"baseUrl\",\"workspace\",\"tool\"];for(let e=1;e<t.length;e++){const r=t[e];if(o.some((e=>r[e]!==n?.[e]))){n=void 0;break}n.path=Z(n.path,r.path)}return n}function te(t){const n=[];function o(t,o){const r=(0,_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_2__.d)(o);if(!r)return;const i=q(t);i&&n.push({elements:{element:t,measureElement:i},sanity:r})}if(t)for(const e of t.childNodes){const{nodeType:t,parentElement:r,textContent:i}=e;if(F(e)&&void 0!==e.dataset?.sanityEditTarget){const t=te(e).map((({sanity:e})=>e));if(!t.map((e=>Q(e))).every(((e,t,n)=>e===n[0])))continue;const o=ee(t);o&&n.push({elements:{element:e,measureElement:e},sanity:o})}else if(t===Node.TEXT_NODE&&r&&i){const e=X(i);if(!e)continue;o(r,e)}else if(F(e)){if(\"SCRIPT\"===e.tagName||e.id===V)continue;if(e.dataset?.sanity)o(e,e.dataset.sanity);else if(e.dataset?.sanityEditInfo)o(e,e.dataset.sanityEditInfo);else{if(B(e)){const t=X(e.alt,!0);if(!t)continue;o(e,t);continue}if(J(e)){const t=X(e.dateTime,!0);if(!t)continue;o(e,t)}else if(K(e)){if(!e.ariaLabel)continue;const t=X(e.ariaLabel,!0);if(!t)continue;o(e,t)}}n.push(...te(e))}}return n}function ne(e){const t=e.lastIndexOf(\".\");return e.substring(t,e.length).includes(\"[\")}function oe(e){if(!ne(e))return null;const t=e.split(\".\");return t[t.length-1]=t[t.length-1].replace(/\\[.*?\\]/g,\"[]\"),t.join(\".\")}function re(e,t){return!(!ne(e.path)||!ne(t.path))&&oe(e.path)===oe(t.path)}function ie(e,t,n,o){if(e.getAttribute(\"data-sanity-drag-disable\")||!t||!Q(t)||!ne(t.path))return null;const r=e.getAttribute(\"data-sanity-drag-group\"),i=[...n].reduce(((e,n)=>{const i=o.get(n),s=n.getAttribute(\"data-sanity-drag-disable\"),a=n.getAttribute(\"data-sanity-drag-group\"),c=null===r||r===a;return i&&!s&&Q(i.sanity)&&re(t,i.sanity)&&c&&e.push(i),e}),[]);return i.length<=1?null:i}function se({handler:e,overlayElement:t,inFrame:n}){let o=!1;const r=new Map,i=new WeakMap,s=new Set,a=new WeakMap,c=n;let u,d,l,m=!1,y=[];const f=()=>y[y.length-1];function p(e,t){e.removeEventListener(\"click\",t.click,{capture:!0}),e.removeEventListener(\"contextmenu\",t.contextmenu,{capture:!0}),e.removeEventListener(\"mousemove\",t.mousemove,{capture:!0}),e.removeEventListener(\"mousedown\",t.mousedown,{capture:!0}),e.removeEventListener(\"mouseenter\",t.mouseenter),e.removeEventListener(\"mouseleave\",t.mouseleave)}function h({id:t,elements:n,handlers:o}){const{element:r,measureElement:i}=n;(function(e,t){e.addEventListener(\"click\",t.click,{capture:!0}),e.addEventListener(\"contextmenu\",t.contextmenu,{capture:!0}),e.addEventListener(\"mousemove\",t.mousemove,{once:!0,capture:!0}),e.addEventListener(\"mousedown\",t.mousedown,{capture:!0})})(r,o),u.observe(i),e({type:\"element/activate\",id:t})}function v({id:t,elements:n,handlers:o}){const{element:r,measureElement:i}=n;p(r,o),u.unobserve(i),y=y.filter((e=>e!==r)),e({type:\"element/deactivate\",id:t})}function g(){if(!n)return;const t=f();if(!t)return;const o=i.get(t)?.sanity;if(!o||!Q(o))return;const r=ie(t,o,s,i)?\"move\":\"auto\";e({type:\"overlay/setCursor\",element:t,cursor:r})}function w({elements:o,sanity:u}){const{element:l,measureElement:p}=o,v={click(t){const n=t.target;if(l===f()&&l.contains(n)){c&&(t.preventDefault(),t.stopPropagation());const n=i.get(l)?.sanity;n&&!m&&e({type:\"element/click\",id:w,sanity:n})}},contextmenu(t){if(!(\"path\"in u)||!u.path.split(\".\").pop()?.includes(\"[_key==\"))return;const n=t.target;l===f()&&l.contains(n)&&(c&&(t.preventDefault(),t.stopPropagation()),e({type:\"element/contextmenu\",id:w,position:{x:t.clientX,y:t.clientY},sanity:u}))},mousedown(t){if(t.preventDefault(),t.currentTarget!==y.at(-1)||l.getAttribute(\"data-sanity-drag-disable\")||!n)return;const o=i.get(l)?.sanity;if(!o||!Q(o)||!ne(o.path))return;const r=ie(l,u,s,i);r&&$({element:l,handler:e,mouseEvent:t,overlayGroup:r,target:o,onSequenceStart:()=>{m=!0},onSequenceEnd:()=>{setTimeout((()=>{m=!1}),250)}})},mousemove(e){v.mouseenter(e);const t=e.currentTarget;t&&(t.addEventListener(\"mouseenter\",v.mouseenter),t.addEventListener(\"mouseleave\",v.mouseleave))},mouseenter(){document.querySelector(\"vercel-live-feedback\")&&l.closest(\"[data-vercel-edit-info]\")||l.closest(\"[data-vercel-edit-target]\")||(y.push(l),e({type:\"element/mouseenter\",id:w,rect:L(l)}),g())},mouseleave(n){function o(){y.pop();const t=f();if(e({type:\"element/mouseleave\",id:w}),t){const n=i.get(t);n&&e({type:\"element/mouseenter\",id:n.id,rect:L(t)})}g()}const{relatedTarget:r}=n,s=W(r),a=t.contains(s);if(z(s)&&a)return function e(t){const n=r=>{const{relatedTarget:i}=r;W(i)?i&&z(i)&&(t.removeEventListener(\"mouseleave\",n),e(i)):(t.removeEventListener(\"mouseleave\",n),o())};t.addEventListener(\"mouseleave\",n)}(s);o()}},w=E(),x={id:w,elements:o,sanity:u,handlers:v};s.add(l),a.set(p,l),r.set(w,l),i.set(l,x),d?.observe(l),e({type:\"element/register\",id:w,element:l,rect:L(l),sanity:u,dragDisabled:!!l.getAttribute(\"data-sanity-drag-disable\")}),h(x)}function x({elements:t,sanity:n}){const{element:o}=t,r=i.get(o);r&&(i.set(o,{...r,sanity:n}),e({type:\"element/update\",id:r.id,rect:L(o),sanity:n}))}function b(e){const t=te(e);for(const e of t){const{element:t}=e.elements;i.has(t)?x(e):w(e)}}function M(t){const n=i.get(t);if(n){const{id:o,handlers:a}=n;p(t,a),u.unobserve(t),i.delete(t),s.delete(t),r.delete(o),e({type:\"element/unregister\",id:o})}}function k(e){let n=!1;for(const o of e){const{target:e,type:r}=o,i=\"characterData\"===r?e.parentElement:e;i===t||t.contains(i)||(n=!0,z(i)&&b({childNodes:[i]}))}if(n)for(const e of s)e.isConnected||M(e)}function I(t){const n=i.get(t);n&&e({type:\"element/updateRect\",id:n.id,rect:L(t)})}function T(e){for(const t of e){const e=t.target;if(z(e)){const t=a.get(e);if(!t)return;I(t)}}}function S(e){if(o)for(const t of e){const{target:e}=t,n=z(e)&&i.get(e);n&&(t.isIntersecting?h(n):v(n))}}function D(t){const n=W(t.target);n?\"capture\"===n.dataset.sanityOverlayElement&&(t.preventDefault(),t.stopPropagation()):(y=[],e({type:\"overlay/blur\"}))}function U(){for(const e of s)I(e)}function A(t){\"Escape\"===t.key&&(y=[],e({type:\"overlay/blur\"}))}function N(e){const{target:t}=e;if(t!==window.document&&z(t))for(const e of s)t.contains(e)&&I(e)}function R(){o||(d=new IntersectionObserver(S,{threshold:.3}),s.forEach((e=>d.observe(e))),e({type:\"overlay/activate\"}),o=!0)}function O(){o&&(d?.disconnect(),s.forEach((e=>{const t=i.get(e);t&&v(t)})),e({type:\"overlay/deactivate\"}),o=!1)}return window.document.fonts.ready.then((()=>{for(const e of s)I(e)})),window.addEventListener(\"click\",D),window.addEventListener(\"contextmenu\",D),window.addEventListener(\"keydown\",A),window.addEventListener(\"resize\",U),window.addEventListener(\"scroll\",N,{capture:!0,passive:!0}),u=new ResizeObserver(T),l=new MutationObserver(k),l.observe(document.body,{attributes:!0,characterData:!0,childList:!0,subtree:!0}),b(document.body),R(),{activate:R,deactivate:O,destroy:function(){window.removeEventListener(\"click\",D),window.removeEventListener(\"contextmenu\",D),window.removeEventListener(\"keydown\",A),window.removeEventListener(\"resize\",U),window.removeEventListener(\"scroll\",N),l.disconnect(),u.disconnect(),s.forEach((e=>{M(e)})),r.clear(),s.clear(),y=[],O()}}}const ae=/_key\\s*==\\s*['\"](.*)['\"]/,ce=/^\\d*:\\d*$/;function ue(e){return\"number\"==typeof e||\"string\"==typeof e&&/^\\[\\d+\\]$/.test(e)}function de(e){return\"string\"==typeof e?ae.test(e.trim()):\"object\"==typeof e&&\"_key\"in e}const le=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,me=/_key\\s*==\\s*['\"](.*)['\"]/;function ye(e,t,n){const o=\"string\"==typeof t?function(e){if(\"string\"!=typeof e)throw new Error(\"Path is not a string\");const t=e.match(le);if(!t)throw new Error(\"Invalid path string\");return t.map(fe)}(t):t;if(!Array.isArray(o))throw new Error(\"Path must be an array or a string\");let r=e;for(let e=0;e<o.length;e++){const t=o[e];if(ue(t)){if(!Array.isArray(r))return n;r=r[t]}if(de(t)){if(!Array.isArray(r))return n;r=r.find((e=>e._key===t._key))}if(\"string\"==typeof t&&(r=\"object\"==typeof r&&null!==r?r[t]:void 0),typeof r>\"u\")return n}return r}function fe(e){return ue(e)?function(e){return Number(e.replace(/[^\\d]/g,\"\"))}(e):de(e)?function(e){return{_key:e.match(me)[1]}}(e):function(e){if(\"string\"==typeof e&&ce.test(e))return!0;if(!Array.isArray(e)||2!==e.length)return!1;const[t,n]=e;return!(\"number\"!=typeof t&&\"\"!==t||\"number\"!=typeof n&&\"\"!==n)}(e)?function(e){const[t,n]=e.split(\":\").map((e=>\"\"===e?e:Number(e)));return[t,n]}(e):e}function pe(e){return e.startsWith(_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_2__.D)}function he(e){return pe(e)?e:_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_2__.D+e}function ve(e){return pe(e)?e.slice(_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_2__.D.length):e}const ge=(0,xstate__WEBPACK_IMPORTED_MODULE_3__.setup)({types:{},actions:{\"emit sync event\":(0,xstate__WEBPACK_IMPORTED_MODULE_4__.e)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(e,\"sync\"),e))),\"emit mutation event\":(0,xstate__WEBPACK_IMPORTED_MODULE_4__.e)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(e,\"mutation\"),e))),\"emit rebased event\":(0,xstate__WEBPACK_IMPORTED_MODULE_4__.e)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(e,[\"rebased.local\",\"rebased.remote\"]),e))),\"emit pristine event\":(0,xstate__WEBPACK_IMPORTED_MODULE_4__.e)((({event:e})=>((0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(e,[\"pristine\"]),e))),\"add document actor\":(0,xstate__WEBPACK_IMPORTED_MODULE_4__.a)({documents:({context:e,event:t,spawn:n})=>{(0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(t,\"observe\");const o=t.documentId;return e.documents[o]?e.documents:{...e.documents,[o]:n(\"documentMutatorMachine\",{input:{id:o,client:e.client,sharedListener:e.sharedListener||(0,_sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_5__.createSharedListener)(e.client)},id:o})}}}),\"stop remote snapshot\":(0,xstate__WEBPACK_IMPORTED_MODULE_6__.R)((({context:e,event:t})=>((0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(t,\"unobserve\"),e.documents[t.documentId]))),\"remove remote snapshot from context\":(0,xstate__WEBPACK_IMPORTED_MODULE_4__.a)({documents:({context:e,event:t})=>{if((0,xstate__WEBPACK_IMPORTED_MODULE_3__.assertEvent)(t,\"unobserve\"),!e.documents[t.documentId])return e.documents;const{[t.documentId]:n,...o}=e.documents;return o}})},actors:{documentMutatorMachine:_sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_5__.documentMutatorMachine}}).createMachine({id:\"dataset-mutator\",context:({input:e})=>({documents:{},client:e.client,sharedListener:e.sharedListener}),on:{sync:{actions:[\"emit sync event\"]},mutation:{actions:[\"emit mutation event\"]},\"rebased.*\":{actions:[\"emit rebased event\"]},pristine:{actions:[\"emit pristine event\"]},observe:{actions:[\"add document actor\"]},unobserve:{actions:[\"stop remote snapshot\",\"remove remote snapshot from context\"]}},initial:\"pristine\",states:{pristine:{}}}),we=(0,xstate__WEBPACK_IMPORTED_MODULE_7__.createEmptyActor)();let xe=we;const be=new Set;function Ee(e){return e===we}function Le(e){xe=e;for(const e of be)e()}function Me(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>(be.add(e),()=>be.delete(e))),[]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(e,(()=>xe),(()=>we))}function ke(e,t){let n;return(...o)=>{clearTimeout(n),n=setTimeout((()=>{e.apply(e,o)}),t)}}function Ie(e,t){const n=window.self!==window.top||window.opener;if(Ee(t)||!n)throw new Error(\"The `useDocuments` hook cannot be used in this context\");const o=he(e),r=ve(e),i=t.getSnapshot().context?.documents,s=i?.[o],a=i?.[r];if(!s)throw new Error(`Document \"${e}\" not found`);const c=s?.getSnapshot().context?.local||a?.getSnapshot().context?.local;if(!c)throw new Error(`Snapshot for document \"${e}\" not found`);return{draftId:o,publishedId:r,draftDoc:s,publishedDoc:a,snapshot:c}}function Te(e,t){return()=>{const{draftDoc:n}=Ie(e,t);n.send({type:\"submit\"})}}function Se(e,t){return n=>{const{snapshot:o}=Ie(e,t);return n?ye(o,n):o}}function De(e,t){return(n,o)=>{const{draftDoc:s,draftId:a,publishedId:c,snapshot:u}=Ie(e,t),{commit:d=!0}=o||{},l=\"function\"==typeof n?n({draftId:a,publishedId:c,snapshot:u}):n;s.send({type:\"mutate\",mutations:[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_8__.createIfNotExists)({...u,_id:a}),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_8__.patch)(a,l)]}),d&&(\"object\"==typeof d&&\"debounce\"in d?ke((()=>s.send({type:\"submit\"})),d.debounce)():s.send({type:\"submit\"}))}}function Ue(){const e=Me();return{getDocument:t=>({id:t,commit:Te(t,e),get:Se(t,e),patch:De(t,e)}),mutateDocument:(t,n,o)=>{const{draftDoc:r}=Ie(t,e),{commit:i=!0}=o||{};r.send({type:\"mutate\",mutations:n}),i&&(\"object\"==typeof i&&\"debounce\"in i?ke((()=>r.send({type:\"submit\"})),i.debounce)():r.send({type:\"submit\"}))}}}function Ae(){return E()}function Ne(e){const t=(\"string\"==typeof e?e:e.path).match(/^(.+)\\[_key==\"(.+)\"]$/);if(!t)throw new Error(\"Invalid path\");const[,n,o]=t;if(!n||!o)throw new Error(\"Invalid path\");return{path:n,key:o}}//# sourceMappingURL=mutations.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvQHNhbml0eS92aXN1YWwtZWRpdGluZy9kaXN0L19jaHVua3MtZXMvbXV0YXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMmMsaUJBQWlCLE1BQU0sMENBQTBDLDJCQUEyQixhQUFhLHVOQUF1TixZQUFZLE9BQU8saUZBQWlGLGtCQUFrQiw4Q0FBOEMsY0FBYyx1QkFBdUIsd0RBQXdELDRNQUE0TSxJQUFJLGNBQWMsa0NBQWtDLE9BQU8sa0RBQWtELGtCQUFrQixlQUFlLDhCQUE4QixFQUFFLCtCQUErQixnQkFBZ0IsTUFBTSxvQkFBb0IsSUFBSSxvQkFBb0IsR0FBRyx1Q0FBdUMsZ0NBQWdDLGtCQUFrQixrRUFBa0UsK0JBQStCLE9BQU8seUJBQXlCLGdCQUFnQixrREFBa0QsZ0JBQWdCLFVBQVUsZ0NBQWdDLEVBQUUsd0NBQXdDLEVBQUUsd0NBQXdDLEVBQUUsZ0NBQWdDLE9BQU8sWUFBWSxXQUFXLEtBQUssa0JBQWtCLE1BQU0sU0FBUyxZQUFZLFdBQVcsdUNBQXVDLGNBQWMseUNBQXlDLGNBQWMsT0FBTyxjQUFjLElBQUksZ0JBQWdCLDBCQUEwQiwwQkFBMEIsa0JBQWtCLFNBQVMsZUFBZSw0QkFBNEIsd0RBQXdELFlBQVkscUVBQXFFLFFBQVEsa0JBQWtCLGdFQUFnRSxNQUFNLGFBQWEsc0NBQXNDLGVBQWUsa0JBQWtCLE1BQU0sZ0JBQWdCLElBQUksUUFBUSxHQUFHLE9BQU8scUNBQXFDLGNBQWMseUhBQXlILE9BQU8sd0JBQXdCLGdCQUFnQiw4REFBOEQsa0JBQWtCLG9FQUFvRSxhQUFhLCtCQUErQixxQkFBcUIsaUNBQWlDLE1BQU0sRUFBRSxXQUFXLDZCQUE2Qix1QkFBdUIsbUNBQW1DLE9BQU8sY0FBYyw4Q0FBOEMsT0FBTyw0RUFBNEUsa0JBQWtCLHVHQUF1RyxnR0FBZ0csbUJBQW1CLGtCQUFrQixZQUFZLEVBQUUsT0FBTyxtREFBbUQsR0FBRyxPQUFPLHlGQUF5RixjQUFjLG9CQUFvQix3SEFBd0gsT0FBTyx1QkFBdUIsd0hBQXdILE9BQU8scUZBQXFGLDRCQUE0Qix3QkFBd0IsNkNBQTZDLGlDQUFpQyx1Q0FBdUMsNEVBQTRFLDZEQUE2RCx5QkFBeUIsbUJBQW1CLEdBQUcsd0NBQXdDLEtBQUssNENBQTRDLEVBQUUsV0FBVyxHQUFHLFFBQVEsS0FBSywwQ0FBMEMsa0NBQWtDLG1CQUFtQixrREFBa0QsR0FBRyxZQUFZLFFBQVEsSUFBSSxRQUFRLCtEQUErRCxjQUFjLE1BQU0sMkZBQTJGLEdBQUcsdUJBQXVCLGVBQWUsWUFBWSwrQ0FBK0MsaVNBQWlTLE1BQU0sV0FBVyw4QkFBOEIsMkJBQTJCLGFBQWEsSUFBSSxTQUFTLE1BQU0sT0FBTyx1RUFBdUUsMEJBQTBCLEtBQUssTUFBTSxNQUFNLE9BQU8sa0NBQWtDLElBQUksbUJBQW1CLDZDQUE2QywwQkFBMEIsMkNBQTJDLFlBQVksZUFBZSxpQkFBaUIsR0FBRyw2Q0FBNkMsS0FBSyxrREFBa0QsS0FBSyw0Q0FBNEMsaUNBQWlDLHdCQUF3Qix5Q0FBeUMsaUJBQWlCLEdBQUcsd0NBQXdDLEVBQUUsV0FBVyxHQUFHLFFBQVEsS0FBSywwQ0FBMEMsS0FBSyw0Q0FBNEMseURBQXlELGtIQUFrSCxXQUFXLGlCQUFpQixFQUFFLEdBQUcsTUFBTSxHQUFHLHVCQUF1QixpQkFBaUIsR0FBRyxrREFBa0QsRUFBRSxPQUFPLEdBQUcsT0FBTyxnREFBZ0Qsa0RBQWtELGdDQUFnQyxPQUFPLDJDQUEyQyw2REFBNkQscUJBQXFCLGFBQWEsOEVBQThFLE9BQU8sYUFBYSw4QkFBOEIsT0FBTyx3QkFBd0IsR0FBRyxnQ0FBZ0MsS0FBSyw2Q0FBNkMsS0FBSywrQ0FBK0MsV0FBVyxHQUFHLG9EQUFvRCwwQkFBMEIsd0JBQXdCLHFCQUFxQixTQUFTLGdDQUFnQyxJQUFJLGlDQUFpQyxPQUFPLCtCQUErQixTQUFTLGdDQUFnQyxJQUFJLGlDQUFpQyxPQUFPLCtCQUErQixRQUFRLCtDQUErQyxnRUFBZ0UsR0FBRyxRQUFRLFFBQVEseUdBQXlHLFFBQVEsa0RBQWtELHdDQUF3QyxPQUFPLHVCQUF1QixLQUFLLG1CQUFtQixHQUFHLDZDQUE2QyxvQkFBb0Isa0RBQWtELHlDQUF5QyxRQUFRLEdBQUcsa0RBQWtELDRCQUE0QixLQUFLLG9DQUFvQyxRQUFRLHdIQUF3SCxRQUFRLHNDQUFzQyxRQUFRLHNDQUFzQyxvTEFBb0wsNkRBQTZELGNBQWMsTUFBTSxVQUFVLDRCQUE0Qix5QkFBeUIsd0JBQXdCLG1CQUFtQix1R0FBdUcsbUJBQW1CLFdBQVcsNkRBQUMsYUFBYSw2REFBQywwQkFBMEIsSUFBSSxRQUFRLGdFQUFDLElBQUksaUZBQWlGLFNBQVMsa0dBQWtHLFdBQVcsTUFBTSw4SEFBOEgsY0FBYyxpQkFBaUIsZ0JBQWdCLGtDQUFrQyxvQ0FBb0MsMEhBQTBILGVBQWUsa0VBQWtFLHdCQUF3QixvQkFBb0IsV0FBVyxrRUFBa0UsWUFBWSxXQUFXLEtBQUssYUFBYSwrQkFBK0IsU0FBUyxNQUFNLHdCQUF3QixTQUFTLGVBQWUsV0FBVyxnQkFBZ0IsUUFBUSw0REFBQyxJQUFJLGFBQWEsYUFBYSxXQUFXLFVBQVUsMkJBQTJCLFVBQVUsRUFBRSxrQ0FBa0MsTUFBTSx5Q0FBeUMsR0FBRywrQ0FBK0MscUJBQXFCLFNBQVMsT0FBTyx5REFBeUQsY0FBYyxXQUFXLFVBQVUsMkJBQTJCLFVBQVUsRUFBRSxrQ0FBa0MsYUFBYSxlQUFlLE9BQU8sY0FBYywyQ0FBMkMsMkNBQTJDLGdFQUFnRSxLQUFLLFNBQVMsb0JBQW9CLGVBQWUsT0FBTyxTQUFTLFNBQVMseUJBQXlCLGVBQWUsT0FBTyxjQUFjLHlCQUF5QiwwQkFBMEIsZUFBZSxRQUFRLGtCQUFrQixTQUFTLGVBQWUsMkJBQTJCLDZDQUE2QyxlQUFlLHNCQUFzQixxQkFBcUIsd0VBQXdFLGlCQUFpQiwyREFBMkQscUJBQXFCLGtGQUFrRiwwRUFBMEUsMkhBQTJILDBEQUEwRCxNQUFNLDBCQUEwQixhQUFhLHFDQUFxQyxFQUFFLFNBQVMsMERBQTBELG9CQUFvQiwwQkFBMEIsZ0JBQWdCLHVDQUF1QyxXQUFXLHFEQUFxRCxXQUFXLGlEQUFpRCxXQUFXLGlEQUFpRCxXQUFXLG9HQUFvRyxZQUFZLDJCQUEyQixFQUFFLE1BQU0sMkJBQTJCLEdBQUcsZUFBZSxvQ0FBb0MsV0FBVyxrREFBa0QsV0FBVyw4Q0FBOEMsbUJBQW1CLDhDQUE4QyxXQUFXLEVBQUUsdUJBQXVCLDZCQUE2QixFQUFFLFlBQVksMkJBQTJCLEVBQUUsTUFBTSwyQkFBMkIsR0FBRyxnREFBZ0QsK0JBQStCLEVBQUUsYUFBYSxhQUFhLFlBQVksYUFBYSx5QkFBeUIsb0JBQW9CLGtDQUFrQyxHQUFHLDRDQUE0QyxFQUFFLFlBQVksb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsTUFBTSxTQUFTLGlCQUFpQiwyQkFBMkIsNENBQTRDLHlCQUF5QixVQUFVLG1DQUFtQyxHQUFHLGdCQUFnQix1RUFBdUUsaUJBQWlCLHdFQUF3RSwwQ0FBMEMsd0JBQXdCLFVBQVUsR0FBRyxjQUFjLHdHQUF3Ryx5QkFBeUIsaUNBQWlDLG9CQUFvQixNQUFNLDhFQUE4RSxLQUFLLG9CQUFvQixpQkFBaUIsS0FBSyxRQUFRLEVBQUUsY0FBYyxnQkFBZ0Isd0JBQXdCLGlHQUFpRyxjQUFjLDRJQUE0SSx5Q0FBeUMsT0FBTyxlQUFlLGFBQWEsUUFBUSxZQUFZLE1BQU0sK0JBQStCLEtBQUssaUJBQWlCLE1BQU0sNENBQTRDLEVBQUUsSUFBSSxNQUFNLGdCQUFnQiwwQkFBMEIsZ0NBQWdDLFlBQVksTUFBTSxnQkFBZ0IsR0FBRyx3R0FBd0csbUNBQW1DLElBQUksS0FBSyxVQUFVLHFDQUFxQywyREFBMkQsb0hBQW9ILE9BQU8sWUFBWSxvQkFBb0IsRUFBRSxNQUFNLFVBQVUsY0FBYyxhQUFhLGNBQWMsS0FBSyxpREFBaUQsR0FBRyxjQUFjLGNBQWMsa0JBQWtCLE1BQU0sVUFBVSxZQUFZLG9CQUFvQixjQUFjLGlCQUFpQixNQUFNLE1BQU0sZ0JBQWdCLEdBQUcsNkRBQTZELCtCQUErQixHQUFHLGNBQWMsU0FBUyxrQkFBa0IsTUFBTSxnQkFBZ0IsMkNBQTJDLHFDQUFxQyxlQUFlLEdBQUcsMENBQTBDLGNBQWMsaUJBQWlCLE1BQU0sNENBQTRDLEVBQUUsY0FBYyxrQkFBa0IsaUJBQWlCLFNBQVMsaUJBQWlCLGFBQWEsT0FBTyxjQUFjLHVCQUF1QixNQUFNLFNBQVMsb0JBQW9CLGlDQUFpQyxjQUFjLG9CQUFvQixnR0FBZ0csb0JBQW9CLEdBQUcsYUFBYSxzQkFBc0IsY0FBYywyQkFBMkIsb0JBQW9CLEdBQUcsY0FBYyxNQUFNLFNBQVMsR0FBRyxrRUFBa0UsYUFBYSxrQ0FBa0MsYUFBYSxrQ0FBa0Msd0JBQXdCLFFBQVEsYUFBYSxtQ0FBbUMsaUJBQWlCLFFBQVEsTUFBTSwwQkFBMEIsUUFBUSw4Q0FBOEMsc0JBQXNCLDRMQUE0TCxzQkFBc0IsNkVBQTZFLHVEQUF1RCx3QkFBd0IsMkNBQTJDLHFQQUFxUCxLQUFLLGtDQUFrQyxtREFBbUQsZUFBZSxrRUFBa0UsZUFBZSwwRUFBMEUsMElBQTBJLG1CQUFtQix1Q0FBdUMsOERBQThELG9CQUFvQiw2Q0FBNkMsaUJBQWlCLE1BQU0sMEVBQTBFLFFBQVEsWUFBWSxXQUFXLEtBQUssYUFBYSxVQUFVLDhCQUE4QixPQUFPLFVBQVUsOEJBQThCLCtCQUErQiwwRkFBMEYsU0FBUyxlQUFlLHlCQUF5QixzQ0FBc0Msc0JBQXNCLE9BQU8scUJBQXFCLGdCQUFnQiwyQ0FBMkMsNENBQTRDLGFBQWEsZ0VBQWdFLGdCQUFnQixxREFBcUQsWUFBWSxNQUFNLGVBQWUsb0JBQW9CLHdEQUFDLEVBQUUsZUFBZSxlQUFlLHdEQUFDLEdBQUcsZUFBZSxxQkFBcUIsd0RBQUMsV0FBVyxTQUFTLDZDQUFDLEVBQUUsUUFBUSxVQUFVLGtCQUFrQix5Q0FBQyxJQUFJLFFBQVEsSUFBSSxtREFBQyxzQ0FBc0MseUNBQUMsSUFBSSxRQUFRLElBQUksbURBQUMseUNBQXlDLHlDQUFDLElBQUksUUFBUSxJQUFJLG1EQUFDLGtFQUFrRSx5Q0FBQyxJQUFJLFFBQVEsSUFBSSxtREFBQywyQ0FBMkMseUNBQUMsRUFBRSxZQUFZLDBCQUEwQixJQUFJLG1EQUFDLGNBQWMscUJBQXFCLG1DQUFtQywrQ0FBK0MsT0FBTyxzREFBc0QscUZBQUMsV0FBVyxNQUFNLElBQUkseUJBQXlCLHlDQUFDLElBQUksa0JBQWtCLElBQUksbURBQUMsbUZBQW1GLHlDQUFDLEVBQUUsWUFBWSxrQkFBa0IsSUFBSSxHQUFHLG1EQUFDLDhEQUE4RCxNQUFNLHNCQUFzQixhQUFhLFVBQVUsRUFBRSxTQUFTLHVCQUF1QixtRkFBQyxFQUFFLGlCQUFpQiwrQkFBK0IsUUFBUSxLQUFLLFlBQVksaURBQWlELE1BQU0sTUFBTSw0QkFBNEIsV0FBVyxnQ0FBZ0MsY0FBYywrQkFBK0IsV0FBVyxnQ0FBZ0MsVUFBVSwrQkFBK0IsWUFBWSx3RUFBd0UsNEJBQTRCLGFBQWEsS0FBSyx3REFBQyxHQUFHLFVBQVUsaUJBQWlCLGVBQWUsY0FBYyxlQUFlLEtBQUssc0JBQXNCLGNBQWMsUUFBUSxrREFBQyx1Q0FBdUMsT0FBTywyREFBQyxzQkFBc0IsaUJBQWlCLE1BQU0sZUFBZSxtQ0FBbUMsYUFBYSxNQUFNLGlCQUFpQixnREFBZ0QsdUZBQXVGLDZFQUE2RSxtQ0FBbUMsRUFBRSxjQUFjLHlFQUF5RSxnREFBZ0QsRUFBRSxjQUFjLE9BQU8sOERBQThELGlCQUFpQixXQUFXLE1BQU0sV0FBVyxTQUFTLFFBQVEsY0FBYyxHQUFHLGlCQUFpQixXQUFXLE1BQU0sV0FBVyxTQUFTLG9CQUFvQixpQkFBaUIsY0FBYyxNQUFNLDhDQUE4QyxVQUFVLFlBQVksTUFBTSwyQkFBMkIsbUNBQW1DLElBQUksUUFBUSx5QkFBeUIsaUVBQUMsRUFBRSxXQUFXLEVBQUUscURBQUMsT0FBTyx5REFBeUQsY0FBYyx5QkFBeUIsY0FBYyxJQUFJLGNBQWMsYUFBYSxPQUFPLGlCQUFpQiw4Q0FBOEMsMkJBQTJCLE1BQU0sV0FBVyxVQUFVLFlBQVksT0FBTyxRQUFRLDBCQUEwQix5REFBeUQsY0FBYyx5QkFBeUIsY0FBYyxLQUFLLGNBQWMsV0FBVyxlQUFlLHFFQUFxRSxzQ0FBc0MsY0FBYywwQ0FBMEMsT0FBTyxjQUE2SCIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9Eb2N1bWVudHMvQ3JhY2tlZC9Gcm9udC1lbmQvc3RhcnR1cC9ub2RlX21vZHVsZXMvbmV4dC1zYW5pdHkvbm9kZV9tb2R1bGVzL0BzYW5pdHkvdmlzdWFsLWVkaXRpbmcvZGlzdC9fY2h1bmtzLWVzL211dGF0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnR7ZCBhcyBlLEQgYXMgdH1mcm9tXCIuL2NyZWF0ZS1kYXRhLWF0dHJpYnV0ZS5qc1wiO2ltcG9ydHtWRVJDRUxfU1RFR0FfUkVHRVggYXMgbix2ZXJjZWxTdGVnYURlY29kZSBhcyBvfWZyb21cIkB2ZXJjZWwvc3RlZ2FcIjtpbXBvcnR7Y3JlYXRlSWZOb3RFeGlzdHMgYXMgcixwYXRjaCBhcyBpfWZyb21cIkBzYW5pdHkvbXV0YXRlXCI7aW1wb3J0e3NldHVwIGFzIHMsZW1pdCBhcyBhLGFzc2VydEV2ZW50IGFzIGMsYXNzaWduIGFzIHUsc3RvcENoaWxkIGFzIGQsY3JlYXRlRW1wdHlBY3RvciBhcyBsfWZyb21cInhzdGF0ZVwiO2ltcG9ydHtjcmVhdGVTaGFyZWRMaXN0ZW5lciBhcyBtLGRvY3VtZW50TXV0YXRvck1hY2hpbmUgYXMgeX1mcm9tXCJAc2FuaXR5L211dGF0ZS9fdW5zdGFibGVfbWFjaGluZVwiO2ltcG9ydHt1c2VDYWxsYmFjayBhcyBmLHVzZVN5bmNFeHRlcm5hbFN0b3JlIGFzIHB9ZnJvbVwicmVhY3RcIjtmb3IodmFyIGg9W10sdj0wO3Y8MjU2OysrdiloLnB1c2goKHYrMjU2KS50b1N0cmluZygxNikuc2xpY2UoMSkpO3ZhciBnLHc9bmV3IFVpbnQ4QXJyYXkoMTYpO2Z1bmN0aW9uIHgoKXtpZighZyYmIShnPXR5cGVvZiBjcnlwdG88XCJ1XCImJmNyeXB0by5nZXRSYW5kb21WYWx1ZXMmJmNyeXB0by5nZXRSYW5kb21WYWx1ZXMuYmluZChjcnlwdG8pKSl0aHJvdyBuZXcgRXJyb3IoXCJjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKCkgbm90IHN1cHBvcnRlZC4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS91dWlkanMvdXVpZCNnZXRyYW5kb212YWx1ZXMtbm90LXN1cHBvcnRlZFwiKTtyZXR1cm4gZyh3KX12YXIgYj17cmFuZG9tVVVJRDp0eXBlb2YgY3J5cHRvPFwidVwiJiZjcnlwdG8ucmFuZG9tVVVJRCYmY3J5cHRvLnJhbmRvbVVVSUQuYmluZChjcnlwdG8pfTtmdW5jdGlvbiBFKGUsdCxuKXtpZihiLnJhbmRvbVVVSUQmJiF0JiYhZSlyZXR1cm4gYi5yYW5kb21VVUlEKCk7dmFyIG89KGU9ZXx8e30pLnJhbmRvbXx8KGUucm5nfHx4KSgpO3JldHVybiBvWzZdPTE1Jm9bNl18NjQsb1s4XT02MyZvWzhdfDEyOCxmdW5jdGlvbihlLHQ9MCl7cmV0dXJuKGhbZVt0KzBdXStoW2VbdCsxXV0raFtlW3QrMl1dK2hbZVt0KzNdXStcIi1cIitoW2VbdCs0XV0raFtlW3QrNV1dK1wiLVwiK2hbZVt0KzZdXStoW2VbdCs3XV0rXCItXCIraFtlW3QrOF1dK2hbZVt0KzldXStcIi1cIitoW2VbdCsxMF1dK2hbZVt0KzExXV0raFtlW3QrMTJdXStoW2VbdCsxM11dK2hbZVt0KzE0XV0raFtlW3QrMTVdXSkudG9Mb3dlckNhc2UoKX0obyl9ZnVuY3Rpb24gTChlKXtjb25zdCB0PWUuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7cmV0dXJue3g6dC54K3Njcm9sbFgseTp0Lnkrc2Nyb2xsWSx3OnQud2lkdGgsaDp0LmhlaWdodH19ZnVuY3Rpb24gTShlLHQsbil7cmV0dXJuXCJ4XCI9PT1uP3t4OmUueCt0LHk6ZS55LHc6ZS53LTIqdCxoOmUuaH06e3g6ZS54LHk6ZS55K3QsdzplLncsaDplLmgtMip0fX1mdW5jdGlvbiBrKGUsdCl7Y29uc3R7eDE6bix5MTpvLHgyOnIseTI6aX09ZSx7eDE6cyx5MTphLHgyOmMseTI6dX09dDtpZihuPT09ciYmbz09PWl8fHM9PT1jJiZhPT09dSlyZXR1cm4hMTtjb25zdCBkPSh1LWEpKihyLW4pLShjLXMpKihpLW8pO2lmKDA9PT1kKXJldHVybiExO2NvbnN0IGw9KChjLXMpKihvLWEpLSh1LWEpKihuLXMpKS9kLG09KChyLW4pKihvLWEpLShpLW8pKihuLXMpKS9kO2lmKGw8MHx8bD4xfHxtPDB8fG0+MSlyZXR1cm4hMTtyZXR1cm57eDpuK2wqKHItbikseTpvK2wqKGktbyl9fWZ1bmN0aW9uIEkoZSx0KXtyZXR1cm4gZS54PT09dC54JiZlLnk9PT10LnkmJmUudz09PXQudyYmZS5oPT09dC5ofWZ1bmN0aW9uIFQoZSx0KXtjb25zdCBuPVt7eDE6dC54LHkxOnQueSx4Mjp0LngrdC53LHkyOnQueX0se3gxOnQueCt0LncseTE6dC55LHgyOnQueCt0LncseTI6dC55K3QuaH0se3gxOnQueCt0LncseTE6dC55K3QuaCx4Mjp0LngseTI6dC55K3QuaH0se3gxOnQueCx5MTp0LnkrdC5oLHgyOnQueCx5Mjp0Lnl9XSxvPVtdO2ZvcihsZXQgdD0wO3Q8bi5sZW5ndGg7dCsrKXtjb25zdCByPWsoZSxuW3RdKTtpZihyKXtsZXQgZT0hMTtmb3IobGV0IHQ9MDt0PG8ubGVuZ3RoO3QrKylvW3RdLng9PT1yLngmJm9bdF0ueT09PXIueSYmKGU9ITApO2V8fG8ucHVzaChyKX19cmV0dXJuIDAhPT1vLmxlbmd0aCYmby5zb3J0KCgodCxuKT0+Uyh0LHt4OmUueDEseTplLnkxfSktUyhuLHt4OmUueDEseTplLnkxfSkpKX1mdW5jdGlvbiBTKGUsdCl7Y29uc3Qgbj1lLngtdC54LG89ZS55LXQueTtyZXR1cm4gTWF0aC5zcXJ0KG4qbitvKm8pfWZ1bmN0aW9uIEQoZSx0LG4pe2NvbnN0IG89e3g6ZS54MSx5OmUueTF9O2lmKHQuc29tZSgoZT0+ZnVuY3Rpb24oZSx0KXtjb25zdCBuPWUueD49dC54JiZlLng8PXQueCt0Lncsbz1lLnk+PXQueSYmZS55PD10LnkrdC5oO3JldHVybiBuJiZvfShvLE0oZSxNYXRoLm1pbihlLncsZS5oKS8xMCxcImhvcml6b250YWxcIj09PW4/XCJ4XCI6XCJ5XCIpKSkpKXJldHVybiBudWxsO2xldCByLGk7Zm9yKGNvbnN0IHMgb2YgdCl7Y29uc3QgdD1UKGUsTShzLE1hdGgubWluKHMudyxzLmgpLzEwLFwiaG9yaXpvbnRhbFwiPT09bj9cInhcIjpcInlcIikpO2lmKHQpe2NvbnN0IGU9dFswXTtyP1MobyxlKTxTKG8scikmJihyPWUsaT1zKToocj1lLGk9cyl9fXJldHVybiBpfHxudWxsfWZ1bmN0aW9uIFUoZSx0LG4pe2NvbnN0e3g6byx5OnIsdzppLGg6c309ZSx7eDphLHk6Y309bjtyZXR1cm57eDphKyhvLWEpKnQseTpjKyhyLWMpKnQsdzppKnQsaDpzKnR9fWZ1bmN0aW9uIEEoZSl7Y29uc3QgdD1NYXRoLm1heCgwLE1hdGgubWluKC4uLmUubWFwKChlPT5lLnkpKSkpLG49TWF0aC5taW4oZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQsTWF0aC5tYXgoLi4uZS5tYXAoKGU9PmUueStlLmgpKSkpO3JldHVybnttaW46dCxtYXg6bixoZWlnaHQ6bi10fX1mdW5jdGlvbiBOKGUsdCl7cmV0dXJuIHQuZmluZCgodD0+SShMKHQuZWxlbWVudHMubWVhc3VyZUVsZW1lbnQpLGUpKSk/LnNhbml0eX1mdW5jdGlvbiBSKGUsdCxuKXtyZXR1cm4gT2JqZWN0LnZhbHVlcyh0KS5ldmVyeSgoZT0+bnVsbD09PWUpKT9udWxsOlwiaG9yaXpvbnRhbFwiPT09bj97bGVmdDp0LmxlZnQ/e3JlY3Q6dC5sZWZ0LHNhbml0eTpOKHQubGVmdCxlKX06bnVsbCxyaWdodDp0LnJpZ2h0P3tyZWN0OnQucmlnaHQsc2FuaXR5Ok4odC5yaWdodCxlKX06bnVsbH06e3RvcDp0LnRvcD97cmVjdDp0LnRvcCxzYW5pdHk6Tih0LnRvcCxlKX06bnVsbCxib3R0b206dC5ib3R0b20/e3JlY3Q6dC5ib3R0b20sc2FuaXR5Ok4odC5ib3R0b20sZSl9Om51bGx9fWZ1bmN0aW9uIE8oZSl7Y29uc3QgdD1kb2N1bWVudC5ib2R5LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO3JldHVybnt4Ok1hdGgubWF4KHQueCxNYXRoLm1pbihlLmNsaWVudFgsdC54K3Qud2lkdGgpKSx5OmUuY2xpZW50WSt3aW5kb3cuc2Nyb2xsWX19ZnVuY3Rpb24gUChlLHQsbil7Y29uc3Qgbz1MKHQpLHI9Wy4uLnQucXVlcnlTZWxlY3RvckFsbChcIjp3aGVyZShoMSwgaDIsIGgzLCBoNCwgcCwgYSwgaW1nLCBzcGFuLCBidXR0b24pOm5vdCg6aGFzKCopKVwiKV07ZS54PD1vLngmJihlLng9by54KSxlLng+PW8ueCtvLncmJihlLng9by54K28udyksZS55Pj1vLnkrby5oJiYoZS55PW8ueStvLmgpLGUueTw9by55JiYoZS55PW8ueSk7Y29uc3QgaT1yLm1hcCgoZT0+e2NvbnN0IHQ9VShMKGUpLG4se3g6by54LHk6by55fSk7cmV0dXJue3g6dC54LW8ueCx5OnQueS1vLnksdzp0LncsaDp0LmgsdGFnTmFtZTplLnRhZ05hbWV9fSkpO3JldHVybntvZmZzZXRYOihvLngtZS54KSpuLG9mZnNldFk6KG8ueS1lLnkpKm4sdzpvLncqbixoOm8uaCpuLG1heFdpZHRoOm8udypuKi43NSxjaGlsZFJlY3RzOml9fWZ1bmN0aW9uIF8oZSl7Y29uc3QgdD1mdW5jdGlvbihlKXtjb25zdCB0PU1hdGgubWF4KDAsTWF0aC5taW4oLi4uZS5tYXAoKGU9PmUueCkpKSksbj1NYXRoLm1pbihkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoLE1hdGgubWF4KC4uLmUubWFwKChlPT5lLngrZS53KSkpKTtyZXR1cm57bWluOnQsbWF4Om4sd2lkdGg6bi10fX0oZSksbj1BKGUpLG89dC5taW4+OCYmdC5taW4rdC53aWR0aDw9d2luZG93LmlubmVyV2lkdGgtOCxyPW4ubWluPjgmJm4ubWluK24uaGVpZ2h0PD1kb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodC04LGk9byYmcjtyZXR1cm57eDppP3QubWluLTg6dC5taW4seTppP24ubWluLTg6bi5taW4sdzppP3Qud2lkdGgrMTY6dC53aWR0aCxoOmk/bi5oZWlnaHQrMTY6bi5oZWlnaHR9fWFzeW5jIGZ1bmN0aW9uIEMoZSx0LG4sbyxyKXtyZXR1cm4gbmV3IFByb21pc2UoKGk9Pntjb25zdCBzPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpLnRyYW5zZm9ybTtpZigxPT09bmV3IERPTU1hdHJpeChzKS5hKXJldHVybjtjb25zdCBhPW4td2luZG93LmlubmVySGVpZ2h0LGM9c2Nyb2xsWTsoZS09d2luZG93LmlubmVySGVpZ2h0LzIpPDAmJihlPTApLHQuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwoKCk9Pnt0LnN0eWxlLnRyYW5zaXRpb249XCJub25lXCIsdC5zdHlsZS50cmFuc2Zvcm09XCJub25lXCIsc2Nyb2xsVG8oe3RvcDplLGJlaGF2aW9yOlwiaW5zdGFudFwifSksc2V0VGltZW91dCgoKCk9PntvKHt0eXBlOlwib3ZlcmxheS9kcmFnRW5kTWluaW1hcFRyYW5zaXRpb25cIn0pLG8oe3R5cGU6XCJvdmVybGF5L2RyYWdUb2dnbGVNaW5pbWFwXCIsZGlzcGxheTohMX0pfSksMipyKSxpKCl9KSx7b25jZTohMH0pLG8oe3R5cGU6XCJvdmVybGF5L2RyYWdTdGFydE1pbmltYXBUcmFuc2l0aW9uXCJ9KSx0LnN0eWxlLnRyYW5zZm9ybT1gdHJhbnNsYXRlWSgke01hdGgubWF4KGMtZSwtYStjKX1weCkgc2NhbGUoMSlgLGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9XCJhdXRvXCJ9KSl9bGV0IGo9ITEsWT17eDowLHk6MH0sRz17eDowLHk6MH0sSD10eXBlb2YgZG9jdW1lbnQ+XCJ1XCI/MDpkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0O2Z1bmN0aW9uICQoZSl7Y29uc3R7bW91c2VFdmVudDp0LGVsZW1lbnQ6bixvdmVybGF5R3JvdXA6byxoYW5kbGVyOnIsdGFyZ2V0Omksb25TZXF1ZW5jZVN0YXJ0OnMsb25TZXF1ZW5jZUVuZDphfT1lO2lmKDAhPT10LmJ1dHRvbilyZXR1cm47d2luZG93LmZvY3VzKCk7Y29uc3QgYz0xNTA7bGV0IHU9by5tYXAoKGU9PkwoZS5lbGVtZW50cy5tZWFzdXJlRWxlbWVudCkpKTtjb25zdCBkPW4uZ2V0QXR0cmlidXRlKFwiZGF0YS1zYW5pdHktZHJhZy1mbG93XCIpfHwoKGY9dSkuc29tZSgoZT0+Zi5maWx0ZXIoKHQ9PiFJKGUsdCkpKS5zb21lKCh0PT5lLnk9PT10LnkpKSkpP1wiaG9yaXpvbnRhbFwiOlwidmVydGljYWxcIiksbD1uLmdldEF0dHJpYnV0ZShcImRhdGEtc2FuaXR5LWRyYWctZ3JvdXBcIiksbT0hIW4uZ2V0QXR0cmlidXRlKFwiZGF0YS1zYW5pdHktZHJhZy1taW5pbWFwLWRpc2FibGVcIikseT0hIW4uZ2V0QXR0cmlidXRlKFwiZGF0YS1zYW5pdHktZHJhZy1wcmV2ZW50LWRlZmF1bHRcIik7dmFyIGY7bGV0IHA9bnVsbDtjb25zdCBoPU8odCksdj1kb2N1bWVudC5ib2R5LHttaW5ZU2NhbGVkOmcsc2NhbGVGYWN0b3I6d309ZnVuY3Rpb24oZSl7bGV0e2hlaWdodDp0fT1BKGUpO3QrPTIwMDtjb25zdCBuPXQ+d2luZG93LmlubmVySGVpZ2h0P3dpbmRvdy5pbm5lckhlaWdodC90OjEsbz1lLm1hcCgoZT0+VShlLG4se3g6d2luZG93LmlubmVyV2lkdGgvMix5OjB9KSkpLHttaW46cn09QShvKTtyZXR1cm57c2NhbGVGYWN0b3I6bixtaW5ZU2NhbGVkOnItMTAwKm59fSh1KTtsZXQgeD0hMSxiPSExLEU9ITA7anx8KEg9ZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCk7Y29uc3QgTT1zZXRJbnRlcnZhbCgoKCk9Pnt1PW8ubWFwKChlPT5MKGUuZWxlbWVudHMubWVhc3VyZUVsZW1lbnQpKSl9KSxjKSxrPSgpPT57aWYodz49MSlyZXR1cm47Y29uc3QgZT1QKEcsbix3KTtyKHt0eXBlOlwib3ZlcmxheS9kcmFnVXBkYXRlU2tlbGV0b25cIixza2VsZXRvbjplfSkscih7dHlwZTpcIm92ZXJsYXkvZHJhZ1RvZ2dsZU1pbmltYXBQcm9tcHRcIixkaXNwbGF5OiExfSkscih7dHlwZTpcIm92ZXJsYXkvZHJhZ1RvZ2dsZU1pbmltYXBcIixkaXNwbGF5OiEwfSksaj0hMCxhc3luYyBmdW5jdGlvbihlLHQsbixvLHIpe3JldHVybiBuZXcgUHJvbWlzZSgoaT0+e2UuYWRkRXZlbnRMaXN0ZW5lcihcInRyYW5zaXRpb25lbmRcIiwoKCk9PntzZXRUaW1lb3V0KCgoKT0+e28oe3R5cGU6XCJvdmVybGF5L2RyYWdFbmRNaW5pbWFwVHJhbnNpdGlvblwifSl9KSwyKnIpLGkoKX0pLHtvbmNlOiEwfSksbyh7dHlwZTpcIm92ZXJsYXkvZHJhZ1N0YXJ0TWluaW1hcFRyYW5zaXRpb25cIn0pLG8oe3R5cGU6XCJvdmVybGF5L2RyYWdUb2dnbGVNaW5pbWFwXCIsZGlzcGxheTohMH0pLGRvY3VtZW50LmJvZHkuc3R5bGUub3ZlcmZsb3c9XCJoaWRkZW5cIixzZXRUaW1lb3V0KCgoKT0+e2Uuc3R5bGUudHJhbnNmb3JtT3JpZ2luPVwiNTAlIDBweFwiLGUuc3R5bGUudHJhbnNpdGlvbj1cInRyYW5zZm9ybSAxNTBtcyBlYXNlXCIsZS5zdHlsZS50cmFuc2Zvcm09YHRyYW5zbGF0ZTNkKDBweCwgJHstbitzY3JvbGxZfXB4LCAwcHgpIHNjYWxlKCR7dH0pYH0pLDI1KX0pKX0odix3LGcscixjKS50aGVuKCgoKT0+e3NldFRpbWVvdXQoKCgpPT57cih7dHlwZTpcIm92ZXJsYXkvZHJhZ1VwZGF0ZUdyb3VwUmVjdFwiLGdyb3VwUmVjdDpfKHUpfSl9KSwzMDApfSkpfSxUPWU9PntNYXRoLmFicyhlLmRlbHRhWSk+PTEwJiZ3PDEmJiFqJiYhYiYmIW0mJkUmJihyKHt0eXBlOlwib3ZlcmxheS9kcmFnVG9nZ2xlTWluaW1hcFByb21wdFwiLGRpc3BsYXk6ITB9KSxiPSEwKSxlLnNoaWZ0S2V5JiYhaiYmIW0mJmsoKX0sTj1lPT57aWYoZS5wcmV2ZW50RGVmYXVsdCgpLEc9TyhlKSxZPWZ1bmN0aW9uKGUpe2NvbnN0IHQ9ZG9jdW1lbnQuYm9keSxuPXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHQpLnRyYW5zZm9ybTtpZihcIm5vbmVcIj09PW4pcmV0dXJue3g6ZS54LHk6ZS55fTtjb25zdCBvPW5ldyBET01NYXRyaXgobikuaW52ZXJzZSgpLHI9bmV3IERPTVBvaW50KGUueCxlLnkpLm1hdHJpeFRyYW5zZm9ybShvKTtyZXR1cm57eDpyLngseTpyLnl9fShHKSxNYXRoLmFicyhTKEcsaCkpPDQpcmV0dXJuO2lmKCF4KXtjb25zdCBlPV8odSksdD1QKEcsbiwxKTtyKHt0eXBlOlwib3ZlcmxheS9kcmFnU3RhcnRcIixmbG93OmR9KSxyKHt0eXBlOlwib3ZlcmxheS9kcmFnVXBkYXRlU2tlbGV0b25cIixza2VsZXRvbjp0fSkscih7dHlwZTpcIm92ZXJsYXkvZHJhZ1VwZGF0ZUdyb3VwUmVjdFwiLGdyb3VwUmVjdDplfSkseD0hMCxzKCl9cih7dHlwZTpcIm92ZXJsYXkvZHJhZ1VwZGF0ZUN1cnNvclBvc2l0aW9uXCIseDpHLngseTpHLnl9KSxlLnNoaWZ0S2V5JiYhaiYmIW0mJmsoKTtjb25zdCB0PWZ1bmN0aW9uKGUsdCxuKXtpZihcImhvcml6b250YWxcIj09PW4pe2NvbnN0IG89e3gxOmUueCx5MTplLnkseDI6ZS54LTFlOCx5MjplLnl9LHI9e3gxOmUueCx5MTplLnkseDI6ZS54KzFlOCx5MjplLnl9O3JldHVybntsZWZ0OkQobyx0LG4pLHJpZ2h0OkQocix0LG4pfX17Y29uc3Qgbz17eDE6ZS54LHkxOmUueSx4MjplLngseTI6ZS55LTFlOH0scj17eDE6ZS54LHkxOmUueSx4MjplLngseTI6ZS55KzFlOH07cmV0dXJue3RvcDpEKG8sdCxuKSxib3R0b206RChyLHQsbil9fX0oRyx1LGQpO0pTT04uc3RyaW5naWZ5KHApIT09SlNPTi5zdHJpbmdpZnkodCkmJihwPXQscih7dHlwZTpcIm92ZXJsYXkvZHJhZ1VwZGF0ZUluc2VydFBvc2l0aW9uXCIsaW5zZXJ0UG9zaXRpb246UihvLHAsZCl9KSl9LCQ9KCk9PntFPSExLHIoe3R5cGU6XCJvdmVybGF5L2RyYWdFbmRcIix0YXJnZXQ6aSxpbnNlcnRQb3NpdGlvbjpwP1IobyxwLGQpOm51bGwsZHJhZ0dyb3VwOmwsZmxvdzpkLHByZXZlbnRJbnNlcnREZWZhdWx0Onl9KSxiJiZyKHt0eXBlOlwib3ZlcmxheS9kcmFnVG9nZ2xlTWluaW1hcFByb21wdFwiLGRpc3BsYXk6ITF9KSxqfHwoY2xlYXJJbnRlcnZhbChNKSxhKCksWCgpLFYoKSksVygpfSx6PWU9PntpZihcIlNoaWZ0XCI9PT1lLmtleSYmail7aj0hMTtjb25zdCBlPVAoRyxuLDEvdyk7cih7dHlwZTpcIm92ZXJsYXkvZHJhZ1VwZGF0ZVNrZWxldG9uXCIsc2tlbGV0b246ZX0pLEMoWS55LHYsSCxyLGMpLHIoe3R5cGU6XCJvdmVybGF5L2RyYWdVcGRhdGVHcm91cFJlY3RcIixncm91cFJlY3Q6bnVsbH0pLEV8fChjbGVhckludGVydmFsKE0pLFcoKSxYKCksVigpLGEoKSl9fSxxPSgpPT57cih7dHlwZTpcIm92ZXJsYXkvZHJhZ1VwZGF0ZUdyb3VwUmVjdFwiLGdyb3VwUmVjdDpudWxsfSksQyhZLnksdixILHIsYykudGhlbigoKCk9PntqPSExfSkpLGNsZWFySW50ZXJ2YWwoTSksVygpLFgoKSxWKCksYSgpfSxXPSgpPT57d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIixOKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIndoZWVsXCIsVCksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsJCl9LFY9KCk9Pnt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIseil9LFg9KCk9Pnt3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImJsdXJcIixxKX07d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJibHVyXCIscSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLHopLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwid2hlZWxcIixUKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLE4pLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2V1cFwiLCQpfWNvbnN0IHo9ZT0+ZSBpbnN0YW5jZW9mIEhUTUxFbGVtZW50fHxlIGluc3RhbmNlb2YgU1ZHRWxlbWVudDtmdW5jdGlvbiBxKGUpe2NvbnN0e2Rpc3BsYXk6dH09d2luZG93LmdldENvbXB1dGVkU3R5bGUoZSk7aWYoXCJpbmxpbmVcIiE9PXQpcmV0dXJuIGU7Y29uc3Qgbj1lLnBhcmVudEVsZW1lbnQ7cmV0dXJuIG4/cShuKTpudWxsfWNvbnN0IFc9ZT0+ZSYmeihlKT9lLmRhdGFzZXQ/LnNhbml0eU92ZXJsYXlFbGVtZW50P2U6VyhlLnBhcmVudEVsZW1lbnQpOm51bGwsVj1cInNhbml0eS12aXN1YWwtZWRpdGluZ1wiO2Z1bmN0aW9uIFgoZSx0PSExKXtyZXR1cm4gcj1lLG4ubGFzdEluZGV4PTAsbi50ZXN0KHIpP2Z1bmN0aW9uKGUsdD0hMSl7dHJ5e2NvbnN0IG49byhlKTtyZXR1cm4gbiYmXCJzYW5pdHkuaW9cIj09PW4ub3JpZ2luPyh0JiYobi5ocmVmPW4uaHJlZj8ucmVwbGFjZShcIi5hbHRcIixcIlwiKSksbik6bnVsbH1jYXRjaCh0KXtyZXR1cm4gY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBkZWNvZGUgc3RlZ2EgZm9yIHN0cmluZzogXCIsZSxcIndpdGggdGhlIG9yaWdpbmFsIGVycm9yOiBcIix0KSxudWxsfX0oZSx0KTpudWxsO3ZhciByfWNvbnN0IEY9ZT0+ZS5ub2RlVHlwZT09PU5vZGUuRUxFTUVOVF9OT0RFLEI9ZT0+XCJJTUdcIj09PWUudGFnTmFtZSxKPWU9PlwiVElNRVwiPT09ZS50YWdOYW1lLEs9ZT0+XCJTVkdcIj09PWUudGFnTmFtZS50b1VwcGVyQ2FzZSgpO2Z1bmN0aW9uIFEoZSl7cmV0dXJuXCJwYXRoXCJpbiBlfWZ1bmN0aW9uIFooZSx0KXtsZXQgbj1lLnNwbGl0KFwiLlwiKSxvPXQuc3BsaXQoXCIuXCIpO2NvbnN0IHI9TWF0aC5taW4obi5sZW5ndGgsby5sZW5ndGgpO3JldHVybiBuPW4uc2xpY2UoMCxyKS5yZXZlcnNlKCksbz1vLnNsaWNlKDAscikucmV2ZXJzZSgpLG4ucmVkdWNlKCgoZSx0LG4pPT50PT09b1tuXT9bLi4uZSx0XTpbXSksW10pLnJldmVyc2UoKS5qb2luKFwiLlwiKX1mdW5jdGlvbiBlZShlKXtpZighZS5sZW5ndGh8fCFlLm1hcCgoZT0+UShlKSkpLmV2ZXJ5KCgoZSx0LG4pPT5lPT09blswXSkpKXJldHVybjtpZighUShlWzBdKSlyZXR1cm4gZVswXTtjb25zdCB0PWUuZmlsdGVyKFEpO2xldCBuPWVbMF07Y29uc3Qgbz1bXCJwcm9qZWN0SWRcIixcImRhdGFzZXRcIixcImlkXCIsXCJiYXNlVXJsXCIsXCJ3b3Jrc3BhY2VcIixcInRvb2xcIl07Zm9yKGxldCBlPTE7ZTx0Lmxlbmd0aDtlKyspe2NvbnN0IHI9dFtlXTtpZihvLnNvbWUoKGU9PnJbZV0hPT1uPy5bZV0pKSl7bj12b2lkIDA7YnJlYWt9bi5wYXRoPVoobi5wYXRoLHIucGF0aCl9cmV0dXJuIG59ZnVuY3Rpb24gdGUodCl7Y29uc3Qgbj1bXTtmdW5jdGlvbiBvKHQsbyl7Y29uc3Qgcj1lKG8pO2lmKCFyKXJldHVybjtjb25zdCBpPXEodCk7aSYmbi5wdXNoKHtlbGVtZW50czp7ZWxlbWVudDp0LG1lYXN1cmVFbGVtZW50Oml9LHNhbml0eTpyfSl9aWYodClmb3IoY29uc3QgZSBvZiB0LmNoaWxkTm9kZXMpe2NvbnN0e25vZGVUeXBlOnQscGFyZW50RWxlbWVudDpyLHRleHRDb250ZW50Oml9PWU7aWYoRihlKSYmdm9pZCAwIT09ZS5kYXRhc2V0Py5zYW5pdHlFZGl0VGFyZ2V0KXtjb25zdCB0PXRlKGUpLm1hcCgoKHtzYW5pdHk6ZX0pPT5lKSk7aWYoIXQubWFwKChlPT5RKGUpKSkuZXZlcnkoKChlLHQsbik9PmU9PT1uWzBdKSkpY29udGludWU7Y29uc3Qgbz1lZSh0KTtvJiZuLnB1c2goe2VsZW1lbnRzOntlbGVtZW50OmUsbWVhc3VyZUVsZW1lbnQ6ZX0sc2FuaXR5Om99KX1lbHNlIGlmKHQ9PT1Ob2RlLlRFWFRfTk9ERSYmciYmaSl7Y29uc3QgZT1YKGkpO2lmKCFlKWNvbnRpbnVlO28ocixlKX1lbHNlIGlmKEYoZSkpe2lmKFwiU0NSSVBUXCI9PT1lLnRhZ05hbWV8fGUuaWQ9PT1WKWNvbnRpbnVlO2lmKGUuZGF0YXNldD8uc2FuaXR5KW8oZSxlLmRhdGFzZXQuc2FuaXR5KTtlbHNlIGlmKGUuZGF0YXNldD8uc2FuaXR5RWRpdEluZm8pbyhlLGUuZGF0YXNldC5zYW5pdHlFZGl0SW5mbyk7ZWxzZXtpZihCKGUpKXtjb25zdCB0PVgoZS5hbHQsITApO2lmKCF0KWNvbnRpbnVlO28oZSx0KTtjb250aW51ZX1pZihKKGUpKXtjb25zdCB0PVgoZS5kYXRlVGltZSwhMCk7aWYoIXQpY29udGludWU7byhlLHQpfWVsc2UgaWYoSyhlKSl7aWYoIWUuYXJpYUxhYmVsKWNvbnRpbnVlO2NvbnN0IHQ9WChlLmFyaWFMYWJlbCwhMCk7aWYoIXQpY29udGludWU7byhlLHQpfX1uLnB1c2goLi4udGUoZSkpfX1yZXR1cm4gbn1mdW5jdGlvbiBuZShlKXtjb25zdCB0PWUubGFzdEluZGV4T2YoXCIuXCIpO3JldHVybiBlLnN1YnN0cmluZyh0LGUubGVuZ3RoKS5pbmNsdWRlcyhcIltcIil9ZnVuY3Rpb24gb2UoZSl7aWYoIW5lKGUpKXJldHVybiBudWxsO2NvbnN0IHQ9ZS5zcGxpdChcIi5cIik7cmV0dXJuIHRbdC5sZW5ndGgtMV09dFt0Lmxlbmd0aC0xXS5yZXBsYWNlKC9cXFsuKj9cXF0vZyxcIltdXCIpLHQuam9pbihcIi5cIil9ZnVuY3Rpb24gcmUoZSx0KXtyZXR1cm4hKCFuZShlLnBhdGgpfHwhbmUodC5wYXRoKSkmJm9lKGUucGF0aCk9PT1vZSh0LnBhdGgpfWZ1bmN0aW9uIGllKGUsdCxuLG8pe2lmKGUuZ2V0QXR0cmlidXRlKFwiZGF0YS1zYW5pdHktZHJhZy1kaXNhYmxlXCIpfHwhdHx8IVEodCl8fCFuZSh0LnBhdGgpKXJldHVybiBudWxsO2NvbnN0IHI9ZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNhbml0eS1kcmFnLWdyb3VwXCIpLGk9Wy4uLm5dLnJlZHVjZSgoKGUsbik9Pntjb25zdCBpPW8uZ2V0KG4pLHM9bi5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNhbml0eS1kcmFnLWRpc2FibGVcIiksYT1uLmdldEF0dHJpYnV0ZShcImRhdGEtc2FuaXR5LWRyYWctZ3JvdXBcIiksYz1udWxsPT09cnx8cj09PWE7cmV0dXJuIGkmJiFzJiZRKGkuc2FuaXR5KSYmcmUodCxpLnNhbml0eSkmJmMmJmUucHVzaChpKSxlfSksW10pO3JldHVybiBpLmxlbmd0aDw9MT9udWxsOml9ZnVuY3Rpb24gc2Uoe2hhbmRsZXI6ZSxvdmVybGF5RWxlbWVudDp0LGluRnJhbWU6bn0pe2xldCBvPSExO2NvbnN0IHI9bmV3IE1hcCxpPW5ldyBXZWFrTWFwLHM9bmV3IFNldCxhPW5ldyBXZWFrTWFwLGM9bjtsZXQgdSxkLGwsbT0hMSx5PVtdO2NvbnN0IGY9KCk9PnlbeS5sZW5ndGgtMV07ZnVuY3Rpb24gcChlLHQpe2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsdC5jbGljayx7Y2FwdHVyZTohMH0pLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNvbnRleHRtZW51XCIsdC5jb250ZXh0bWVudSx7Y2FwdHVyZTohMH0pLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHQubW91c2Vtb3ZlLHtjYXB0dXJlOiEwfSksZS5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsdC5tb3VzZWRvd24se2NhcHR1cmU6ITB9KSxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsdC5tb3VzZWVudGVyKSxlLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsdC5tb3VzZWxlYXZlKX1mdW5jdGlvbiBoKHtpZDp0LGVsZW1lbnRzOm4saGFuZGxlcnM6b30pe2NvbnN0e2VsZW1lbnQ6cixtZWFzdXJlRWxlbWVudDppfT1uOyhmdW5jdGlvbihlLHQpe2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsdC5jbGljayx7Y2FwdHVyZTohMH0pLGUuYWRkRXZlbnRMaXN0ZW5lcihcImNvbnRleHRtZW51XCIsdC5jb250ZXh0bWVudSx7Y2FwdHVyZTohMH0pLGUuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLHQubW91c2Vtb3ZlLHtvbmNlOiEwLGNhcHR1cmU6ITB9KSxlLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIix0Lm1vdXNlZG93bix7Y2FwdHVyZTohMH0pfSkocixvKSx1Lm9ic2VydmUoaSksZSh7dHlwZTpcImVsZW1lbnQvYWN0aXZhdGVcIixpZDp0fSl9ZnVuY3Rpb24gdih7aWQ6dCxlbGVtZW50czpuLGhhbmRsZXJzOm99KXtjb25zdHtlbGVtZW50OnIsbWVhc3VyZUVsZW1lbnQ6aX09bjtwKHIsbyksdS51bm9ic2VydmUoaSkseT15LmZpbHRlcigoZT0+ZSE9PXIpKSxlKHt0eXBlOlwiZWxlbWVudC9kZWFjdGl2YXRlXCIsaWQ6dH0pfWZ1bmN0aW9uIGcoKXtpZighbilyZXR1cm47Y29uc3QgdD1mKCk7aWYoIXQpcmV0dXJuO2NvbnN0IG89aS5nZXQodCk/LnNhbml0eTtpZighb3x8IVEobykpcmV0dXJuO2NvbnN0IHI9aWUodCxvLHMsaSk/XCJtb3ZlXCI6XCJhdXRvXCI7ZSh7dHlwZTpcIm92ZXJsYXkvc2V0Q3Vyc29yXCIsZWxlbWVudDp0LGN1cnNvcjpyfSl9ZnVuY3Rpb24gdyh7ZWxlbWVudHM6byxzYW5pdHk6dX0pe2NvbnN0e2VsZW1lbnQ6bCxtZWFzdXJlRWxlbWVudDpwfT1vLHY9e2NsaWNrKHQpe2NvbnN0IG49dC50YXJnZXQ7aWYobD09PWYoKSYmbC5jb250YWlucyhuKSl7YyYmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BQcm9wYWdhdGlvbigpKTtjb25zdCBuPWkuZ2V0KGwpPy5zYW5pdHk7biYmIW0mJmUoe3R5cGU6XCJlbGVtZW50L2NsaWNrXCIsaWQ6dyxzYW5pdHk6bn0pfX0sY29udGV4dG1lbnUodCl7aWYoIShcInBhdGhcImluIHUpfHwhdS5wYXRoLnNwbGl0KFwiLlwiKS5wb3AoKT8uaW5jbHVkZXMoXCJbX2tleT09XCIpKXJldHVybjtjb25zdCBuPXQudGFyZ2V0O2w9PT1mKCkmJmwuY29udGFpbnMobikmJihjJiYodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCkpLGUoe3R5cGU6XCJlbGVtZW50L2NvbnRleHRtZW51XCIsaWQ6dyxwb3NpdGlvbjp7eDp0LmNsaWVudFgseTp0LmNsaWVudFl9LHNhbml0eTp1fSkpfSxtb3VzZWRvd24odCl7aWYodC5wcmV2ZW50RGVmYXVsdCgpLHQuY3VycmVudFRhcmdldCE9PXkuYXQoLTEpfHxsLmdldEF0dHJpYnV0ZShcImRhdGEtc2FuaXR5LWRyYWctZGlzYWJsZVwiKXx8IW4pcmV0dXJuO2NvbnN0IG89aS5nZXQobCk/LnNhbml0eTtpZighb3x8IVEobyl8fCFuZShvLnBhdGgpKXJldHVybjtjb25zdCByPWllKGwsdSxzLGkpO3ImJiQoe2VsZW1lbnQ6bCxoYW5kbGVyOmUsbW91c2VFdmVudDp0LG92ZXJsYXlHcm91cDpyLHRhcmdldDpvLG9uU2VxdWVuY2VTdGFydDooKT0+e209ITB9LG9uU2VxdWVuY2VFbmQ6KCk9PntzZXRUaW1lb3V0KCgoKT0+e209ITF9KSwyNTApfX0pfSxtb3VzZW1vdmUoZSl7di5tb3VzZWVudGVyKGUpO2NvbnN0IHQ9ZS5jdXJyZW50VGFyZ2V0O3QmJih0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWVudGVyXCIsdi5tb3VzZWVudGVyKSx0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsdi5tb3VzZWxlYXZlKSl9LG1vdXNlZW50ZXIoKXtkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwidmVyY2VsLWxpdmUtZmVlZGJhY2tcIikmJmwuY2xvc2VzdChcIltkYXRhLXZlcmNlbC1lZGl0LWluZm9dXCIpfHxsLmNsb3Nlc3QoXCJbZGF0YS12ZXJjZWwtZWRpdC10YXJnZXRdXCIpfHwoeS5wdXNoKGwpLGUoe3R5cGU6XCJlbGVtZW50L21vdXNlZW50ZXJcIixpZDp3LHJlY3Q6TChsKX0pLGcoKSl9LG1vdXNlbGVhdmUobil7ZnVuY3Rpb24gbygpe3kucG9wKCk7Y29uc3QgdD1mKCk7aWYoZSh7dHlwZTpcImVsZW1lbnQvbW91c2VsZWF2ZVwiLGlkOnd9KSx0KXtjb25zdCBuPWkuZ2V0KHQpO24mJmUoe3R5cGU6XCJlbGVtZW50L21vdXNlZW50ZXJcIixpZDpuLmlkLHJlY3Q6TCh0KX0pfWcoKX1jb25zdHtyZWxhdGVkVGFyZ2V0OnJ9PW4scz1XKHIpLGE9dC5jb250YWlucyhzKTtpZih6KHMpJiZhKXJldHVybiBmdW5jdGlvbiBlKHQpe2NvbnN0IG49cj0+e2NvbnN0e3JlbGF0ZWRUYXJnZXQ6aX09cjtXKGkpP2kmJnooaSkmJih0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsbiksZShpKSk6KHQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbGVhdmVcIixuKSxvKCkpfTt0LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWxlYXZlXCIsbil9KHMpO28oKX19LHc9RSgpLHg9e2lkOncsZWxlbWVudHM6byxzYW5pdHk6dSxoYW5kbGVyczp2fTtzLmFkZChsKSxhLnNldChwLGwpLHIuc2V0KHcsbCksaS5zZXQobCx4KSxkPy5vYnNlcnZlKGwpLGUoe3R5cGU6XCJlbGVtZW50L3JlZ2lzdGVyXCIsaWQ6dyxlbGVtZW50OmwscmVjdDpMKGwpLHNhbml0eTp1LGRyYWdEaXNhYmxlZDohIWwuZ2V0QXR0cmlidXRlKFwiZGF0YS1zYW5pdHktZHJhZy1kaXNhYmxlXCIpfSksaCh4KX1mdW5jdGlvbiB4KHtlbGVtZW50czp0LHNhbml0eTpufSl7Y29uc3R7ZWxlbWVudDpvfT10LHI9aS5nZXQobyk7ciYmKGkuc2V0KG8sey4uLnIsc2FuaXR5Om59KSxlKHt0eXBlOlwiZWxlbWVudC91cGRhdGVcIixpZDpyLmlkLHJlY3Q6TChvKSxzYW5pdHk6bn0pKX1mdW5jdGlvbiBiKGUpe2NvbnN0IHQ9dGUoZSk7Zm9yKGNvbnN0IGUgb2YgdCl7Y29uc3R7ZWxlbWVudDp0fT1lLmVsZW1lbnRzO2kuaGFzKHQpP3goZSk6dyhlKX19ZnVuY3Rpb24gTSh0KXtjb25zdCBuPWkuZ2V0KHQpO2lmKG4pe2NvbnN0e2lkOm8saGFuZGxlcnM6YX09bjtwKHQsYSksdS51bm9ic2VydmUodCksaS5kZWxldGUodCkscy5kZWxldGUodCksci5kZWxldGUobyksZSh7dHlwZTpcImVsZW1lbnQvdW5yZWdpc3RlclwiLGlkOm99KX19ZnVuY3Rpb24gayhlKXtsZXQgbj0hMTtmb3IoY29uc3QgbyBvZiBlKXtjb25zdHt0YXJnZXQ6ZSx0eXBlOnJ9PW8saT1cImNoYXJhY3RlckRhdGFcIj09PXI/ZS5wYXJlbnRFbGVtZW50OmU7aT09PXR8fHQuY29udGFpbnMoaSl8fChuPSEwLHooaSkmJmIoe2NoaWxkTm9kZXM6W2ldfSkpfWlmKG4pZm9yKGNvbnN0IGUgb2YgcyllLmlzQ29ubmVjdGVkfHxNKGUpfWZ1bmN0aW9uIEkodCl7Y29uc3Qgbj1pLmdldCh0KTtuJiZlKHt0eXBlOlwiZWxlbWVudC91cGRhdGVSZWN0XCIsaWQ6bi5pZCxyZWN0OkwodCl9KX1mdW5jdGlvbiBUKGUpe2Zvcihjb25zdCB0IG9mIGUpe2NvbnN0IGU9dC50YXJnZXQ7aWYoeihlKSl7Y29uc3QgdD1hLmdldChlKTtpZighdClyZXR1cm47SSh0KX19fWZ1bmN0aW9uIFMoZSl7aWYobylmb3IoY29uc3QgdCBvZiBlKXtjb25zdHt0YXJnZXQ6ZX09dCxuPXooZSkmJmkuZ2V0KGUpO24mJih0LmlzSW50ZXJzZWN0aW5nP2gobik6dihuKSl9fWZ1bmN0aW9uIEQodCl7Y29uc3Qgbj1XKHQudGFyZ2V0KTtuP1wiY2FwdHVyZVwiPT09bi5kYXRhc2V0LnNhbml0eU92ZXJsYXlFbGVtZW50JiYodC5wcmV2ZW50RGVmYXVsdCgpLHQuc3RvcFByb3BhZ2F0aW9uKCkpOih5PVtdLGUoe3R5cGU6XCJvdmVybGF5L2JsdXJcIn0pKX1mdW5jdGlvbiBVKCl7Zm9yKGNvbnN0IGUgb2YgcylJKGUpfWZ1bmN0aW9uIEEodCl7XCJFc2NhcGVcIj09PXQua2V5JiYoeT1bXSxlKHt0eXBlOlwib3ZlcmxheS9ibHVyXCJ9KSl9ZnVuY3Rpb24gTihlKXtjb25zdHt0YXJnZXQ6dH09ZTtpZih0IT09d2luZG93LmRvY3VtZW50JiZ6KHQpKWZvcihjb25zdCBlIG9mIHMpdC5jb250YWlucyhlKSYmSShlKX1mdW5jdGlvbiBSKCl7b3x8KGQ9bmV3IEludGVyc2VjdGlvbk9ic2VydmVyKFMse3RocmVzaG9sZDouM30pLHMuZm9yRWFjaCgoZT0+ZC5vYnNlcnZlKGUpKSksZSh7dHlwZTpcIm92ZXJsYXkvYWN0aXZhdGVcIn0pLG89ITApfWZ1bmN0aW9uIE8oKXtvJiYoZD8uZGlzY29ubmVjdCgpLHMuZm9yRWFjaCgoZT0+e2NvbnN0IHQ9aS5nZXQoZSk7dCYmdih0KX0pKSxlKHt0eXBlOlwib3ZlcmxheS9kZWFjdGl2YXRlXCJ9KSxvPSExKX1yZXR1cm4gd2luZG93LmRvY3VtZW50LmZvbnRzLnJlYWR5LnRoZW4oKCgpPT57Zm9yKGNvbnN0IGUgb2YgcylJKGUpfSkpLHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixEKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcImNvbnRleHRtZW51XCIsRCksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsQSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIixVKSx3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLE4se2NhcHR1cmU6ITAscGFzc2l2ZTohMH0pLHU9bmV3IFJlc2l6ZU9ic2VydmVyKFQpLGw9bmV3IE11dGF0aW9uT2JzZXJ2ZXIoayksbC5vYnNlcnZlKGRvY3VtZW50LmJvZHkse2F0dHJpYnV0ZXM6ITAsY2hhcmFjdGVyRGF0YTohMCxjaGlsZExpc3Q6ITAsc3VidHJlZTohMH0pLGIoZG9jdW1lbnQuYm9keSksUigpLHthY3RpdmF0ZTpSLGRlYWN0aXZhdGU6TyxkZXN0cm95OmZ1bmN0aW9uKCl7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLEQpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwiY29udGV4dG1lbnVcIixEKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIixBKSx3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLFUpLHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsTiksbC5kaXNjb25uZWN0KCksdS5kaXNjb25uZWN0KCkscy5mb3JFYWNoKChlPT57TShlKX0pKSxyLmNsZWFyKCkscy5jbGVhcigpLHk9W10sTygpfX19Y29uc3QgYWU9L19rZXlcXHMqPT1cXHMqWydcIl0oLiopWydcIl0vLGNlPS9eXFxkKjpcXGQqJC87ZnVuY3Rpb24gdWUoZSl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIGV8fFwic3RyaW5nXCI9PXR5cGVvZiBlJiYvXlxcW1xcZCtcXF0kLy50ZXN0KGUpfWZ1bmN0aW9uIGRlKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlP2FlLnRlc3QoZS50cmltKCkpOlwib2JqZWN0XCI9PXR5cGVvZiBlJiZcIl9rZXlcImluIGV9Y29uc3QgbGU9L1teLltcXF1dK3xcXFsoPzooLT9cXGQrKD86XFwuXFxkKyk/KXwoW1wiJ10pKCg/Oig/IVxcMilbXlxcXFxdfFxcXFwuKSo/KVxcMilcXF18KD89KD86XFwufFxcW1xcXSkoPzpcXC58XFxbXFxdfCQpKS9nLG1lPS9fa2V5XFxzKj09XFxzKlsnXCJdKC4qKVsnXCJdLztmdW5jdGlvbiB5ZShlLHQsbil7Y29uc3Qgbz1cInN0cmluZ1wiPT10eXBlb2YgdD9mdW5jdGlvbihlKXtpZihcInN0cmluZ1wiIT10eXBlb2YgZSl0aHJvdyBuZXcgRXJyb3IoXCJQYXRoIGlzIG5vdCBhIHN0cmluZ1wiKTtjb25zdCB0PWUubWF0Y2gobGUpO2lmKCF0KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcGF0aCBzdHJpbmdcIik7cmV0dXJuIHQubWFwKGZlKX0odCk6dDtpZighQXJyYXkuaXNBcnJheShvKSl0aHJvdyBuZXcgRXJyb3IoXCJQYXRoIG11c3QgYmUgYW4gYXJyYXkgb3IgYSBzdHJpbmdcIik7bGV0IHI9ZTtmb3IobGV0IGU9MDtlPG8ubGVuZ3RoO2UrKyl7Y29uc3QgdD1vW2VdO2lmKHVlKHQpKXtpZighQXJyYXkuaXNBcnJheShyKSlyZXR1cm4gbjtyPXJbdF19aWYoZGUodCkpe2lmKCFBcnJheS5pc0FycmF5KHIpKXJldHVybiBuO3I9ci5maW5kKChlPT5lLl9rZXk9PT10Ll9rZXkpKX1pZihcInN0cmluZ1wiPT10eXBlb2YgdCYmKHI9XCJvYmplY3RcIj09dHlwZW9mIHImJm51bGwhPT1yP3JbdF06dm9pZCAwKSx0eXBlb2Ygcj5cInVcIilyZXR1cm4gbn1yZXR1cm4gcn1mdW5jdGlvbiBmZShlKXtyZXR1cm4gdWUoZSk/ZnVuY3Rpb24oZSl7cmV0dXJuIE51bWJlcihlLnJlcGxhY2UoL1teXFxkXS9nLFwiXCIpKX0oZSk6ZGUoZSk/ZnVuY3Rpb24oZSl7cmV0dXJue19rZXk6ZS5tYXRjaChtZSlbMV19fShlKTpmdW5jdGlvbihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSYmY2UudGVzdChlKSlyZXR1cm4hMDtpZighQXJyYXkuaXNBcnJheShlKXx8MiE9PWUubGVuZ3RoKXJldHVybiExO2NvbnN0W3Qsbl09ZTtyZXR1cm4hKFwibnVtYmVyXCIhPXR5cGVvZiB0JiZcIlwiIT09dHx8XCJudW1iZXJcIiE9dHlwZW9mIG4mJlwiXCIhPT1uKX0oZSk/ZnVuY3Rpb24oZSl7Y29uc3RbdCxuXT1lLnNwbGl0KFwiOlwiKS5tYXAoKGU9PlwiXCI9PT1lP2U6TnVtYmVyKGUpKSk7cmV0dXJuW3Qsbl19KGUpOmV9ZnVuY3Rpb24gcGUoZSl7cmV0dXJuIGUuc3RhcnRzV2l0aCh0KX1mdW5jdGlvbiBoZShlKXtyZXR1cm4gcGUoZSk/ZTp0K2V9ZnVuY3Rpb24gdmUoZSl7cmV0dXJuIHBlKGUpP2Uuc2xpY2UodC5sZW5ndGgpOmV9Y29uc3QgZ2U9cyh7dHlwZXM6e30sYWN0aW9uczp7XCJlbWl0IHN5bmMgZXZlbnRcIjphKCgoe2V2ZW50OmV9KT0+KGMoZSxcInN5bmNcIiksZSkpKSxcImVtaXQgbXV0YXRpb24gZXZlbnRcIjphKCgoe2V2ZW50OmV9KT0+KGMoZSxcIm11dGF0aW9uXCIpLGUpKSksXCJlbWl0IHJlYmFzZWQgZXZlbnRcIjphKCgoe2V2ZW50OmV9KT0+KGMoZSxbXCJyZWJhc2VkLmxvY2FsXCIsXCJyZWJhc2VkLnJlbW90ZVwiXSksZSkpKSxcImVtaXQgcHJpc3RpbmUgZXZlbnRcIjphKCgoe2V2ZW50OmV9KT0+KGMoZSxbXCJwcmlzdGluZVwiXSksZSkpKSxcImFkZCBkb2N1bWVudCBhY3RvclwiOnUoe2RvY3VtZW50czooe2NvbnRleHQ6ZSxldmVudDp0LHNwYXduOm59KT0+e2ModCxcIm9ic2VydmVcIik7Y29uc3Qgbz10LmRvY3VtZW50SWQ7cmV0dXJuIGUuZG9jdW1lbnRzW29dP2UuZG9jdW1lbnRzOnsuLi5lLmRvY3VtZW50cyxbb106bihcImRvY3VtZW50TXV0YXRvck1hY2hpbmVcIix7aW5wdXQ6e2lkOm8sY2xpZW50OmUuY2xpZW50LHNoYXJlZExpc3RlbmVyOmUuc2hhcmVkTGlzdGVuZXJ8fG0oZS5jbGllbnQpfSxpZDpvfSl9fX0pLFwic3RvcCByZW1vdGUgc25hcHNob3RcIjpkKCgoe2NvbnRleHQ6ZSxldmVudDp0fSk9PihjKHQsXCJ1bm9ic2VydmVcIiksZS5kb2N1bWVudHNbdC5kb2N1bWVudElkXSkpKSxcInJlbW92ZSByZW1vdGUgc25hcHNob3QgZnJvbSBjb250ZXh0XCI6dSh7ZG9jdW1lbnRzOih7Y29udGV4dDplLGV2ZW50OnR9KT0+e2lmKGModCxcInVub2JzZXJ2ZVwiKSwhZS5kb2N1bWVudHNbdC5kb2N1bWVudElkXSlyZXR1cm4gZS5kb2N1bWVudHM7Y29uc3R7W3QuZG9jdW1lbnRJZF06biwuLi5vfT1lLmRvY3VtZW50cztyZXR1cm4gb319KX0sYWN0b3JzOntkb2N1bWVudE11dGF0b3JNYWNoaW5lOnl9fSkuY3JlYXRlTWFjaGluZSh7aWQ6XCJkYXRhc2V0LW11dGF0b3JcIixjb250ZXh0Oih7aW5wdXQ6ZX0pPT4oe2RvY3VtZW50czp7fSxjbGllbnQ6ZS5jbGllbnQsc2hhcmVkTGlzdGVuZXI6ZS5zaGFyZWRMaXN0ZW5lcn0pLG9uOntzeW5jOnthY3Rpb25zOltcImVtaXQgc3luYyBldmVudFwiXX0sbXV0YXRpb246e2FjdGlvbnM6W1wiZW1pdCBtdXRhdGlvbiBldmVudFwiXX0sXCJyZWJhc2VkLipcIjp7YWN0aW9uczpbXCJlbWl0IHJlYmFzZWQgZXZlbnRcIl19LHByaXN0aW5lOnthY3Rpb25zOltcImVtaXQgcHJpc3RpbmUgZXZlbnRcIl19LG9ic2VydmU6e2FjdGlvbnM6W1wiYWRkIGRvY3VtZW50IGFjdG9yXCJdfSx1bm9ic2VydmU6e2FjdGlvbnM6W1wic3RvcCByZW1vdGUgc25hcHNob3RcIixcInJlbW92ZSByZW1vdGUgc25hcHNob3QgZnJvbSBjb250ZXh0XCJdfX0saW5pdGlhbDpcInByaXN0aW5lXCIsc3RhdGVzOntwcmlzdGluZTp7fX19KSx3ZT1sKCk7bGV0IHhlPXdlO2NvbnN0IGJlPW5ldyBTZXQ7ZnVuY3Rpb24gRWUoZSl7cmV0dXJuIGU9PT13ZX1mdW5jdGlvbiBMZShlKXt4ZT1lO2Zvcihjb25zdCBlIG9mIGJlKWUoKX1mdW5jdGlvbiBNZSgpe2NvbnN0IGU9ZigoZT0+KGJlLmFkZChlKSwoKT0+YmUuZGVsZXRlKGUpKSksW10pO3JldHVybiBwKGUsKCgpPT54ZSksKCgpPT53ZSkpfWZ1bmN0aW9uIGtlKGUsdCl7bGV0IG47cmV0dXJuKC4uLm8pPT57Y2xlYXJUaW1lb3V0KG4pLG49c2V0VGltZW91dCgoKCk9PntlLmFwcGx5KGUsbyl9KSx0KX19ZnVuY3Rpb24gSWUoZSx0KXtjb25zdCBuPXdpbmRvdy5zZWxmIT09d2luZG93LnRvcHx8d2luZG93Lm9wZW5lcjtpZihFZSh0KXx8IW4pdGhyb3cgbmV3IEVycm9yKFwiVGhlIGB1c2VEb2N1bWVudHNgIGhvb2sgY2Fubm90IGJlIHVzZWQgaW4gdGhpcyBjb250ZXh0XCIpO2NvbnN0IG89aGUoZSkscj12ZShlKSxpPXQuZ2V0U25hcHNob3QoKS5jb250ZXh0Py5kb2N1bWVudHMscz1pPy5bb10sYT1pPy5bcl07aWYoIXMpdGhyb3cgbmV3IEVycm9yKGBEb2N1bWVudCBcIiR7ZX1cIiBub3QgZm91bmRgKTtjb25zdCBjPXM/LmdldFNuYXBzaG90KCkuY29udGV4dD8ubG9jYWx8fGE/LmdldFNuYXBzaG90KCkuY29udGV4dD8ubG9jYWw7aWYoIWMpdGhyb3cgbmV3IEVycm9yKGBTbmFwc2hvdCBmb3IgZG9jdW1lbnQgXCIke2V9XCIgbm90IGZvdW5kYCk7cmV0dXJue2RyYWZ0SWQ6byxwdWJsaXNoZWRJZDpyLGRyYWZ0RG9jOnMscHVibGlzaGVkRG9jOmEsc25hcHNob3Q6Y319ZnVuY3Rpb24gVGUoZSx0KXtyZXR1cm4oKT0+e2NvbnN0e2RyYWZ0RG9jOm59PUllKGUsdCk7bi5zZW5kKHt0eXBlOlwic3VibWl0XCJ9KX19ZnVuY3Rpb24gU2UoZSx0KXtyZXR1cm4gbj0+e2NvbnN0e3NuYXBzaG90Om99PUllKGUsdCk7cmV0dXJuIG4/eWUobyxuKTpvfX1mdW5jdGlvbiBEZShlLHQpe3JldHVybihuLG8pPT57Y29uc3R7ZHJhZnREb2M6cyxkcmFmdElkOmEscHVibGlzaGVkSWQ6YyxzbmFwc2hvdDp1fT1JZShlLHQpLHtjb21taXQ6ZD0hMH09b3x8e30sbD1cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24oe2RyYWZ0SWQ6YSxwdWJsaXNoZWRJZDpjLHNuYXBzaG90OnV9KTpuO3Muc2VuZCh7dHlwZTpcIm11dGF0ZVwiLG11dGF0aW9uczpbcih7Li4udSxfaWQ6YX0pLGkoYSxsKV19KSxkJiYoXCJvYmplY3RcIj09dHlwZW9mIGQmJlwiZGVib3VuY2VcImluIGQ/a2UoKCgpPT5zLnNlbmQoe3R5cGU6XCJzdWJtaXRcIn0pKSxkLmRlYm91bmNlKSgpOnMuc2VuZCh7dHlwZTpcInN1Ym1pdFwifSkpfX1mdW5jdGlvbiBVZSgpe2NvbnN0IGU9TWUoKTtyZXR1cm57Z2V0RG9jdW1lbnQ6dD0+KHtpZDp0LGNvbW1pdDpUZSh0LGUpLGdldDpTZSh0LGUpLHBhdGNoOkRlKHQsZSl9KSxtdXRhdGVEb2N1bWVudDoodCxuLG8pPT57Y29uc3R7ZHJhZnREb2M6cn09SWUodCxlKSx7Y29tbWl0Omk9ITB9PW98fHt9O3Iuc2VuZCh7dHlwZTpcIm11dGF0ZVwiLG11dGF0aW9uczpufSksaSYmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiZcImRlYm91bmNlXCJpbiBpP2tlKCgoKT0+ci5zZW5kKHt0eXBlOlwic3VibWl0XCJ9KSksaS5kZWJvdW5jZSkoKTpyLnNlbmQoe3R5cGU6XCJzdWJtaXRcIn0pKX19fWZ1bmN0aW9uIEFlKCl7cmV0dXJuIEUoKX1mdW5jdGlvbiBOZShlKXtjb25zdCB0PShcInN0cmluZ1wiPT10eXBlb2YgZT9lOmUucGF0aCkubWF0Y2goL14oLispXFxbX2tleT09XCIoLispXCJdJC8pO2lmKCF0KXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcGF0aFwiKTtjb25zdFssbixvXT10O2lmKCFufHwhbyl0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHBhdGhcIik7cmV0dXJue3BhdGg6bixrZXk6b319ZXhwb3J0e1YgYXMgTyxVZSBhcyBhLE5lIGFzIGIsc2UgYXMgYyxnZSBhcyBkLHllIGFzIGUsQWUgYXMgZix2ZSBhcyBnLGhlIGFzIGgsRWUgYXMgaSxMZSBhcyBqLHJlIGFzIHMsTWUgYXMgdX07Ly8jIHNvdXJjZU1hcHBpbmdVUkw9bXV0YXRpb25zLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VisualEditing: () => (/* binding */ ZS),\n/* harmony export */   createDataAttribute: () => (/* reexport safe */ _chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.c)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-experimental/jsx-runtime.js\");\n/* harmony import */ var _chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../_chunks-es/create-data-attribute.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/create-data-attribute.js\");\n/* harmony import */ var _sanity_comlink__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sanity/comlink */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/comlink/dist/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-experimental/index.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/actors/dist/xstate-actors.development.esm.js\");\n/* harmony import */ var xstate__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! xstate */ \"(app-pages-browser)/./node_modules/xstate/dist/raise-1db27a82.development.esm.js\");\n/* harmony import */ var _sanity_mutate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sanity/mutate */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/index.js\");\n/* harmony import */ var _sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sanity/mutate/_unstable_machine */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/mutate/dist/_unstable_machine.js\");\n/* harmony import */ var _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../_chunks-es/mutations.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/_chunks-es/mutations.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/Subject.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/filter.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/merge.js\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-dom */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react-dom-experimental/index.js\");\n/* harmony import */ var use_effect_event__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! use-effect-event */ \"(app-pages-browser)/./node_modules/use-effect-event/dist/index.js\");\n/* harmony import */ var _sanity_client_csm__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sanity/client/csm */ \"(app-pages-browser)/./node_modules/@sanity/client/dist/_chunks-es/resolveEditInfo.js\");\n/* harmony import */ var scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! scroll-into-view-if-needed */ \"(app-pages-browser)/./node_modules/scroll-into-view-if-needed/dist/index.js\");\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/process/browser.js\");\nconst ce=e=>{const{comlink:t}=e;return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=()=>{t.post({type:\"visual-editing/meta\",data:{title:document.title}})},n=new MutationObserver((([t])=>{\"TITLE\"===t.target.nodeName&&e()}));return n.observe(document.head,{subtree:!0,characterData:!0,childList:!0}),e(),()=>n.disconnect()}),[t]),null};const de={_version:2,avatar:{sizes:[{distance:-4,size:19},{distance:-4,size:25},{distance:-8,size:33},{distance:-12,size:49}],focusRing:{offset:1,width:1}},button:{textWeight:\"medium\",border:{width:1},focusRing:{offset:-1,width:1}},card:{border:{width:1},focusRing:{offset:-1,width:1},shadow:{outline:.5}},container:[320,640,960,1280,1600,1920],media:[360,600,900,1200,1800,2400],layer:{dialog:{zOffset:600},popover:{zOffset:400},tooltip:{zOffset:200}},radius:[0,1,3,6,9,12,21],shadow:[null,{umbra:[0,0,0,0],penumbra:[0,0,0,0],ambient:[0,0,0,0]},{umbra:[0,3,5,-2],penumbra:[0,6,10,0],ambient:[0,1,18,1]},{umbra:[0,7,8,-4],penumbra:[0,12,17,2],ambient:[0,5,22,4]},{umbra:[0,9,11,-5],penumbra:[0,18,28,2],ambient:[0,7,34,6]},{umbra:[0,11,15,-7],penumbra:[0,24,38,3],ambient:[0,9,46,8]}],space:[0,4,8,12,20,32,52,84,136,220],input:{border:{width:1},checkbox:{size:17,focusRing:{offset:-1,width:1}},radio:{size:17,markSize:9,focusRing:{offset:-1,width:1}},switch:{width:25,height:17,padding:5,transitionDurationMs:150,transitionTimingFunction:\"ease-out\",focusRing:{offset:1,width:1}},select:{focusRing:{offset:-1,width:1}},text:{focusRing:{offset:-1,width:1}}},style:{button:{root:{transition:\"background-color 100ms,border-color 100ms,color 100ms\"}}}},ue=new WeakMap;function he(e){const t=ue.get(e);if(t)return t;const n=fe(e,e.card.enabled),r={_blend:e._blend||(e.dark?\"screen\":\"multiply\"),_dark:e.dark,accent:n.accent,avatar:n.avatar,backdrop:e.base.shadow.ambient,badge:n.badge,bg:e.base.bg,border:e.base.border,button:{default:pe(e,e.button.default),ghost:pe(e,e.button.ghost),bleed:pe(e,e.button.bleed)},code:n.code,fg:e.base.fg,focusRing:e.base.focusRing,icon:n.muted.fg,input:{default:ge(e.input.default),invalid:ge(e.input.invalid)},kbd:n.kbd,link:n.link,muted:{...n.muted,bg:e.selectable?.default.enabled.bg2||e.base.bg},selectable:pe(e,e.selectable||e.muted),shadow:e.base.shadow,skeleton:{from:e.skeleton?.from||e.base.border,to:e.skeleton?.to||e.base.border},syntax:e.syntax};return ue.set(e,r),r}function pe(e,t){return{default:{enabled:fe(e,t.default.enabled),hovered:fe(e,t.default.hovered),pressed:fe(e,t.default.pressed),selected:fe(e,t.default.selected),disabled:fe(e,t.default.disabled)},primary:{enabled:fe(e,t.primary.enabled),hovered:fe(e,t.primary.hovered),pressed:fe(e,t.primary.pressed),selected:fe(e,t.primary.selected),disabled:fe(e,t.primary.disabled)},positive:{enabled:fe(e,t.positive.enabled),hovered:fe(e,t.positive.hovered),pressed:fe(e,t.positive.pressed),selected:fe(e,t.positive.selected),disabled:fe(e,t.positive.disabled)},caution:{enabled:fe(e,t.caution.enabled),hovered:fe(e,t.caution.hovered),pressed:fe(e,t.caution.pressed),selected:fe(e,t.caution.selected),disabled:fe(e,t.caution.disabled)},critical:{enabled:fe(e,t.critical.enabled),hovered:fe(e,t.critical.hovered),pressed:fe(e,t.critical.pressed),selected:fe(e,t.critical.selected),disabled:fe(e,t.critical.disabled)}}}function fe(e,t){return{...t,avatar:{gray:{bg:e.spot.gray,fg:e.base.bg},blue:{bg:e.spot.blue,fg:e.base.bg},purple:{bg:e.spot.purple,fg:e.base.bg},magenta:{bg:e.spot.magenta,fg:e.base.bg},red:{bg:e.spot.red,fg:e.base.bg},orange:{bg:e.spot.orange,fg:e.base.bg},yellow:{bg:e.spot.yellow,fg:e.base.bg},green:{bg:e.spot.green,fg:e.base.bg},cyan:{bg:e.spot.cyan,fg:e.base.bg}},badge:{default:{bg:e.muted.default.enabled.bg,fg:e.muted.default.enabled.fg,dot:e.muted.default.enabled.muted.fg,icon:e.muted.default.enabled.muted.fg},primary:{bg:e.muted.primary.enabled.bg,fg:e.muted.primary.enabled.fg,dot:e.muted.primary.enabled.muted.fg,icon:e.muted.primary.enabled.muted.fg},positive:{bg:e.muted.positive.enabled.bg,fg:e.muted.positive.enabled.fg,dot:e.muted.positive.enabled.muted.fg,icon:e.muted.positive.enabled.muted.fg},caution:{bg:e.muted.caution.enabled.bg,fg:e.muted.caution.enabled.fg,dot:e.muted.caution.enabled.muted.fg,icon:e.muted.caution.enabled.muted.fg},critical:{bg:e.muted.critical.enabled.bg,fg:e.muted.critical.enabled.fg,dot:e.muted.critical.enabled.muted.fg,icon:e.muted.critical.enabled.muted.fg}},kbd:{bg:e.muted.default.enabled.bg,fg:e.muted.default.enabled.fg,border:e.muted.default.enabled.border},muted:{...e.muted.default.enabled.muted,bg:t.bg2||t.bg},skeleton:{from:t.skeleton?.from||t.border,to:t.skeleton?.to||t.border}}}function ge(e){return{enabled:me(e.enabled),disabled:me(e.disabled),readOnly:me(e.readOnly),hovered:me(e.hovered)}}function me(e){return{bg:e.bg,border:e.border,fg:e.fg,muted:{bg:e.bg2},placeholder:e.placeholder}}const we=new WeakMap;function ve(e){if(e.sanity.v2?._resolved)return e.sanity.v2;const t=we.get(e);if(t)return t;const n={_version:2,_resolved:!0,avatar:{...de.avatar,...e.sanity.avatar},button:{...de.button,...e.sanity.button},card:de.card,color:he(e.sanity.color),container:e.sanity.container,font:e.sanity.fonts,input:{...de.input,...e.sanity.input,checkbox:{...de.input.checkbox,...e.sanity.input.checkbox},radio:{...de.input.radio,...e.sanity.input.radio},switch:{...de.input.switch,...e.sanity.input.switch}},layer:e.sanity.layer??de.layer,media:e.sanity.media,radius:e.sanity.radius,shadow:e.sanity.shadows,space:e.sanity.space,style:e.sanity.styles};return we.set(e,n),n}const ye=[\"gray\",\"blue\",\"purple\",\"magenta\",\"red\",\"orange\",\"yellow\",\"green\",\"cyan\"],be=[\"50\",\"100\",\"200\",\"300\",\"400\",\"500\",\"600\",\"700\",\"800\",\"900\",\"950\"],Ce={black:{title:\"Black\",hex:\"#0d0e12\"},white:{title:\"White\",hex:\"#ffffff\"},...{gray:{50:{title:\"Gray 50\",hex:\"#f6f6f8\"},100:{title:\"Gray 100\",hex:\"#eeeef1\"},200:{title:\"Gray 200\",hex:\"#e3e4e8\"},300:{title:\"Gray 300\",hex:\"#bbbdc9\"},400:{title:\"Gray 400\",hex:\"#9499ad\"},500:{title:\"Gray 500\",hex:\"#727892\"},600:{title:\"Gray 600\",hex:\"#515870\"},700:{title:\"Gray 700\",hex:\"#383d51\"},800:{title:\"Gray 800\",hex:\"#252837\"},900:{title:\"Gray 900\",hex:\"#1b1d27\"},950:{title:\"Gray 950\",hex:\"#13141b\"}},blue:{50:{title:\"Blue 50\",hex:\"#f5f8ff\"},100:{title:\"Blue 100\",hex:\"#e5edff\"},200:{title:\"Blue 200\",hex:\"#dbe5ff\"},300:{title:\"Blue 300\",hex:\"#a8bfff\"},400:{title:\"Blue 400\",hex:\"#7595ff\"},500:{title:\"Blue 500\",hex:\"#556bfc\"},600:{title:\"Blue 600\",hex:\"#4043e7\"},700:{title:\"Blue 700\",hex:\"#2927aa\"},800:{title:\"Blue 800\",hex:\"#192457\"},900:{title:\"Blue 900\",hex:\"#161a41\"},950:{title:\"Blue 950\",hex:\"#101228\"}},purple:{50:{title:\"Purple 50\",hex:\"#f8f5ff\"},100:{title:\"Purple 100\",hex:\"#f1ebff\"},200:{title:\"Purple 200\",hex:\"#ece1fe\"},300:{title:\"Purple 300\",hex:\"#ccb1fc\"},400:{title:\"Purple 400\",hex:\"#b087f7\"},500:{title:\"Purple 500\",hex:\"#8f57ef\"},600:{title:\"Purple 600\",hex:\"#721fe5\"},700:{title:\"Purple 700\",hex:\"#4c1a9e\"},800:{title:\"Purple 800\",hex:\"#2f1862\"},900:{title:\"Purple 900\",hex:\"#23173f\"},950:{title:\"Purple 950\",hex:\"#181128\"}},magenta:{50:{title:\"Magenta 50\",hex:\"#fef6f9\"},100:{title:\"Magenta 100\",hex:\"#fde8ef\"},200:{title:\"Magenta 200\",hex:\"#fcdee9\"},300:{title:\"Magenta 300\",hex:\"#f7abc5\"},400:{title:\"Magenta 400\",hex:\"#f0709b\"},500:{title:\"Magenta 500\",hex:\"#e72767\"},600:{title:\"Magenta 600\",hex:\"#b11651\"},700:{title:\"Magenta 700\",hex:\"#7c1342\"},800:{title:\"Magenta 800\",hex:\"#4b1130\"},900:{title:\"Magenta 900\",hex:\"#341325\"},950:{title:\"Magenta 950\",hex:\"#1f0f14\"}},red:{50:{title:\"Red 50\",hex:\"#fff6f5\"},100:{title:\"Red 100\",hex:\"#ffe7e5\"},200:{title:\"Red 200\",hex:\"#ffdedc\"},300:{title:\"Red 300\",hex:\"#fdada5\"},400:{title:\"Red 400\",hex:\"#f77769\"},500:{title:\"Red 500\",hex:\"#ef4434\"},600:{title:\"Red 600\",hex:\"#cc2819\"},700:{title:\"Red 700\",hex:\"#8b2018\"},800:{title:\"Red 800\",hex:\"#4d1714\"},900:{title:\"Red 900\",hex:\"#321615\"},950:{title:\"Red 950\",hex:\"#1e1011\"}},orange:{50:{title:\"Orange 50\",hex:\"#fff7f0\"},100:{title:\"Orange 100\",hex:\"#ffeadb\"},200:{title:\"Orange 200\",hex:\"#ffddc7\"},300:{title:\"Orange 300\",hex:\"#ffb685\"},400:{title:\"Orange 400\",hex:\"#ff8e42\"},500:{title:\"Orange 500\",hex:\"#fa6400\"},600:{title:\"Orange 600\",hex:\"#b14802\"},700:{title:\"Orange 700\",hex:\"#7c3404\"},800:{title:\"Orange 800\",hex:\"#461e07\"},900:{title:\"Orange 900\",hex:\"#32160b\"},950:{title:\"Orange 950\",hex:\"#21120d\"}},yellow:{50:{title:\"Yellow 50\",hex:\"#fefae1\"},100:{title:\"Yellow 100\",hex:\"#fcf3bb\"},200:{title:\"Yellow 200\",hex:\"#f9e994\"},300:{title:\"Yellow 300\",hex:\"#f7d455\"},400:{title:\"Yellow 400\",hex:\"#f9bc15\"},500:{title:\"Yellow 500\",hex:\"#d28a04\"},600:{title:\"Yellow 600\",hex:\"#965908\"},700:{title:\"Yellow 700\",hex:\"#653a0b\"},800:{title:\"Yellow 800\",hex:\"#3b220c\"},900:{title:\"Yellow 900\",hex:\"#271a11\"},950:{title:\"Yellow 950\",hex:\"#181410\"}},green:{50:{title:\"Green 50\",hex:\"#e7fef5\"},100:{title:\"Green 100\",hex:\"#c5fce8\"},200:{title:\"Green 200\",hex:\"#a9f9dc\"},300:{title:\"Green 300\",hex:\"#59f3ba\"},400:{title:\"Green 400\",hex:\"#0ff0a1\"},500:{title:\"Green 500\",hex:\"#04b97a\"},600:{title:\"Green 600\",hex:\"#01794f\"},700:{title:\"Green 700\",hex:\"#015133\"},800:{title:\"Green 800\",hex:\"#023120\"},900:{title:\"Green 900\",hex:\"#06231a\"},950:{title:\"Green 950\",hex:\"#071715\"}},cyan:{50:{title:\"Cyan 50\",hex:\"#e7fefe\"},100:{title:\"Cyan 100\",hex:\"#c5fcfc\"},200:{title:\"Cyan 200\",hex:\"#96f8f8\"},300:{title:\"Cyan 300\",hex:\"#62efef\"},400:{title:\"Cyan 400\",hex:\"#18e2e2\"},500:{title:\"Cyan 500\",hex:\"#04b8be\"},600:{title:\"Cyan 600\",hex:\"#037782\"},700:{title:\"Cyan 700\",hex:\"#024950\"},800:{title:\"Cyan 800\",hex:\"#042f34\"},900:{title:\"Cyan 900\",hex:\"#072227\"},950:{title:\"Cyan 950\",hex:\"#0d181c\"}}}},ke={code:{family:\"ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace\",weights:{regular:400,medium:500,semibold:600,bold:700},sizes:[{ascenderHeight:4,descenderHeight:4,fontSize:10,iconSize:17,lineHeight:15,letterSpacing:0},{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:21,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:16,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:19,iconSize:29,lineHeight:27,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:22,iconSize:33,lineHeight:31,letterSpacing:0}]},heading:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',weights:{regular:700,medium:800,semibold:900,bold:900},sizes:[{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:17,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:16,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:21,iconSize:33,lineHeight:29,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:27,iconSize:41,lineHeight:35,letterSpacing:0},{ascenderHeight:9.5,descenderHeight:8.5,fontSize:33,iconSize:49,lineHeight:41,letterSpacing:0},{ascenderHeight:10.5,descenderHeight:9.5,fontSize:38,iconSize:53,lineHeight:47,letterSpacing:0}]},label:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", system-ui, sans-serif',weights:{regular:600,medium:700,semibold:800,bold:900},sizes:[{ascenderHeight:2,descenderHeight:2,fontSize:8.1,iconSize:13,lineHeight:10,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:9.5,iconSize:15,lineHeight:11,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:10.8,iconSize:17,lineHeight:12,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:12.25,iconSize:19,lineHeight:13,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:13.6,iconSize:21,lineHeight:14,letterSpacing:.5},{ascenderHeight:2,descenderHeight:2,fontSize:15,iconSize:23,lineHeight:15,letterSpacing:.5}]},text:{family:'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", \"Liberation Sans\", Helvetica, Arial, system-ui, sans-serif',weights:{regular:400,medium:500,semibold:600,bold:700},sizes:[{ascenderHeight:4,descenderHeight:4,fontSize:10,iconSize:17,lineHeight:15,letterSpacing:0},{ascenderHeight:5,descenderHeight:5,fontSize:13,iconSize:21,lineHeight:19,letterSpacing:0},{ascenderHeight:6,descenderHeight:6,fontSize:15,iconSize:25,lineHeight:23,letterSpacing:0},{ascenderHeight:7,descenderHeight:7,fontSize:18,iconSize:29,lineHeight:27,letterSpacing:0},{ascenderHeight:8,descenderHeight:8,fontSize:21,iconSize:33,lineHeight:31,letterSpacing:0}]}};function xe(e){return 2===e._version}const Le=new WeakMap;const Me=new WeakMap;function He(e){const t=Me.get(e);if(t)return t;const{avatar:n,button:r,color:o,container:i,font:a,input:s,media:l,radius:c,shadow:d,space:u,style:h}=e;return{_version:0,avatar:n,button:r,container:i,color:{light:{transparent:Ve(o.light.transparent),default:Ve(o.light.default),primary:Ve(o.light.primary),positive:Ve(o.light.positive),caution:Ve(o.light.caution),critical:Ve(o.light.critical)},dark:{transparent:Ve(o.dark.transparent),default:Ve(o.dark.default),primary:Ve(o.dark.primary),positive:Ve(o.dark.positive),caution:Ve(o.dark.caution),critical:Ve(o.dark.critical)}},focusRing:s.text.focusRing,fonts:a,input:s,media:l,radius:c,shadows:d,space:u,styles:h,v2:e}}function Ve(e){return{base:{bg:e.bg,fg:e.fg,border:e.border,focusRing:e.focusRing,shadow:e.shadow},button:e.button,card:e.selectable.default,dark:e._dark,input:{default:Re(e.input.default),invalid:Re(e.input.invalid)},muted:{...e.button.ghost,transparent:e.button.ghost.default},solid:{...e.button.default,transparent:e.button.default.default},selectable:e.selectable,spot:{gray:e.avatar.gray.bg,blue:e.avatar.blue.bg,purple:e.avatar.purple.bg,magenta:e.avatar.magenta.bg,red:e.avatar.red.bg,orange:e.avatar.orange.bg,yellow:e.avatar.yellow.bg,green:e.avatar.green.bg,cyan:e.avatar.cyan.bg},syntax:e.syntax}}function Re(e){return{enabled:Se(e.enabled),disabled:Se(e.disabled),readOnly:Se(e.readOnly),hovered:Se(e.hovered)}}function Se(e){return{bg:e.bg,bg2:e.muted.bg,border:e.border,fg:e.fg,placeholder:e.placeholder}}const Fe=[\"multiply\",\"screen\"],Ee=[\"transparent\",\"default\",\"primary\",\"positive\",\"caution\",\"critical\"],Ne=[\"default\",\"primary\",\"positive\",\"caution\",\"critical\"],Ie=[\"enabled\",\"hovered\",\"pressed\",\"selected\",\"disabled\"],Be=[\"default\",\"ghost\",\"bleed\"],je=[\"default\",\"invalid\"],$e=[\"enabled\",\"hovered\",\"readOnly\",\"disabled\"];function Ae(e){return be.includes(e)}function Te(e){return/^\\d+%$/.test(e)}function Pe(e){const t=e.split(\"/\");let n=t.shift()||\"\";const[r,o]=n.split(\" \");if(Ae(r)){const e=r,n=t.shift()||\"\";if(Te(o)){return{type:\"color\",tint:e,mix:Number(o.slice(0,-1))/100}}if(We(n)){return{type:\"color\",tint:e,opacity:Number(n)}}return{type:\"color\",tint:e}}if(function(e){return\"black\"===e||\"white\"===e}(r)){const e=r,n=t.shift()||\"\";if(Te(o)){return{type:\"color\",key:e,mix:Number(o.slice(0,-1))/100}}if(We(n)){return{type:\"color\",key:e,opacity:Number(n)}}return{type:\"color\",key:e}}if(function(e){return ye.includes(e)}(r)){const e=r;n=t.shift()||\"\";const[o,i]=n.split(\" \");if(Ae(o)){const n=o,r=t.shift()||\"\";if(Te(i)){return{type:\"color\",hue:e,tint:n,mix:Number(i.slice(0,-1))/100}}if(We(r)){return{type:\"color\",hue:e,tint:n,opacity:Number(r)}}return{type:\"color\",hue:e,tint:n}}return{type:\"hue\",value:e}}if(function(e){return Fe.includes(e)}(r))return{type:\"blendMode\",value:r}}function We(e){return\"0\"===e||/^0\\.[0-9]+$/.test(e)||\"1\"===e}const Ze=[\"500\",\"500\"];function De(e,t=Ze){const{hue:n,scheme:r}=e,o=Pe(t[\"light\"===r?0:1]);if(!o||\"color\"!==o.type)throw new Error(`Invalid color token: ${t[0]}`);return function(e){let t=\"\";return t=\"black\"===e.key||\"white\"===e.key?e.key:`${e.hue}/${e.tint}`,void 0!==e.mix?`${t} ${100*e.mix}%`:(void 0!==e.opacity&&(t+=`/${e.opacity}`),t)}({...o,hue:o.hue||n})}const ze={base:{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/600\",\"purple/400\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},backdrop:[\"gray/200/0.5\",\"black/0.5\"],badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],icon:[\"500\",\"500\"],dot:[\"500\",\"500\"]},positive:{bg:[\"200 50%\",\"900\"],fg:[\"600\",\"500\"]},caution:{bg:[\"200 50%\",\"900\"],fg:[\"600\",\"500\"]}},bg:[\"50\",\"950\"],border:[\"200\",\"800\"],code:{bg:[\"50\",\"950\"],fg:[\"600\",\"400\"]},fg:[\"800\",\"200\"],focusRing:[\"blue/500\",\"blue/500\"],icon:[\"600\",\"400\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/600\",\"blue/300\"]},muted:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},shadow:{outline:[\"500/0.3\",\"500/0.4\"],umbra:[\"gray/500/0.1\",\"black/0.2\"],penumbra:[\"gray/500/0.07\",\"black/0.14\"],ambient:[\"gray/500/0.06\",\"black/0.12\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},transparent:{bg:[\"50\",\"black\"]},default:{bg:[\"white\",\"950\"],fg:[\"800\",\"200\"],muted:{fg:[\"600\",\"400\"]}},primary:{_hue:\"blue\"},positive:{_hue:\"green\",shadow:{outline:[\"500/0.4\",\"500/0.4\"]}},caution:{_hue:\"yellow\",shadow:{outline:[\"600/0.3\",\"500/0.4\"]}},critical:{_hue:\"red\"}},button:{default:{\"*\":{\"*\":{_blend:[\"screen\",\"multiply\"],accent:{fg:[\"purple/300\",\"purple/700\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"900\",\"100\"],fg:[\"400\",\"600\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"500\",\"400\"],border:[\"500/0\",\"400/0\"],code:{bg:[\"500 20%\",\"400 20%\"],fg:[\"200\",\"600\"]},fg:[\"white\",\"black\"],icon:[\"100 70%\",\"900 70%\"],kbd:{bg:[\"black\",\"white\"],fg:[\"200\",\"600\"],border:[\"800\",\"200\"]},link:{fg:[\"blue/200\",\"blue/600\"]},muted:{bg:[\"950\",\"50\"],fg:[\"100 70%\",\"900 70%\"]},skeleton:{from:[\"900\",\"100\"],to:[\"900 50%\",\"100 50%\"]}},hovered:{bg:[\"700\",\"300\"],border:[\"700/0\",\"300/0\"]},pressed:{bg:[\"700\",\"300\"]},selected:{bg:[\"700\",\"300\"]},disabled:{_hue:\"gray\",accent:{fg:[\"100 70%\",\"900 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/500\",\"gray/400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"gray/700\",\"gray/300\"],fg:[\"white\",\"black\"],dot:[\"white\",\"black\"],icon:[\"white\",\"black\"]}},bg:[\"300\",\"600\"],code:{bg:[\"950\",\"50\"],fg:[\"300\",\"600\"]},fg:[\"300\",\"600\"],muted:{bg:[\"950\",\"50\"],fg:[\"300\",\"600\"]},kbd:{bg:[\"black\",\"white\"],fg:[\"white\",\"black\"],border:[\"700\",\"300\"]},link:{fg:[\"100 70%\",\"900 70%\"]}}},default:{\"*\":{avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},bg:[\"800\",\"200\"],muted:{bg:[\"950\",\"50\"],fg:[\"400\",\"600\"]}},hovered:{bg:[\"900\",\"100\"]},pressed:{bg:[\"black\",\"white\"]},selected:{bg:[\"black\",\"white\"]}}},ghost:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 60%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"50\",\"950\"],border:[\"100\",\"900\"],code:{bg:[\"500 10%\",\"400 10%\"],fg:[\"700 60%\",\"400 60%\"]},fg:[\"600\",\"400\"],icon:[\"700 60%\",\"300 60%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 60%\",\"blue/300 60%\"]},muted:{bg:[\"100\",\"950\"],fg:[\"700 60%\",\"300 60%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"100\",\"900\"],fg:[\"700\",\"300\"]},pressed:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"]},selected:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"]},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},border:[\"100\",\"900\"],code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"400\",\"600\"],icon:[\"300\",\"700\"],muted:{fg:[\"300\",\"700\"]},kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]}}},positive:{\"*\":{border:[\"600 20%\",\"800\"]}},caution:{\"*\":{border:[\"600 20%\",\"800\"]}}},bleed:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 70%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"white\",\"black\"],border:[\"white/0\",\"black/0\"],code:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},fg:[\"700\",\"300\"],icon:[\"700 75%\",\"300 75%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"700\",\"300\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 70%\",\"blue/300 70%\"]},muted:{bg:[\"100\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"50\",\"950\"],icon:[\"700 70%\",\"400 70%\"]},pressed:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"],icon:[\"800 70%\",\"200 70%\"]},selected:{bg:[\"100\",\"900\"],fg:[\"800\",\"200\"],icon:[\"800 60%\",\"200 60%\"]},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"400\",\"600\"],icon:[\"300\",\"700\"],muted:{fg:[\"400\",\"600\"]},kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]}}}}},input:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],bg:[\"white\",\"black\"],border:[\"200\",\"800\"],fg:[\"black\",\"200\"],muted:{bg:[\"50\",\"950\"]},placeholder:[\"400\",\"600\"]},hovered:{border:[\"300\",\"700\"]},readOnly:{bg:[\"50\",\"950\"],border:[\"200\",\"800\"],fg:[\"800\",\"200\"]},disabled:{fg:[\"400\",\"600\"],border:[\"100\",\"900\"],placeholder:[\"200\",\"800 50%\"]}},invalid:{\"*\":{_hue:\"red\",bg:[\"100\",\"950\"]}}},selectable:{\"*\":{\"*\":{_blend:[\"multiply\",\"screen\"],accent:{fg:[\"purple/700 70%\",\"purple/300 70%\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"500\",\"400\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{bg:[\"100\",\"900\"],fg:[\"600\",\"400\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"white\",\"black\"],border:[\"200\",\"800\"],code:{bg:[\"50\",\"950\"],fg:[\"600\",\"400\"]},fg:[\"700\",\"300\"],icon:[\"700 75%\",\"300 75%\"],kbd:{bg:[\"white\",\"black\"],fg:[\"600\",\"400\"],border:[\"200\",\"800\"]},link:{fg:[\"blue/700 70%\",\"blue/300 70%\"]},muted:{bg:[\"50\",\"950\"],fg:[\"700 75%\",\"300 75%\"]},skeleton:{from:[\"100\",\"900\"],to:[\"100 50%\",\"900 50%\"]}},hovered:{bg:[\"50\",\"950\"]},pressed:{bg:[\"100\",\"900\"]},selected:{_blend:[\"screen\",\"multiply\"],accent:{fg:[\"purple/300\",\"purple/700\"]},avatar:{\"*\":{_blend:[\"multiply\",\"screen\"],bg:[\"white\",\"black\"],fg:[\"black\",\"white\"]}},badge:{\"*\":{bg:[\"900\",\"100\"],fg:[\"400\",\"600\"],dot:[\"500\",\"500\"],icon:[\"500\",\"500\"]}},bg:[\"500\",\"400\"],border:[\"500 20%\",\"400 20%\"],code:{bg:[\"500 20%\",\"400 20%\"],fg:[\"200\",\"600\"]},fg:[\"white\",\"black\"],icon:[\"100 70%\",\"900 70%\"],kbd:{bg:[\"black\",\"white\"],fg:[\"200\",\"600\"],border:[\"800\",\"200\"]},link:{fg:[\"blue/200\",\"blue/600\"]},muted:{bg:[\"500 10%\",\"400 10%\"],fg:[\"100 70%\",\"900 70%\"]},skeleton:{from:[\"900\",\"100\"],to:[\"900 50%\",\"100 50%\"]}},disabled:{_hue:\"gray\",accent:{fg:[\"200\",\"800\"]},avatar:{\"*\":{_blend:[\"screen\",\"multiply\"],bg:[\"gray/100\",\"gray/900\"],fg:[\"white\",\"black\"]}},badge:{\"*\":{_hue:\"gray\",bg:[\"50\",\"950\"],fg:[\"gray/200\",\"gray/800\"],dot:[\"gray/200\",\"gray/800\"],icon:[\"gray/200\",\"gray/800\"]}},border:[\"100\",\"900\"],code:{bg:[\"50\",\"950\"],fg:[\"200\",\"800\"]},fg:[\"200\",\"800\"],icon:[\"200\",\"800\"],kbd:{bg:[\"white\",\"black\"],fg:[\"200\",\"800\"],border:[\"100\",\"900\"]},link:{fg:[\"200\",\"800\"]},muted:{bg:[\"50 50%\",\"950 50%\"],fg:[\"200\",\"800\"]}}},default:{selected:{_hue:\"blue\"}},critical:{disabled:{bg:[\"50 50%\",\"950 50%\"]}}},syntax:{atrule:[\"purple/600\",\"purple/400\"],attrName:[\"green/600\",\"green/400\"],attrValue:[\"yellow/600\",\"yellow/400\"],attribute:[\"yellow/600\",\"yellow/400\"],boolean:[\"purple/600\",\"purple/400\"],builtin:[\"purple/600\",\"purple/400\"],cdata:[\"yellow/600\",\"yellow/400\"],char:[\"yellow/600\",\"yellow/400\"],class:[\"orange/600\",\"orange/400\"],className:[\"cyan/600\",\"cyan/400\"],comment:[\"gray/400\",\"gray/600\"],constant:[\"purple/600\",\"purple/400\"],deleted:[\"red/600\",\"red/400\"],entity:[\"red/600\",\"red/400\"],function:[\"green/600\",\"green/400\"],hexcode:[\"blue/600\",\"blue/400\"],id:[\"purple/600\",\"purple/400\"],important:[\"purple/600\",\"purple/400\"],inserted:[\"yellow/600\",\"yellow/400\"],keyword:[\"magenta/600\",\"magenta/400\"],number:[\"purple/600\",\"purple/400\"],operator:[\"magenta/600\",\"magenta/400\"],property:[\"blue/600\",\"blue/400\"],pseudoClass:[\"yellow/600\",\"yellow/400\"],pseudoElement:[\"yellow/600\",\"yellow/400\"],punctuation:[\"gray/600\",\"gray/400\"],regex:[\"blue/600\",\"blue/400\"],selector:[\"red/600\",\"red/400\"],string:[\"yellow/600\",\"yellow/400\"],symbol:[\"purple/600\",\"purple/400\"],tag:[\"red/600\",\"red/400\"],unit:[\"orange/600\",\"orange/400\"],url:[\"red/600\",\"red/400\"],variable:[\"red/600\",\"red/400\"]}};function Oe(e){return!(!e||\"object\"!=typeof e||Array.isArray(e))}function _e(...e){const t=e.filter(Boolean);return 0===t.length?{}:t.reduce(qe,{})}function qe(e,t){for(const n of Object.keys(t)){const r=e[n],o=t[n];Oe(r)&&Oe(o)?e[n]=_e(r,o):e[n]=o}return e}function Ue(e){const t=_e(ze,e);return{base:Ge(t),button:Xe(t),input:et(t),selectable:rt(t),syntax:t.syntax}}function Ge(e){const t={};for(const n of Ee)t[n]=Ye(e,n);return t}function Ye(e,t){const n=_e(e?.base?.[\"*\"],e?.base?.[t]),r=n._hue||e?.base?.[t]?._hue||\"gray\";return{...n,_hue:r,avatar:{gray:_e({_hue:\"gray\"},n.avatar?.[\"*\"],n.avatar?.gray),blue:_e({_hue:\"blue\"},n.avatar?.[\"*\"],n.avatar?.blue),purple:_e({_hue:\"purple\"},n.avatar?.[\"*\"],n.avatar?.purple),magenta:_e({_hue:\"magenta\"},n.avatar?.[\"*\"],n.avatar?.magenta),red:_e({_hue:\"red\"},n.avatar?.[\"*\"],n.avatar?.red),orange:_e({_hue:\"orange\"},n.avatar?.[\"*\"],n.avatar?.orange),yellow:_e({_hue:\"yellow\"},n.avatar?.[\"*\"],n.avatar?.yellow),green:_e({_hue:\"green\"},n.avatar?.[\"*\"],n.avatar?.green),cyan:_e({_hue:\"cyan\"},n.avatar?.[\"*\"],n.avatar?.cyan)},badge:{default:{_hue:e?.base?.default?._hue||r,...n.badge?.[\"*\"],...n.badge?.default},primary:{_hue:e?.base?.primary?._hue||r,...n.badge?.[\"*\"],...n.badge?.primary},positive:{_hue:e?.base?.positive?._hue||r,...n.badge?.[\"*\"],...n.badge?.positive},caution:{_hue:e?.base?.caution?._hue||r,...n.badge?.[\"*\"],...n.badge?.caution},critical:{_hue:e?.base?.critical?._hue||r,...n.badge?.[\"*\"],...n.badge?.critical}}}}function Xe(e){const t={};for(const n of Be)t[n]=Ke(e,n);return t}function Ke(e,t){const n={};for(const r of Ne)n[r]=Je(e,t,r);return n}function Je(e,t,n){const r={};for(const o of Ie)r[o]=Qe(e,n,t,o);return r}function Qe(e,t,n,r){const o=_e(e?.button?.[n]?.[\"*\"]?.[\"*\"],e?.button?.[n]?.[t]?.[\"*\"],e?.button?.[n]?.[\"*\"]?.[r],e?.button?.[n]?.[t]?.[r]),i=o._hue||e?.base?.[t]?._hue;return{...o,_hue:i,avatar:{gray:_e({_hue:\"gray\"},o.avatar?.[\"*\"],o.avatar?.gray),blue:_e({_hue:\"blue\"},o.avatar?.[\"*\"],o.avatar?.blue),purple:_e({_hue:\"purple\"},o.avatar?.[\"*\"],o.avatar?.purple),magenta:_e({_hue:\"magenta\"},o.avatar?.[\"*\"],o.avatar?.magenta),red:_e({_hue:\"red\"},o.avatar?.[\"*\"],o.avatar?.red),orange:_e({_hue:\"orange\"},o.avatar?.[\"*\"],o.avatar?.orange),yellow:_e({_hue:\"yellow\"},o.avatar?.[\"*\"],o.avatar?.yellow),green:_e({_hue:\"green\"},o.avatar?.[\"*\"],o.avatar?.green),cyan:_e({_hue:\"cyan\"},o.avatar?.[\"*\"],o.avatar?.cyan)},badge:{default:{_hue:e?.base?.default?._hue,...o.badge?.[\"*\"],...o.badge?.default},primary:{_hue:e?.base?.primary?._hue,...o.badge?.[\"*\"],...o.badge?.primary},positive:{_hue:e?.base?.positive?._hue,...o.badge?.[\"*\"],...o.badge?.positive},caution:{_hue:e?.base?.caution?._hue,...o.badge?.[\"*\"],...o.badge?.caution},critical:{_hue:e?.base?.critical?._hue,...o.badge?.[\"*\"],...o.badge?.critical}}}}function et(e){const t={};for(const n of je)t[n]=tt(e,n);return t}function tt(e,t){const n={};for(const r of $e)n[r]=nt(e,t,r);return n}function nt(e,t,n){const r=_e(e?.input?.[\"*\"]?.[\"*\"],e?.input?.[t]?.[\"*\"],e?.input?.[\"*\"]?.[n],e?.input?.[t]?.[n]),o=r._hue||e?.input?.[t]?._hue;return{...r,_hue:o}}function rt(e){const t={};for(const n of Ne)t[n]=ot(e,n);return t}function ot(e,t){const n={_hue:e?.selectable?.[t]?._hue||e?.base?.[t]?._hue};for(const r of Ie)n[r]=it(e,t,r);return n}function it(e,t,n){const r=_e(e?.selectable?.[\"*\"]?.[\"*\"],e?.selectable?.[t]?.[\"*\"],e?.selectable?.[\"*\"]?.[n],e?.selectable?.[t]?.[n]),o=r._hue||e?.base?.[t]?._hue;return{...r,_hue:o,avatar:{gray:_e({_hue:\"gray\"},r.avatar?.[\"*\"],r.avatar?.gray),blue:_e({_hue:\"blue\"},r.avatar?.[\"*\"],r.avatar?.blue),purple:_e({_hue:\"purple\"},r.avatar?.[\"*\"],r.avatar?.purple),magenta:_e({_hue:\"magenta\"},r.avatar?.[\"*\"],r.avatar?.magenta),red:_e({_hue:\"red\"},r.avatar?.[\"*\"],r.avatar?.red),orange:_e({_hue:\"orange\"},r.avatar?.[\"*\"],r.avatar?.orange),yellow:_e({_hue:\"yellow\"},r.avatar?.[\"*\"],r.avatar?.yellow),green:_e({_hue:\"green\"},r.avatar?.[\"*\"],r.avatar?.green),cyan:_e({_hue:\"cyan\"},r.avatar?.[\"*\"],r.avatar?.cyan)},badge:{default:{_hue:e?.base?.default?._hue,...r.badge?.[\"*\"],...r.badge?.default},primary:{_hue:e?.base?.primary?._hue,...r.badge?.[\"*\"],...r.badge?.primary},positive:{_hue:e?.base?.positive?._hue,...r.badge?.[\"*\"],...r.badge?.positive},caution:{_hue:e?.base?.caution?._hue,...r.badge?.[\"*\"],...r.badge?.caution},critical:{_hue:e?.base?.critical?._hue,...r.badge?.[\"*\"],...r.badge?.critical}}}}function at(e,t){const{scheme:n}=e;return{transparent:st({scheme:n,tone:\"transparent\"},t),default:st({scheme:n,tone:\"default\"},t),primary:st({scheme:n,tone:\"primary\"},t),positive:st({scheme:n,tone:\"positive\"},t),caution:st({scheme:n,tone:\"caution\"},t),critical:st({scheme:n,tone:\"critical\"},t)}}function st(e,t){const{scheme:n,tone:r}=e,o=t?.color?.base?.[r],i={hue:o?._hue||\"gray\",scheme:n};return{_blend:(o?._blend||[\"multiply\",\"screen\"])[\"light\"===n?0:1],_dark:\"dark\"===n,accent:{fg:De(i,o?.accent?.fg)},avatar:ct({scheme:n},o),backdrop:De(i,o?.backdrop),badge:ut(o?.badge,{scheme:n},t),bg:De(i,o?.bg),border:De(i,o?.border),button:pt({scheme:n},t),code:{bg:De(i,o?.code?.bg),fg:De(i,o?.code?.fg)},fg:De(i,o?.fg),focusRing:De(i,o?.focusRing),icon:De(i,o?.icon),input:wt({scheme:n,tone:r},t),kbd:{bg:De(i,o?.kbd?.bg),fg:De(i,o?.kbd?.fg),border:De(i,o?.kbd?.border)},link:{fg:De(i,o?.link?.fg)},muted:{bg:De(i,o?.muted?.bg),fg:De(i,o?.muted?.fg)},selectable:bt({scheme:n},t),shadow:lt({scheme:n,tone:r},t),skeleton:{from:De(i,o?.skeleton?.from),to:De(i,o?.skeleton?.to)},syntax:xt({scheme:n},t)}}function lt(e,t){const{scheme:n,tone:r}=e,o=t?.color?.base?.[r],i={hue:o?._hue||\"gray\",scheme:n};return{outline:De(i,o?.shadow?.outline),umbra:De(i,o?.shadow?.umbra),penumbra:De(i,o?.shadow?.penumbra),ambient:De(i,o?.shadow?.ambient)}}function ct(e,t){const{scheme:n}=e;return{gray:dt({color:\"gray\",scheme:n},t),blue:dt({color:\"blue\",scheme:n},t),purple:dt({color:\"purple\",scheme:n},t),magenta:dt({color:\"magenta\",scheme:n},t),red:dt({color:\"red\",scheme:n},t),orange:dt({color:\"orange\",scheme:n},t),yellow:dt({color:\"yellow\",scheme:n},t),green:dt({color:\"green\",scheme:n},t),cyan:dt({color:\"cyan\",scheme:n},t)}}function dt(e,t){const{color:n,scheme:r}=e,o=t?.avatar?.[n],i={hue:o?._hue||\"gray\",scheme:r};return{_blend:(o?._blend||[\"screen\",\"multiply\"])[\"light\"===r?0:1],bg:De(i,o?.bg),fg:De(i,o?.fg)}}function ut(e,t,n){const{scheme:r}=t;return{default:ht(e,{scheme:r,tone:\"default\"},n),primary:ht(e,{scheme:r,tone:\"primary\"},n),positive:ht(e,{scheme:r,tone:\"positive\"},n),caution:ht(e,{scheme:r,tone:\"caution\"},n),critical:ht(e,{scheme:r,tone:\"critical\"},n)}}function ht(e,t,n){const{scheme:r,tone:o}=t,i=e?.[o],a={hue:i?._hue||n?.color?.base?.[o]?._hue||\"gray\",scheme:r};return{bg:De(a,i?.bg),fg:De(a,i?.fg),dot:De(a,i?.dot),icon:De(a,i?.icon)}}function pt(e,t){const{scheme:n}=e,r={};for(const e of Be)r[e]=ft({scheme:n,mode:e},t);return r}function ft(e,t){const{mode:n,scheme:r}=e,o={};for(const e of Ne)o[e]=gt({mode:n,scheme:r,tone:e},t);return o}function gt(e,t){const{mode:n,scheme:r,tone:o}=e,i={};for(const e of Ie)i[e]=mt({mode:n,tone:o,scheme:r,state:e},t);return i}function mt(e,t){const{mode:n,tone:r,scheme:o,state:i}=e,a=t?.color?.button?.[n]?.[r]?.[i],s={hue:a?._hue||\"gray\",scheme:o};return{_blend:(a?._blend||[\"screen\",\"multiply\"])[\"light\"===o?0:1],accent:{fg:De(s,a?.accent?.fg)},avatar:ct({scheme:o},a),badge:ut(a?.badge,{scheme:o},t),bg:De(s,a?.bg),border:De(s,a?.border),code:{bg:De(s,a?.code?.bg),fg:De(s,a?.code?.fg)},fg:De(s,a?.fg),icon:De(s,a?.icon),muted:{bg:De(s,a?.muted?.bg),fg:De(s,a?.muted?.fg)},kbd:{bg:De(s,a?.kbd?.bg),fg:De(s,a?.kbd?.fg),border:De(s,a?.kbd?.border)},link:{fg:De(s,a?.link?.fg)},skeleton:{from:De(s,a?.skeleton?.from),to:De(s,a?.skeleton?.to)}}}function wt(e,t){const{scheme:n,tone:r}=e;return{default:vt({mode:\"default\",scheme:n,tone:r},t),invalid:vt({mode:\"invalid\",scheme:n,tone:r},t)}}function vt(e,t){const{mode:n,scheme:r,tone:o}=e;return{enabled:yt({mode:n,scheme:r,state:\"enabled\",tone:o},t),hovered:yt({mode:n,scheme:r,state:\"hovered\",tone:o},t),readOnly:yt({mode:n,scheme:r,state:\"readOnly\",tone:o},t),disabled:yt({mode:n,scheme:r,state:\"disabled\",tone:o},t)}}function yt(e,t){const{mode:n,tone:r,scheme:o,state:i}=e,a=t?.color?.input?.[n]?.[i],s={hue:a?._hue||t?.color?.base?.[r]?._hue||\"gray\",scheme:o};return{_blend:(a?._blend||[\"screen\",\"multiply\"])[\"light\"===o?0:1],bg:De(s,a?.bg),border:De(s,a?.border),fg:De(s,a?.fg),muted:{bg:De(s,a?.muted?.bg)},placeholder:De(s,a?.placeholder)}}function bt(e,t){const{scheme:n}=e,r={};for(const e of Ne)r[e]=Ct({scheme:n,tone:e},t);return r}function Ct(e,t){const{scheme:n,tone:r}=e,o={};for(const e of Ie)o[e]=kt({tone:r,scheme:n,state:e},t);return o}function kt(e,t){const{scheme:n,state:r,tone:o}=e,i=t?.color?.selectable?.[o]?.[r],a={hue:i?._hue||\"gray\",scheme:n};return{_blend:(i?._blend||[\"screen\",\"multiply\"])[\"light\"===n?0:1],accent:{fg:De(a,i?.accent?.fg)},avatar:ct({scheme:n},i),badge:ut(i?.badge,{scheme:n},t),bg:De(a,i?.bg),border:De(a,i?.border),code:{bg:De(a,i?.code?.bg),fg:De(a,i?.code?.fg)},fg:De(a,i?.fg),icon:De(a,i?.icon),muted:{bg:De(a,i?.muted?.bg),fg:De(a,i?.muted?.fg)},kbd:{bg:De(a,i?.kbd?.bg),fg:De(a,i?.kbd?.fg),border:De(a,i?.kbd?.border)},link:{fg:De(a,i?.link?.fg)},skeleton:{from:De(a,i?.skeleton?.from),to:De(a,i?.skeleton?.to)}}}function xt(e,t){const{scheme:n}=e,r=t?.color?.syntax,o={hue:\"gray\",scheme:n};return{atrule:De(o,r?.atrule),attrName:De(o,r?.attrName),attrValue:De(o,r?.attrValue),attribute:De(o,r?.attribute),boolean:De(o,r?.boolean),builtin:De(o,r?.builtin),cdata:De(o,r?.cdata),char:De(o,r?.char),class:De(o,r?.class),className:De(o,r?.className),comment:De(o,r?.comment),constant:De(o,r?.constant),deleted:De(o,r?.deleted),doctype:De(o,r?.doctype),entity:De(o,r?.entity),function:De(o,r?.function),hexcode:De(o,r?.hexcode),id:De(o,r?.id),important:De(o,r?.important),inserted:De(o,r?.inserted),keyword:De(o,r?.keyword),number:De(o,r?.number),operator:De(o,r?.operator),prolog:De(o,r?.prolog),property:De(o,r?.property),pseudoClass:De(o,r?.pseudoClass),pseudoElement:De(o,r?.pseudoElement),punctuation:De(o,r?.punctuation),regex:De(o,r?.regex),selector:De(o,r?.selector),string:De(o,r?.string),symbol:De(o,r?.symbol),tag:De(o,r?.tag),unit:De(o,r?.unit),url:De(o,r?.url),variable:De(o,r?.variable)}}const Lt=Ce;function Mt(e,t,n){return e+(t-e)*n}function Ht(e,t){return e*t}function Vt(e,t){return e+t-e*t}function Rt(e,t=0,n=1){return Math.min(n,Math.max(t,e))}function St(e,t,n,r,o){return function(e,t,n){return e*(1-n)+t*n}(n,r,function(e,t,n){return Rt((n-e)/(t-e))}(e,t,o))}function Ft(e){return Math.round(e)}function Et(e){if(4===e.length){const t=e.slice(1,2),n=e.slice(2,3),r=e.slice(3,4);return{r:parseInt(t+t,16),g:parseInt(n+n,16),b:parseInt(r+r,16)}}return{r:parseInt(e.slice(1,3),16),g:parseInt(e.slice(3,5),16),b:parseInt(e.slice(5,7),16)}}function Nt(e){const t=Ft(Rt(Math.round(e.r),0,255)),n=Ft(Rt(Math.round(e.g),0,255)),r=Ft(Rt(Math.round(e.b),0,255));return\"a\"in e?`rgba(${t},${n},${r},${e.a})`:\"#\"+((1<<24)+(t<<16)+(n<<8)+r).toString(16).slice(1)}const It=/hsl\\(\\s*(\\d+)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*,\\s*((\\d+(?:\\.\\d+)?)%)\\s*\\)/i;function Bt(e){if(!e)return{r:0,g:0,b:0};if(\"string\"!=typeof e)throw new Error(\"parseColor: expected a string\");if(\"#\"===(t=e)[0]&&(4===t.length||7===t.length)&&function(e){for(const t of e)if(-1===\"0123456789ABCDEFabcdef\".indexOf(t))return!1;return!0}(t.slice(1)))return Et(e);var t;if(e.startsWith(\"hsl(\"))return function(e){const t=e.s/100,n=e.l/100,r=(1-Math.abs(2*n-1))*t,o=r*(1-Math.abs(e.h/60%2-1)),i=n-r/2;let a=0,s=0,l=0;return 0<=e.h&&e.h<60?(a=r,s=o,l=0):60<=e.h&&e.h<120?(a=o,s=r,l=0):120<=e.h&&e.h<180?(a=0,s=r,l=o):180<=e.h&&e.h<240?(a=0,s=o,l=r):240<=e.h&&e.h<300?(a=o,s=0,l=r):300<=e.h&&e.h<360&&(a=r,s=0,l=o),{r:Math.round(255*(a+i)),g:Math.round(255*(s+i)),b:Math.round(255*(l+i))}}(function(e){const t=It.exec(e);if(!t)throw new Error(`parseHsl: string is not a HSL color: \"${e}\"`);return{h:parseInt(t[1]),s:parseFloat(t[3]),l:parseFloat(t[5])}}(e));if(e.startsWith(\"rgba(\"))return function(e){const t=e.replace(/rgba\\(|\\)/g,\"\").split(\",\");return{r:parseInt(t[0]),g:parseInt(t[1]),b:parseInt(t[2]),a:parseFloat(t[3])}}(e);throw new Error(`parseColor: unexpected color format: \"${e}\"`)}const jt=[0,255];function $t(e,t){const{blendMode:n}=t,r=Bt(e),o=Bt(t.black),i=Bt(t.white),a=t.bg?Bt(t.bg):\"multiply\"===n?i:o,s={r:[o.r,i.r],g:[o.g,i.g],b:[o.b,i.b]},l={r:Rt(St(...s.r,...jt,a.r),...jt),g:Rt(St(...s.g,...jt,a.g),...jt),b:Rt(St(...s.b,...jt,a.b),...jt)},c={r:Rt(St(...s.r,...jt,r.r),...jt),g:Rt(St(...s.g,...jt,r.g),...jt),b:Rt(St(...s.b,...jt,r.b),...jt)},d=\"multiply\"===n?{r:255*Ht((u=l).r/255,(h=c).r/255),g:255*Ht(u.g/255,h.g/255),b:255*Ht(u.b/255,h.b/255)}:function(e,t){return{r:255*Vt(e.r/255,t.r/255),g:255*Vt(e.g/255,t.g/255),b:255*Vt(e.b/255,t.b/255)}}(l,c);var u,h;return Nt({r:Rt(St(...jt,...s.r,d.r),...s.r),g:Rt(St(...jt,...s.g,d.g),...s.g),b:Rt(St(...jt,...s.b,d.b),...s.b)})}function At(e,t){const{bg:n,blendMode:r,colorPalette:o}=t;if(\"white\"===n)throw new Error(\"Cannot blend with white background\");const i=Pe(e);if(!i||\"color\"!==i.type)throw new Error(`Invalid color token value: ${e}`);let a=\"\";if(\"black\"===i.key&&(a=Tt(o.black)),\"white\"===i.key&&(a=Tt(o.white)),i.hue&&i.tint&&(a=Tt(o[i.hue][i.tint])),!a)throw new Error(`Invalid color token value: ${e}`);const s=a,l={blendMode:r,bg:n,black:Tt(o.black),white:Tt(o.white)};try{if(a=$t(a,l),n&&void 0!==i.mix){const e=Et(n),t=Et(a);a=Nt((c=e,d=t,u=i.mix,{r:Mt(c.r,d.r,u),g:Mt(c.g,d.g,u),b:Mt(c.b,d.b,u)}))}}catch(e){throw console.warn(\"could not blend\",a,l),e}var c,d,u;return\"#aN\"===a&&(console.warn(`invalid color token value: ${e}`),a=s),void 0!==i.opacity&&(a=function(e,t){const n=Bt(e);return`rgba(${n.r},${n.g},${n.b},${t})`}(a,i.opacity)),a}function Tt(e){return\"string\"==typeof e?e:e.hex}function Pt(e,t){const n=Lt;return{light:Wt(n,e.light),dark:Wt(n,e.dark)}}function Wt(e,t){const n=Object.entries(t),[,r]=n.find((([e])=>\"transparent\"===e)),[,o]=n.find((([e])=>\"default\"===e)),i=Zt(r,{colorPalette:e}),a=Zt(o,{colorPalette:e}),s=a.bg;if(\"white\"===s)throw new Error(\"Cannot blend with white background\");return Object.fromEntries([[\"transparent\",i],[\"default\",a],...n.filter((([e])=>\"default\"!==e&&\"transparent\"!==e)).map((([t,n])=>[t,Zt(n,{bg:s,colorPalette:e})]))])}function Zt(e,t){const{colorPalette:n,bg:r}=t,o=e._blend||\"multiply\",i=At(e.bg,{colorPalette:n,bg:r,blendMode:o}),a={colorPalette:n,bg:i,blendMode:o},s=function(e,t){return{default:Ut(e.default,t),ghost:Ut(e.ghost,t),bleed:Ut(e.bleed,t)}}(e.button,{baseBg:i,blendMode:o,colorPalette:n}),l=function(e,t){return{default:Qt(e.default,t),primary:Qt(e.primary,t),positive:Qt(e.positive,t),caution:Qt(e.caution,t),critical:Qt(e.critical,t)}}(e.selectable,{colorPalette:n,baseBg:i,blendMode:o}),c={outline:At(e.shadow.outline,a),umbra:At(e.shadow.umbra,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}}),penumbra:At(e.shadow.penumbra,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}}),ambient:At(e.shadow.ambient,{...a,bg:void 0,colorPalette:{...n,black:\"#000000\"}})};return{_blend:o,_dark:e._dark,accent:{fg:At(e.accent.fg,a)},avatar:zt(e.avatar,{baseBg:i,colorPalette:n,blendMode:o}),backdrop:At(e.backdrop,a),badge:_t(e.badge,{baseBg:i,colorPalette:n,blendMode:o}),bg:i,border:At(e.border,a),button:s,code:{bg:At(e.code.bg,a),fg:At(e.code.fg,a)},fg:At(e.fg,a),focusRing:At(e.focusRing,a),icon:At(e.icon,a),input:Xt(e.input,{baseBg:i,colorPalette:n,blendMode:o}),kbd:Dt(e.kbd,{baseBg:i,colorPalette:n,blendMode:o}),link:{fg:At(e.link.fg,a)},muted:{bg:At(e.muted.bg,a),fg:At(e.muted.fg,a)},shadow:c,skeleton:{from:At(e.skeleton.from,a),to:At(e.skeleton.to,a)},syntax:en(e.syntax,{baseBg:i,colorPalette:n,blendMode:o}),selectable:l}}function Dt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i={bg:n,blendMode:r,colorPalette:o},a=At(e.bg,i),s={bg:a,blendMode:r,colorPalette:o};return{bg:a,fg:At(e.fg,s),border:At(e.border,s)}}function zt(e,t){return{gray:Ot(e.gray,t),blue:Ot(e.blue,t),purple:Ot(e.purple,t),magenta:Ot(e.magenta,t),red:Ot(e.red,t),orange:Ot(e.orange,t),yellow:Ot(e.yellow,t),green:Ot(e.green,t),cyan:Ot(e.cyan,t)}}function Ot(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={bg:n,blendMode:r,colorPalette:o},s=At(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{_blend:i,bg:s,fg:At(e.fg,l)}}function _t(e,t){return{default:qt(e.default,t),primary:qt(e.primary,t),positive:qt(e.positive,t),caution:qt(e.caution,t),critical:qt(e.critical,t)}}function qt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=r,a={bg:n,blendMode:r,colorPalette:o},s=At(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{bg:s,dot:At(e.dot,l),fg:At(e.fg,l),icon:At(e.icon,l)}}function Ut(e,t){return{default:Gt(e.default,t),primary:Gt(e.primary,t),positive:Gt(e.positive,t),caution:Gt(e.caution,t),critical:Gt(e.critical,t)}}function Gt(e,t){return{enabled:Yt(e.enabled,t),hovered:Yt(e.hovered,t),pressed:Yt(e.pressed,t),selected:Yt(e.selected,t),disabled:Yt(e.disabled,t)}}function Yt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={bg:n,blendMode:r,colorPalette:o},s=At(e.bg,a),l={bg:s,blendMode:i,colorPalette:o};return{_blend:i,accent:{fg:At(e.accent.fg,l)},avatar:zt(e.avatar,{baseBg:s,colorPalette:o,blendMode:i}),badge:_t(e.badge,{baseBg:s,colorPalette:o,blendMode:i}),bg:s,border:At(e.border,l),code:{bg:At(e.code.bg,l),fg:At(e.code.fg,l)},fg:At(e.fg,l),icon:At(e.icon,l),link:{fg:At(e.link.fg,l)},muted:{bg:At(e.muted.bg,l),fg:At(e.muted.fg,l)},kbd:{bg:At(e.kbd.bg,l),fg:At(e.kbd.fg,l),border:At(e.kbd.border,l)},skeleton:{from:At(e.skeleton?.from,l),to:At(e.skeleton?.to,l)}}}function Xt(e,t){return{default:Kt(e.default,t),invalid:Kt(e.invalid,t)}}function Kt(e,t){return{enabled:Jt(e.enabled,t),hovered:Jt(e.hovered,t),readOnly:Jt(e.readOnly,t),disabled:Jt(e.disabled,t)}}function Jt(e,t){const{baseBg:n,blendMode:r,colorPalette:o}=t,i=e._blend||\"multiply\",a={colorPalette:o,bg:n,blendMode:r},s=At(e.bg,a),l={colorPalette:o,bg:s,blendMode:i};return{_blend:i,bg:s,border:At(e.border,l),fg:At(e.fg,l),muted:{bg:At(e.muted.bg,l)},placeholder:At(e.placeholder,l)}}function Qt(e,t){return{enabled:Yt(e.enabled,t),hovered:Yt(e.hovered,t),pressed:Yt(e.pressed,t),selected:Yt(e.selected,t),disabled:Yt(e.disabled,t)}}function en(e,t){const{colorPalette:n,baseBg:r,blendMode:o}=t,i={colorPalette:n,bg:r,blendMode:o};return{atrule:At(e.atrule,i),attrName:At(e.attrName,i),attrValue:At(e.attrValue,i),attribute:At(e.attribute,i),boolean:At(e.boolean,i),builtin:At(e.builtin,i),cdata:At(e.cdata,i),char:At(e.char,i),class:At(e.class,i),className:At(e.className,i),comment:At(e.comment,i),constant:At(e.constant,i),deleted:At(e.deleted,i),doctype:At(e.doctype,i),entity:At(e.entity,i),function:At(e.function,i),hexcode:At(e.hexcode,i),id:At(e.id,i),important:At(e.important,i),inserted:At(e.inserted,i),keyword:At(e.keyword,i),number:At(e.number,i),operator:At(e.operator,i),prolog:At(e.prolog,i),property:At(e.property,i),pseudoClass:At(e.pseudoClass,i),pseudoElement:At(e.pseudoElement,i),punctuation:At(e.punctuation,i),regex:At(e.regex,i),selector:At(e.selector,i),string:At(e.string,i),symbol:At(e.symbol,i),tag:At(e.tag,i),unit:At(e.unit,i),url:At(e.url,i),variable:At(e.variable,i)}}const tn=new Map;function nn(e,t,n){const r=function(e,t,n){const r=tn.get(t);if(!r)return;const o=r.get(n);if(o)return o.get(e)}(e,t,n);if(r)return r;const o=xe(e)?He(e):e,i=xe(e)?e:function(e){if(e.v2)return e.v2;const t=Le.get(e);if(t)return t;const{avatar:n,button:r,color:o,container:i,focusRing:a,fonts:s,input:l,layer:c,media:d,radius:u,shadows:h,space:p,styles:f}=e,g={_version:2,avatar:{...de.avatar,...n},button:{...de.button,...r},card:de.card,color:{light:{transparent:he(o.light.transparent),default:he(o.light.default),primary:he(o.light.primary),positive:he(o.light.positive),caution:he(o.light.caution),critical:he(o.light.critical)},dark:{transparent:he(o.dark.transparent),default:he(o.dark.default),primary:he(o.dark.primary),positive:he(o.dark.positive),caution:he(o.dark.caution),critical:he(o.dark.critical)}},container:i,font:s,input:{...de.input,...l,checkbox:{...de.input.checkbox,...l.checkbox},radio:{...de.input.radio,...l.radio},switch:{...de.input.switch,...l.switch}},layer:c??de.layer,media:d,radius:u,shadow:h,space:p,style:f};return Le.set(e,g),g}(e),a=o.color[t]||o.color.light,s=a[n]||a.default,l=o.layer||de.layer,c=i.color[t]||i.color.light,d=c[n]||c.default,u=i.layer||de.layer,h={sanity:{...o,color:s,layer:l,v2:{...i,_resolved:!0,color:d,layer:u}}};return function(e,t,n,r){tn.has(t)||tn.set(t,new Map);const o=tn.get(t);o.has(n)||o.set(n,new WeakMap),o.get(n).set(e,r)}(e,t,n,h),h}var rn=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{};function on(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}var an,sn,ln={exports:{}},cn={};\n/**\n* @license React\n* react-is.production.min.js\n*\n* Copyright (c) Facebook, Inc. and its affiliates.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/var dn=(sn||(sn=1,ln.exports=function(){if(an)return cn;an=1;var e,t=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),r=Symbol.for(\"react.fragment\"),o=Symbol.for(\"react.strict_mode\"),i=Symbol.for(\"react.profiler\"),a=Symbol.for(\"react.provider\"),s=Symbol.for(\"react.context\"),l=Symbol.for(\"react.server_context\"),c=Symbol.for(\"react.forward_ref\"),d=Symbol.for(\"react.suspense\"),u=Symbol.for(\"react.suspense_list\"),h=Symbol.for(\"react.memo\"),p=Symbol.for(\"react.lazy\"),f=Symbol.for(\"react.offscreen\");function g(e){if(\"object\"==typeof e&&null!==e){var f=e.$$typeof;switch(f){case t:switch(e=e.type){case r:case i:case o:case d:case u:return e;default:switch(e=e&&e.$$typeof){case l:case s:case c:case p:case h:case a:return e;default:return f}}case n:return f}}}return e=Symbol.for(\"react.module.reference\"),cn.ContextConsumer=s,cn.ContextProvider=a,cn.Element=t,cn.ForwardRef=c,cn.Fragment=r,cn.Lazy=p,cn.Memo=h,cn.Portal=n,cn.Profiler=i,cn.StrictMode=o,cn.Suspense=d,cn.SuspenseList=u,cn.isAsyncMode=function(){return!1},cn.isConcurrentMode=function(){return!1},cn.isContextConsumer=function(e){return g(e)===s},cn.isContextProvider=function(e){return g(e)===a},cn.isElement=function(e){return\"object\"==typeof e&&null!==e&&e.$$typeof===t},cn.isForwardRef=function(e){return g(e)===c},cn.isFragment=function(e){return g(e)===r},cn.isLazy=function(e){return g(e)===p},cn.isMemo=function(e){return g(e)===h},cn.isPortal=function(e){return g(e)===n},cn.isProfiler=function(e){return g(e)===i},cn.isStrictMode=function(e){return g(e)===o},cn.isSuspense=function(e){return g(e)===d},cn.isSuspenseList=function(e){return g(e)===u},cn.isValidElementType=function(t){return\"string\"==typeof t||\"function\"==typeof t||t===r||t===i||t===o||t===d||t===u||t===f||\"object\"==typeof t&&null!==t&&(t.$$typeof===p||t.$$typeof===h||t.$$typeof===a||t.$$typeof===s||t.$$typeof===c||t.$$typeof===e||void 0!==t.getModuleId)},cn.typeOf=g,cn}()),ln.exports),un=on(dn),hn=function(){return hn=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},hn.apply(this,arguments)};function pn(e,t,n){if(n||2===arguments.length)for(var r,o=0,i=t.length;o<i;o++)(r||!(o in t))&&(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))}var fn=\"-ms-\",gn=\"-moz-\",mn=\"-webkit-\",wn=\"comm\",vn=\"rule\",yn=\"decl\",bn=\"@keyframes\",Cn=Math.abs,kn=String.fromCharCode,xn=Object.assign;function Ln(e){return e.trim()}function Mn(e,t){return(e=t.exec(e))?e[0]:e}function Hn(e,t,n){return e.replace(t,n)}function Vn(e,t,n){return e.indexOf(t,n)}function Rn(e,t){return 0|e.charCodeAt(t)}function Sn(e,t,n){return e.slice(t,n)}function Fn(e){return e.length}function En(e){return e.length}function Nn(e,t){return t.push(e),e}function In(e,t){return e.filter((function(e){return!Mn(e,t)}))}var Bn=1,jn=1,$n=0,An=0,Tn=0,Pn=\"\";function Wn(e,t,n,r,o,i,a,s){return{value:e,root:t,parent:n,type:r,props:o,children:i,line:Bn,column:jn,length:a,return:\"\",siblings:s}}function Zn(e,t){return xn(Wn(\"\",null,null,\"\",null,null,0,e.siblings),e,{length:-e.length},t)}function Dn(e){for(;e.root;)e=Zn(e.root,{children:[e]});Nn(e,e.siblings)}function zn(){return Tn=An<$n?Rn(Pn,An++):0,jn++,10===Tn&&(jn=1,Bn++),Tn}function On(){return Rn(Pn,An)}function _n(){return An}function qn(e,t){return Sn(Pn,e,t)}function Un(e){switch(e){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function Gn(e){return Ln(qn(An-1,Kn(91===e?e+2:40===e?e+1:e)))}function Yn(e){for(;(Tn=On())&&Tn<33;)zn();return Un(e)>2||Un(Tn)>3?\"\":\" \"}function Xn(e,t){for(;--t&&zn()&&!(Tn<48||Tn>102||Tn>57&&Tn<65||Tn>70&&Tn<97););return qn(e,_n()+(t<6&&32==On()&&32==zn()))}function Kn(e){for(;zn();)switch(Tn){case e:return An;case 34:case 39:34!==e&&39!==e&&Kn(Tn);break;case 40:41===e&&Kn(e);break;case 92:zn()}return An}function Jn(e,t){for(;zn()&&e+Tn!==57&&(e+Tn!==84||47!==On()););return\"/*\"+qn(t,An-1)+\"*\"+kn(47===e?e:zn())}function Qn(e){for(;!Un(On());)zn();return qn(e,An)}function er(e){return function(e){return Pn=\"\",e}(tr(\"\",null,null,null,[\"\"],e=function(e){return Bn=jn=1,$n=Fn(Pn=e),An=0,[]}(e),0,[0],e))}function tr(e,t,n,r,o,i,a,s,l){for(var c=0,d=0,u=a,h=0,p=0,f=0,g=1,m=1,w=1,v=0,y=\"\",b=o,C=i,k=r,x=y;m;)switch(f=v,v=zn()){case 40:if(108!=f&&58==Rn(x,u-1)){-1!=Vn(x+=Hn(Gn(v),\"&\",\"&\\f\"),\"&\\f\",Cn(c?s[c-1]:0))&&(w=-1);break}case 34:case 39:case 91:x+=Gn(v);break;case 9:case 10:case 13:case 32:x+=Yn(f);break;case 92:x+=Xn(_n()-1,7);continue;case 47:switch(On()){case 42:case 47:Nn(rr(Jn(zn(),_n()),t,n,l),l);break;default:x+=\"/\"}break;case 123*g:s[c++]=Fn(x)*w;case 125*g:case 59:case 0:switch(v){case 0:case 125:m=0;case 59+d:-1==w&&(x=Hn(x,/\\f/g,\"\")),p>0&&Fn(x)-u&&Nn(p>32?or(x+\";\",r,n,u-1,l):or(Hn(x,\" \",\"\")+\";\",r,n,u-2,l),l);break;case 59:x+=\";\";default:if(Nn(k=nr(x,t,n,c,d,o,s,y,b=[],C=[],u,i),i),123===v)if(0===d)tr(x,t,k,k,b,i,u,s,C);else switch(99===h&&110===Rn(x,3)?100:h){case 100:case 108:case 109:case 115:tr(e,k,k,r&&Nn(nr(e,k,k,0,0,o,s,y,o,b=[],u,C),C),o,C,u,s,r?b:C);break;default:tr(x,k,k,k,[\"\"],C,0,s,C)}}c=d=p=0,g=w=1,y=x=\"\",u=a;break;case 58:u=1+Fn(x),p=f;default:if(g<1)if(123==v)--g;else if(125==v&&0==g++&&125==(Tn=An>0?Rn(Pn,--An):0,jn--,10===Tn&&(jn=1,Bn--),Tn))continue;switch(x+=kn(v),v*g){case 38:w=d>0?1:(x+=\"\\f\",-1);break;case 44:s[c++]=(Fn(x)-1)*w,w=1;break;case 64:45===On()&&(x+=Gn(zn())),h=On(),d=u=Fn(y=x+=Qn(_n())),v++;break;case 45:45===f&&2==Fn(x)&&(g=0)}}return i}function nr(e,t,n,r,o,i,a,s,l,c,d,u){for(var h=o-1,p=0===o?i:[\"\"],f=En(p),g=0,m=0,w=0;g<r;++g)for(var v=0,y=Sn(e,h+1,h=Cn(m=a[g])),b=e;v<f;++v)(b=Ln(m>0?p[v]+\" \"+y:Hn(y,/&\\f/g,p[v])))&&(l[w++]=b);return Wn(e,t,n,0===o?vn:s,l,c,d,u)}function rr(e,t,n,r){return Wn(e,t,n,wn,kn(Tn),Sn(e,2,-2),0,r)}function or(e,t,n,r,o){return Wn(e,t,n,yn,Sn(e,0,r),Sn(e,r+1,-1),r,o)}function ir(e,t,n){switch(function(e,t){return 45^Rn(e,0)?(((t<<2^Rn(e,0))<<2^Rn(e,1))<<2^Rn(e,2))<<2^Rn(e,3):0}(e,t)){case 5103:return mn+\"print-\"+e+e;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return mn+e+e;case 4789:return gn+e+e;case 5349:case 4246:case 4810:case 6968:case 2756:return mn+e+gn+e+fn+e+e;case 5936:switch(Rn(e,t+11)){case 114:return mn+e+fn+Hn(e,/[svh]\\w+-[tblr]{2}/,\"tb\")+e;case 108:return mn+e+fn+Hn(e,/[svh]\\w+-[tblr]{2}/,\"tb-rl\")+e;case 45:return mn+e+fn+Hn(e,/[svh]\\w+-[tblr]{2}/,\"lr\")+e}case 6828:case 4268:case 2903:return mn+e+fn+e+e;case 6165:return mn+e+fn+\"flex-\"+e+e;case 5187:return mn+e+Hn(e,/(\\w+).+(:[^]+)/,mn+\"box-$1$2\"+fn+\"flex-$1$2\")+e;case 5443:return mn+e+fn+\"flex-item-\"+Hn(e,/flex-|-self/g,\"\")+(Mn(e,/flex-|baseline/)?\"\":fn+\"grid-row-\"+Hn(e,/flex-|-self/g,\"\"))+e;case 4675:return mn+e+fn+\"flex-line-pack\"+Hn(e,/align-content|flex-|-self/g,\"\")+e;case 5548:return mn+e+fn+Hn(e,\"shrink\",\"negative\")+e;case 5292:return mn+e+fn+Hn(e,\"basis\",\"preferred-size\")+e;case 6060:return mn+\"box-\"+Hn(e,\"-grow\",\"\")+mn+e+fn+Hn(e,\"grow\",\"positive\")+e;case 4554:return mn+Hn(e,/([^-])(transform)/g,\"$1\"+mn+\"$2\")+e;case 6187:return Hn(Hn(Hn(e,/(zoom-|grab)/,mn+\"$1\"),/(image-set)/,mn+\"$1\"),e,\"\")+e;case 5495:case 3959:return Hn(e,/(image-set\\([^]*)/,mn+\"$1$`$1\");case 4968:return Hn(Hn(e,/(.+:)(flex-)?(.*)/,mn+\"box-pack:$3\"+fn+\"flex-pack:$3\"),/s.+-b[^;]+/,\"justify\")+mn+e+e;case 4200:if(!Mn(e,/flex-|baseline/))return fn+\"grid-column-align\"+Sn(e,t)+e;break;case 2592:case 3360:return fn+Hn(e,\"template-\",\"\")+e;case 4384:case 3616:return n&&n.some((function(e,n){return t=n,Mn(e.props,/grid-\\w+-end/)}))?~Vn(e+(n=n[t].value),\"span\",0)?e:fn+Hn(e,\"-start\",\"\")+e+fn+\"grid-row-span:\"+(~Vn(n,\"span\",0)?Mn(n,/\\d+/):+Mn(n,/\\d+/)-+Mn(e,/\\d+/))+\";\":fn+Hn(e,\"-start\",\"\")+e;case 4896:case 4128:return n&&n.some((function(e){return Mn(e.props,/grid-\\w+-start/)}))?e:fn+Hn(Hn(e,\"-end\",\"-span\"),\"span \",\"\")+e;case 4095:case 3583:case 4068:case 2532:return Hn(e,/(.+)-inline(.+)/,mn+\"$1$2\")+e;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(Fn(e)-1-t>6)switch(Rn(e,t+1)){case 109:if(45!==Rn(e,t+4))break;case 102:return Hn(e,/(.+:)(.+)-([^]+)/,\"$1\"+mn+\"$2-$3$1\"+gn+(108==Rn(e,t+3)?\"$3\":\"$2-$3\"))+e;case 115:return~Vn(e,\"stretch\",0)?ir(Hn(e,\"stretch\",\"fill-available\"),t,n)+e:e}break;case 5152:case 5920:return Hn(e,/(.+?):(\\d+)(\\s*\\/\\s*(span)?\\s*(\\d+))?(.*)/,(function(t,n,r,o,i,a,s){return fn+n+\":\"+r+s+(o?fn+n+\"-span:\"+(i?a:+a-+r)+s:\"\")+e}));case 4949:if(121===Rn(e,t+6))return Hn(e,\":\",\":\"+mn)+e;break;case 6444:switch(Rn(e,45===Rn(e,14)?18:11)){case 120:return Hn(e,/(.+:)([^;\\s!]+)(;|(\\s+)?!.+)?/,\"$1\"+mn+(45===Rn(e,14)?\"inline-\":\"\")+\"box$3$1\"+mn+\"$2$3$1\"+fn+\"$2box$3\")+e;case 100:return Hn(e,\":\",\":\"+fn)+e}break;case 5719:case 2647:case 2135:case 3927:case 2391:return Hn(e,\"scroll-\",\"scroll-snap-\")+e}return e}function ar(e,t){for(var n=\"\",r=0;r<e.length;r++)n+=t(e[r],r,e,t)||\"\";return n}function sr(e,t,n,r){switch(e.type){case\"@layer\":if(e.children.length)break;case\"@import\":case yn:return e.return=e.return||e.value;case wn:return\"\";case bn:return e.return=e.value+\"{\"+ar(e.children,r)+\"}\";case vn:if(!Fn(e.value=e.props.join(\",\")))return\"\"}return Fn(n=ar(e.children,r))?e.return=e.value+\"{\"+n+\"}\":\"\"}function lr(e,t,n,r){if(e.length>-1&&!e.return)switch(e.type){case yn:return void(e.return=ir(e.value,e.length,n));case bn:return ar([Zn(e,{value:Hn(e.value,\"@\",\"@\"+mn)})],r);case vn:if(e.length)return function(e,t){return e.map(t).join(\"\")}(n=e.props,(function(t){switch(Mn(t,r=/(::plac\\w+|:read-\\w+)/)){case\":read-only\":case\":read-write\":Dn(Zn(e,{props:[Hn(t,/:(read-\\w+)/,\":-moz-$1\")]})),Dn(Zn(e,{props:[t]})),xn(e,{props:In(n,r)});break;case\"::placeholder\":Dn(Zn(e,{props:[Hn(t,/:(plac\\w+)/,\":\"+mn+\"input-$1\")]})),Dn(Zn(e,{props:[Hn(t,/:(plac\\w+)/,\":-moz-$1\")]})),Dn(Zn(e,{props:[Hn(t,/:(plac\\w+)/,fn+\"input-$1\")]})),Dn(Zn(e,{props:[t]})),xn(e,{props:In(n,r)})}return\"\"}))}}var cr={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},dr=typeof process<\"u\"&&void 0!==process.env&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||\"data-styled\",ur=\"active\",hr=\"data-styled-version\",pr=\"6.1.13\",fr=\"/*!sc*/\\n\",gr=typeof window<\"u\"&&\"HTMLElement\"in window,mr=!!(\"boolean\"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:typeof process<\"u\"&&void 0!==process.env&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&\"\"!==process.env.REACT_APP_SC_DISABLE_SPEEDY?\"false\"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:typeof process<\"u\"&&void 0!==process.env&&void 0!==process.env.SC_DISABLE_SPEEDY&&\"\"!==process.env.SC_DISABLE_SPEEDY&&\"false\"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),wr=Object.freeze([]),vr=Object.freeze({});var yr=new Set([\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\",\"b\",\"base\",\"bdi\",\"bdo\",\"big\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\",\"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"dialog\",\"div\",\"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\",\"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\",\"mark\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"picture\",\"pre\",\"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\",\"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\",\"u\",\"ul\",\"use\",\"var\",\"video\",\"wbr\",\"circle\",\"clipPath\",\"defs\",\"ellipse\",\"foreignObject\",\"g\",\"image\",\"line\",\"linearGradient\",\"marker\",\"mask\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"radialGradient\",\"rect\",\"stop\",\"svg\",\"text\",\"tspan\"]),br=/[!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~-]+/g,Cr=/(^-|-$)/g;function kr(e){return e.replace(br,\"-\").replace(Cr,\"\")}var xr=/(a)(d)/gi,Lr=function(e){return String.fromCharCode(e+(e>25?39:97))};function Mr(e){var t,n=\"\";for(t=Math.abs(e);t>52;t=t/52|0)n=Lr(t%52)+n;return(Lr(t%52)+n).replace(xr,\"$1-$2\")}var Hr,Vr=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},Rr=function(e){return Vr(5381,e)};function Sr(e){return Mr(Rr(e)>>>0)}function Fr(e){return\"string\"==typeof e&&!0}var Er=\"function\"==typeof Symbol&&Symbol.for,Nr=Er?Symbol.for(\"react.memo\"):60115,Ir=Er?Symbol.for(\"react.forward_ref\"):60112,Br={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},jr={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},$r={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},Ar=((Hr={})[Ir]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},Hr[Nr]=$r,Hr);function Tr(e){return(\"type\"in(t=e)&&t.type.$$typeof)===Nr?$r:\"$$typeof\"in e?Ar[e.$$typeof]:Br;var t}var Pr=Object.defineProperty,Wr=Object.getOwnPropertyNames,Zr=Object.getOwnPropertySymbols,Dr=Object.getOwnPropertyDescriptor,zr=Object.getPrototypeOf,Or=Object.prototype;function _r(e,t,n){if(\"string\"!=typeof t){if(Or){var r=zr(t);r&&r!==Or&&_r(e,r,n)}var o=Wr(t);Zr&&(o=o.concat(Zr(t)));for(var i=Tr(e),a=Tr(t),s=0;s<o.length;++s){var l=o[s];if(!(l in jr||n&&n[l]||a&&l in a||i&&l in i)){var c=Dr(t,l);try{Pr(e,l,c)}catch{}}}}return e}function qr(e){return\"function\"==typeof e}function Ur(e){return\"object\"==typeof e&&\"styledComponentId\"in e}function Gr(e,t){return e&&t?\"\".concat(e,\" \").concat(t):e||t||\"\"}function Yr(e,t){if(0===e.length)return\"\";for(var n=e[0],r=1;r<e.length;r++)n+=e[r];return n}function Xr(e){return null!==e&&\"object\"==typeof e&&e.constructor.name===Object.name&&!(\"props\"in e&&e.$$typeof)}function Kr(e,t,n){if(void 0===n&&(n=!1),!n&&!Xr(e)&&!Array.isArray(e))return t;if(Array.isArray(t))for(var r=0;r<t.length;r++)e[r]=Kr(e[r],t[r]);else if(Xr(t))for(var r in t)e[r]=Kr(e[r],t[r]);return e}function Jr(e,t){Object.defineProperty(e,\"toString\",{value:t})}function Qr(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];return new Error(\"An error occurred. See https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#\".concat(e,\" for more information.\").concat(t.length>0?\" Args: \".concat(t.join(\", \")):\"\"))}var eo=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}return e.prototype.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},e.prototype.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,o=r;e>=o;)if((o<<=1)<0)throw Qr(16,\"\".concat(e));this.groupSizes=new Uint32Array(o),this.groupSizes.set(n),this.length=o;for(var i=r;i<o;i++)this.groupSizes[i]=0}for(var a=this.indexOfGroup(e+1),s=(i=0,t.length);i<s;i++)this.tag.insertRule(a,t[i])&&(this.groupSizes[e]++,a++)},e.prototype.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var o=n;o<r;o++)this.tag.deleteRule(n)}},e.prototype.getGroup=function(e){var t=\"\";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),o=r+n,i=r;i<o;i++)t+=\"\".concat(this.tag.getRule(i)).concat(fr);return t},e}(),to=new Map,no=new Map,ro=1,oo=function(e){if(to.has(e))return to.get(e);for(;no.has(ro);)ro++;var t=ro++;return to.set(e,t),no.set(t,e),t},io=function(e,t){ro=t+1,to.set(e,t),no.set(t,e)},ao=\"style[\".concat(dr,\"][\").concat(hr,'=\"').concat(pr,'\"]'),so=new RegExp(\"^\".concat(dr,'\\\\.g(\\\\d+)\\\\[id=\"([\\\\w\\\\d-]+)\"\\\\].*?\"([^\"]*)')),lo=function(e,t,n){for(var r,o=n.split(\",\"),i=0,a=o.length;i<a;i++)(r=o[i])&&e.registerName(t,r)},co=function(e,t){for(var n,r=(null!==(n=t.textContent)&&void 0!==n?n:\"\").split(fr),o=[],i=0,a=r.length;i<a;i++){var s=r[i].trim();if(s){var l=s.match(so);if(l){var c=0|parseInt(l[1],10),d=l[2];0!==c&&(io(d,c),lo(e,d,l[3]),e.getTag().insertRules(c,o)),o.length=0}else o.push(s)}}},uo=function(e){for(var t=document.querySelectorAll(ao),n=0,r=t.length;n<r;n++){var o=t[n];o&&o.getAttribute(dr)!==ur&&(co(e,o),o.parentNode&&o.parentNode.removeChild(o))}};var ho=function(e){var t,n,r=document.head,o=e||r,i=document.createElement(\"style\"),a=(t=o,(n=Array.from(t.querySelectorAll(\"style[\".concat(dr,\"]\"))))[n.length-1]),s=void 0!==a?a.nextSibling:null;i.setAttribute(dr,ur),i.setAttribute(hr,pr);var l= true?__webpack_require__.nc:0;return l&&i.setAttribute(\"nonce\",l),o.insertBefore(i,s),i},po=function(){function e(e){this.element=ho(e),this.element.appendChild(document.createTextNode(\"\")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var o=t[n];if(o.ownerNode===e)return o}throw Qr(17)}(this.element),this.length=0}return e.prototype.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch{return!1}},e.prototype.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},e.prototype.getRule=function(e){var t=this.sheet.cssRules[e];return t&&t.cssText?t.cssText:\"\"},e}(),fo=function(){function e(e){this.element=ho(e),this.nodes=this.element.childNodes,this.length=0}return e.prototype.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t);return this.element.insertBefore(n,this.nodes[e]||null),this.length++,!0}return!1},e.prototype.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},e.prototype.getRule=function(e){return e<this.length?this.nodes[e].textContent:\"\"},e}(),go=function(){function e(e){this.rules=[],this.length=0}return e.prototype.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},e.prototype.deleteRule=function(e){this.rules.splice(e,1),this.length--},e.prototype.getRule=function(e){return e<this.length?this.rules[e]:\"\"},e}(),mo=gr,wo={isServer:!gr,useCSSOMInjection:!mr},vo=function(){function e(e,t,n){void 0===e&&(e=vr),void 0===t&&(t={});var r=this;this.options=hn(hn({},wo),e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&gr&&mo&&(mo=!1,uo(this)),Jr(this,(function(){return function(e){for(var t=e.getTag(),n=t.length,r=\"\",o=function(n){var o,i=(o=n,no.get(o));if(void 0===i)return\"continue\";var a=e.names.get(i),s=t.getGroup(n);if(void 0===a||!a.size||0===s.length)return\"continue\";var l=\"\".concat(dr,\".g\").concat(n,'[id=\"').concat(i,'\"]'),c=\"\";void 0!==a&&a.forEach((function(e){e.length>0&&(c+=\"\".concat(e,\",\"))})),r+=\"\".concat(s).concat(l,'{content:\"').concat(c,'\"}').concat(fr)},i=0;i<n;i++)o(i);return r}(r)}))}return e.registerId=function(e){return oo(e)},e.prototype.rehydrate=function(){!this.server&&gr&&uo(this)},e.prototype.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(hn(hn({},this.options),t),this.gs,n&&this.names||void 0)},e.prototype.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},e.prototype.getTag=function(){return this.tag||(this.tag=(e=this.options,t=e.useCSSOMInjection,n=e.target,r=e.isServer?new go(n):t?new po(n):new fo(n),new eo(r)));var e,t,n,r},e.prototype.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},e.prototype.registerName=function(e,t){if(oo(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},e.prototype.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(oo(e),n)},e.prototype.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},e.prototype.clearRules=function(e){this.getTag().clearGroup(oo(e)),this.clearNames(e)},e.prototype.clearTag=function(){this.tag=void 0},e}(),yo=/&/g,bo=/^\\s*\\/\\/.*$/gm;function Co(e,t){return e.map((function(e){return\"rule\"===e.type&&(e.value=\"\".concat(t,\" \").concat(e.value),e.value=e.value.replaceAll(\",\",\",\".concat(t,\" \")),e.props=e.props.map((function(e){return\"\".concat(t,\" \").concat(e)}))),Array.isArray(e.children)&&\"@keyframes\"!==e.type&&(e.children=Co(e.children,t)),e}))}var ko=new vo,xo=function(){var e,t,n,r=vr,o=r.options,i=void 0===o?vr:o,a=r.plugins,s=void 0===a?wr:a,l=function(n,r,o){return o.startsWith(t)&&o.endsWith(t)&&o.replaceAll(t,\"\").length>0?\".\".concat(e):n},c=s.slice();c.push((function(e){e.type===vn&&e.value.includes(\"&\")&&(e.props[0]=e.props[0].replace(yo,t).replace(n,l))})),i.prefix&&c.push(lr),c.push(sr);var d=function(r,o,a,s){void 0===o&&(o=\"\"),void 0===a&&(a=\"\"),void 0===s&&(s=\"&\"),e=s,t=o,n=new RegExp(\"\\\\\".concat(t,\"\\\\b\"),\"g\");var l=r.replace(bo,\"\"),d=er(a||o?\"\".concat(a,\" \").concat(o,\" { \").concat(l,\" }\"):l);i.namespace&&(d=Co(d,i.namespace));var u,h,p,f=[];return ar(d,(u=c.concat((p=function(e){return f.push(e)},function(e){e.root||(e=e.return)&&p(e)})),h=En(u),function(e,t,n,r){for(var o=\"\",i=0;i<h;i++)o+=u[i](e,t,n,r)||\"\";return o})),f};return d.hash=s.length?s.reduce((function(e,t){return t.name||Qr(15),Vr(e,t.name)}),5381).toString():\"\",d}(),Lo=react__WEBPACK_IMPORTED_MODULE_1__.createContext({shouldForwardProp:void 0,styleSheet:ko,stylis:xo});function Mo(){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Lo)}react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);var Ho=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=xo);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,\"@keyframes\"))},this.name=e,this.id=\"sc-keyframes-\".concat(e),this.rules=t,Jr(this,(function(){throw Qr(12,String(n.name))}))}return e.prototype.getName=function(e){return void 0===e&&(e=xo),this.name+e.hash},e}(),Vo=function(e){return e>=\"A\"&&e<=\"Z\"};function Ro(e){for(var t=\"\",n=0;n<e.length;n++){var r=e[n];if(1===n&&\"-\"===r&&\"-\"===e[0])return e;Vo(r)?t+=\"-\"+r.toLowerCase():t+=r}return t.startsWith(\"ms-\")?\"-\"+t:t}var So=function(e){return null==e||!1===e||\"\"===e},Fo=function(e){var t,n,r=[];for(var o in e){var i=e[o];e.hasOwnProperty(o)&&!So(i)&&(Array.isArray(i)&&i.isCss||qr(i)?r.push(\"\".concat(Ro(o),\":\"),i,\";\"):Xr(i)?r.push.apply(r,pn(pn([\"\".concat(o,\" {\")],Fo(i),!1),[\"}\"],!1)):r.push(\"\".concat(Ro(o),\": \").concat((t=o,null==(n=i)||\"boolean\"==typeof n||\"\"===n?\"\":\"number\"!=typeof n||0===n||t in cr||t.startsWith(\"--\")?String(n).trim():\"\".concat(n,\"px\")),\";\")))}return r};function Eo(e,t,n,r){return So(e)?[]:Ur(e)?[\".\".concat(e.styledComponentId)]:qr(e)?!qr(o=e)||o.prototype&&o.prototype.isReactComponent||!t?[e]:Eo(e(t),t,n,r):e instanceof Ho?n?(e.inject(n,r),[e.getName(r)]):[e]:Xr(e)?Fo(e):Array.isArray(e)?Array.prototype.concat.apply(wr,e.map((function(e){return Eo(e,t,n,r)}))):[e.toString()];var o}var No=Rr(pr),Io=function(){function e(e,t,n){this.rules=e,this.staticRulesId=\"\",this.isStatic=(void 0===n||n.isStatic)&&function(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(qr(n)&&!Ur(n))return!1}return!0}(e),this.componentId=t,this.baseHash=Vr(No,t),this.baseStyle=n,vo.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.baseStyle?this.baseStyle.generateAndInjectStyles(e,t,n):\"\";if(this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(this.componentId,this.staticRulesId))r=Gr(r,this.staticRulesId);else{var o=Yr(Eo(this.rules,e,t,n)),i=Mr(Vr(this.baseHash,o)>>>0);if(!t.hasNameForId(this.componentId,i)){var a=n(o,\".\".concat(i),void 0,this.componentId);t.insertRules(this.componentId,i,a)}r=Gr(r,i),this.staticRulesId=i}else{for(var s=Vr(this.baseHash,n.hash),l=\"\",c=0;c<this.rules.length;c++){var d=this.rules[c];if(\"string\"==typeof d)l+=d;else if(d){var u=Yr(Eo(d,e,t,n));s=Vr(s,u+c),l+=u}}if(l){var h=Mr(s>>>0);t.hasNameForId(this.componentId,h)||t.insertRules(this.componentId,h,n(l,\".\".concat(h),void 0,this.componentId)),r=Gr(r,h)}}return r},e}(),Bo=react__WEBPACK_IMPORTED_MODULE_1__.createContext(void 0);function jo(e){var t=react__WEBPACK_IMPORTED_MODULE_1__.useContext(Bo),n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return function(e,t){if(!e)throw Qr(14);if(qr(e))return e(t);if(Array.isArray(e)||\"object\"!=typeof e)throw Qr(8);return t?hn(hn({},t),e):e}(e.theme,t)}),[e.theme,t]);return e.children?react__WEBPACK_IMPORTED_MODULE_1__.createElement(Bo.Provider,{value:n},e.children):null}var $o={};function Ao(e,t,n){var r,o=Ur(e),i=e,a=!Fr(e),s=t.attrs,l=void 0===s?wr:s,c=t.componentId,d=void 0===c?function(e,t){var n=\"string\"!=typeof e?\"sc\":kr(e);$o[n]=($o[n]||0)+1;var r=\"\".concat(n,\"-\").concat(Sr(pr+n+$o[n]));return t?\"\".concat(t,\"-\").concat(r):r}(t.displayName,t.parentComponentId):c,u=t.displayName,p=void 0===u?Fr(r=e)?\"styled.\".concat(r):\"Styled(\".concat(function(e){return e.displayName||e.name||\"Component\"}(r),\")\"):u,f=t.displayName&&t.componentId?\"\".concat(kr(t.displayName),\"-\").concat(t.componentId):t.componentId||d,g=o&&i.attrs?i.attrs.concat(l).filter(Boolean):l,w=t.shouldForwardProp;if(o&&i.shouldForwardProp){var v=i.shouldForwardProp;if(t.shouldForwardProp){var y=t.shouldForwardProp;w=function(e,t){return v(e,t)&&y(e,t)}}else w=v}var b=new Io(n,f,o?i.componentStyle:void 0);function C(e,t){return function(e,t,n){var r=e.attrs,o=e.componentStyle,i=e.defaultProps,a=e.foldedComponentIds,s=e.styledComponentId,l=e.target,c=react__WEBPACK_IMPORTED_MODULE_1__.useContext(Bo),d=Mo(),u=e.shouldForwardProp||d.shouldForwardProp,p=function(e,t,n){return void 0===n&&(n=vr),e.theme!==n.theme&&e.theme||t||n.theme}(t,c,i)||vr,f=function(e,t,n){for(var r,o=hn(hn({},t),{className:void 0,theme:n}),i=0;i<e.length;i+=1){var a=qr(r=e[i])?r(o):r;for(var s in a)o[s]=\"className\"===s?Gr(o[s],a[s]):\"style\"===s?hn(hn({},o[s]),a[s]):a[s]}return t.className&&(o.className=Gr(o.className,t.className)),o}(r,t,p),g=f.as||l,w={};for(var v in f)void 0===f[v]||\"$\"===v[0]||\"as\"===v||\"theme\"===v&&f.theme===p||(\"forwardedAs\"===v?w.as=f.forwardedAs:u&&!u(v,g)||(w[v]=f[v]));var y,b,C,k=(y=o,b=f,C=Mo(),y.generateAndInjectStyles(b,C.styleSheet,C.stylis)),x=Gr(a,s);return k&&(x+=\" \"+k),f.className&&(x+=\" \"+f.className),w[Fr(g)&&!yr.has(g)?\"class\":\"className\"]=x,w.ref=n,(0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(g,w)}(k,e,t)}C.displayName=p;var k=react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(C);return k.attrs=g,k.componentStyle=b,k.displayName=p,k.shouldForwardProp=w,k.foldedComponentIds=o?Gr(i.foldedComponentIds,i.styledComponentId):\"\",k.styledComponentId=f,k.target=o?i.target:e,Object.defineProperty(k,\"defaultProps\",{get:function(){return this._foldedDefaultProps},set:function(e){this._foldedDefaultProps=o?function(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];for(var r=0,o=t;r<o.length;r++)Kr(e,o[r],!0);return e}({},i.defaultProps,e):e}}),Jr(k,(function(){return\".\".concat(k.styledComponentId)})),a&&_r(k,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0}),k}function To(e,t){for(var n=[e[0]],r=0,o=t.length;r<o;r+=1)n.push(t[r],e[r+1]);return n}var Po=function(e){return Object.assign(e,{isCss:!0})};function Wo(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];if(qr(e)||Xr(e))return Po(Eo(To(wr,pn([e],t,!0))));var r=e;return 0===t.length&&1===r.length&&\"string\"==typeof r[0]?Eo(r):Po(Eo(To(r,t)))}function Zo(e,t,n){if(void 0===n&&(n=vr),!t)throw Qr(1,t);var r=function(r){for(var o=[],i=1;i<arguments.length;i++)o[i-1]=arguments[i];return e(t,n,Wo.apply(void 0,pn([r],o,!1)))};return r.attrs=function(r){return Zo(e,t,hn(hn({},n),{attrs:Array.prototype.concat(n.attrs,r).filter(Boolean)}))},r.withConfig=function(r){return Zo(e,t,hn(hn({},n),r))},r}var Do=function(e){return Zo(Ao,e)},zo=Do;function Oo(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];var r=Yr(Wo.apply(void 0,pn([e],t,!1))),o=Sr(r);return new Ho(o,r)}yr.forEach((function(e){zo[e]=Do(e)}));const _o=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"access-denied\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.1568 6.84315C21.281 9.96734 21.281 15.0327 18.1568 18.1569C15.0326 21.281 9.96733 21.281 6.84313 18.1569C3.71894 15.0327 3.71894 9.96734 6.84313 6.84315C9.96733 3.71895 15.0326 3.71895 18.1568 6.84315ZM18.1568 6.84315L6.844 18.156\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_o.displayName=\"ForwardRef(AccessDeniedIcon)\";const qo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"activity\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 15H19L15.5 7L11 18L8 12L6 15H4\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qo.displayName=\"ForwardRef(ActivityIcon)\";const Uo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12.4H17M12.5 8V17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Uo.displayName=\"ForwardRef(AddCircleIcon)\";const Go=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add-comment\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5H9.5V20.5L13.5 16.5H16.5C17.6046 16.5 18.5 15.6046 18.5 14.5V12M15 6.5H22M18.5 10V3\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Go.displayName=\"ForwardRef(AddCommentIcon)\";const Yo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"add-document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V12M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5M6.5 9.5V19.5H11M20 17.5H16.5M16.5 17.5H13M16.5 17.5V14M16.5 17.5V21\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Yo.displayName=\"ForwardRef(AddDocumentIcon)\";const Xo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5V20M5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Xo.displayName=\"ForwardRef(AddIcon)\";const Ko=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"add-user\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.17857 15.2368C3.10714 15.7632 1.5 16.8158 1.5 20.5H16.5C16.5 16.8158 15.2589 15.943 13.8214 15.2368C12.75 14.7105 10.6071 14.7105 10.6071 13.1316C10.6071 11.5526 11.6786 10.7632 11.6786 8.65789C11.6786 6.55263 10.6071 5.5 9 5.5C7.39285 5.5 6.32142 6.55263 6.32142 8.65789C6.32142 10.7632 7.39286 11.5526 7.39286 13.1316C7.39286 14.7105 5.25 14.7105 4.17857 15.2368Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 7V14M16 10.5H23\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ko.displayName=\"ForwardRef(AddUserIcon)\";const Jo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"api\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.93047 13.2107L6.66782 10.3728H6.73089L7.45854 13.2107H5.93047ZM8.17164 16H9.66089L7.56041 9H5.93047L3.82999 16H5.20767L5.65396 14.2876H7.73505L8.17164 16Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5389 9V16H11.9166V13.7782H13.0323C14.541 13.7782 15.5015 12.8517 15.5015 11.3964C15.5015 9.92654 14.5701 9 13.1003 9H10.5389ZM11.9166 10.1303H12.751C13.6533 10.1303 14.1044 10.5475 14.1044 11.3867C14.1044 12.2308 13.6533 12.6431 12.751 12.6431H11.9166V10.1303Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21.1675 16V14.8164H19.717V10.1836H21.1675V9H16.8889V10.1836H18.3393V14.8164H16.8889V16H21.1675Z\",fill:\"currentColor\"})]})}));Jo.displayName=\"ForwardRef(ApiIcon)\";const Qo=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"archive\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10V17M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 7.5H20.5M16 14L12.5 17.5L9 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Qo.displayName=\"ForwardRef(ArchiveIcon)\";const ei=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 19.5V5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 14L12.5 19.5L7 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ei.displayName=\"ForwardRef(ArrowDownIcon)\";const ti=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 18L5.5 12.5L11 7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ti.displayName=\"ForwardRef(ArrowLeftIcon)\";const ni=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 12.5H5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 7L19.5 12.5L14 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ni.displayName=\"ForwardRef(ArrowRightIcon)\";const ri=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-top-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 8.5L7 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 8.5H16.5V16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ri.displayName=\"ForwardRef(ArrowTopRightIcon)\";const oi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 11L12.5 5.5L18 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));oi.displayName=\"ForwardRef(ArrowUpIcon)\";const ii=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"asterisk\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 4V21M16.75 5.13879L8.25 19.8612M19.8612 8.25L5.13878 16.75M4.00002 12.5H21M5.13881 8.25L19.8612 16.75M8.25002 5.13879L16.75 19.8612\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ii.displayName=\"ForwardRef(AsteriskIcon)\";const ai=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bar-chart\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V19.5H20M8.5 18V13M11.5 18V9M14.5 18V11M17.5 18V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ai.displayName=\"ForwardRef(BarChartIcon)\";const si=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"basket\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 10.5H5L6.5 19.5H18.5L20 10.5H16.5M8.5 10.5L10.2721 5.18377C10.4082 4.77543 10.7903 4.5 11.2208 4.5H13.7792C14.2097 4.5 14.5918 4.77543 14.7279 5.18377L16.5 10.5M8.5 10.5H16.5M8.5 10.5L9.5 19.5M16.5 10.5L15.5 19.5M12.5 10.5V19.5M19.5 13.5H5.5M19 16.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));si.displayName=\"ForwardRef(BasketIcon)\";const li=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bell\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 17.5V18.5C10.5 20 11.5 20.5 12.5 20.5C13.5 20.5 14.5 20 14.5 18.5V17.5M5.5 17.5C6.5 16 6.5 15 6.5 12C6.5 8 8.5 5.5 12.5 5.5C16.5 5.5 18.5 8 18.5 12C18.5 15 18.5 16 19.5 17.5H5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));li.displayName=\"ForwardRef(BellIcon)\";const ci=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bill\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.50001 5.5C8.50003 5.5 8.50003 8 8.50003 8V9.5M6.50001 5.5C4.5 5.5 4.5 8 4.5 8L4.50001 9.5H8.50003M6.50001 5.5C6.50001 5.5 15.8333 5.5 17.6667 5.5C19.5 5.5 19.5 8.5 19.5 8.5V20L17.6667 19L15.8333 20L14 19L12.1667 20L10.3334 19L8.50003 20V9.5M11 12.5H15M11 9.5H16M11 15.5H16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ci.displayName=\"ForwardRef(BillIcon)\";const di=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"binary-document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 12.5V17.5M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM12.5 12.5V17.5H15.5V12.5H12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})]})}));di.displayName=\"ForwardRef(BinaryDocumentIcon)\";const ui=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"block-content\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 7.60002L11 7.60003V6.40003L21 6.40002V7.60002Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 11.2667L12.4833 11.2667V10.0667L21 10.0667V11.2667Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 14.9334H13.9254V13.7334L21 13.7334V14.9334Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 18.6002H4V17.4002H21V18.6002Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.86438 15.6H11.2L8.27623 7.60003H6.92377L4 15.6H5.29072L6.0371 13.4767H9.12362L9.86438 15.6ZM7.53546 9.05255H7.63086L8.80374 12.4344H6.35698L7.53546 9.05255Z\",fill:\"currentColor\"})]})}));ui.displayName=\"ForwardRef(BlockContentIcon)\";const hi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"block-element\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 19.5H20M5 5.5H20M6.5 8.5H18.5V16.5H6.5V8.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));hi.displayName=\"ForwardRef(BlockElementIcon)\";const pi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"blockquote\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 17.5H19M6 7.5H19M10 12.5H17M6.5 12V18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));pi.displayName=\"ForwardRef(BlockquoteIcon)\";const fi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bold\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.2087 18C15.5322 18 16.9731 16.793 16.9731 14.8844C16.9731 13.4812 15.9245 12.3949 14.4836 12.2892V12.1534C15.6001 11.9875 16.4526 10.9841 16.4526 9.82991C16.4526 8.14761 15.1927 7.11409 13.0804 7.11409H8.32019V18H13.2087ZM10.5985 8.85674H12.4995C13.5859 8.85674 14.212 9.37727 14.212 10.2448C14.212 11.1199 13.5406 11.6254 12.3109 11.6254H10.5985V8.85674ZM10.5985 16.2574V13.1643H12.575C13.9178 13.1643 14.6496 13.6924 14.6496 14.6882C14.6496 15.7066 13.9404 16.2574 12.6278 16.2574H10.5985Z\",fill:\"currentColor\"})})}));fi.displayName=\"ForwardRef(BoldIcon)\";const gi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bolt\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 11.5L9 21L11 13.5H7L16 4L14 11.5H18Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));gi.displayName=\"ForwardRef(BoltIcon)\";const mi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"book\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 17.5V5.5L12.5 6.5M20.5 17.5L12.5 18.5M20.5 17.5V18.5M4.5 17.5V5.5L12.5 6.5M4.5 17.5L12.5 18.5M4.5 17.5V18.5M12.5 18.5L4.5 19.5V18.5M12.5 18.5L20.5 19.5V18.5M12.5 18.5V6.5M12.5 18.5H4.5M12.5 18.5H20.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));mi.displayName=\"ForwardRef(BookIcon)\";const wi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bottle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 17.5L17.5 17.5M17.5 13C17.5 12.087 17.5 11.3518 17.5 11C17.5 8.5 14.5 9 14.5 7.37494L14.5 5.5M17.5 13C17.5 15.1229 17.5 18.7543 17.5 20.5022C17.5 21.0545 17.0523 21.5 16.5 21.5L8.5 21.5C7.94772 21.5 7.5 21.0547 7.5 20.5024C7.5 18.8157 7.5 15.3546 7.5 13M17.5 13L7.5 13M7.5 13C7.5 12.2538 7.5 11.5648 7.5 11C7.5 8.5 10.5 9 10.5 7.37494L10.5 5.5M10.5 5.5L10.5 3.99999C10.5 3.72385 10.7239 3.49999 11 3.49999L14 3.49999C14.2761 3.49999 14.5 3.72385 14.5 3.99999L14.5 5.5M10.5 5.5L14.5 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wi.displayName=\"ForwardRef(BottleIcon)\";const vi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"bulb-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H14V20.5C14 21.0523 13.5523 21.5 13 21.5H12C11.4477 21.5 11 21.0523 11 20.5V19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10C18 11.94 17.3978 12.9767 16.4272 14.3368Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.4272 14.3368L15.9388 13.9883L15.9388 13.9883L16.4272 14.3368ZM14 19.5V18.9H13.4V19.5H14ZM11 19.5H11.6V18.9H11V19.5ZM8.57284 14.3368L9.06122 13.9883L9.06122 13.9883L8.57284 14.3368ZM16.1 17.212C16.1 16.3069 16.3868 15.4261 16.9155 14.6853L15.9388 13.9883C15.2678 14.9284 14.9 16.0519 14.9 17.212H16.1ZM16.1 18.5V17.212H14.9V18.5H16.1ZM14.5 20.1C15.3837 20.1 16.1 19.3837 16.1 18.5H14.9C14.9 18.7209 14.7209 18.9 14.5 18.9V20.1ZM14 20.1H14.5V18.9H14V20.1ZM13.4 19.5V20.5H14.6V19.5H13.4ZM13.4 20.5C13.4 20.7209 13.2209 20.9 13 20.9V22.1C13.8837 22.1 14.6 21.3837 14.6 20.5H13.4ZM13 20.9H12V22.1H13V20.9ZM12 20.9C11.7791 20.9 11.6 20.7209 11.6 20.5H10.4C10.4 21.3837 11.1163 22.1 12 22.1V20.9ZM11.6 20.5V19.5H10.4V20.5H11.6ZM10.5 20.1H11V18.9H10.5V20.1ZM8.9 18.5C8.9 19.3837 9.61634 20.1 10.5 20.1V18.9C10.2791 18.9 10.1 18.7209 10.1 18.5H8.9ZM8.9 17.212V18.5H10.1V17.212H8.9ZM8.08446 14.6853C8.61315 15.4261 8.9 16.3069 8.9 17.212H10.1C10.1 16.0519 9.73217 14.9284 9.06122 13.9883L8.08446 14.6853ZM6.4 10C6.4 11.0377 6.56208 11.8595 6.86624 12.611C7.16624 13.3521 7.59495 13.9995 8.08446 14.6853L9.06122 13.9883C8.58004 13.314 8.22233 12.7629 7.97858 12.1607C7.739 11.5688 7.6 10.9023 7.6 10H6.4ZM12.5 3.9C9.16863 3.9 6.4 6.66863 6.4 10H7.6C7.6 7.33137 9.83137 5.1 12.5 5.1V3.9ZM18.6 10C18.6 6.66863 15.8314 3.9 12.5 3.9V5.1C15.1686 5.1 17.4 7.33137 17.4 10H18.6ZM16.9155 14.6853C17.4051 13.9995 17.8338 13.3521 18.1338 12.611C18.4379 11.8595 18.6 11.0377 18.6 10H17.4C17.4 10.9023 17.261 11.5688 17.0214 12.1607C16.7777 12.7629 16.42 13.314 15.9388 13.9883L16.9155 14.6853Z\",fill:\"currentColor\"})]})}));vi.displayName=\"ForwardRef(BulbFilledIcon)\";const yi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bulb-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 16.5H15.5M11 20V20.5C11 21.0523 11.4477 21.5 12 21.5H13C13.5523 21.5 14 21.0523 14 20.5V20M18 10C18 11.94 17.3978 12.9767 16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10Z\",stroke:\"currentColor\",strokeWidth:1.2})})}));yi.displayName=\"ForwardRef(BulbOutlineIcon)\";const bi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"calendar\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 10.5V19.5H20.5V10.5M4.5 10.5V5.5H20.5V10.5M4.5 10.5H12.5H20.5M20.5 13.5H16.5M16.5 13.5H12.5M16.5 13.5V10.5M16.5 13.5V16.5M12.5 13.5H8.5M12.5 13.5V16.5M12.5 13.5V10.5M8.5 13.5H4.5M8.5 13.5V10.5M8.5 13.5V16.5M20.5 16.5H16.5M16.5 16.5H12.5M16.5 16.5V19.5M12.5 16.5H8.5M12.5 16.5V19.5M8.5 16.5H4.5M8.5 16.5V19.5M17.5 8V3M7.5 8V3\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));bi.displayName=\"ForwardRef(CalendarIcon)\";const Ci=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"case\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 8.5122V6C9 5.44772 9.44772 5 10 5H15C15.5523 5 16 5.44772 16 6V8.5122M4.5 12V18.5C4.5 19.0523 4.94772 19.5 5.5 19.5H19.5C20.0523 19.5 20.5 19.0523 20.5 18.5V12M4.5 12V9.5122C4.5 8.95991 4.94772 8.5122 5.5 8.5122H19.5C20.0523 8.5122 20.5 8.95991 20.5 9.5122V12M4.5 12L11.7978 14.7367C12.2505 14.9064 12.7495 14.9064 13.2022 14.7367L20.5 12\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ci.displayName=\"ForwardRef(CaseIcon)\";const ki=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chart-upward\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V19.5H20M7.5 16L11.5 11.5L15.5 14L19.5 8.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ki.displayName=\"ForwardRef(ChartUpwardIcon)\";const xi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"checkmark-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 12.1316L11.7414 14.5L16 10M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xi.displayName=\"ForwardRef(CheckmarkCircleIcon)\";const Li=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"checkmark\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 11.5L10.5 16.5L19.5 7.60001\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Li.displayName=\"ForwardRef(CheckmarkIcon)\";const Mi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 10.5L12.5 15L8 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Mi.displayName=\"ForwardRef(ChevronDownIcon)\";const Hi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 17L10 12.5L14.5 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Hi.displayName=\"ForwardRef(ChevronLeftIcon)\";const Vi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 8L15 12.5L10.5 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Vi.displayName=\"ForwardRef(ChevronRightIcon)\";const Ri=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 14.5L12.5 10L17 14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ri.displayName=\"ForwardRef(ChevronUpIcon)\";const Si=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:8,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Si.displayName=\"ForwardRef(CircleIcon)\";const Fi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clipboard\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 5.5H6.5V19.5H18.5V5.5H17M12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Fi.displayName=\"ForwardRef(ClipboardIcon)\";const Ei=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clipboard-image\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 5.5H6.5V19.5H10.5M17 5.5H18.5V11.5M10.5 18.5L12.73 15.8983C13.1327 15.4285 13.8613 15.4335 14.2575 15.909L15.299 17.1588C15.6754 17.6105 16.3585 17.6415 16.7743 17.2257L16.9903 17.0097C17.2947 16.7053 17.7597 16.6298 18.1447 16.8223L20.5 18M10.5 11.5H20.5V21.5H10.5V11.5ZM12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ei.displayName=\"ForwardRef(ClipboardImageIcon)\";const Ni=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 8V12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ni.displayName=\"ForwardRef(ClockIcon)\";const Ii=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"close-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 15.5L12.5 12.5M12.5 12.5L15.5 9.5M12.5 12.5L9.5 9.5M12.5 12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ii.displayName=\"ForwardRef(CloseCircleIcon)\";const Bi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"close\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 7L7 18M7 7L18 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Bi.displayName=\"ForwardRef(CloseIcon)\";const ji=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"code-block\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 15L8.5 12.5L11 10M14 10L16.5 12.5L14 15M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ji.displayName=\"ForwardRef(CodeBlockIcon)\";const $i=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"code\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 16L7.5 12.5L11 9M14 9L17.5 12.5L14 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$i.displayName=\"ForwardRef(CodeIcon)\";const Ai=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"cog\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.2624 5.40607L13.8714 4.42848C13.6471 3.86771 13.104 3.5 12.5 3.5C11.896 3.5 11.3529 3.86771 11.1286 4.42848L10.7376 5.40607C10.5857 5.78585 10.2869 6.08826 9.90901 6.2448C9.53111 6.40133 9.10603 6.39874 8.73006 6.23761L7.76229 5.82285C7.20716 5.58494 6.56311 5.70897 6.13604 6.13604C5.70897 6.56311 5.58494 7.20716 5.82285 7.76229L6.23761 8.73006C6.39874 9.10602 6.40133 9.53111 6.2448 9.90901C6.08826 10.2869 5.78585 10.5857 5.40607 10.7376L4.42848 11.1286C3.86771 11.3529 3.5 11.896 3.5 12.5C3.5 13.104 3.86771 13.6471 4.42848 13.8714L5.40607 14.2624C5.78585 14.4143 6.08826 14.7131 6.2448 15.091C6.40133 15.4689 6.39874 15.894 6.23761 16.2699L5.82285 17.2377C5.58494 17.7928 5.70897 18.4369 6.13604 18.864C6.56311 19.291 7.20716 19.4151 7.76229 19.1772L8.73006 18.7624C9.10603 18.6013 9.53111 18.5987 9.90901 18.7552C10.2869 18.9117 10.5857 19.2141 10.7376 19.5939L11.1286 20.5715C11.3529 21.1323 11.896 21.5 12.5 21.5C13.104 21.5 13.6471 21.1323 13.8714 20.5715L14.2624 19.5939C14.4143 19.2141 14.7131 18.9117 15.091 18.7552C15.4689 18.5987 15.894 18.6013 16.2699 18.7624L17.2377 19.1771C17.7928 19.4151 18.4369 19.291 18.864 18.864C19.291 18.4369 19.4151 17.7928 19.1771 17.2377L18.7624 16.2699C18.6013 15.894 18.5987 15.4689 18.7552 15.091C18.9117 14.7131 19.2141 14.4143 19.5939 14.2624L20.5715 13.8714C21.1323 13.6471 21.5 13.104 21.5 12.5C21.5 11.896 21.1323 11.3529 20.5715 11.1286L19.5939 10.7376C19.2141 10.5857 18.9117 10.2869 18.7552 9.90901C18.5987 9.53111 18.6013 9.10602 18.7624 8.73006L19.1772 7.76229C19.4151 7.20716 19.291 6.56311 18.864 6.13604C18.4369 5.70897 17.7928 5.58494 17.2377 5.82285L16.2699 6.23761C15.894 6.39874 15.4689 6.40133 15.091 6.2448C14.7131 6.08826 14.4143 5.78585 14.2624 5.40607Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 12.5C16.5 14.7091 14.7091 16.5 12.5 16.5C10.2909 16.5 8.5 14.7091 8.5 12.5C8.5 10.2909 10.2909 8.5 12.5 8.5C14.7091 8.5 16.5 10.2909 16.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ai.displayName=\"ForwardRef(CogIcon)\";const Ti=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"collapse\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 14.5L10.5 14.5V19M19 10.5H14.5L14.5 6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 14.5L6 19M14.5 10.5L19 6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ti.displayName=\"ForwardRef(CollapseIcon)\";const Pi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"color-wheel\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.43853 5.10896L11.1606 9.26642M13.8394 15.7336L15.5615 19.891M15.7336 11.1606L19.891 9.43853M9.26642 13.8394L5.10896 15.5615M5.3139 9.52342L9.23359 11.147M15.7664 13.853L19.6861 15.4766M13.853 9.23359L15.4766 5.3139M9.52342 19.6861L11.147 15.7664M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5ZM16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Pi.displayName=\"ForwardRef(ColorWheelIcon)\";const Wi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"comment\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Wi.displayName=\"ForwardRef(CommentIcon)\";const Zi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"component\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 8.5L12.5 12.5M12.5 12.5L16.5 16.5M12.5 12.5L16.5 8.5M12.5 12.5L8.5 16.5M12.5 4L21 12.5L12.5 21L4 12.5L12.5 4Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Zi.displayName=\"ForwardRef(ComponentIcon)\";const Di=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"compose\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 6L19 8M14 5.5H5.5V19.5H19.5V11M9 16L9.5 13.5L19 4L21 6L11.5 15.5L9 16Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Di.displayName=\"ForwardRef(ComposeIcon)\";const zi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"confetti\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 6.25C16.9142 6.25 17.25 5.91421 17.25 5.5C17.25 5.08579 16.9142 4.75 16.5 4.75C16.0858 4.75 15.75 5.08579 15.75 5.5C15.75 5.91421 16.0858 6.25 16.5 6.25Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 16.25C19.9142 16.25 20.25 15.9142 20.25 15.5C20.25 15.0858 19.9142 14.75 19.5 14.75C19.0858 14.75 18.75 15.0858 18.75 15.5C18.75 15.9142 19.0858 16.25 19.5 16.25Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 4C11 6 14.5 5.5 12.5 7.5M21 12C19 14 19.5 10.5 17.5 12.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.066 16.4904C15.3965 17.1598 13.1126 15.9613 10.9647 13.8135C8.81684 11.6656 7.61835 9.38165 8.28782 8.71218M16.066 16.4904C16.7355 15.8209 15.537 13.537 13.3891 11.3891C11.2412 9.2412 8.95729 8.04271 8.28782 8.71218M16.066 16.4904C15.8661 16.6902 15.6277 16.8474 15.3657 16.952L6.99288 20.296C6.26931 20.5849 5.44878 20.4193 4.9038 19.8744C4.35883 19.3294 4.19324 18.5089 4.48221 17.7853L7.82614 9.41242C7.93077 9.15042 8.08793 8.91208 8.28782 8.71218M20 5C20 14 11.5 5.32688 11.5 14.3269\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));zi.displayName=\"ForwardRef(ConfettiIcon)\";const Oi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"controls\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 5V7.5M6.5 7.5C5.39543 7.5 4.5 8.39543 4.5 9.5C4.5 10.6046 5.39543 11.5 6.5 11.5M6.5 7.5C7.60457 7.5 8.5 8.39543 8.5 9.5C8.5 10.6046 7.60457 11.5 6.5 11.5M6.5 11.5V20M12.5 5V13.5M12.5 13.5C11.3954 13.5 10.5 14.3954 10.5 15.5C10.5 16.6046 11.3954 17.5 12.5 17.5M12.5 13.5C13.6046 13.5 14.5 14.3954 14.5 15.5C14.5 16.6046 13.6046 17.5 12.5 17.5M12.5 17.5V20M18.5 5V7.5M18.5 7.5C17.3954 7.5 16.5 8.39543 16.5 9.5C16.5 10.6046 17.3954 11.5 18.5 11.5M18.5 7.5C19.6046 7.5 20.5 8.39543 20.5 9.5C20.5 10.6046 19.6046 11.5 18.5 11.5M18.5 11.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Oi.displayName=\"ForwardRef(ControlsIcon)\";const _i=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"copy\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 8.5H5.5V20.5H16.5V16.5M19.5 4.5H8.5V16.5H19.5V4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_i.displayName=\"ForwardRef(CopyIcon)\";const qi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"credit-card\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 9.5H4.5V11.5H20.5V9.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 15.5H14M5.5 18.5H19.5C20.0523 18.5 20.5 18.0523 20.5 17.5V7.5C20.5 6.94772 20.0523 6.5 19.5 6.5H5.5C4.94772 6.5 4.5 6.94772 4.5 7.5V17.5C4.5 18.0523 4.94772 18.5 5.5 18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));qi.displayName=\"ForwardRef(CreditCardIcon)\";const Ui=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"crop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 5V15.5H20M5 9.5H15.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ui.displayName=\"ForwardRef(CropIcon)\";const Gi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"cube\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 22V13M12.5 13L4.5 8M12.5 13L20.5 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Gi.displayName=\"ForwardRef(CubeIcon)\";const Yi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"dashboard\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 19.5V12.5M10.5 12.5V5.5M5.5 12.5H19.5M5.5 19.5H19.5V5.5H5.5V19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Yi.displayName=\"ForwardRef(DashboardIcon)\";const Xi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"database\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 7V17.5C18.5 19.0594 16.0504 20.5 12.5 20.5C8.9496 20.5 6.5 19.0594 6.5 17.5V7M18.5 7C18.5 8.45543 15.8137 9.5 12.5 9.5C9.18629 9.5 6.5 8.45543 6.5 7C6.5 5.54457 9.18629 4.5 12.5 4.5C15.8137 4.5 18.5 5.54457 18.5 7Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Xi.displayName=\"ForwardRef(DatabaseIcon)\";const Ki=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"desktop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 13.5V15.5C4.5 16.0523 4.94772 16.5 5.5 16.5H12.5M4.5 13.5V6.5C4.5 5.94772 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V13.5M4.5 13.5H20.5M20.5 13.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5M12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ki.displayName=\"ForwardRef(DesktopIcon)\";const Ji=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"diamond\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 10.5L12.5 21M21 10.5L18 5.5H11M21 10.5H16M12.5 21L4 10.5M12.5 21L9 10.5M12.5 21L16 10.5M4 10.5L7 5.5H11M4 10.5H9M9 10.5H12.5H16M9 10.5L11 5.5M16 10.5L14.5 5.5H11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ji.displayName=\"ForwardRef(DiamondIcon)\";const Qi=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5L6.5 9.5M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Qi.displayName=\"ForwardRef(DocumentIcon)\";const ea=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-pdf\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.7127 13.8012L12.7193 13.77C12.8488 13.2366 13.0117 12.5716 12.8845 11.969C12.7997 11.4937 12.4493 11.3084 12.1503 11.295C11.7977 11.2794 11.483 11.4803 11.4049 11.7726C11.2576 12.3082 11.3893 13.0402 11.6303 13.973C11.3268 14.6961 10.8425 15.7472 10.4877 16.3721C9.8271 16.7135 8.94113 17.2402 8.80946 17.9053C8.78268 18.028 8.81392 18.1842 8.88757 18.3248C8.97014 18.481 9.10181 18.6015 9.25579 18.6596C9.32274 18.6841 9.40308 18.7042 9.49681 18.7042C9.88959 18.7042 10.5256 18.3873 11.3736 16.9322C11.5031 16.8898 11.637 16.8452 11.7664 16.8006C12.3734 16.5953 13.0028 16.381 13.5718 16.2851C14.2012 16.622 14.9175 16.8385 15.404 16.8385C15.8861 16.8385 16.0758 16.5529 16.1472 16.381C16.2722 16.0797 16.2119 15.7004 16.0088 15.4973C15.7143 15.2072 14.9979 15.1313 13.882 15.2696C13.3331 14.9349 12.9738 14.4796 12.7127 13.8012ZM10.2645 17.1911C9.95431 17.6419 9.71998 17.8673 9.59278 17.9655C9.7423 17.691 10.0346 17.4009 10.2645 17.1911ZM12.2195 11.9355C12.3355 12.1341 12.3199 12.7345 12.2306 13.038C12.1213 12.5939 12.1056 11.9645 12.1704 11.8909L12.2195 11.9355ZM12.1837 14.6247C12.4225 15.0376 12.7238 15.3924 13.0563 15.6557C12.5743 15.7651 12.1346 15.9458 11.7419 16.1065C11.6481 16.1445 11.5566 16.1824 11.4674 16.2181C11.7642 15.6803 12.0119 15.071 12.1837 14.6247ZM15.6562 16.0864L15.6428 16.1065C15.6428 16.1065 15.4375 16.2315 14.6497 15.9213C15.5558 15.8789 15.6562 16.0864 15.6562 16.0864Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ea.displayName=\"ForwardRef(DocumentPdfIcon)\";const ta=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 14V20.5H18.5V14M6.5 11V9.5L11.5 4.5H18.5V11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ta.displayName=\"ForwardRef(DocumentRemoveIcon)\";const na=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-sheet\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.4 19V16.4M10.4 16.4L10.4 13.4M10.4 16.4H8M10.4 16.4H14.4M10.4 13.4V11M10.4 13.4H8M10.4 13.4H14.4M14.4 19V16.4M14.4 16.4V13.4M14.4 16.4H17M14.4 13.4V11M14.4 13.4H17M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));na.displayName=\"ForwardRef(DocumentSheetIcon)\";const ra=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-text\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 13H9M14 16H9M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ra.displayName=\"ForwardRef(DocumentTextIcon)\";const oa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-video\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 16.5V13.5L14 15L11.5 16.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));oa.displayName=\"ForwardRef(DocumentVideoIcon)\";const ia=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-word\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.4699 13.4588H12.5263L13.6328 17H14.5435L16 12H14.9952L14.0656 15.7214H14.0129L12.929 12H12.0672L10.9984 15.7214H10.9419L10.0124 12H9L10.4565 17H11.371L12.4699 13.4588Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ia.displayName=\"ForwardRef(DocumentWordIcon)\";const aa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-zip\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 4.5L13.5 5L15.5 6L13.5 7L15.5 8L13.5 9L15.5 10L13.5 11L14.5 11.5V13M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM13.5 13H15.5L16 17H13L13.5 13Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));aa.displayName=\"ForwardRef(DocumentZipIcon)\";const sa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"documents\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 4.5V9.5H5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H19.5V21.5H8.5V18.5M10.5 4.5H16.5V18.5H5.5V9.5L10.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));sa.displayName=\"ForwardRef(DocumentsIcon)\";const la=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"dot\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:2.5,fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2})})}));la.displayName=\"ForwardRef(DotIcon)\";const ca=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 8L12.5 12.5L8 8M17 13L12.5 17.5L8 13\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ca.displayName=\"ForwardRef(DoubleChevronDownIcon)\";const da=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 17L7.5 12.5L12 8M17 17L12.5 12.5L17 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));da.displayName=\"ForwardRef(DoubleChevronLeftIcon)\";const ua=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 8L17.5 12.5L13 17M8 8L12.5 12.5L8 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ua.displayName=\"ForwardRef(DoubleChevronRightIcon)\";const ha=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12L12.5 7.5L17 12M8 17L12.5 12.5L17 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ha.displayName=\"ForwardRef(DoubleChevronUpIcon)\";const pa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"download\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 17V19.5H5.5V17M12.5 16L12.5 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 11L12.5 16L7.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));pa.displayName=\"ForwardRef(DownloadIcon)\";const fa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"drag-handle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 8C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5C8.67157 5 8 5.67157 8 6.5C8 7.32843 8.67157 8 9.5 8Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 14C10.3284 14 11 13.3284 11 12.5C11 11.6716 10.3284 11 9.5 11C8.67157 11 8 11.6716 8 12.5C8 13.3284 8.67157 14 9.5 14Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 18.5C11 19.3284 10.3284 20 9.5 20C8.67157 20 8 19.3284 8 18.5C8 17.6716 8.67157 17 9.5 17C10.3284 17 11 17.6716 11 18.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 8C16.3284 8 17 7.32843 17 6.5C17 5.67157 16.3284 5 15.5 5C14.6716 5 14 5.67157 14 6.5C14 7.32843 14.6716 8 15.5 8Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 12.5C17 13.3284 16.3284 14 15.5 14C14.6716 14 14 13.3284 14 12.5C14 11.6716 14.6716 11 15.5 11C16.3284 11 17 11.6716 17 12.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 20C16.3284 20 17 19.3284 17 18.5C17 17.6716 16.3284 17 15.5 17C14.6716 17 14 17.6716 14 18.5C14 19.3284 14.6716 20 15.5 20Z\",fill:\"currentColor\"})]})}));fa.displayName=\"ForwardRef(DragHandleIcon)\";const ga=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"drop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 14.5C18.5 18 16 20.5 12.5 20.5C9 20.5 6.5 18 6.5 14.5C6.5 11 9.5 7.50001 12.5 4.5C15.5 7.5 18.5 11 18.5 14.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ga.displayName=\"ForwardRef(DropIcon)\";const ma=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"earth-americas\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 13L5.5 9L10 5H15V10L14 9H11L9.5 11L10.5 12H12V13L13 14.5H15.5L18.5 17L15.5 19.5L10.5 20V17L12.5 15L9 13L7 10.5V13Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:8,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ma.displayName=\"ForwardRef(EarthAmericasIcon)\";const wa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"earth-globe\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 16.5H19.5M5.5 8.5H19.5M4.5 12.5H20.5M12.5 20.5C12.5 20.5 8 18.5 8 12.5C8 6.5 12.5 4.5 12.5 4.5M12.5 4.5C12.5 4.5 17 6.5 17 12.5C17 18.5 12.5 20.5 12.5 20.5M12.5 4.5V20.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wa.displayName=\"ForwardRef(EarthGlobeIcon)\";const va=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"edit\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));va.displayName=\"ForwardRef(EditIcon)\";const ya=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ellipsis-horizontal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 11C7.32843 11 8 11.6716 8 12.5C8 13.3284 7.32843 14 6.5 14C5.67157 14 5 13.3284 5 12.5C5 11.6716 5.67157 11 6.5 11Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 11C13.3284 11 14 11.6716 14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11C19.3284 11 20 11.6716 20 12.5C20 13.3284 19.3284 14 18.5 14C17.6716 14 17 13.3284 17 12.5C17 11.6716 17.6716 11 18.5 11Z\",fill:\"currentColor\"})]})}));ya.displayName=\"ForwardRef(EllipsisHorizontalIcon)\";const ba=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ellipsis-vertical\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 6.5C14 7.32843 13.3284 8 12.5 8C11.6716 8 11 7.32843 11 6.5C11 5.67157 11.6716 5 12.5 5C13.3284 5 14 5.67157 14 6.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11C13.3284 11 14 11.6716 14 12.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 18.5C14 19.3284 13.3284 20 12.5 20C11.6716 20 11 19.3284 11 18.5C11 17.6716 11.6716 17 12.5 17C13.3284 17 14 17.6716 14 18.5Z\",fill:\"currentColor\"})]})}));ba.displayName=\"ForwardRef(EllipsisVerticalIcon)\";const Ca=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"empty\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 21V19.1111M8.25 19.8614L9.19445 18.2255M5.13878 16.7501L6.77461 15.8057M4 12.5H5.8889M5.13872 8.2499L6.77455 9.19436M8.25004 5.13876L9.19449 6.7746M12.5 5.88891V4M15.8055 6.77465L16.75 5.1388M18.2254 9.19449L19.8612 8.25004M19.1111 12.5001H21M18.2254 15.8056L19.8612 16.7501M15.8056 18.2255L16.75 19.8614\",stroke:\"currentColor\",strokeWidth:1.2})})}));Ca.displayName=\"ForwardRef(EmptyIcon)\";const ka=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"enter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 14.5H19.5V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 18.5L6 14.5L10 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ka.displayName=\"ForwardRef(EnterIcon)\";const xa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"enter-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 14.5H5.5V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 18.5L19 14.5L15 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));xa.displayName=\"ForwardRef(EnterRightIcon)\";const La=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"envelope\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5H4.5V6.5H20.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5L17.75 15.5L15 12.5M4.5 18.5L10 12.5M20.5 6.5L12.5 15L4.5 6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));La.displayName=\"ForwardRef(EnvelopeIcon)\";const Ma=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"equal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 4.5H3.5V20.5H7.5\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 20.5L21.5 20.5L21.5 4.5L17.5 4.5\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 10.5H16\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 14.5H16\",stroke:\"currentColor\",strokeWidth:1.2})]})}));Ma.displayName=\"ForwardRef(EqualIcon)\";const Ha=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"error-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5ZM13 14.5V16H12V14.5H13ZM12 9V13H13V9H12Z\",fill:\"currentColor\"})})}));Ha.displayName=\"ForwardRef(ErrorFilledIcon)\";const Va=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"error-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 16V14.5M12.5 9V13M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Va.displayName=\"ForwardRef(ErrorOutlineIcon)\";const Ra=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"expand\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 6.5H18.5V11M11 18.5H6.5V14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 6.5L14 11M6.5 18.5L11 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ra.displayName=\"ForwardRef(ExpandIcon)\";const Sa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"eye-closed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 15.5L5.5 17.5M20.5 12.5C19.8612 13.5647 19.041 14.6294 18.0008 15.501M18.0008 15.501C16.5985 16.676 14.7965 17.5 12.5 17.5M18.0008 15.501L18 15.5M18.0008 15.501L19.5 17.5M12.5 17.5C8.5 17.5 6 15 4.5 12.5M12.5 17.5V20M15.5 17L16.5 19.5M9.5 17L8.5 19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Sa.displayName=\"ForwardRef(EyeClosedIcon)\";const Fa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"eye-open\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.39999 12.5C9.39999 10.7879 10.7879 9.39999 12.5 9.39999C14.2121 9.39999 15.6 10.7879 15.6 12.5C15.6 14.2121 14.2121 15.6 12.5 15.6C10.7879 15.6 9.39999 14.2121 9.39999 12.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 7.5C8.5 7.5 6 10 4.5 12.5C6 15 8.5 17.5 12.5 17.5C16.5 17.5 19 15 20.5 12.5C19 10 16.5 7.5 12.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Fa.displayName=\"ForwardRef(EyeOpenIcon)\";const Ea=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"filter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 12L6 7V6L19 6L19 7L14 12V17L11 19V12Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));Ea.displayName=\"ForwardRef(FilterIcon)\";const Na=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"folder\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 8.5H19.5V18.5H5.5V5.5H10.5L11.5 8.5ZM11.5 8.5H5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Na.displayName=\"ForwardRef(FolderIcon)\";const Ia=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"generate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 5.30423C6.33576 6.60253 4.5 9.33688 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5V14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 11L12.5 14.5L9 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ia.displayName=\"ForwardRef(GenerateIcon)\";const Ba=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"groq\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 13H21L13 21L13 13Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 12V4L4 12H12Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 13H4L12 21V13Z\",fill:\"currentColor\"})]})}));Ba.displayName=\"ForwardRef(GroqIcon)\";const ja=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"hash\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M8.33894 16.1002H5.44615L5.63077 14.9002H8.52356L9.26202 10.1002H6.36923L6.55384 8.90018H9.44663L9.89281 6H11.1069L10.6608 8.90018H15.4466L15.8928 6H17.1069L16.6608 8.90018H19.5539L19.3693 10.1002H16.4761L15.7377 14.9002H18.6308L18.4462 16.1002H15.5531L15.1069 19H13.8928L14.3389 16.1002H9.55306L9.10693 19H7.89281L8.33894 16.1002ZM10.4761 10.1002L9.73767 14.9002H14.5236L15.262 10.1002H10.4761Z\",fill:\"currentColor\"})})}));ja.displayName=\"ForwardRef(HashIcon)\";const $a=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"heart-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$a.displayName=\"ForwardRef(HeartFilledIcon)\";const Aa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"heart\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Aa.displayName=\"ForwardRef(HeartIcon)\";const Ta=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"help-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ta.displayName=\"ForwardRef(HelpCircleIcon)\";const Pa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"highlight\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5311 13.7141L8.0245 8.22547M17.5311 13.7141L20.25 9.00478M17.5311 13.7141L16.5 15.5L13.232 16.134L12 18L11.4142 17.6485M8.0245 8.22547L10.75 3.50479M8.0245 8.22547L6.99999 9.99998L7.99998 13L6.99998 15L7.58576 15.3514M7.58576 15.3514L4.90192 20L10.0566 20L11.4142 17.6485M7.58576 15.3514L11.4142 17.6485M13 20H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Pa.displayName=\"ForwardRef(HighlightIcon)\";const Wa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"home\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 8.75V18.5H18.5V8.75M4.5 10L12.5 5L20.5 10M14.5 18.5V11.5H10.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Wa.displayName=\"ForwardRef(HomeIcon)\";const Za=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"ice-cream\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 13.5L12.5 20.5L15.5 13.5M12.5 8.26389C11.9692 7.78885 11.2684 7.5 10.5 7.5C8.84315 7.5 7.5 8.84315 7.5 10.5C7.5 12.1569 8.84315 13.5 10.5 13.5C11.2684 13.5 11.9692 13.2111 12.5 12.7361M9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5M17.5 10.5C17.5 12.1569 16.1569 13.5 14.5 13.5C12.8431 13.5 11.5 12.1569 11.5 10.5C11.5 8.84315 12.8431 7.5 14.5 7.5C16.1569 7.5 17.5 8.84315 17.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Za.displayName=\"ForwardRef(IceCreamIcon)\";const Da=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"image\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 15.5L8.79289 12.2071C9.18342 11.8166 9.81658 11.8166 10.2071 12.2071L12.8867 14.8867C13.2386 15.2386 13.7957 15.2782 14.1938 14.9796L15.1192 14.2856C15.3601 14.1049 15.6696 14.0424 15.9618 14.1154L19.5 15M5.5 6.5H19.5V18.5H5.5V6.5ZM15.5 10.5C15.5 11.0523 15.0523 11.5 14.5 11.5C13.9477 11.5 13.5 11.0523 13.5 10.5C13.5 9.94772 13.9477 9.5 14.5 9.5C15.0523 9.5 15.5 9.94772 15.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Da.displayName=\"ForwardRef(ImageIcon)\";const za=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"image-remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 11V6.5H19.5V11M5.5 14V18.5H19.5V14M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));za.displayName=\"ForwardRef(ImageRemoveIcon)\";const Oa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"images\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 7.5H20.5V19.5H6.5V17.5M4.5 14.5L7.79289 11.2071C8.18342 10.8166 8.81658 10.8166 9.20711 11.2071L11.8867 13.8867C12.2386 14.2386 12.7957 14.2782 13.1938 13.9796L14.1192 13.2856C14.3601 13.1049 14.6696 13.0424 14.9618 13.1154L18.5 14M4.5 5.5H18.5V17.5H4.5V5.5ZM14.5 9.5C14.5 10.0523 14.0523 10.5 13.5 10.5C12.9477 10.5 12.5 10.0523 12.5 9.5C12.5 8.94772 12.9477 8.5 13.5 8.5C14.0523 8.5 14.5 8.94772 14.5 9.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Oa.displayName=\"ForwardRef(ImagesIcon)\";const _a=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"info-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5ZM12 10.5V9H13V10.5H12ZM13 16V12H12V16H13Z\",fill:\"currentColor\"})})}));_a.displayName=\"ForwardRef(InfoFilledIcon)\";const qa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"info-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5V9M12.5 12V16M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qa.displayName=\"ForwardRef(InfoOutlineIcon)\";const Ua=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"inline-element\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V20M19.5 5V20M8.5 6.5H16.5V18.5H8.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ua.displayName=\"ForwardRef(InlineElementIcon)\";const Ga=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"inline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.5H19.5V18.5H12.5M12.5 6.5H5.5V18.5H12.5M12.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ga.displayName=\"ForwardRef(InlineIcon)\";const Ya=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"insert-above\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 10.5556L10.5 10.5556M12.5 12.5L12.5 8.5M18.5 5.5L6.5 5.5M18.5 19.5L6.5 19.5L6.5 15.5L18.5 15.5L18.5 19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));Ya.displayName=\"ForwardRef(InsertAboveIcon)\";const Xa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"insert-below\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 14.5H14.5M12.5 12.5V16.5M6.5 19.5H18.5M6.5 5.5H18.5V9.5H6.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));Xa.displayName=\"ForwardRef(InsertBelowIcon)\";const Ka=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"italic\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.43 18H11.7276L13.4551 9.86763H12.1576L10.43 18ZM13.3043 8.29849C13.8022 8.29849 14.2095 7.89112 14.2095 7.39322C14.2095 6.89532 13.8022 6.48795 13.3043 6.48795C12.8064 6.48795 12.399 6.89532 12.399 7.39322C12.399 7.89112 12.8064 8.29849 13.3043 8.29849Z\",fill:\"currentColor\"})})}));Ka.displayName=\"ForwardRef(ItalicIcon)\";const Ja=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"joystick\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 16V14.5H15.5V16M13.5 10.5V14.5M11.5 10.5V14.5M15.5 7.5C15.5 9.15685 14.1569 10.5 12.5 10.5C10.8431 10.5 9.5 9.15685 9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5ZM18.5 19.5H6.5C5.94772 19.5 5.5 19.0523 5.5 18.5V17.5C5.5 16.9477 5.94772 16.5 6.5 16.5H18.5C19.0523 16.5 19.5 16.9477 19.5 17.5V18.5C19.5 19.0523 19.0523 19.5 18.5 19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ja.displayName=\"ForwardRef(JoystickIcon)\";const Qa=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"json\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 5.5H9.5C8.39543 5.5 7.5 6.39543 7.5 7.5V12.5M7.5 12.5H4M7.5 12.5V17.5C7.5 18.6046 8.39543 19.5 9.5 19.5H11M14 5.5H15.5C16.6046 5.5 17.5 6.39543 17.5 7.5V12.5M17.5 12.5H21M17.5 12.5V17.5C17.5 18.6046 16.6046 19.5 15.5 19.5H14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Qa.displayName=\"ForwardRef(JsonIcon)\";const es=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"launch\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 7.5H6.5V18.5H17.5V13M19.5 5.5L10.5 14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 5.5H19.5V11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));es.displayName=\"ForwardRef(LaunchIcon)\";const ts=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"leave\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 15V18.5H5.5V6.5H14.5V10M9 12.5H21.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 9L21.5 12.5L18 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ts.displayName=\"ForwardRef(LeaveIcon)\";const ns=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"lemon\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.6569 10.3431L6.41422 14.5858C7.58579 15.7574 9.12132 16.3431 10.6569 16.3431M10.6569 10.3431L14.8995 6.1005C16.0711 7.27208 16.6569 8.80761 16.6569 10.3431M10.6569 10.3431L10.6569 16.3431M10.6569 10.3431L16.6569 10.3431M10.6569 10.3431L14.8995 14.5858M14.8995 14.5858C13.7279 15.7574 12.1924 16.3431 10.6569 16.3431M14.8995 14.5858C16.0711 13.4142 16.6569 11.8787 16.6569 10.3431M16.3137 4.68629C19.4379 7.81049 19.4379 12.8758 16.3137 16C13.1895 19.1242 8.12419 19.1242 5 16L16.3137 4.68629Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ns.displayName=\"ForwardRef(LemonIcon)\";const rs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"link\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 12.5L12.5 14C13.281 14.781 14.719 14.781 15.5 14L18.5 11C19.281 10.219 19.281 8.78105 18.5 8L18 7.5C17.2189 6.71895 15.781 6.71895 15 7.5L13 9.5M12 15.5L10 17.5C9.21895 18.281 7.78105 18.281 7 17.5L6.5 17C5.71895 16.219 5.71896 14.781 6.5 14L9.50001 11C10.2811 10.219 11.719 10.2189 12.5 11L14 12.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));rs.displayName=\"ForwardRef(LinkIcon)\";const os=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"link-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11C19.281 10.219 19.281 8.78108 18.5 8.00003L18 7.50003C17.2189 6.71898 15.781 6.71898 15 7.50003L13 9.50003M15.5 14C14.7189 14.7811 13.281 14.7811 12.5 14M6.5 14C5.71895 14.7811 5.71894 16.219 6.49999 17L6.99999 17.5C7.78104 18.2811 9.21894 18.2811 9.99999 17.5L12 15.5M12.5 11C11.719 10.219 10.281 10.219 9.5 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));os.displayName=\"ForwardRef(LinkRemovedIcon)\";const is=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"lock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 11.5V8.5C15.5 6.5 14 5.5 12.5 5.5C11 5.5 9.5 6.5 9.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));is.displayName=\"ForwardRef(LockIcon)\";const as=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"logo-js\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20 5H5V20H20V5ZM12.5254 16.1572C12.5254 17.4189 11.7742 18.1536 10.4792 18.1536C9.24243 18.1536 8.49121 17.4189 8.45801 16.2942V16.261H9.67407V16.2859C9.69897 16.7466 9.9729 17.0703 10.4626 17.0703C10.9939 17.0703 11.272 16.7507 11.272 16.1489V12.011H12.5254V16.1572ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",fill:\"currentColor\"})})}));as.displayName=\"ForwardRef(LogoJsIcon)\";const ss=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"logo-ts\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20 5H5V20H20V5ZM11.0769 18H9.82349V13.0444H8.02637V12.011H12.874V13.0444H11.0769V18ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",fill:\"currentColor\"})})}));ss.displayName=\"ForwardRef(LogoTsIcon)\";const ls=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"master-detail\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 9.5H10M11.5 6.5V18.5M7 12.5H10M13 9.5H18M7 15.5H10M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ls.displayName=\"ForwardRef(MasterDetailIcon)\";const cs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"menu\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 7.5H19M6 17.5H19M6 12.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));cs.displayName=\"ForwardRef(MenuIcon)\";const ds=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"mobile-device\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 6.5C7.5 5.39543 8.39543 4.5 9.5 4.5H15.5C16.6046 4.5 17.5 5.39543 17.5 6.5V18.5C17.5 19.6046 16.6046 20.5 15.5 20.5H9.5C8.39543 20.5 7.5 19.6046 7.5 18.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.5 17.5C13.5 18.0523 13.0523 18.5 12.5 18.5C11.9477 18.5 11.5 18.0523 11.5 17.5C11.5 16.9477 11.9477 16.5 12.5 16.5C13.0523 16.5 13.5 16.9477 13.5 17.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ds.displayName=\"ForwardRef(MobileDeviceIcon)\";const us=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"moon\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.6065 16.1775C18.9417 16.387 18.234 16.5 17.5 16.5C13.634 16.5 10.5 13.366 10.5 9.5C10.5 7.54163 11.3042 5.77109 12.6004 4.50062C12.567 4.50021 12.5335 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C15.5924 20.5 18.275 18.7454 19.6065 16.1775Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));us.displayName=\"ForwardRef(MoonIcon)\";const hs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"number\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21.0165 17.6336H3.83636V16.4336H21.0165V17.6336Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.09808 13.3967V7.508H5.74066L3.83636 8.78241V10.091L5.65277 8.88495H5.74066V13.3967H3.84125V14.5539H8.89984V13.3967H7.09808Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.81781 9.63202V9.66132H11.1069V9.62714C11.1069 8.95331 11.5756 8.49432 12.2739 8.49432C12.9575 8.49432 13.4018 8.89471 13.4018 9.50507C13.4018 9.9787 13.1528 10.3498 12.1909 11.3117L9.89594 13.5822V14.5539H14.8618V13.3869H11.7807V13.299L13.1577 11.9855C14.3491 10.843 14.7543 10.1838 14.7543 9.41229C14.7543 8.19159 13.7729 7.36639 12.3178 7.36639C10.8383 7.36639 9.81781 8.28436 9.81781 9.63202Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.6694 11.4631H18.5092C19.3198 11.4631 19.8422 11.8683 19.8422 12.4982C19.8422 13.1183 19.3295 13.5139 18.5239 13.5139C17.767 13.5139 17.2592 13.133 17.2104 12.5324H15.9262C15.9897 13.8508 17.0248 14.6955 18.5629 14.6955C20.1401 14.6955 21.2192 13.841 21.2192 12.591C21.2192 11.6584 20.6528 11.0334 19.7006 10.9211V10.8332C20.4721 10.6769 20.9457 10.0666 20.9457 9.23651C20.9457 8.12323 19.9741 7.36639 18.5434 7.36639C17.0541 7.36639 16.1118 8.17694 16.0629 9.50018H17.2983C17.3422 8.88007 17.8061 8.48456 18.4995 8.48456C19.2075 8.48456 19.6567 8.85565 19.6567 9.44159C19.6567 10.0324 19.1977 10.4182 18.4946 10.4182H17.6694V11.4631Z\",fill:\"currentColor\"})]})}));hs.displayName=\"ForwardRef(NumberIcon)\";const ps=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"ok-hand\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.9957 11.5C14.8197 10.912 11.9957 9 10.4957 9C8.9957 9 5.17825 11.7674 6 13C7 14.5 9.15134 11.7256 10.4957 12C11.8401 12.2744 13 13.5 13 14.5C13 15.5 11.8401 16.939 10.4957 16.5C9.15134 16.061 8.58665 14.3415 7.4957 14C6.21272 13.5984 5.05843 14.6168 5.5 15.5C5.94157 16.3832 7.10688 17.6006 8.4957 19C9.74229 20.2561 11.9957 21.5 14.9957 20C17.9957 18.5 18.5 16.2498 18.5 13C18.5 11.5 13.7332 5.36875 11.9957 4.5C10.9957 4 10 5 10.9957 6.5C11.614 7.43149 13.5 9.27705 14 10.3751M15.5 8C15.5 8 15.3707 7.5 14.9957 6C14.4957 4 15.9957 3.5 16.4957 4.5C17.1281 5.76491 18.2872 10.9147 18.4957 13\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ps.displayName=\"ForwardRef(OkHandIcon)\";const fs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"olist\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 7.5H19M10 12.5H19M10 17.5H19M5 18.5H7.5L7 17.5L7.5 16.5H5M5 6.5H6.5V8.5M5 8.5H6.5M6.5 8.5H8M8 13.5H6L7 11.5H5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fs.displayName=\"ForwardRef(OlistIcon)\";const gs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"overage\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11V6.5H14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 18.5L9 16L12 13L18.5 6.5M3 13.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));gs.displayName=\"ForwardRef(OverageIcon)\";const ms=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"package\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13V22M12.5 13L4.5 8M12.5 13L20.5 8M8.5 5.5L16.5 10.5M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ms.displayName=\"ForwardRef(PackageIcon)\";const ws=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"panel-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 6.5H19.5V18.5H10.5M10.5 6.5H5.5V18.5H10.5M10.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ws.displayName=\"ForwardRef(PanelLeftIcon)\";const vs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"panel-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 6.5H19.5V18.5H14.5M14.5 6.5H5.5V18.5H14.5M14.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vs.displayName=\"ForwardRef(PanelRightIcon)\";const ys=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pause\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 7.5H8.5V17.5H10.5V7.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H14.5V17.5H16.5V7.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 7.5H8.5V17.5H10.5V7.5Z\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H14.5V17.5H16.5V7.5Z\",stroke:\"currentColor\",strokeWidth:1.2})]})}));ys.displayName=\"ForwardRef(PauseIcon)\";const bs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pin\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 14 15.5 17.5 12.5 20.5C9.5 17.5 6.5 14 6.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 10.5C14 11.3284 13.3284 12 12.5 12C11.6716 12 11 11.3284 11 10.5C11 9.67157 11.6716 9 12.5 9C13.3284 9 14 9.67157 14 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));bs.displayName=\"ForwardRef(PinIcon)\";const Cs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"pin-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Cs.displayName=\"ForwardRef(PinRemovedIcon)\";const ks=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"play\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 18.5V6.5L17.5 12.5L7.5 18.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ks.displayName=\"ForwardRef(PlayIcon)\";const xs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"plug\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.25 8.5L16.75 5M16.25 11.5L19.75 8M9.25 15.5L5.25 19.5M7.75 14L9.75 12C8.25 10 8.75 9 9.75 8C10.15 7.6 11.25 6.5 11.25 6.5L18.25 13.5C18.25 13.5 17.3825 14.3675 16.75 15C15.75 16 14.75 16.5 12.75 15L10.75 17L7.75 14Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xs.displayName=\"ForwardRef(PlugIcon)\";const Ls=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"presentation\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 18H5.5V8.5H19.5V18H14.5M10.5 18L9 22M10.5 18H14.5M14.5 18L16 22M4.5 8.5H20.5V6.5H4.5V8.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ls.displayName=\"ForwardRef(PresentationIcon)\";const Ms=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"progress-50\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 12.5C17 14.9853 14.9853 17 12.5 17V8C14.9853 8 17 10.0147 17 12.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ms.displayName=\"ForwardRef(Progress50Icon)\";const Hs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"progress-75\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 17C14.9853 17 17 14.9853 17 12.5C17 10.0147 14.9853 8 12.5 8V12.5H8C8 14.9853 10.0147 17 12.5 17Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Hs.displayName=\"ForwardRef(Progress75Icon)\";const Vs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"projects\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 17.5H14M17.5 14V21M5.5 14.5H10.5V19.5H5.5V14.5ZM14.5 5.5H19.5V10.5H14.5V5.5ZM5.5 5.5H10.5V10.5H5.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Vs.displayName=\"ForwardRef(ProjectsIcon)\";const Rs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"publish\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.99997 5.50006H20M12.5 9.00005V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 14L12.5 9.00006L17.5 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Rs.displayName=\"ForwardRef(PublishIcon)\";const Ss=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"read-only\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 7L18 10M10 12L7 15L6 19L10 18L13 15M12 10L17 5L20 8L15 13M19 19L5 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ss.displayName=\"ForwardRef(ReadOnlyIcon)\";const Fs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"redo\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L19 9.5L15 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Fs.displayName=\"ForwardRef(RedoIcon)\";const Es=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"refresh\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 13.5C19.5 17.366 16.366 20.5 12.5 20.5C8.63401 20.5 5.5 17.366 5.5 13.5C5.5 9.63401 8.63401 6.5 12.5 6.5H15.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 10.5L15.5 6.5L11.5 2.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Es.displayName=\"ForwardRef(RefreshIcon)\";const Ns=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"remove-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12.4H17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ns.displayName=\"ForwardRef(RemoveCircleIcon)\";const Is=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Is.displayName=\"ForwardRef(RemoveIcon)\";const Bs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"reset\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.56189 13.5L4.14285 13.9294C4.25676 14.0406 4.41017 14.1019 4.56932 14.1C4.72847 14.098 4.88032 14.0329 4.99144 13.9189L4.56189 13.5ZM9.92427 15.9243L15.9243 9.92427L15.0757 9.07574L9.07574 15.0757L9.92427 15.9243ZM9.07574 9.92426L15.0757 15.9243L15.9243 15.0757L9.92426 9.07574L9.07574 9.92426ZM19.9 12.5C19.9 16.5869 16.5869 19.9 12.5 19.9V21.1C17.2496 21.1 21.1 17.2496 21.1 12.5H19.9ZM5.1 12.5C5.1 8.41309 8.41309 5.1 12.5 5.1V3.9C7.75035 3.9 3.9 7.75035 3.9 12.5H5.1ZM12.5 5.1C16.5869 5.1 19.9 8.41309 19.9 12.5H21.1C21.1 7.75035 17.2496 3.9 12.5 3.9V5.1ZM5.15728 13.4258C5.1195 13.1227 5.1 12.8138 5.1 12.5H3.9C3.9 12.8635 3.92259 13.2221 3.9665 13.5742L5.15728 13.4258ZM12.5 19.9C9.9571 19.9 7.71347 18.6179 6.38048 16.6621L5.38888 17.3379C6.93584 19.6076 9.54355 21.1 12.5 21.1V19.9ZM4.99144 13.9189L7.42955 11.4189L6.57045 10.5811L4.13235 13.0811L4.99144 13.9189ZM4.98094 13.0706L2.41905 10.5706L1.58095 11.4294L4.14285 13.9294L4.98094 13.0706Z\",fill:\"currentColor\"})})}));Bs.displayName=\"ForwardRef(ResetIcon)\";const js=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"restore\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.88468 17C7.32466 19.1128 9.75033 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5V13.5M12.5 8V12.5L15.5 15.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 11L4.5 13.5L2 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));js.displayName=\"ForwardRef(RestoreIcon)\";const $s=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"retrieve\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 14L12.5 10.5L9 14M5.5 7.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5L12.5 17.5M19.5 7.5V19.5H5.5V7.5L7.5 5.5H17.5L19.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));$s.displayName=\"ForwardRef(RetrieveIcon)\";const As=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"retry\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L19 9.5L15 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));As.displayName=\"ForwardRef(RetryIcon)\";const Ts=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"revert\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 13.5L6 9.5L10 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Ts.displayName=\"ForwardRef(RevertIcon)\";const Ps=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"robot\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 15.5V17.5M12.5 8.5V6.5M12.5 6.5C13.3284 6.5 14 5.82843 14 5C14 4.17157 13.3284 3.5 12.5 3.5C11.6716 3.5 11 4.17157 11 5C11 5.82843 11.6716 6.5 12.5 6.5ZM20.5 20.5V19.5C20.5 18.3954 19.6046 17.5 18.5 17.5H6.5C5.39543 17.5 4.5 18.3954 4.5 19.5V20.5H20.5ZM11.5 12C11.5 12.5523 11.0523 13 10.5 13C9.94772 13 9.5 12.5523 9.5 12C9.5 11.4477 9.94772 11 10.5 11C11.0523 11 11.5 11.4477 11.5 12ZM15.5 12C15.5 12.5523 15.0523 13 14.5 13C13.9477 13 13.5 12.5523 13.5 12C13.5 11.4477 13.9477 11 14.5 11C15.0523 11 15.5 11.4477 15.5 12ZM8.5 15.5H16.5C17.6046 15.5 18.5 14.6046 18.5 13.5V10.5C18.5 9.39543 17.6046 8.5 16.5 8.5H8.5C7.39543 8.5 6.5 9.39543 6.5 10.5V13.5C6.5 14.6046 7.39543 15.5 8.5 15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ps.displayName=\"ForwardRef(RobotIcon)\";const Ws=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"rocket\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20.5L15.5 14M11 9.49999L4.5 12.5M9 14C9 14 7.54688 14.9531 6.5 16C5.5 17 4.5 20.5 4.5 20.5C4.5 20.5 8 19.5 9 18.5C10 17.5 11 16 11 16M9 14C9 14 10.1 9.9 12.5 7.5C15.5 4.5 20.5 4.5 20.5 4.5C20.5 4.5 20.5 9.5 17.5 12.5C15.7492 14.2508 11 16 11 16L9 14ZM16.5 9.99999C16.5 10.8284 15.8284 11.5 15 11.5C14.1716 11.5 13.5 10.8284 13.5 9.99999C13.5 9.17157 14.1716 8.49999 15 8.49999C15.8284 8.49999 16.5 9.17157 16.5 9.99999Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ws.displayName=\"ForwardRef(RocketIcon)\";const Zs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"schema\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 9.5V12.5M12.5 12.5H8.5V15.5M12.5 12.5H16.5V15.5M10.5 5.5H14.5V9.5H10.5V5.5ZM6.5 15.5H10.5V19.5H6.5V15.5ZM14.5 15.5H18.5V19.5H14.5V15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Zs.displayName=\"ForwardRef(SchemaIcon)\";const Ds=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"search\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.0355 15.0355L20 20M16.5 11.5C16.5 14.2614 14.2614 16.5 11.5 16.5C8.73858 16.5 6.5 14.2614 6.5 11.5C6.5 8.73858 8.73858 6.5 11.5 6.5C14.2614 6.5 16.5 8.73858 16.5 11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ds.displayName=\"ForwardRef(SearchIcon)\";const zs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"select\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 15L12.5 18.5L9 15M9 10L12.5 6.5L16 10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));zs.displayName=\"ForwardRef(SelectIcon)\";const Os=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"share\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 10.5H18.5V19.5H6.5L6.5 10.5H10M12.5 16V3.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 7L12.5 3.5L16 7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Os.displayName=\"ForwardRef(ShareIcon)\";const _s=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sort\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 18.5V6M16.5 19V6.5M12 15L8.5 18.5L5 15M13 10L16.5 6.5L20 10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_s.displayName=\"ForwardRef(SortIcon)\";const qs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sparkle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 10.5C8.5 12.5 5 12.5 5 12.5C5 12.5 8.5 12.5 10.5 14.5C12.5 16.5 12.5 20 12.5 20C12.5 20 12.5 16.5 14.5 14.5C16.5 12.5 20 12.5 20 12.5C20 12.5 16.5 12.5 14.5 10.5C12.5 8.5 12.5 5 12.5 5C12.5 5 12.5 8.5 10.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qs.displayName=\"ForwardRef(SparkleIcon)\";const Us=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sparkles\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M9.5 15C9.5 15 12.2308 14.7692 13.5 13.5C14.7692 12.2308 15 9.5 15 9.5C15 9.5 15.2308 12.2308 16.5 13.5C17.7692 14.7692 20.5 15 20.5 15C20.5 15 17.7692 15.2308 16.5 16.5C15.2308 17.7692 15 20.5 15 20.5C15 20.5 14.7692 17.7692 13.5 16.5C12.2308 15.2308 9.5 15 9.5 15ZM4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"round\",strokeLinejoin:\"round\"})})}));Us.displayName=\"ForwardRef(SparklesIcon)\";const Gs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"spinner\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Gs.displayName=\"ForwardRef(SpinnerIcon)\";const Ys=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"split-horizontal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 10.5V20.5H5.5V10.5M19.5 10.5H5.5M19.5 10.5V4.5H5.5V10.5M12.5 13V15.5M12.5 18V15.5M12.5 15.5H15M12.5 15.5H10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ys.displayName=\"ForwardRef(SplitHorizontalIcon)\";const Xs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"split-vertical\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Xs.displayName=\"ForwardRef(SplitVerticalIcon)\";const Ks=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"square\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:5.5,y:5.5,width:14,height:14,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ks.displayName=\"ForwardRef(SquareIcon)\";const Js=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stack-compact\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 15.5V18.5H19.5V15.5M5.5 15.5H19.5M5.5 15.5V9.5M19.5 15.5V9.5M5.5 9.5V6.5H19.5V9.5M5.5 9.5H19.5M5.5 12.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Js.displayName=\"ForwardRef(StackCompactIcon)\";const Qs=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stack\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 12.5H19.5M5.5 18.5H19.5V6.5H5.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Qs.displayName=\"ForwardRef(StackIcon)\";const el=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"star-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5L14.522 10.217L20.1085 10.5279L15.7716 14.063L17.2023 19.4721L12.5 16.44L7.79772 19.4721L9.22837 14.063L4.89155 10.5279L10.478 10.217L12.5 5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeLinejoin:\"round\"})})}));el.displayName=\"ForwardRef(StarFilledIcon)\";const tl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"star\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5L14.522 10.217L20.1085 10.5279L15.7716 14.063L17.2023 19.4721L12.5 16.44L7.79772 19.4721L9.22837 14.063L4.89155 10.5279L10.478 10.217L12.5 5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));tl.displayName=\"ForwardRef(StarIcon)\";const nl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:7.5,y:7.5,width:10,height:10,fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));nl.displayName=\"ForwardRef(StopIcon)\";const rl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"strikethrough\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5656 7.73438C11.0656 7.73438 10.0734 8.48438 10.0734 9.625C10.0734 10.2317 10.3649 10.6613 11.0519 11H8.90358C8.71703 10.6199 8.62813 10.1801 8.62813 9.67188C8.62813 7.75781 10.2297 6.46094 12.6125 6.46094C14.7922 6.46094 16.4172 7.75781 16.5344 9.57812H15.1203C14.925 8.42188 13.9719 7.73438 12.5656 7.73438Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.4875 18.2656C10.0969 18.2656 8.44844 17 8.3 15.0547H9.72188C9.89375 16.2344 11.0188 16.9844 12.6203 16.9844C14.1359 16.9844 15.2531 16.1641 15.2531 15.0469C15.2531 14.6375 15.1255 14.292 14.8589 14H16.5912C16.6638 14.266 16.6984 14.5566 16.6984 14.875C16.6984 16.9453 15.0656 18.2656 12.4875 18.2656Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 13.1H18V11.9H7V13.1Z\",fill:\"currentColor\"})]})}));rl.displayName=\"ForwardRef(StrikethroughIcon)\";const ol=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"string\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.6748 15.5227H13.1855L9.87842 6.36304H8.34863L5.0415 15.5227H6.50146L7.3457 13.0916H10.8369L11.6748 15.5227ZM9.04053 8.02612H9.14844L10.4751 11.8982H7.70752L9.04053 8.02612Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.8101 14.488C16.0674 14.488 15.5278 14.1262 15.5278 13.5042C15.5278 12.8948 15.9595 12.571 16.9116 12.5076L18.6001 12.3997V12.9773C18.6001 13.8342 17.8384 14.488 16.8101 14.488ZM16.4609 15.637C17.3687 15.637 18.124 15.2434 18.5366 14.5515H18.6445V15.5227H19.9585V10.8C19.9585 9.34009 18.981 8.47681 17.248 8.47681C15.6802 8.47681 14.563 9.23853 14.4233 10.4255H15.7437C15.896 9.93677 16.4229 9.65747 17.1846 9.65747C18.1177 9.65747 18.6001 10.0701 18.6001 10.8V11.3967L16.7275 11.5046C15.0835 11.6062 14.1567 12.3235 14.1567 13.5676C14.1567 14.8308 15.1279 15.637 16.4609 15.637Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M19.9585 18.637L5.0415 18.637V17.437L19.9585 17.437V18.637Z\",fill:\"currentColor\"})]})}));ol.displayName=\"ForwardRef(StringIcon)\";const il=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sun\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 12.5H22M3 12.5H6M12.5 6V3M12.5 22V19M17.3891 7.61091L19.5104 5.48959M5.48959 19.5104L7.61091 17.3891M7.61091 7.61091L5.48959 5.48959M19.5104 19.5104L17.3891 17.3891M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));il.displayName=\"ForwardRef(SunIcon)\";const al=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"sync\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.5 4.5H12.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 15.6631 6.33576 18.3975 9 19.6958M11.5 20.5H12.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 9.33688 18.6642 6.60253 16 5.30423\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));al.displayName=\"ForwardRef(SyncIcon)\";const sl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"tablet-device\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5.5C5.5 4.94772 5.94772 4.5 6.5 4.5H18.5C19.0523 4.5 19.5 4.94772 19.5 5.5V19.5C19.5 20.0523 19.0523 20.5 18.5 20.5H6.5C5.94772 20.5 5.5 20.0523 5.5 19.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 18C13 18.2761 12.7761 18.5 12.5 18.5C12.2239 18.5 12 18.2761 12 18C12 17.7239 12.2239 17.5 12.5 17.5C12.7761 17.5 13 17.7239 13 18Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));sl.displayName=\"ForwardRef(TabletDeviceIcon)\";const ll=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"tag\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20L5 20L5 12.5L12.5 5L20 12.5L12.5 20Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 15.5C11 16.3284 10.3284 17 9.5 17C8.67157 17 8 16.3284 8 15.5C8 14.6716 8.67157 14 9.5 14C10.3284 14 11 14.6716 11 15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ll.displayName=\"ForwardRef(TagIcon)\";const cl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"tags\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.1562 7.93179L13.9717 6.11633L20.3553 12.5L13.9717 18.8836L10.6855 18.8836M11.0283 18.8836L17.4119 12.5L11.0283 6.11633L4.64462 12.5L4.64462 18.8836L11.0283 18.8836ZM9.75153 15.0534C9.75153 15.7585 9.17992 16.3302 8.47481 16.3302C7.76969 16.3302 7.19808 15.7585 7.19808 15.0534C7.19808 14.3483 7.76969 13.7767 8.47481 13.7767C9.17992 13.7767 9.75153 14.3483 9.75153 15.0534Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));cl.displayName=\"ForwardRef(TagsIcon)\";const dl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"task\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.88281 10.75V19.75H20.8828V10.75M4.88281 10.75V5.75H20.8828V10.75M4.88281 10.75H12.8828H20.8828M17.8828 8.25V3.25M7.88281 8.25V3.25\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.083 14.7358L12.083 16.7358L15.683 13.1758\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));dl.displayName=\"ForwardRef(TaskIcon)\";const ul=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"terminal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 9.5L11.5 12.5L8.5 15.5M13 15.5H17M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ul.displayName=\"ForwardRef(TerminalIcon)\";const hl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"text\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 9V6.5H17.5V9M12.5 18.5V6.5M10 18.5H15\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));hl.displayName=\"ForwardRef(TextIcon)\";const pl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"th-large\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.5V12.5M12.5 12.5V18.5M12.5 12.5H20.5M12.5 12.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));pl.displayName=\"ForwardRef(ThLargeIcon)\";const fl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"th-list\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H20.5M9.5 10.5H4.5M9.5 14.5V18.5M9.5 14.5H20.5M9.5 14.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fl.displayName=\"ForwardRef(ThListIcon)\";const gl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"tiers\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 14.5L20.5 16.5L12.5 20.5L4.5 16.5L8.5 14.5M16.5 10.5L20.5 12.5L12.5 16.5L4.5 12.5L8.5 10.5M12.5 12.5L20.5 8.5L12.5 4.5L4.5 8.5L12.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));gl.displayName=\"ForwardRef(TiersIcon)\";const ml=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"toggle-arrow-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 16.5V8.5L16 12.5L10 16.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeLinejoin:\"round\"})})}));ml.displayName=\"ForwardRef(ToggleArrowRightIcon)\";const wl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"token\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5711 12.5C17.5711 15.2614 15.3325 17.5 12.5711 17.5M7.57107 12.5C7.57107 9.73858 9.80964 7.5 12.5711 7.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wl.displayName=\"ForwardRef(TokenIcon)\";const vl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"transfer\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 16.5H6M5.5 8.5L19 8.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 13L19.5 16.5L16 20M9 12L5.5 8.5L9 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));vl.displayName=\"ForwardRef(TransferIcon)\";const yl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"translate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.4 5.4H4V6.6H13.2189C13.1612 6.78478 13.0895 6.99578 13.0025 7.22211C12.7032 8.00031 12.2402 8.91125 11.5757 9.57574L10 11.1515L9.42426 10.5757C8.72102 9.8725 8.25297 9.16987 7.96199 8.64611C7.81668 8.38455 7.71617 8.16874 7.65305 8.02146C7.62151 7.94787 7.59937 7.89154 7.5857 7.85534C7.57886 7.83725 7.57415 7.8242 7.57144 7.81657L7.56886 7.80922C7.56886 7.80922 7.56921 7.81026 7 8C6.43079 8.18974 6.43091 8.19009 6.43091 8.19009L6.43133 8.19135L6.43206 8.19351L6.4341 8.19948L6.44052 8.21786C6.44587 8.23292 6.45336 8.25357 6.46313 8.27942C6.48266 8.33112 6.5113 8.40369 6.55008 8.49416C6.62758 8.67501 6.74582 8.92795 6.91301 9.22889C7.24703 9.83013 7.77898 10.6275 8.57574 11.4243L9.15147 12L4.57964 16.5718L4.57655 16.5749L4.57577 16.5757L5.4243 17.4242L5.42688 17.4216L10.0368 12.8117L12.6159 14.9609L13.3841 14.0391L10.8888 11.9597L12.4243 10.4243C13.2598 9.58875 13.7968 8.49969 14.1225 7.65289C14.2818 7.23863 14.395 6.87072 14.4696 6.6H16V5.4H10.6V4H9.4V5.4ZM17.4405 10L21.553 19.7672H20.2509L19.1279 17.1H14.8721L13.7491 19.7672H12.447L16.5595 10H17.4405ZM15.3773 15.9H18.6227L17 12.0462L15.3773 15.9Z\",fill:\"currentColor\"})})}));yl.displayName=\"ForwardRef(TranslateIcon)\";const bl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"trash\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 6.5H20M10 6.5V4.5C10 3.94772 10.4477 3.5 11 3.5H14C14.5523 3.5 15 3.94772 15 4.5V6.5M12.5 9V17M15.5 9L15 17M9.5 9L10 17M18.5 6.5L17.571 18.5767C17.5309 19.0977 17.0965 19.5 16.574 19.5H8.42603C7.90349 19.5 7.46905 19.0977 7.42898 18.5767L6.5 6.5H18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));bl.displayName=\"ForwardRef(TrashIcon)\";const Cl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"trend-upward\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 18.5L11.5 10.5L13.5 14.5L20.5 6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 11V6.5H16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Cl.displayName=\"ForwardRef(TrendUpwardIcon)\";const kl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"triangle-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5H4.5L12.5 5.5L20.5 18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));kl.displayName=\"ForwardRef(TriangleOutlineIcon)\";const xl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"trolley\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 17.5L5.81763 6.26772C5.71013 5.81757 5.30779 5.5 4.84498 5.5H3M8 17.5H17M8 17.5C8.82843 17.5 9.5 18.1716 9.5 19C9.5 19.8284 8.82843 20.5 8 20.5C7.17157 20.5 6.5 19.8284 6.5 19C6.5 18.1716 7.17157 17.5 8 17.5ZM17 17.5C17.8284 17.5 18.5 18.1716 18.5 19C18.5 19.8284 17.8284 20.5 17 20.5C16.1716 20.5 15.5 19.8284 15.5 19C15.5 18.1716 16.1716 17.5 17 17.5ZM7.78357 14.5H17.5L19 7.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xl.displayName=\"ForwardRef(TrolleyIcon)\";const Ll=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"truncate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 12.5H20M8.5 19.5L12.5 15.5L16.5 19.5M16.5 5.5L12.5 9.5L8.5 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Ll.displayName=\"ForwardRef(TruncateIcon)\";const Ml=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"twitter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.8738 6.65751C18.1994 5.9447 17.2445 5.5 16.1857 5.5C14.1423 5.5 12.4857 7.15655 12.4857 9.2C12.4857 9.55263 12.535 9.89374 12.6272 10.2168C7.0826 9.56422 4.55703 6.02857 4.55703 6.02857C4.55703 6.02857 4.02846 9.2 6.14274 11.3143C5.08571 11.3143 4.55703 10.7857 4.55703 10.7857C4.55703 10.7857 4.55703 13.4286 7.19989 14.4857C6.67143 15.0143 5.61417 14.4857 5.61417 14.4857C5.97533 15.9303 7.45606 16.8562 8.82133 17.1358C6.67298 19.1676 3.5 18.7143 3.5 18.7143C5.14562 19.771 7.21334 20.3 9.31429 20.3C16.1214 20.3 19.8162 15.6315 19.8848 9.37762C20.8722 8.58943 22 7.08571 22 7.08571C22 7.08571 21.277 7.45458 19.6913 7.98315C21.277 6.92601 21.4714 5.5 21.4714 5.5C21.4714 5.5 20.4135 6.55789 18.8738 6.65751Z\",fill:\"currentColor\"})})}));Ml.displayName=\"ForwardRef(TwitterIcon)\";const Hl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ulist\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 17.5001C7.10153 17.8323 6.83221 18.1016 6.5 18.1016C6.16778 18.1016 5.89847 17.8323 5.89847 17.5001C5.89847 17.1678 6.16778 16.8985 6.5 16.8985C6.83221 16.8985 7.10153 17.1678 7.10153 17.5001Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 7.5C7.10153 7.83221 6.83221 8.10153 6.5 8.10153C6.16778 8.10153 5.89847 7.83221 5.89847 7.5C5.89847 7.16778 6.16778 6.89847 6.5 6.89847C6.83221 6.89847 7.10153 7.16778 7.10153 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 12.5C7.10153 12.8322 6.83221 13.1015 6.5 13.1015C6.16778 13.1015 5.89847 12.8322 5.89847 12.5C5.89847 12.1678 6.16778 11.8985 6.5 11.8985C6.83221 11.8985 7.10153 12.1678 7.10153 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 7.5H19M10 17.5H19M10 12.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Hl.displayName=\"ForwardRef(UlistIcon)\";const Vl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"unarchive\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5V18M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 7.5H20.5M16 14L12.5 10.5L9 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Vl.displayName=\"ForwardRef(UnarchiveIcon)\";const Rl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"underline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.52791 7.11407H8.17V14.2582C8.17 16.5817 9.79195 18.2565 12.4927 18.2565C15.1934 18.2565 16.8154 16.5817 16.8154 14.2582V7.11407H15.4574V14.1677C15.4574 15.8122 14.3787 17.0042 12.4927 17.0042C10.6067 17.0042 9.52791 15.8122 9.52791 14.1677V7.11407Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 20.5H18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Rl.displayName=\"ForwardRef(UnderlineIcon)\";const Sl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"undo\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 13.5L6 9.5L10 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Sl.displayName=\"ForwardRef(UndoIcon)\";const Fl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unknown\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M5.5 5.5H19.5V19.5H5.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Fl.displayName=\"ForwardRef(UnknownIcon)\";const El=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unlink\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L17.5 11C18.281 10.219 18.281 8.78105 17.5 8L17 7.5C16.2189 6.71895 14.781 6.71895 14 7.5L11.5 10M10 11.5L7.5 14C6.71896 14.781 6.71895 16.219 7.5 17L8 17.5C8.78105 18.281 10.2189 18.281 11 17.5L13.5 15M9.5 8V5M8 9.5H5M17 15.5H20M15.5 17V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));El.displayName=\"ForwardRef(UnlinkIcon)\";const Nl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unlock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 11.5V8.5C9.5 6.5 8 5.5 6.5 5.5C5 5.5 3.5 6.5 3.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Nl.displayName=\"ForwardRef(UnlockIcon)\";const Il=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"unpublish\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 19.5H20M12.5 16V5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 11L12.5 16L7.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Il.displayName=\"ForwardRef(UnpublishIcon)\";const Bl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"upload\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.00003V15.5M5.5 15.5H19.5V19.5H5.5V15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 11L12.5 6.00003L17.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));Bl.displayName=\"ForwardRef(UploadIcon)\";const jl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"user\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 14.5C7 15 5.5 16 5.5 19.5H19.5C19.5 16 18.3416 15.1708 17 14.5C16 14 14 14 14 12.5C14 11 15 10.25 15 8.25C15 6.25 14 5.25 12.5 5.25C11 5.25 10 6.25 10 8.25C10 10.25 11 11 11 12.5C11 14 9 14 8 14.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));jl.displayName=\"ForwardRef(UserIcon)\";const $l=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"users\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 18.5H21.5C21.5 15 20.8416 14.1708 19.5 13.5C18.5 13 16.5 12.5 16.5 11C16.5 9.5 17.5 9 17.5 7C17.5 5 16.5 4 15 4C13.6628 4 12.723 4.79472 12.5347 6.38415M4.5 20.5C4.5 17 5.5 16 6.5 15.5C7.5 15 9.5 14.5 9.5 13C9.5 11.5 8.5 11 8.5 9C8.5 7 9.5 6 11 6C12.5 6 13.5 7 13.5 9C13.5 11 12.5 11.5 12.5 13C12.5 14.5 14.5 15 15.5 15.5C16.8416 16.1708 17.5 17 17.5 20.5H4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$l.displayName=\"ForwardRef(UsersIcon)\";const Al=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"warning-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M14.741 5.12637C13.7357 3.41737 11.2643 3.41737 10.259 5.12637L3.7558 16.1818C2.73624 17.915 3.98595 20.1 5.99683 20.1H19.0032C21.014 20.1 22.2637 17.915 21.2442 16.1818L14.741 5.12637ZM11.9 9V13H13.1V9H11.9ZM13.1 16V14.5H11.9V16H13.1Z\",fill:\"currentColor\"})})}));Al.displayName=\"ForwardRef(WarningFilledIcon)\";const Tl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"warning-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 9V13M12.5 16V14.5M14.2239 5.43058L20.727 16.486C21.5113 17.8192 20.55 19.5 19.0032 19.5H5.99683C4.45 19.5 3.48869 17.8192 4.27297 16.486L10.7761 5.43058C11.5494 4.11596 13.4506 4.11596 14.2239 5.43058Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));Tl.displayName=\"ForwardRef(WarningOutlineIcon)\";const Pl=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"wrench\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.0407 5.14624L17.4649 5.57051C17.6166 5.41887 17.6758 5.19783 17.6202 4.99071C17.5646 4.78359 17.4027 4.62189 17.1955 4.56656L17.0407 5.14624ZM14.4013 7.7856L13.9771 7.36134C13.8288 7.50959 13.7687 7.72447 13.8185 7.92813L14.4013 7.7856ZM12.8778 6.26211L12.4535 5.83784L12.4535 5.83784L12.8778 6.26211ZM11.8309 10.6568L12.2552 11.0811C12.4152 10.9211 12.4716 10.6847 12.401 10.4697L11.8309 10.6568ZM5.63925 16.8485L5.21498 16.4242L5.21498 16.4242L5.63925 16.8485ZM5.63925 19.935L6.06351 19.5108L6.06351 19.5108L5.63925 19.935ZM8.72581 19.935L9.15007 20.3593L9.15007 20.3593L8.72581 19.935ZM15.1184 13.5425L15.2301 12.953C15.0351 12.916 14.8344 12.9779 14.6941 13.1182L15.1184 13.5425ZM18.9718 12.3561L18.5475 11.9318L18.5475 11.9318L18.9718 12.3561ZM20.0877 8.19324L20.6674 8.03843C20.612 7.83124 20.4503 7.66934 20.2432 7.61375C20.0361 7.55816 19.815 7.61734 19.6634 7.76897L20.0877 8.19324ZM17.4483 10.8326L17.3058 11.4154C17.5094 11.4652 17.7243 11.4051 17.8726 11.2569L17.4483 10.8326ZM15 10.2339L14.4172 10.3764C14.4704 10.5938 14.6401 10.7635 14.8575 10.8167L15 10.2339ZM16.6164 4.72198L13.9771 7.36134L14.8256 8.20986L17.4649 5.57051L16.6164 4.72198ZM13.3021 6.68637C14.2723 5.71612 15.6467 5.39501 16.8859 5.72593L17.1955 4.56656C15.5595 4.12966 13.7389 4.55245 12.4535 5.83784L13.3021 6.68637ZM12.401 10.4697C11.9779 9.18109 12.2794 7.70907 13.3021 6.68637L12.4535 5.83784C11.0986 7.19284 10.7021 9.14217 11.2608 10.844L12.401 10.4697ZM11.4066 10.2326L5.21498 16.4242L6.06351 17.2727L12.2552 11.0811L11.4066 10.2326ZM5.21498 16.4242C4.12834 17.5109 4.12834 19.2727 5.21498 20.3593L6.06351 19.5108C5.4455 18.8928 5.4455 17.8908 6.06351 17.2727L5.21498 16.4242ZM5.21498 20.3593C6.30163 21.446 8.06343 21.446 9.15007 20.3593L8.30155 19.5108C7.68353 20.1288 6.68153 20.1288 6.06351 19.5108L5.21498 20.3593ZM9.15007 20.3593L15.5426 13.9668L14.6941 13.1182L8.30155 19.5108L9.15007 20.3593ZM18.5475 11.9318C17.6463 12.8331 16.3968 13.1742 15.2301 12.953L15.0066 14.132C16.5466 14.4239 18.2023 13.9741 19.3961 12.7804L18.5475 11.9318ZM19.508 8.34804C19.8389 9.58721 19.5178 10.9616 18.5475 11.9318L19.3961 12.7804C20.6815 11.495 21.1043 9.67445 20.6674 8.03843L19.508 8.34804ZM17.8726 11.2569L20.5119 8.6175L19.6634 7.76897L17.024 10.4083L17.8726 11.2569ZM14.8575 10.8167L17.3058 11.4154L17.5908 10.2498L15.1426 9.65106L14.8575 10.8167ZM13.8185 7.92813L14.4172 10.3764L15.5829 10.0914L14.9841 7.64307L13.8185 7.92813Z\",fill:\"currentColor\"})})}));Pl.displayName=\"ForwardRef(WrenchIcon)\";const Wl={\"access-denied\":_o,activity:qo,\"add-circle\":Uo,\"add-comment\":Go,\"add-document\":Yo,add:Xo,\"add-user\":Ko,api:Jo,archive:Qo,\"arrow-down\":ei,\"arrow-left\":ti,\"arrow-right\":ni,\"arrow-top-right\":ri,\"arrow-up\":oi,asterisk:ii,\"bar-chart\":ai,basket:si,bell:li,bill:ci,\"binary-document\":di,\"block-content\":ui,\"block-element\":hi,blockquote:pi,bold:fi,bolt:gi,book:mi,bottle:wi,\"bulb-filled\":vi,\"bulb-outline\":yi,calendar:bi,case:Ci,\"chart-upward\":ki,\"checkmark-circle\":xi,checkmark:Li,\"chevron-down\":Mi,\"chevron-left\":Hi,\"chevron-right\":Vi,\"chevron-up\":Ri,circle:Si,clipboard:Fi,\"clipboard-image\":Ei,clock:Ni,\"close-circle\":Ii,close:Bi,\"code-block\":ji,code:$i,cog:Ai,collapse:Ti,\"color-wheel\":Pi,comment:Wi,component:Zi,compose:Di,confetti:zi,controls:Oi,copy:_i,\"credit-card\":qi,crop:Ui,cube:Gi,dashboard:Yi,database:Xi,desktop:Ki,diamond:Ji,document:Qi,\"document-pdf\":ea,\"document-remove\":ta,\"document-sheet\":na,\"document-text\":ra,\"document-video\":oa,\"document-word\":ia,\"document-zip\":aa,documents:sa,dot:la,\"double-chevron-down\":ca,\"double-chevron-left\":da,\"double-chevron-right\":ua,\"double-chevron-up\":ha,download:pa,\"drag-handle\":fa,drop:ga,\"earth-americas\":ma,\"earth-globe\":wa,edit:va,\"ellipsis-horizontal\":ya,\"ellipsis-vertical\":ba,empty:Ca,enter:ka,\"enter-right\":xa,envelope:La,equal:Ma,\"error-filled\":Ha,\"error-outline\":Va,expand:Ra,\"eye-closed\":Sa,\"eye-open\":Fa,filter:Ea,folder:Na,generate:Ia,groq:Ba,hash:ja,\"heart-filled\":$a,heart:Aa,\"help-circle\":Ta,highlight:Pa,home:Wa,\"ice-cream\":Za,image:Da,\"image-remove\":za,images:Oa,\"info-filled\":_a,\"info-outline\":qa,\"inline-element\":Ua,inline:Ga,\"insert-above\":Ya,\"insert-below\":Xa,italic:Ka,joystick:Ja,json:Qa,launch:es,leave:ts,lemon:ns,link:rs,\"link-removed\":os,lock:is,\"logo-js\":as,\"logo-ts\":ss,\"master-detail\":ls,menu:cs,\"mobile-device\":ds,moon:us,number:hs,\"ok-hand\":ps,olist:fs,overage:gs,package:ms,\"panel-left\":ws,\"panel-right\":vs,pause:ys,pin:bs,\"pin-removed\":Cs,play:ks,plug:xs,presentation:Ls,\"progress-50\":Ms,\"progress-75\":Hs,projects:Vs,publish:Rs,\"read-only\":Ss,redo:Fs,refresh:Es,\"remove-circle\":Ns,remove:Is,reset:Bs,restore:js,retrieve:$s,retry:As,revert:Ts,robot:Ps,rocket:Ws,schema:Zs,search:Ds,select:zs,share:Os,sort:_s,sparkle:qs,sparkles:Us,spinner:Gs,\"split-horizontal\":Ys,\"split-vertical\":Xs,square:Ks,\"stack-compact\":Js,stack:Qs,\"star-filled\":el,star:tl,stop:nl,strikethrough:rl,string:ol,sun:il,sync:al,\"tablet-device\":sl,tag:ll,tags:cl,task:dl,terminal:ul,text:hl,\"th-large\":pl,\"th-list\":fl,tiers:gl,\"toggle-arrow-right\":ml,token:wl,transfer:vl,translate:yl,trash:bl,\"trend-upward\":Cl,\"triangle-outline\":kl,trolley:xl,truncate:Ll,twitter:Ml,ulist:Hl,unarchive:Vl,underline:Rl,undo:Sl,unknown:Fl,unlink:El,unlock:Nl,unpublish:Il,upload:Bl,user:jl,users:$l,\"warning-filled\":Al,\"warning-outline\":Tl,wrench:Pl};var Zl,Dl,zl,Ol,_l,ql,Ul,Gl,Yl,Xl;function Kl(){if(Ol)return zl;Ol=1,zl=t;var e=t.prototype;function t(e,t,n){this.property=e,this.normal=t,n&&(this.space=n)}return e.space=null,e.normal={},e.property={},zl}function Jl(){if(ql)return _l;ql=1;var e=function(){if(Dl)return Zl;Dl=1,Zl=function(){for(var t={},n=0;n<arguments.length;n++){var r=arguments[n];for(var o in r)e.call(r,o)&&(t[o]=r[o])}return t};var e=Object.prototype.hasOwnProperty;return Zl}(),t=Kl();return _l=function(n){for(var r,o,i=n.length,a=[],s=[],l=-1;++l<i;)r=n[l],a.push(r.property),s.push(r.normal),o=r.space;return new t(e.apply(null,a),e.apply(null,s),o)}}function Ql(){if(Gl)return Ul;return Gl=1,Ul=function(e){return e.toLowerCase()}}function ec(){if(Xl)return Yl;Xl=1,Yl=t;var e=t.prototype;function t(e,t){this.property=e,this.attribute=t}return e.space=null,e.attribute=null,e.property=null,e.boolean=!1,e.booleanish=!1,e.overloadedBoolean=!1,e.number=!1,e.commaSeparated=!1,e.spaceSeparated=!1,e.commaOrSpaceSeparated=!1,e.mustUseProperty=!1,e.defined=!1,Yl}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{symbol:r,...o}=t,i=Wl[r];return i?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(i,{...o,ref:n}):null})).displayName=\"ForwardRef(Icon)\";var tc,nc,rc,oc,ic,ac,sc,lc,cc,dc,uc,hc,pc,fc,gc,mc,wc,vc,yc,bc,Cc,kc,xc,Lc,Mc,Hc={};function Vc(){if(tc)return Hc;tc=1;var e=0;function t(){return Math.pow(2,++e)}return Hc.boolean=t(),Hc.booleanish=t(),Hc.overloadedBoolean=t(),Hc.number=t(),Hc.spaceSeparated=t(),Hc.commaSeparated=t(),Hc.commaOrSpaceSeparated=t(),Hc}function Rc(){if(rc)return nc;rc=1;var e=ec(),t=Vc();nc=o,o.prototype=new e,o.prototype.defined=!0;var n=[\"boolean\",\"booleanish\",\"overloadedBoolean\",\"number\",\"commaSeparated\",\"spaceSeparated\",\"commaOrSpaceSeparated\"],r=n.length;function o(o,a,s,l){var c,d=-1;for(i(this,\"space\",l),e.call(this,o,a);++d<r;)i(this,c=n[d],(s&t[c])===t[c])}function i(e,t,n){n&&(e[t]=n)}return nc}function Sc(){if(ic)return oc;ic=1;var e=Ql(),t=Kl(),n=Rc();return oc=function(r){var o,i,a=r.space,s=r.mustUseProperty||[],l=r.attributes||{},c=r.properties,d=r.transform,u={},h={};for(o in c)i=new n(o,d(l,o),c[o],a),-1!==s.indexOf(o)&&(i.mustUseProperty=!0),u[o]=i,h[e(o)]=o,h[e(i.attribute)]=o;return new t(u,h,a)}}function Fc(){if(pc)return hc;pc=1;var e=uc?dc:(uc=1,dc=function(e,t){return t in e?e[t]:t});return hc=function(t,n){return e(t,n.toLowerCase())}}function Ec(){if(Cc)return bc;Cc=1;var e=Jl(),t=function(){if(sc)return ac;sc=1;var e=Sc();return ac=e({space:\"xlink\",transform:function(e,t){return\"xlink:\"+t.slice(5).toLowerCase()},properties:{xLinkActuate:null,xLinkArcRole:null,xLinkHref:null,xLinkRole:null,xLinkShow:null,xLinkTitle:null,xLinkType:null}})}(),n=function(){if(cc)return lc;cc=1;var e=Sc();return lc=e({space:\"xml\",transform:function(e,t){return\"xml:\"+t.slice(3).toLowerCase()},properties:{xmlLang:null,xmlBase:null,xmlSpace:null}})}(),r=function(){if(gc)return fc;gc=1;var e=Sc(),t=Fc();return fc=e({space:\"xmlns\",attributes:{xmlnsxlink:\"xmlns:xlink\"},transform:t,properties:{xmlns:null,xmlnsXLink:null}})}(),o=function(){if(wc)return mc;wc=1;var e=Vc(),t=Sc(),n=e.booleanish,r=e.number,o=e.spaceSeparated;return mc=t({transform:function(e,t){return\"role\"===t?t:\"aria-\"+t.slice(4).toLowerCase()},properties:{ariaActiveDescendant:null,ariaAtomic:n,ariaAutoComplete:null,ariaBusy:n,ariaChecked:n,ariaColCount:r,ariaColIndex:r,ariaColSpan:r,ariaControls:o,ariaCurrent:null,ariaDescribedBy:o,ariaDetails:null,ariaDisabled:n,ariaDropEffect:o,ariaErrorMessage:null,ariaExpanded:n,ariaFlowTo:o,ariaGrabbed:n,ariaHasPopup:null,ariaHidden:n,ariaInvalid:null,ariaKeyShortcuts:null,ariaLabel:null,ariaLabelledBy:o,ariaLevel:r,ariaLive:null,ariaModal:n,ariaMultiLine:n,ariaMultiSelectable:n,ariaOrientation:null,ariaOwns:o,ariaPlaceholder:null,ariaPosInSet:r,ariaPressed:n,ariaReadOnly:n,ariaRelevant:null,ariaRequired:n,ariaRoleDescription:o,ariaRowCount:r,ariaRowIndex:r,ariaRowSpan:r,ariaSelected:n,ariaSetSize:r,ariaSort:null,ariaValueMax:r,ariaValueMin:r,ariaValueNow:r,ariaValueText:null,role:null}})}(),i=function(){if(yc)return vc;yc=1;var e=Vc(),t=Sc(),n=Fc(),r=e.boolean,o=e.overloadedBoolean,i=e.booleanish,a=e.number,s=e.spaceSeparated,l=e.commaSeparated;return vc=t({space:\"html\",attributes:{acceptcharset:\"accept-charset\",classname:\"class\",htmlfor:\"for\",httpequiv:\"http-equiv\"},transform:n,mustUseProperty:[\"checked\",\"multiple\",\"muted\",\"selected\"],properties:{abbr:null,accept:l,acceptCharset:s,accessKey:s,action:null,allow:null,allowFullScreen:r,allowPaymentRequest:r,allowUserMedia:r,alt:null,as:null,async:r,autoCapitalize:null,autoComplete:s,autoFocus:r,autoPlay:r,capture:r,charSet:null,checked:r,cite:null,className:s,cols:a,colSpan:null,content:null,contentEditable:i,controls:r,controlsList:s,coords:a|l,crossOrigin:null,data:null,dateTime:null,decoding:null,default:r,defer:r,dir:null,dirName:null,disabled:r,download:o,draggable:i,encType:null,enterKeyHint:null,form:null,formAction:null,formEncType:null,formMethod:null,formNoValidate:r,formTarget:null,headers:s,height:a,hidden:r,high:a,href:null,hrefLang:null,htmlFor:s,httpEquiv:s,id:null,imageSizes:null,imageSrcSet:l,inputMode:null,integrity:null,is:null,isMap:r,itemId:null,itemProp:s,itemRef:s,itemScope:r,itemType:s,kind:null,label:null,lang:null,language:null,list:null,loading:null,loop:r,low:a,manifest:null,max:null,maxLength:a,media:null,method:null,min:null,minLength:a,multiple:r,muted:r,name:null,nonce:null,noModule:r,noValidate:r,onAbort:null,onAfterPrint:null,onAuxClick:null,onBeforePrint:null,onBeforeUnload:null,onBlur:null,onCancel:null,onCanPlay:null,onCanPlayThrough:null,onChange:null,onClick:null,onClose:null,onContextMenu:null,onCopy:null,onCueChange:null,onCut:null,onDblClick:null,onDrag:null,onDragEnd:null,onDragEnter:null,onDragExit:null,onDragLeave:null,onDragOver:null,onDragStart:null,onDrop:null,onDurationChange:null,onEmptied:null,onEnded:null,onError:null,onFocus:null,onFormData:null,onHashChange:null,onInput:null,onInvalid:null,onKeyDown:null,onKeyPress:null,onKeyUp:null,onLanguageChange:null,onLoad:null,onLoadedData:null,onLoadedMetadata:null,onLoadEnd:null,onLoadStart:null,onMessage:null,onMessageError:null,onMouseDown:null,onMouseEnter:null,onMouseLeave:null,onMouseMove:null,onMouseOut:null,onMouseOver:null,onMouseUp:null,onOffline:null,onOnline:null,onPageHide:null,onPageShow:null,onPaste:null,onPause:null,onPlay:null,onPlaying:null,onPopState:null,onProgress:null,onRateChange:null,onRejectionHandled:null,onReset:null,onResize:null,onScroll:null,onSecurityPolicyViolation:null,onSeeked:null,onSeeking:null,onSelect:null,onSlotChange:null,onStalled:null,onStorage:null,onSubmit:null,onSuspend:null,onTimeUpdate:null,onToggle:null,onUnhandledRejection:null,onUnload:null,onVolumeChange:null,onWaiting:null,onWheel:null,open:r,optimum:a,pattern:null,ping:s,placeholder:null,playsInline:r,poster:null,preload:null,readOnly:r,referrerPolicy:null,rel:s,required:r,reversed:r,rows:a,rowSpan:a,sandbox:s,scope:null,scoped:r,seamless:r,selected:r,shape:null,size:a,sizes:null,slot:null,span:a,spellCheck:i,src:null,srcDoc:null,srcLang:null,srcSet:l,start:a,step:null,style:null,tabIndex:a,target:null,title:null,translate:null,type:null,typeMustMatch:r,useMap:null,value:i,width:a,wrap:null,align:null,aLink:null,archive:s,axis:null,background:null,bgColor:null,border:a,borderColor:null,bottomMargin:a,cellPadding:null,cellSpacing:null,char:null,charOff:null,classId:null,clear:null,code:null,codeBase:null,codeType:null,color:null,compact:r,declare:r,event:null,face:null,frame:null,frameBorder:null,hSpace:a,leftMargin:a,link:null,longDesc:null,lowSrc:null,marginHeight:a,marginWidth:a,noResize:r,noHref:r,noShade:r,noWrap:r,object:null,profile:null,prompt:null,rev:null,rightMargin:a,rules:null,scheme:null,scrolling:i,standby:null,summary:null,text:null,topMargin:a,valueType:null,version:null,vAlign:null,vLink:null,vSpace:a,allowTransparency:null,autoCorrect:null,autoSave:null,disablePictureInPicture:r,disableRemotePlayback:r,prefix:null,property:null,results:a,security:null,unselectable:null}})}();return bc=e([n,t,r,o,i])}function Nc(){if(xc)return kc;xc=1;var e=Ql(),t=Rc(),n=ec(),r=\"data\";kc=function(c,d){var u=e(d),h=d,p=n;return u in c.normal?c.property[c.normal[u]]:(u.length>4&&u.slice(0,4)===r&&o.test(d)&&(\"-\"===d.charAt(4)?h=function(e){var t=e.slice(5).replace(i,l);return r+t.charAt(0).toUpperCase()+t.slice(1)}(d):d=function(e){var t=e.slice(4);return i.test(t)?e:(t=t.replace(a,s),\"-\"!==t.charAt(0)&&(t=\"-\"+t),r+t)}(d),p=t),new p(h,d))};var o=/^data[-\\w.:]+$/i,i=/-[a-z]/g,a=/[A-Z]/g;function s(e){return\"-\"+e.toLowerCase()}function l(e){return e.charAt(1).toUpperCase()}return kc}var Ic,Bc={};var jc,$c,Ac,Tc,Pc,Wc,Zc,Dc={};function zc(){if(Ac)return $c;Ac=1;var e=Nc(),t=Ql(),n=function(){if(Mc)return Lc;Mc=1,Lc=function(t,n){for(var r,o,i,a=t||\"\",s=n||\"div\",l={},c=0;c<a.length;)e.lastIndex=c,i=e.exec(a),(r=a.slice(c,i?i.index:a.length))&&(o?\"#\"===o?l.id=r:l.className?l.className.push(r):l.className=[r]:s=r,c+=r.length),i&&(o=i[0],c++);return{type:\"element\",tagName:s,properties:l,children:[]}};var e=/[#.]/g;return Lc}(),r=function(){if(Ic)return Bc;Ic=1,Bc.parse=function(t){var r=String(t||e).trim();return r===e?[]:r.split(n)},Bc.stringify=function(e){return e.join(t).trim()};var e=\"\",t=\" \",n=/[ \\t\\n\\r\\f]+/g;return Bc}().parse,o=function(){if(jc)return Dc;jc=1,Dc.parse=function(t){for(var r,o=[],i=String(t||n),a=i.indexOf(e),s=0,l=!1;!l;)-1===a&&(a=i.length,l=!0),((r=i.slice(s,a).trim())||!l)&&o.push(r),s=a+1,a=i.indexOf(e,s);return o},Dc.stringify=function(r,o){var i=o||{},a=!1===i.padLeft?n:t,s=i.padRight?t:n;return r[r.length-1]===n&&(r=r.concat(n)),r.join(s+e+a).trim()};var e=\",\",t=\" \",n=\"\";return Dc}().parse;$c=function(t,l,c){var d=c?function(e){for(var t,n=e.length,r=-1,o={};++r<n;)t=e[r],o[t.toLowerCase()]=t;return o}(c):null;return function(e,t){var r,o=n(e,l),s=Array.prototype.slice.call(arguments,2),c=o.tagName.toLowerCase();if(o.tagName=d&&i.call(d,c)?d[c]:c,t&&function(e,t){return\"string\"==typeof e||\"length\"in e||function(e,t){var n=t.type;return!(\"input\"===e||!n||\"string\"!=typeof n)&&(\"object\"==typeof t.children&&\"length\"in t.children||(n=n.toLowerCase(),\"button\"===e?\"menu\"!==n&&\"submit\"!==n&&\"reset\"!==n&&\"button\"!==n:\"value\"in t))}(t.tagName,e)}(t,o)&&(s.unshift(t),t=null),t)for(r in t)u(o.properties,r,t[r]);return a(o.children,s),\"template\"===o.tagName&&(o.content={type:\"root\",children:o.children},o.children=[]),o};function u(n,i,a){var l,c,d;null==a||a!=a||(c=(l=e(t,i)).property,\"string\"==typeof(d=a)&&(l.spaceSeparated?d=r(d):l.commaSeparated?d=o(d):l.commaOrSpaceSeparated&&(d=r(o(d).join(\" \")))),\"style\"===c&&\"string\"!=typeof a&&(d=function(e){var t,n=[];for(t in e)n.push([t,e[t]].join(\": \"));return n.join(\"; \")}(d)),\"className\"===c&&n.className&&(d=n.className.concat(d)),n[c]=function(e,t,n){var r,o,i;if(\"object\"!=typeof n||!(\"length\"in n))return s(e,t,n);for(o=n.length,r=-1,i=[];++r<o;)i[r]=s(e,t,n[r]);return i}(l,c,d))}};var i={}.hasOwnProperty;function a(e,t){var n,r;if(\"string\"!=typeof t&&\"number\"!=typeof t)if(\"object\"==typeof t&&\"length\"in t)for(n=-1,r=t.length;++n<r;)a(e,t[n]);else{if(\"object\"!=typeof t||!(\"type\"in t))throw new Error(\"Expected node, nodes, or string, got `\"+t+\"`\");e.push(t)}else e.push({type:\"text\",value:String(t)})}function s(e,n,r){var o=r;return e.number||e.positiveNumber?!isNaN(o)&&\"\"!==o&&(o=Number(o)):(e.boolean||e.overloadedBoolean)&&\"string\"==typeof o&&(\"\"===o||t(r)===t(n))&&(o=!0),o}return $c}function Oc(){return Zc||(Zc=1,Wc=function(){if(Pc)return Tc;Pc=1;var e=Ec(),t=zc()(e,\"div\");return t.displayName=\"html\",Tc=t}()),Wc}var _c,qc,Uc,Gc,Yc,Xc,Kc,Jc,Qc={AElig:\"Æ\",AMP:\"&\",Aacute:\"Á\",Acirc:\"Â\",Agrave:\"À\",Aring:\"Å\",Atilde:\"Ã\",Auml:\"Ä\",COPY:\"©\",Ccedil:\"Ç\",ETH:\"Ð\",Eacute:\"É\",Ecirc:\"Ê\",Egrave:\"È\",Euml:\"Ë\",GT:\">\",Iacute:\"Í\",Icirc:\"Î\",Igrave:\"Ì\",Iuml:\"Ï\",LT:\"<\",Ntilde:\"Ñ\",Oacute:\"Ó\",Ocirc:\"Ô\",Ograve:\"Ò\",Oslash:\"Ø\",Otilde:\"Õ\",Ouml:\"Ö\",QUOT:'\"',REG:\"®\",THORN:\"Þ\",Uacute:\"Ú\",Ucirc:\"Û\",Ugrave:\"Ù\",Uuml:\"Ü\",Yacute:\"Ý\",aacute:\"á\",acirc:\"â\",acute:\"´\",aelig:\"æ\",agrave:\"à\",amp:\"&\",aring:\"å\",atilde:\"ã\",auml:\"ä\",brvbar:\"¦\",ccedil:\"ç\",cedil:\"¸\",cent:\"¢\",copy:\"©\",curren:\"¤\",deg:\"°\",divide:\"÷\",eacute:\"é\",ecirc:\"ê\",egrave:\"è\",eth:\"ð\",euml:\"ë\",frac12:\"½\",frac14:\"¼\",frac34:\"¾\",gt:\">\",iacute:\"í\",icirc:\"î\",iexcl:\"¡\",igrave:\"ì\",iquest:\"¿\",iuml:\"ï\",laquo:\"«\",lt:\"<\",macr:\"¯\",micro:\"µ\",middot:\"·\",nbsp:\" \",not:\"¬\",ntilde:\"ñ\",oacute:\"ó\",ocirc:\"ô\",ograve:\"ò\",ordf:\"ª\",ordm:\"º\",oslash:\"ø\",otilde:\"õ\",ouml:\"ö\",para:\"¶\",plusmn:\"±\",pound:\"£\",quot:'\"',raquo:\"»\",reg:\"®\",sect:\"§\",shy:\"­\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",szlig:\"ß\",thorn:\"þ\",times:\"×\",uacute:\"ú\",ucirc:\"û\",ugrave:\"ù\",uml:\"¨\",uuml:\"ü\",yacute:\"ý\",yen:\"¥\",yuml:\"ÿ\"},ed={0:\"�\",128:\"€\",130:\"‚\",131:\"ƒ\",132:\"„\",133:\"…\",134:\"†\",135:\"‡\",136:\"ˆ\",137:\"‰\",138:\"Š\",139:\"‹\",140:\"Œ\",142:\"Ž\",145:\"‘\",146:\"’\",147:\"“\",148:\"”\",149:\"•\",150:\"–\",151:\"—\",152:\"˜\",153:\"™\",154:\"š\",155:\"›\",156:\"œ\",158:\"ž\",159:\"Ÿ\"};function td(){if(qc)return _c;return qc=1,_c=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=48&&t<=57}}function nd(){if(Jc)return Kc;Jc=1;var e=Xc?Yc:(Xc=1,Yc=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=122||t>=65&&t<=90}),t=td();return Kc=function(n){return e(n)||t(n)}}var rd,od,id,ad,sd={AEli:\"Æ\",AElig:\"Æ\",AM:\"&\",AMP:\"&\",Aacut:\"Á\",Aacute:\"Á\",Abreve:\"Ă\",Acir:\"Â\",Acirc:\"Â\",Acy:\"А\",Afr:\"𝔄\",Agrav:\"À\",Agrave:\"À\",Alpha:\"Α\",Amacr:\"Ā\",And:\"⩓\",Aogon:\"Ą\",Aopf:\"𝔸\",ApplyFunction:\"⁡\",Arin:\"Å\",Aring:\"Å\",Ascr:\"𝒜\",Assign:\"≔\",Atild:\"Ã\",Atilde:\"Ã\",Aum:\"Ä\",Auml:\"Ä\",Backslash:\"∖\",Barv:\"⫧\",Barwed:\"⌆\",Bcy:\"Б\",Because:\"∵\",Bernoullis:\"ℬ\",Beta:\"Β\",Bfr:\"𝔅\",Bopf:\"𝔹\",Breve:\"˘\",Bscr:\"ℬ\",Bumpeq:\"≎\",CHcy:\"Ч\",COP:\"©\",COPY:\"©\",Cacute:\"Ć\",Cap:\"⋒\",CapitalDifferentialD:\"ⅅ\",Cayleys:\"ℭ\",Ccaron:\"Č\",Ccedi:\"Ç\",Ccedil:\"Ç\",Ccirc:\"Ĉ\",Cconint:\"∰\",Cdot:\"Ċ\",Cedilla:\"¸\",CenterDot:\"·\",Cfr:\"ℭ\",Chi:\"Χ\",CircleDot:\"⊙\",CircleMinus:\"⊖\",CirclePlus:\"⊕\",CircleTimes:\"⊗\",ClockwiseContourIntegral:\"∲\",CloseCurlyDoubleQuote:\"”\",CloseCurlyQuote:\"’\",Colon:\"∷\",Colone:\"⩴\",Congruent:\"≡\",Conint:\"∯\",ContourIntegral:\"∮\",Copf:\"ℂ\",Coproduct:\"∐\",CounterClockwiseContourIntegral:\"∳\",Cross:\"⨯\",Cscr:\"𝒞\",Cup:\"⋓\",CupCap:\"≍\",DD:\"ⅅ\",DDotrahd:\"⤑\",DJcy:\"Ђ\",DScy:\"Ѕ\",DZcy:\"Џ\",Dagger:\"‡\",Darr:\"↡\",Dashv:\"⫤\",Dcaron:\"Ď\",Dcy:\"Д\",Del:\"∇\",Delta:\"Δ\",Dfr:\"𝔇\",DiacriticalAcute:\"´\",DiacriticalDot:\"˙\",DiacriticalDoubleAcute:\"˝\",DiacriticalGrave:\"`\",DiacriticalTilde:\"˜\",Diamond:\"⋄\",DifferentialD:\"ⅆ\",Dopf:\"𝔻\",Dot:\"¨\",DotDot:\"⃜\",DotEqual:\"≐\",DoubleContourIntegral:\"∯\",DoubleDot:\"¨\",DoubleDownArrow:\"⇓\",DoubleLeftArrow:\"⇐\",DoubleLeftRightArrow:\"⇔\",DoubleLeftTee:\"⫤\",DoubleLongLeftArrow:\"⟸\",DoubleLongLeftRightArrow:\"⟺\",DoubleLongRightArrow:\"⟹\",DoubleRightArrow:\"⇒\",DoubleRightTee:\"⊨\",DoubleUpArrow:\"⇑\",DoubleUpDownArrow:\"⇕\",DoubleVerticalBar:\"∥\",DownArrow:\"↓\",DownArrowBar:\"⤓\",DownArrowUpArrow:\"⇵\",DownBreve:\"̑\",DownLeftRightVector:\"⥐\",DownLeftTeeVector:\"⥞\",DownLeftVector:\"↽\",DownLeftVectorBar:\"⥖\",DownRightTeeVector:\"⥟\",DownRightVector:\"⇁\",DownRightVectorBar:\"⥗\",DownTee:\"⊤\",DownTeeArrow:\"↧\",Downarrow:\"⇓\",Dscr:\"𝒟\",Dstrok:\"Đ\",ENG:\"Ŋ\",ET:\"Ð\",ETH:\"Ð\",Eacut:\"É\",Eacute:\"É\",Ecaron:\"Ě\",Ecir:\"Ê\",Ecirc:\"Ê\",Ecy:\"Э\",Edot:\"Ė\",Efr:\"𝔈\",Egrav:\"È\",Egrave:\"È\",Element:\"∈\",Emacr:\"Ē\",EmptySmallSquare:\"◻\",EmptyVerySmallSquare:\"▫\",Eogon:\"Ę\",Eopf:\"𝔼\",Epsilon:\"Ε\",Equal:\"⩵\",EqualTilde:\"≂\",Equilibrium:\"⇌\",Escr:\"ℰ\",Esim:\"⩳\",Eta:\"Η\",Eum:\"Ë\",Euml:\"Ë\",Exists:\"∃\",ExponentialE:\"ⅇ\",Fcy:\"Ф\",Ffr:\"𝔉\",FilledSmallSquare:\"◼\",FilledVerySmallSquare:\"▪\",Fopf:\"𝔽\",ForAll:\"∀\",Fouriertrf:\"ℱ\",Fscr:\"ℱ\",GJcy:\"Ѓ\",G:\">\",GT:\">\",Gamma:\"Γ\",Gammad:\"Ϝ\",Gbreve:\"Ğ\",Gcedil:\"Ģ\",Gcirc:\"Ĝ\",Gcy:\"Г\",Gdot:\"Ġ\",Gfr:\"𝔊\",Gg:\"⋙\",Gopf:\"𝔾\",GreaterEqual:\"≥\",GreaterEqualLess:\"⋛\",GreaterFullEqual:\"≧\",GreaterGreater:\"⪢\",GreaterLess:\"≷\",GreaterSlantEqual:\"⩾\",GreaterTilde:\"≳\",Gscr:\"𝒢\",Gt:\"≫\",HARDcy:\"Ъ\",Hacek:\"ˇ\",Hat:\"^\",Hcirc:\"Ĥ\",Hfr:\"ℌ\",HilbertSpace:\"ℋ\",Hopf:\"ℍ\",HorizontalLine:\"─\",Hscr:\"ℋ\",Hstrok:\"Ħ\",HumpDownHump:\"≎\",HumpEqual:\"≏\",IEcy:\"Е\",IJlig:\"Ĳ\",IOcy:\"Ё\",Iacut:\"Í\",Iacute:\"Í\",Icir:\"Î\",Icirc:\"Î\",Icy:\"И\",Idot:\"İ\",Ifr:\"ℑ\",Igrav:\"Ì\",Igrave:\"Ì\",Im:\"ℑ\",Imacr:\"Ī\",ImaginaryI:\"ⅈ\",Implies:\"⇒\",Int:\"∬\",Integral:\"∫\",Intersection:\"⋂\",InvisibleComma:\"⁣\",InvisibleTimes:\"⁢\",Iogon:\"Į\",Iopf:\"𝕀\",Iota:\"Ι\",Iscr:\"ℐ\",Itilde:\"Ĩ\",Iukcy:\"І\",Ium:\"Ï\",Iuml:\"Ï\",Jcirc:\"Ĵ\",Jcy:\"Й\",Jfr:\"𝔍\",Jopf:\"𝕁\",Jscr:\"𝒥\",Jsercy:\"Ј\",Jukcy:\"Є\",KHcy:\"Х\",KJcy:\"Ќ\",Kappa:\"Κ\",Kcedil:\"Ķ\",Kcy:\"К\",Kfr:\"𝔎\",Kopf:\"𝕂\",Kscr:\"𝒦\",LJcy:\"Љ\",L:\"<\",LT:\"<\",Lacute:\"Ĺ\",Lambda:\"Λ\",Lang:\"⟪\",Laplacetrf:\"ℒ\",Larr:\"↞\",Lcaron:\"Ľ\",Lcedil:\"Ļ\",Lcy:\"Л\",LeftAngleBracket:\"⟨\",LeftArrow:\"←\",LeftArrowBar:\"⇤\",LeftArrowRightArrow:\"⇆\",LeftCeiling:\"⌈\",LeftDoubleBracket:\"⟦\",LeftDownTeeVector:\"⥡\",LeftDownVector:\"⇃\",LeftDownVectorBar:\"⥙\",LeftFloor:\"⌊\",LeftRightArrow:\"↔\",LeftRightVector:\"⥎\",LeftTee:\"⊣\",LeftTeeArrow:\"↤\",LeftTeeVector:\"⥚\",LeftTriangle:\"⊲\",LeftTriangleBar:\"⧏\",LeftTriangleEqual:\"⊴\",LeftUpDownVector:\"⥑\",LeftUpTeeVector:\"⥠\",LeftUpVector:\"↿\",LeftUpVectorBar:\"⥘\",LeftVector:\"↼\",LeftVectorBar:\"⥒\",Leftarrow:\"⇐\",Leftrightarrow:\"⇔\",LessEqualGreater:\"⋚\",LessFullEqual:\"≦\",LessGreater:\"≶\",LessLess:\"⪡\",LessSlantEqual:\"⩽\",LessTilde:\"≲\",Lfr:\"𝔏\",Ll:\"⋘\",Lleftarrow:\"⇚\",Lmidot:\"Ŀ\",LongLeftArrow:\"⟵\",LongLeftRightArrow:\"⟷\",LongRightArrow:\"⟶\",Longleftarrow:\"⟸\",Longleftrightarrow:\"⟺\",Longrightarrow:\"⟹\",Lopf:\"𝕃\",LowerLeftArrow:\"↙\",LowerRightArrow:\"↘\",Lscr:\"ℒ\",Lsh:\"↰\",Lstrok:\"Ł\",Lt:\"≪\",Map:\"⤅\",Mcy:\"М\",MediumSpace:\" \",Mellintrf:\"ℳ\",Mfr:\"𝔐\",MinusPlus:\"∓\",Mopf:\"𝕄\",Mscr:\"ℳ\",Mu:\"Μ\",NJcy:\"Њ\",Nacute:\"Ń\",Ncaron:\"Ň\",Ncedil:\"Ņ\",Ncy:\"Н\",NegativeMediumSpace:\"​\",NegativeThickSpace:\"​\",NegativeThinSpace:\"​\",NegativeVeryThinSpace:\"​\",NestedGreaterGreater:\"≫\",NestedLessLess:\"≪\",NewLine:\"\\n\",Nfr:\"𝔑\",NoBreak:\"⁠\",NonBreakingSpace:\" \",Nopf:\"ℕ\",Not:\"⫬\",NotCongruent:\"≢\",NotCupCap:\"≭\",NotDoubleVerticalBar:\"∦\",NotElement:\"∉\",NotEqual:\"≠\",NotEqualTilde:\"≂̸\",NotExists:\"∄\",NotGreater:\"≯\",NotGreaterEqual:\"≱\",NotGreaterFullEqual:\"≧̸\",NotGreaterGreater:\"≫̸\",NotGreaterLess:\"≹\",NotGreaterSlantEqual:\"⩾̸\",NotGreaterTilde:\"≵\",NotHumpDownHump:\"≎̸\",NotHumpEqual:\"≏̸\",NotLeftTriangle:\"⋪\",NotLeftTriangleBar:\"⧏̸\",NotLeftTriangleEqual:\"⋬\",NotLess:\"≮\",NotLessEqual:\"≰\",NotLessGreater:\"≸\",NotLessLess:\"≪̸\",NotLessSlantEqual:\"⩽̸\",NotLessTilde:\"≴\",NotNestedGreaterGreater:\"⪢̸\",NotNestedLessLess:\"⪡̸\",NotPrecedes:\"⊀\",NotPrecedesEqual:\"⪯̸\",NotPrecedesSlantEqual:\"⋠\",NotReverseElement:\"∌\",NotRightTriangle:\"⋫\",NotRightTriangleBar:\"⧐̸\",NotRightTriangleEqual:\"⋭\",NotSquareSubset:\"⊏̸\",NotSquareSubsetEqual:\"⋢\",NotSquareSuperset:\"⊐̸\",NotSquareSupersetEqual:\"⋣\",NotSubset:\"⊂⃒\",NotSubsetEqual:\"⊈\",NotSucceeds:\"⊁\",NotSucceedsEqual:\"⪰̸\",NotSucceedsSlantEqual:\"⋡\",NotSucceedsTilde:\"≿̸\",NotSuperset:\"⊃⃒\",NotSupersetEqual:\"⊉\",NotTilde:\"≁\",NotTildeEqual:\"≄\",NotTildeFullEqual:\"≇\",NotTildeTilde:\"≉\",NotVerticalBar:\"∤\",Nscr:\"𝒩\",Ntild:\"Ñ\",Ntilde:\"Ñ\",Nu:\"Ν\",OElig:\"Œ\",Oacut:\"Ó\",Oacute:\"Ó\",Ocir:\"Ô\",Ocirc:\"Ô\",Ocy:\"О\",Odblac:\"Ő\",Ofr:\"𝔒\",Ograv:\"Ò\",Ograve:\"Ò\",Omacr:\"Ō\",Omega:\"Ω\",Omicron:\"Ο\",Oopf:\"𝕆\",OpenCurlyDoubleQuote:\"“\",OpenCurlyQuote:\"‘\",Or:\"⩔\",Oscr:\"𝒪\",Oslas:\"Ø\",Oslash:\"Ø\",Otild:\"Õ\",Otilde:\"Õ\",Otimes:\"⨷\",Oum:\"Ö\",Ouml:\"Ö\",OverBar:\"‾\",OverBrace:\"⏞\",OverBracket:\"⎴\",OverParenthesis:\"⏜\",PartialD:\"∂\",Pcy:\"П\",Pfr:\"𝔓\",Phi:\"Φ\",Pi:\"Π\",PlusMinus:\"±\",Poincareplane:\"ℌ\",Popf:\"ℙ\",Pr:\"⪻\",Precedes:\"≺\",PrecedesEqual:\"⪯\",PrecedesSlantEqual:\"≼\",PrecedesTilde:\"≾\",Prime:\"″\",Product:\"∏\",Proportion:\"∷\",Proportional:\"∝\",Pscr:\"𝒫\",Psi:\"Ψ\",QUO:'\"',QUOT:'\"',Qfr:\"𝔔\",Qopf:\"ℚ\",Qscr:\"𝒬\",RBarr:\"⤐\",RE:\"®\",REG:\"®\",Racute:\"Ŕ\",Rang:\"⟫\",Rarr:\"↠\",Rarrtl:\"⤖\",Rcaron:\"Ř\",Rcedil:\"Ŗ\",Rcy:\"Р\",Re:\"ℜ\",ReverseElement:\"∋\",ReverseEquilibrium:\"⇋\",ReverseUpEquilibrium:\"⥯\",Rfr:\"ℜ\",Rho:\"Ρ\",RightAngleBracket:\"⟩\",RightArrow:\"→\",RightArrowBar:\"⇥\",RightArrowLeftArrow:\"⇄\",RightCeiling:\"⌉\",RightDoubleBracket:\"⟧\",RightDownTeeVector:\"⥝\",RightDownVector:\"⇂\",RightDownVectorBar:\"⥕\",RightFloor:\"⌋\",RightTee:\"⊢\",RightTeeArrow:\"↦\",RightTeeVector:\"⥛\",RightTriangle:\"⊳\",RightTriangleBar:\"⧐\",RightTriangleEqual:\"⊵\",RightUpDownVector:\"⥏\",RightUpTeeVector:\"⥜\",RightUpVector:\"↾\",RightUpVectorBar:\"⥔\",RightVector:\"⇀\",RightVectorBar:\"⥓\",Rightarrow:\"⇒\",Ropf:\"ℝ\",RoundImplies:\"⥰\",Rrightarrow:\"⇛\",Rscr:\"ℛ\",Rsh:\"↱\",RuleDelayed:\"⧴\",SHCHcy:\"Щ\",SHcy:\"Ш\",SOFTcy:\"Ь\",Sacute:\"Ś\",Sc:\"⪼\",Scaron:\"Š\",Scedil:\"Ş\",Scirc:\"Ŝ\",Scy:\"С\",Sfr:\"𝔖\",ShortDownArrow:\"↓\",ShortLeftArrow:\"←\",ShortRightArrow:\"→\",ShortUpArrow:\"↑\",Sigma:\"Σ\",SmallCircle:\"∘\",Sopf:\"𝕊\",Sqrt:\"√\",Square:\"□\",SquareIntersection:\"⊓\",SquareSubset:\"⊏\",SquareSubsetEqual:\"⊑\",SquareSuperset:\"⊐\",SquareSupersetEqual:\"⊒\",SquareUnion:\"⊔\",Sscr:\"𝒮\",Star:\"⋆\",Sub:\"⋐\",Subset:\"⋐\",SubsetEqual:\"⊆\",Succeeds:\"≻\",SucceedsEqual:\"⪰\",SucceedsSlantEqual:\"≽\",SucceedsTilde:\"≿\",SuchThat:\"∋\",Sum:\"∑\",Sup:\"⋑\",Superset:\"⊃\",SupersetEqual:\"⊇\",Supset:\"⋑\",THOR:\"Þ\",THORN:\"Þ\",TRADE:\"™\",TSHcy:\"Ћ\",TScy:\"Ц\",Tab:\"\\t\",Tau:\"Τ\",Tcaron:\"Ť\",Tcedil:\"Ţ\",Tcy:\"Т\",Tfr:\"𝔗\",Therefore:\"∴\",Theta:\"Θ\",ThickSpace:\"  \",ThinSpace:\" \",Tilde:\"∼\",TildeEqual:\"≃\",TildeFullEqual:\"≅\",TildeTilde:\"≈\",Topf:\"𝕋\",TripleDot:\"⃛\",Tscr:\"𝒯\",Tstrok:\"Ŧ\",Uacut:\"Ú\",Uacute:\"Ú\",Uarr:\"↟\",Uarrocir:\"⥉\",Ubrcy:\"Ў\",Ubreve:\"Ŭ\",Ucir:\"Û\",Ucirc:\"Û\",Ucy:\"У\",Udblac:\"Ű\",Ufr:\"𝔘\",Ugrav:\"Ù\",Ugrave:\"Ù\",Umacr:\"Ū\",UnderBar:\"_\",UnderBrace:\"⏟\",UnderBracket:\"⎵\",UnderParenthesis:\"⏝\",Union:\"⋃\",UnionPlus:\"⊎\",Uogon:\"Ų\",Uopf:\"𝕌\",UpArrow:\"↑\",UpArrowBar:\"⤒\",UpArrowDownArrow:\"⇅\",UpDownArrow:\"↕\",UpEquilibrium:\"⥮\",UpTee:\"⊥\",UpTeeArrow:\"↥\",Uparrow:\"⇑\",Updownarrow:\"⇕\",UpperLeftArrow:\"↖\",UpperRightArrow:\"↗\",Upsi:\"ϒ\",Upsilon:\"Υ\",Uring:\"Ů\",Uscr:\"𝒰\",Utilde:\"Ũ\",Uum:\"Ü\",Uuml:\"Ü\",VDash:\"⊫\",Vbar:\"⫫\",Vcy:\"В\",Vdash:\"⊩\",Vdashl:\"⫦\",Vee:\"⋁\",Verbar:\"‖\",Vert:\"‖\",VerticalBar:\"∣\",VerticalLine:\"|\",VerticalSeparator:\"❘\",VerticalTilde:\"≀\",VeryThinSpace:\" \",Vfr:\"𝔙\",Vopf:\"𝕍\",Vscr:\"𝒱\",Vvdash:\"⊪\",Wcirc:\"Ŵ\",Wedge:\"⋀\",Wfr:\"𝔚\",Wopf:\"𝕎\",Wscr:\"𝒲\",Xfr:\"𝔛\",Xi:\"Ξ\",Xopf:\"𝕏\",Xscr:\"𝒳\",YAcy:\"Я\",YIcy:\"Ї\",YUcy:\"Ю\",Yacut:\"Ý\",Yacute:\"Ý\",Ycirc:\"Ŷ\",Ycy:\"Ы\",Yfr:\"𝔜\",Yopf:\"𝕐\",Yscr:\"𝒴\",Yuml:\"Ÿ\",ZHcy:\"Ж\",Zacute:\"Ź\",Zcaron:\"Ž\",Zcy:\"З\",Zdot:\"Ż\",ZeroWidthSpace:\"​\",Zeta:\"Ζ\",Zfr:\"ℨ\",Zopf:\"ℤ\",Zscr:\"𝒵\",aacut:\"á\",aacute:\"á\",abreve:\"ă\",ac:\"∾\",acE:\"∾̳\",acd:\"∿\",acir:\"â\",acirc:\"â\",acut:\"´\",acute:\"´\",acy:\"а\",aeli:\"æ\",aelig:\"æ\",af:\"⁡\",afr:\"𝔞\",agrav:\"à\",agrave:\"à\",alefsym:\"ℵ\",aleph:\"ℵ\",alpha:\"α\",amacr:\"ā\",amalg:\"⨿\",am:\"&\",amp:\"&\",and:\"∧\",andand:\"⩕\",andd:\"⩜\",andslope:\"⩘\",andv:\"⩚\",ang:\"∠\",ange:\"⦤\",angle:\"∠\",angmsd:\"∡\",angmsdaa:\"⦨\",angmsdab:\"⦩\",angmsdac:\"⦪\",angmsdad:\"⦫\",angmsdae:\"⦬\",angmsdaf:\"⦭\",angmsdag:\"⦮\",angmsdah:\"⦯\",angrt:\"∟\",angrtvb:\"⊾\",angrtvbd:\"⦝\",angsph:\"∢\",angst:\"Å\",angzarr:\"⍼\",aogon:\"ą\",aopf:\"𝕒\",ap:\"≈\",apE:\"⩰\",apacir:\"⩯\",ape:\"≊\",apid:\"≋\",apos:\"'\",approx:\"≈\",approxeq:\"≊\",arin:\"å\",aring:\"å\",ascr:\"𝒶\",ast:\"*\",asymp:\"≈\",asympeq:\"≍\",atild:\"ã\",atilde:\"ã\",aum:\"ä\",auml:\"ä\",awconint:\"∳\",awint:\"⨑\",bNot:\"⫭\",backcong:\"≌\",backepsilon:\"϶\",backprime:\"‵\",backsim:\"∽\",backsimeq:\"⋍\",barvee:\"⊽\",barwed:\"⌅\",barwedge:\"⌅\",bbrk:\"⎵\",bbrktbrk:\"⎶\",bcong:\"≌\",bcy:\"б\",bdquo:\"„\",becaus:\"∵\",because:\"∵\",bemptyv:\"⦰\",bepsi:\"϶\",bernou:\"ℬ\",beta:\"β\",beth:\"ℶ\",between:\"≬\",bfr:\"𝔟\",bigcap:\"⋂\",bigcirc:\"◯\",bigcup:\"⋃\",bigodot:\"⨀\",bigoplus:\"⨁\",bigotimes:\"⨂\",bigsqcup:\"⨆\",bigstar:\"★\",bigtriangledown:\"▽\",bigtriangleup:\"△\",biguplus:\"⨄\",bigvee:\"⋁\",bigwedge:\"⋀\",bkarow:\"⤍\",blacklozenge:\"⧫\",blacksquare:\"▪\",blacktriangle:\"▴\",blacktriangledown:\"▾\",blacktriangleleft:\"◂\",blacktriangleright:\"▸\",blank:\"␣\",blk12:\"▒\",blk14:\"░\",blk34:\"▓\",block:\"█\",bne:\"=⃥\",bnequiv:\"≡⃥\",bnot:\"⌐\",bopf:\"𝕓\",bot:\"⊥\",bottom:\"⊥\",bowtie:\"⋈\",boxDL:\"╗\",boxDR:\"╔\",boxDl:\"╖\",boxDr:\"╓\",boxH:\"═\",boxHD:\"╦\",boxHU:\"╩\",boxHd:\"╤\",boxHu:\"╧\",boxUL:\"╝\",boxUR:\"╚\",boxUl:\"╜\",boxUr:\"╙\",boxV:\"║\",boxVH:\"╬\",boxVL:\"╣\",boxVR:\"╠\",boxVh:\"╫\",boxVl:\"╢\",boxVr:\"╟\",boxbox:\"⧉\",boxdL:\"╕\",boxdR:\"╒\",boxdl:\"┐\",boxdr:\"┌\",boxh:\"─\",boxhD:\"╥\",boxhU:\"╨\",boxhd:\"┬\",boxhu:\"┴\",boxminus:\"⊟\",boxplus:\"⊞\",boxtimes:\"⊠\",boxuL:\"╛\",boxuR:\"╘\",boxul:\"┘\",boxur:\"└\",boxv:\"│\",boxvH:\"╪\",boxvL:\"╡\",boxvR:\"╞\",boxvh:\"┼\",boxvl:\"┤\",boxvr:\"├\",bprime:\"‵\",breve:\"˘\",brvba:\"¦\",brvbar:\"¦\",bscr:\"𝒷\",bsemi:\"⁏\",bsim:\"∽\",bsime:\"⋍\",bsol:\"\\\\\",bsolb:\"⧅\",bsolhsub:\"⟈\",bull:\"•\",bullet:\"•\",bump:\"≎\",bumpE:\"⪮\",bumpe:\"≏\",bumpeq:\"≏\",cacute:\"ć\",cap:\"∩\",capand:\"⩄\",capbrcup:\"⩉\",capcap:\"⩋\",capcup:\"⩇\",capdot:\"⩀\",caps:\"∩︀\",caret:\"⁁\",caron:\"ˇ\",ccaps:\"⩍\",ccaron:\"č\",ccedi:\"ç\",ccedil:\"ç\",ccirc:\"ĉ\",ccups:\"⩌\",ccupssm:\"⩐\",cdot:\"ċ\",cedi:\"¸\",cedil:\"¸\",cemptyv:\"⦲\",cen:\"¢\",cent:\"¢\",centerdot:\"·\",cfr:\"𝔠\",chcy:\"ч\",check:\"✓\",checkmark:\"✓\",chi:\"χ\",cir:\"○\",cirE:\"⧃\",circ:\"ˆ\",circeq:\"≗\",circlearrowleft:\"↺\",circlearrowright:\"↻\",circledR:\"®\",circledS:\"Ⓢ\",circledast:\"⊛\",circledcirc:\"⊚\",circleddash:\"⊝\",cire:\"≗\",cirfnint:\"⨐\",cirmid:\"⫯\",cirscir:\"⧂\",clubs:\"♣\",clubsuit:\"♣\",colon:\":\",colone:\"≔\",coloneq:\"≔\",comma:\",\",commat:\"@\",comp:\"∁\",compfn:\"∘\",complement:\"∁\",complexes:\"ℂ\",cong:\"≅\",congdot:\"⩭\",conint:\"∮\",copf:\"𝕔\",coprod:\"∐\",cop:\"©\",copy:\"©\",copysr:\"℗\",crarr:\"↵\",cross:\"✗\",cscr:\"𝒸\",csub:\"⫏\",csube:\"⫑\",csup:\"⫐\",csupe:\"⫒\",ctdot:\"⋯\",cudarrl:\"⤸\",cudarrr:\"⤵\",cuepr:\"⋞\",cuesc:\"⋟\",cularr:\"↶\",cularrp:\"⤽\",cup:\"∪\",cupbrcap:\"⩈\",cupcap:\"⩆\",cupcup:\"⩊\",cupdot:\"⊍\",cupor:\"⩅\",cups:\"∪︀\",curarr:\"↷\",curarrm:\"⤼\",curlyeqprec:\"⋞\",curlyeqsucc:\"⋟\",curlyvee:\"⋎\",curlywedge:\"⋏\",curre:\"¤\",curren:\"¤\",curvearrowleft:\"↶\",curvearrowright:\"↷\",cuvee:\"⋎\",cuwed:\"⋏\",cwconint:\"∲\",cwint:\"∱\",cylcty:\"⌭\",dArr:\"⇓\",dHar:\"⥥\",dagger:\"†\",daleth:\"ℸ\",darr:\"↓\",dash:\"‐\",dashv:\"⊣\",dbkarow:\"⤏\",dblac:\"˝\",dcaron:\"ď\",dcy:\"д\",dd:\"ⅆ\",ddagger:\"‡\",ddarr:\"⇊\",ddotseq:\"⩷\",de:\"°\",deg:\"°\",delta:\"δ\",demptyv:\"⦱\",dfisht:\"⥿\",dfr:\"𝔡\",dharl:\"⇃\",dharr:\"⇂\",diam:\"⋄\",diamond:\"⋄\",diamondsuit:\"♦\",diams:\"♦\",die:\"¨\",digamma:\"ϝ\",disin:\"⋲\",div:\"÷\",divid:\"÷\",divide:\"÷\",divideontimes:\"⋇\",divonx:\"⋇\",djcy:\"ђ\",dlcorn:\"⌞\",dlcrop:\"⌍\",dollar:\"$\",dopf:\"𝕕\",dot:\"˙\",doteq:\"≐\",doteqdot:\"≑\",dotminus:\"∸\",dotplus:\"∔\",dotsquare:\"⊡\",doublebarwedge:\"⌆\",downarrow:\"↓\",downdownarrows:\"⇊\",downharpoonleft:\"⇃\",downharpoonright:\"⇂\",drbkarow:\"⤐\",drcorn:\"⌟\",drcrop:\"⌌\",dscr:\"𝒹\",dscy:\"ѕ\",dsol:\"⧶\",dstrok:\"đ\",dtdot:\"⋱\",dtri:\"▿\",dtrif:\"▾\",duarr:\"⇵\",duhar:\"⥯\",dwangle:\"⦦\",dzcy:\"џ\",dzigrarr:\"⟿\",eDDot:\"⩷\",eDot:\"≑\",eacut:\"é\",eacute:\"é\",easter:\"⩮\",ecaron:\"ě\",ecir:\"ê\",ecirc:\"ê\",ecolon:\"≕\",ecy:\"э\",edot:\"ė\",ee:\"ⅇ\",efDot:\"≒\",efr:\"𝔢\",eg:\"⪚\",egrav:\"è\",egrave:\"è\",egs:\"⪖\",egsdot:\"⪘\",el:\"⪙\",elinters:\"⏧\",ell:\"ℓ\",els:\"⪕\",elsdot:\"⪗\",emacr:\"ē\",empty:\"∅\",emptyset:\"∅\",emptyv:\"∅\",emsp13:\" \",emsp14:\" \",emsp:\" \",eng:\"ŋ\",ensp:\" \",eogon:\"ę\",eopf:\"𝕖\",epar:\"⋕\",eparsl:\"⧣\",eplus:\"⩱\",epsi:\"ε\",epsilon:\"ε\",epsiv:\"ϵ\",eqcirc:\"≖\",eqcolon:\"≕\",eqsim:\"≂\",eqslantgtr:\"⪖\",eqslantless:\"⪕\",equals:\"=\",equest:\"≟\",equiv:\"≡\",equivDD:\"⩸\",eqvparsl:\"⧥\",erDot:\"≓\",erarr:\"⥱\",escr:\"ℯ\",esdot:\"≐\",esim:\"≂\",eta:\"η\",et:\"ð\",eth:\"ð\",eum:\"ë\",euml:\"ë\",euro:\"€\",excl:\"!\",exist:\"∃\",expectation:\"ℰ\",exponentiale:\"ⅇ\",fallingdotseq:\"≒\",fcy:\"ф\",female:\"♀\",ffilig:\"ﬃ\",fflig:\"ﬀ\",ffllig:\"ﬄ\",ffr:\"𝔣\",filig:\"ﬁ\",fjlig:\"fj\",flat:\"♭\",fllig:\"ﬂ\",fltns:\"▱\",fnof:\"ƒ\",fopf:\"𝕗\",forall:\"∀\",fork:\"⋔\",forkv:\"⫙\",fpartint:\"⨍\",frac1:\"¼\",frac12:\"½\",frac13:\"⅓\",frac14:\"¼\",frac15:\"⅕\",frac16:\"⅙\",frac18:\"⅛\",frac23:\"⅔\",frac25:\"⅖\",frac3:\"¾\",frac34:\"¾\",frac35:\"⅗\",frac38:\"⅜\",frac45:\"⅘\",frac56:\"⅚\",frac58:\"⅝\",frac78:\"⅞\",frasl:\"⁄\",frown:\"⌢\",fscr:\"𝒻\",gE:\"≧\",gEl:\"⪌\",gacute:\"ǵ\",gamma:\"γ\",gammad:\"ϝ\",gap:\"⪆\",gbreve:\"ğ\",gcirc:\"ĝ\",gcy:\"г\",gdot:\"ġ\",ge:\"≥\",gel:\"⋛\",geq:\"≥\",geqq:\"≧\",geqslant:\"⩾\",ges:\"⩾\",gescc:\"⪩\",gesdot:\"⪀\",gesdoto:\"⪂\",gesdotol:\"⪄\",gesl:\"⋛︀\",gesles:\"⪔\",gfr:\"𝔤\",gg:\"≫\",ggg:\"⋙\",gimel:\"ℷ\",gjcy:\"ѓ\",gl:\"≷\",glE:\"⪒\",gla:\"⪥\",glj:\"⪤\",gnE:\"≩\",gnap:\"⪊\",gnapprox:\"⪊\",gne:\"⪈\",gneq:\"⪈\",gneqq:\"≩\",gnsim:\"⋧\",gopf:\"𝕘\",grave:\"`\",gscr:\"ℊ\",gsim:\"≳\",gsime:\"⪎\",gsiml:\"⪐\",g:\">\",gt:\">\",gtcc:\"⪧\",gtcir:\"⩺\",gtdot:\"⋗\",gtlPar:\"⦕\",gtquest:\"⩼\",gtrapprox:\"⪆\",gtrarr:\"⥸\",gtrdot:\"⋗\",gtreqless:\"⋛\",gtreqqless:\"⪌\",gtrless:\"≷\",gtrsim:\"≳\",gvertneqq:\"≩︀\",gvnE:\"≩︀\",hArr:\"⇔\",hairsp:\" \",half:\"½\",hamilt:\"ℋ\",hardcy:\"ъ\",harr:\"↔\",harrcir:\"⥈\",harrw:\"↭\",hbar:\"ℏ\",hcirc:\"ĥ\",hearts:\"♥\",heartsuit:\"♥\",hellip:\"…\",hercon:\"⊹\",hfr:\"𝔥\",hksearow:\"⤥\",hkswarow:\"⤦\",hoarr:\"⇿\",homtht:\"∻\",hookleftarrow:\"↩\",hookrightarrow:\"↪\",hopf:\"𝕙\",horbar:\"―\",hscr:\"𝒽\",hslash:\"ℏ\",hstrok:\"ħ\",hybull:\"⁃\",hyphen:\"‐\",iacut:\"í\",iacute:\"í\",ic:\"⁣\",icir:\"î\",icirc:\"î\",icy:\"и\",iecy:\"е\",iexc:\"¡\",iexcl:\"¡\",iff:\"⇔\",ifr:\"𝔦\",igrav:\"ì\",igrave:\"ì\",ii:\"ⅈ\",iiiint:\"⨌\",iiint:\"∭\",iinfin:\"⧜\",iiota:\"℩\",ijlig:\"ĳ\",imacr:\"ī\",image:\"ℑ\",imagline:\"ℐ\",imagpart:\"ℑ\",imath:\"ı\",imof:\"⊷\",imped:\"Ƶ\",in:\"∈\",incare:\"℅\",infin:\"∞\",infintie:\"⧝\",inodot:\"ı\",int:\"∫\",intcal:\"⊺\",integers:\"ℤ\",intercal:\"⊺\",intlarhk:\"⨗\",intprod:\"⨼\",iocy:\"ё\",iogon:\"į\",iopf:\"𝕚\",iota:\"ι\",iprod:\"⨼\",iques:\"¿\",iquest:\"¿\",iscr:\"𝒾\",isin:\"∈\",isinE:\"⋹\",isindot:\"⋵\",isins:\"⋴\",isinsv:\"⋳\",isinv:\"∈\",it:\"⁢\",itilde:\"ĩ\",iukcy:\"і\",ium:\"ï\",iuml:\"ï\",jcirc:\"ĵ\",jcy:\"й\",jfr:\"𝔧\",jmath:\"ȷ\",jopf:\"𝕛\",jscr:\"𝒿\",jsercy:\"ј\",jukcy:\"є\",kappa:\"κ\",kappav:\"ϰ\",kcedil:\"ķ\",kcy:\"к\",kfr:\"𝔨\",kgreen:\"ĸ\",khcy:\"х\",kjcy:\"ќ\",kopf:\"𝕜\",kscr:\"𝓀\",lAarr:\"⇚\",lArr:\"⇐\",lAtail:\"⤛\",lBarr:\"⤎\",lE:\"≦\",lEg:\"⪋\",lHar:\"⥢\",lacute:\"ĺ\",laemptyv:\"⦴\",lagran:\"ℒ\",lambda:\"λ\",lang:\"⟨\",langd:\"⦑\",langle:\"⟨\",lap:\"⪅\",laqu:\"«\",laquo:\"«\",larr:\"←\",larrb:\"⇤\",larrbfs:\"⤟\",larrfs:\"⤝\",larrhk:\"↩\",larrlp:\"↫\",larrpl:\"⤹\",larrsim:\"⥳\",larrtl:\"↢\",lat:\"⪫\",latail:\"⤙\",late:\"⪭\",lates:\"⪭︀\",lbarr:\"⤌\",lbbrk:\"❲\",lbrace:\"{\",lbrack:\"[\",lbrke:\"⦋\",lbrksld:\"⦏\",lbrkslu:\"⦍\",lcaron:\"ľ\",lcedil:\"ļ\",lceil:\"⌈\",lcub:\"{\",lcy:\"л\",ldca:\"⤶\",ldquo:\"“\",ldquor:\"„\",ldrdhar:\"⥧\",ldrushar:\"⥋\",ldsh:\"↲\",le:\"≤\",leftarrow:\"←\",leftarrowtail:\"↢\",leftharpoondown:\"↽\",leftharpoonup:\"↼\",leftleftarrows:\"⇇\",leftrightarrow:\"↔\",leftrightarrows:\"⇆\",leftrightharpoons:\"⇋\",leftrightsquigarrow:\"↭\",leftthreetimes:\"⋋\",leg:\"⋚\",leq:\"≤\",leqq:\"≦\",leqslant:\"⩽\",les:\"⩽\",lescc:\"⪨\",lesdot:\"⩿\",lesdoto:\"⪁\",lesdotor:\"⪃\",lesg:\"⋚︀\",lesges:\"⪓\",lessapprox:\"⪅\",lessdot:\"⋖\",lesseqgtr:\"⋚\",lesseqqgtr:\"⪋\",lessgtr:\"≶\",lesssim:\"≲\",lfisht:\"⥼\",lfloor:\"⌊\",lfr:\"𝔩\",lg:\"≶\",lgE:\"⪑\",lhard:\"↽\",lharu:\"↼\",lharul:\"⥪\",lhblk:\"▄\",ljcy:\"љ\",ll:\"≪\",llarr:\"⇇\",llcorner:\"⌞\",llhard:\"⥫\",lltri:\"◺\",lmidot:\"ŀ\",lmoust:\"⎰\",lmoustache:\"⎰\",lnE:\"≨\",lnap:\"⪉\",lnapprox:\"⪉\",lne:\"⪇\",lneq:\"⪇\",lneqq:\"≨\",lnsim:\"⋦\",loang:\"⟬\",loarr:\"⇽\",lobrk:\"⟦\",longleftarrow:\"⟵\",longleftrightarrow:\"⟷\",longmapsto:\"⟼\",longrightarrow:\"⟶\",looparrowleft:\"↫\",looparrowright:\"↬\",lopar:\"⦅\",lopf:\"𝕝\",loplus:\"⨭\",lotimes:\"⨴\",lowast:\"∗\",lowbar:\"_\",loz:\"◊\",lozenge:\"◊\",lozf:\"⧫\",lpar:\"(\",lparlt:\"⦓\",lrarr:\"⇆\",lrcorner:\"⌟\",lrhar:\"⇋\",lrhard:\"⥭\",lrm:\"‎\",lrtri:\"⊿\",lsaquo:\"‹\",lscr:\"𝓁\",lsh:\"↰\",lsim:\"≲\",lsime:\"⪍\",lsimg:\"⪏\",lsqb:\"[\",lsquo:\"‘\",lsquor:\"‚\",lstrok:\"ł\",l:\"<\",lt:\"<\",ltcc:\"⪦\",ltcir:\"⩹\",ltdot:\"⋖\",lthree:\"⋋\",ltimes:\"⋉\",ltlarr:\"⥶\",ltquest:\"⩻\",ltrPar:\"⦖\",ltri:\"◃\",ltrie:\"⊴\",ltrif:\"◂\",lurdshar:\"⥊\",luruhar:\"⥦\",lvertneqq:\"≨︀\",lvnE:\"≨︀\",mDDot:\"∺\",mac:\"¯\",macr:\"¯\",male:\"♂\",malt:\"✠\",maltese:\"✠\",map:\"↦\",mapsto:\"↦\",mapstodown:\"↧\",mapstoleft:\"↤\",mapstoup:\"↥\",marker:\"▮\",mcomma:\"⨩\",mcy:\"м\",mdash:\"—\",measuredangle:\"∡\",mfr:\"𝔪\",mho:\"℧\",micr:\"µ\",micro:\"µ\",mid:\"∣\",midast:\"*\",midcir:\"⫰\",middo:\"·\",middot:\"·\",minus:\"−\",minusb:\"⊟\",minusd:\"∸\",minusdu:\"⨪\",mlcp:\"⫛\",mldr:\"…\",mnplus:\"∓\",models:\"⊧\",mopf:\"𝕞\",mp:\"∓\",mscr:\"𝓂\",mstpos:\"∾\",mu:\"μ\",multimap:\"⊸\",mumap:\"⊸\",nGg:\"⋙̸\",nGt:\"≫⃒\",nGtv:\"≫̸\",nLeftarrow:\"⇍\",nLeftrightarrow:\"⇎\",nLl:\"⋘̸\",nLt:\"≪⃒\",nLtv:\"≪̸\",nRightarrow:\"⇏\",nVDash:\"⊯\",nVdash:\"⊮\",nabla:\"∇\",nacute:\"ń\",nang:\"∠⃒\",nap:\"≉\",napE:\"⩰̸\",napid:\"≋̸\",napos:\"ŉ\",napprox:\"≉\",natur:\"♮\",natural:\"♮\",naturals:\"ℕ\",nbs:\" \",nbsp:\" \",nbump:\"≎̸\",nbumpe:\"≏̸\",ncap:\"⩃\",ncaron:\"ň\",ncedil:\"ņ\",ncong:\"≇\",ncongdot:\"⩭̸\",ncup:\"⩂\",ncy:\"н\",ndash:\"–\",ne:\"≠\",neArr:\"⇗\",nearhk:\"⤤\",nearr:\"↗\",nearrow:\"↗\",nedot:\"≐̸\",nequiv:\"≢\",nesear:\"⤨\",nesim:\"≂̸\",nexist:\"∄\",nexists:\"∄\",nfr:\"𝔫\",ngE:\"≧̸\",nge:\"≱\",ngeq:\"≱\",ngeqq:\"≧̸\",ngeqslant:\"⩾̸\",nges:\"⩾̸\",ngsim:\"≵\",ngt:\"≯\",ngtr:\"≯\",nhArr:\"⇎\",nharr:\"↮\",nhpar:\"⫲\",ni:\"∋\",nis:\"⋼\",nisd:\"⋺\",niv:\"∋\",njcy:\"њ\",nlArr:\"⇍\",nlE:\"≦̸\",nlarr:\"↚\",nldr:\"‥\",nle:\"≰\",nleftarrow:\"↚\",nleftrightarrow:\"↮\",nleq:\"≰\",nleqq:\"≦̸\",nleqslant:\"⩽̸\",nles:\"⩽̸\",nless:\"≮\",nlsim:\"≴\",nlt:\"≮\",nltri:\"⋪\",nltrie:\"⋬\",nmid:\"∤\",nopf:\"𝕟\",no:\"¬\",not:\"¬\",notin:\"∉\",notinE:\"⋹̸\",notindot:\"⋵̸\",notinva:\"∉\",notinvb:\"⋷\",notinvc:\"⋶\",notni:\"∌\",notniva:\"∌\",notnivb:\"⋾\",notnivc:\"⋽\",npar:\"∦\",nparallel:\"∦\",nparsl:\"⫽⃥\",npart:\"∂̸\",npolint:\"⨔\",npr:\"⊀\",nprcue:\"⋠\",npre:\"⪯̸\",nprec:\"⊀\",npreceq:\"⪯̸\",nrArr:\"⇏\",nrarr:\"↛\",nrarrc:\"⤳̸\",nrarrw:\"↝̸\",nrightarrow:\"↛\",nrtri:\"⋫\",nrtrie:\"⋭\",nsc:\"⊁\",nsccue:\"⋡\",nsce:\"⪰̸\",nscr:\"𝓃\",nshortmid:\"∤\",nshortparallel:\"∦\",nsim:\"≁\",nsime:\"≄\",nsimeq:\"≄\",nsmid:\"∤\",nspar:\"∦\",nsqsube:\"⋢\",nsqsupe:\"⋣\",nsub:\"⊄\",nsubE:\"⫅̸\",nsube:\"⊈\",nsubset:\"⊂⃒\",nsubseteq:\"⊈\",nsubseteqq:\"⫅̸\",nsucc:\"⊁\",nsucceq:\"⪰̸\",nsup:\"⊅\",nsupE:\"⫆̸\",nsupe:\"⊉\",nsupset:\"⊃⃒\",nsupseteq:\"⊉\",nsupseteqq:\"⫆̸\",ntgl:\"≹\",ntild:\"ñ\",ntilde:\"ñ\",ntlg:\"≸\",ntriangleleft:\"⋪\",ntrianglelefteq:\"⋬\",ntriangleright:\"⋫\",ntrianglerighteq:\"⋭\",nu:\"ν\",num:\"#\",numero:\"№\",numsp:\" \",nvDash:\"⊭\",nvHarr:\"⤄\",nvap:\"≍⃒\",nvdash:\"⊬\",nvge:\"≥⃒\",nvgt:\">⃒\",nvinfin:\"⧞\",nvlArr:\"⤂\",nvle:\"≤⃒\",nvlt:\"<⃒\",nvltrie:\"⊴⃒\",nvrArr:\"⤃\",nvrtrie:\"⊵⃒\",nvsim:\"∼⃒\",nwArr:\"⇖\",nwarhk:\"⤣\",nwarr:\"↖\",nwarrow:\"↖\",nwnear:\"⤧\",oS:\"Ⓢ\",oacut:\"ó\",oacute:\"ó\",oast:\"⊛\",ocir:\"ô\",ocirc:\"ô\",ocy:\"о\",odash:\"⊝\",odblac:\"ő\",odiv:\"⨸\",odot:\"⊙\",odsold:\"⦼\",oelig:\"œ\",ofcir:\"⦿\",ofr:\"𝔬\",ogon:\"˛\",ograv:\"ò\",ograve:\"ò\",ogt:\"⧁\",ohbar:\"⦵\",ohm:\"Ω\",oint:\"∮\",olarr:\"↺\",olcir:\"⦾\",olcross:\"⦻\",oline:\"‾\",olt:\"⧀\",omacr:\"ō\",omega:\"ω\",omicron:\"ο\",omid:\"⦶\",ominus:\"⊖\",oopf:\"𝕠\",opar:\"⦷\",operp:\"⦹\",oplus:\"⊕\",or:\"∨\",orarr:\"↻\",ord:\"º\",order:\"ℴ\",orderof:\"ℴ\",ordf:\"ª\",ordm:\"º\",origof:\"⊶\",oror:\"⩖\",orslope:\"⩗\",orv:\"⩛\",oscr:\"ℴ\",oslas:\"ø\",oslash:\"ø\",osol:\"⊘\",otild:\"õ\",otilde:\"õ\",otimes:\"⊗\",otimesas:\"⨶\",oum:\"ö\",ouml:\"ö\",ovbar:\"⌽\",par:\"¶\",para:\"¶\",parallel:\"∥\",parsim:\"⫳\",parsl:\"⫽\",part:\"∂\",pcy:\"п\",percnt:\"%\",period:\".\",permil:\"‰\",perp:\"⊥\",pertenk:\"‱\",pfr:\"𝔭\",phi:\"φ\",phiv:\"ϕ\",phmmat:\"ℳ\",phone:\"☎\",pi:\"π\",pitchfork:\"⋔\",piv:\"ϖ\",planck:\"ℏ\",planckh:\"ℎ\",plankv:\"ℏ\",plus:\"+\",plusacir:\"⨣\",plusb:\"⊞\",pluscir:\"⨢\",plusdo:\"∔\",plusdu:\"⨥\",pluse:\"⩲\",plusm:\"±\",plusmn:\"±\",plussim:\"⨦\",plustwo:\"⨧\",pm:\"±\",pointint:\"⨕\",popf:\"𝕡\",poun:\"£\",pound:\"£\",pr:\"≺\",prE:\"⪳\",prap:\"⪷\",prcue:\"≼\",pre:\"⪯\",prec:\"≺\",precapprox:\"⪷\",preccurlyeq:\"≼\",preceq:\"⪯\",precnapprox:\"⪹\",precneqq:\"⪵\",precnsim:\"⋨\",precsim:\"≾\",prime:\"′\",primes:\"ℙ\",prnE:\"⪵\",prnap:\"⪹\",prnsim:\"⋨\",prod:\"∏\",profalar:\"⌮\",profline:\"⌒\",profsurf:\"⌓\",prop:\"∝\",propto:\"∝\",prsim:\"≾\",prurel:\"⊰\",pscr:\"𝓅\",psi:\"ψ\",puncsp:\" \",qfr:\"𝔮\",qint:\"⨌\",qopf:\"𝕢\",qprime:\"⁗\",qscr:\"𝓆\",quaternions:\"ℍ\",quatint:\"⨖\",quest:\"?\",questeq:\"≟\",quo:'\"',quot:'\"',rAarr:\"⇛\",rArr:\"⇒\",rAtail:\"⤜\",rBarr:\"⤏\",rHar:\"⥤\",race:\"∽̱\",racute:\"ŕ\",radic:\"√\",raemptyv:\"⦳\",rang:\"⟩\",rangd:\"⦒\",range:\"⦥\",rangle:\"⟩\",raqu:\"»\",raquo:\"»\",rarr:\"→\",rarrap:\"⥵\",rarrb:\"⇥\",rarrbfs:\"⤠\",rarrc:\"⤳\",rarrfs:\"⤞\",rarrhk:\"↪\",rarrlp:\"↬\",rarrpl:\"⥅\",rarrsim:\"⥴\",rarrtl:\"↣\",rarrw:\"↝\",ratail:\"⤚\",ratio:\"∶\",rationals:\"ℚ\",rbarr:\"⤍\",rbbrk:\"❳\",rbrace:\"}\",rbrack:\"]\",rbrke:\"⦌\",rbrksld:\"⦎\",rbrkslu:\"⦐\",rcaron:\"ř\",rcedil:\"ŗ\",rceil:\"⌉\",rcub:\"}\",rcy:\"р\",rdca:\"⤷\",rdldhar:\"⥩\",rdquo:\"”\",rdquor:\"”\",rdsh:\"↳\",real:\"ℜ\",realine:\"ℛ\",realpart:\"ℜ\",reals:\"ℝ\",rect:\"▭\",re:\"®\",reg:\"®\",rfisht:\"⥽\",rfloor:\"⌋\",rfr:\"𝔯\",rhard:\"⇁\",rharu:\"⇀\",rharul:\"⥬\",rho:\"ρ\",rhov:\"ϱ\",rightarrow:\"→\",rightarrowtail:\"↣\",rightharpoondown:\"⇁\",rightharpoonup:\"⇀\",rightleftarrows:\"⇄\",rightleftharpoons:\"⇌\",rightrightarrows:\"⇉\",rightsquigarrow:\"↝\",rightthreetimes:\"⋌\",ring:\"˚\",risingdotseq:\"≓\",rlarr:\"⇄\",rlhar:\"⇌\",rlm:\"‏\",rmoust:\"⎱\",rmoustache:\"⎱\",rnmid:\"⫮\",roang:\"⟭\",roarr:\"⇾\",robrk:\"⟧\",ropar:\"⦆\",ropf:\"𝕣\",roplus:\"⨮\",rotimes:\"⨵\",rpar:\")\",rpargt:\"⦔\",rppolint:\"⨒\",rrarr:\"⇉\",rsaquo:\"›\",rscr:\"𝓇\",rsh:\"↱\",rsqb:\"]\",rsquo:\"’\",rsquor:\"’\",rthree:\"⋌\",rtimes:\"⋊\",rtri:\"▹\",rtrie:\"⊵\",rtrif:\"▸\",rtriltri:\"⧎\",ruluhar:\"⥨\",rx:\"℞\",sacute:\"ś\",sbquo:\"‚\",sc:\"≻\",scE:\"⪴\",scap:\"⪸\",scaron:\"š\",sccue:\"≽\",sce:\"⪰\",scedil:\"ş\",scirc:\"ŝ\",scnE:\"⪶\",scnap:\"⪺\",scnsim:\"⋩\",scpolint:\"⨓\",scsim:\"≿\",scy:\"с\",sdot:\"⋅\",sdotb:\"⊡\",sdote:\"⩦\",seArr:\"⇘\",searhk:\"⤥\",searr:\"↘\",searrow:\"↘\",sec:\"§\",sect:\"§\",semi:\";\",seswar:\"⤩\",setminus:\"∖\",setmn:\"∖\",sext:\"✶\",sfr:\"𝔰\",sfrown:\"⌢\",sharp:\"♯\",shchcy:\"щ\",shcy:\"ш\",shortmid:\"∣\",shortparallel:\"∥\",sh:\"­\",shy:\"­\",sigma:\"σ\",sigmaf:\"ς\",sigmav:\"ς\",sim:\"∼\",simdot:\"⩪\",sime:\"≃\",simeq:\"≃\",simg:\"⪞\",simgE:\"⪠\",siml:\"⪝\",simlE:\"⪟\",simne:\"≆\",simplus:\"⨤\",simrarr:\"⥲\",slarr:\"←\",smallsetminus:\"∖\",smashp:\"⨳\",smeparsl:\"⧤\",smid:\"∣\",smile:\"⌣\",smt:\"⪪\",smte:\"⪬\",smtes:\"⪬︀\",softcy:\"ь\",sol:\"/\",solb:\"⧄\",solbar:\"⌿\",sopf:\"𝕤\",spades:\"♠\",spadesuit:\"♠\",spar:\"∥\",sqcap:\"⊓\",sqcaps:\"⊓︀\",sqcup:\"⊔\",sqcups:\"⊔︀\",sqsub:\"⊏\",sqsube:\"⊑\",sqsubset:\"⊏\",sqsubseteq:\"⊑\",sqsup:\"⊐\",sqsupe:\"⊒\",sqsupset:\"⊐\",sqsupseteq:\"⊒\",squ:\"□\",square:\"□\",squarf:\"▪\",squf:\"▪\",srarr:\"→\",sscr:\"𝓈\",ssetmn:\"∖\",ssmile:\"⌣\",sstarf:\"⋆\",star:\"☆\",starf:\"★\",straightepsilon:\"ϵ\",straightphi:\"ϕ\",strns:\"¯\",sub:\"⊂\",subE:\"⫅\",subdot:\"⪽\",sube:\"⊆\",subedot:\"⫃\",submult:\"⫁\",subnE:\"⫋\",subne:\"⊊\",subplus:\"⪿\",subrarr:\"⥹\",subset:\"⊂\",subseteq:\"⊆\",subseteqq:\"⫅\",subsetneq:\"⊊\",subsetneqq:\"⫋\",subsim:\"⫇\",subsub:\"⫕\",subsup:\"⫓\",succ:\"≻\",succapprox:\"⪸\",succcurlyeq:\"≽\",succeq:\"⪰\",succnapprox:\"⪺\",succneqq:\"⪶\",succnsim:\"⋩\",succsim:\"≿\",sum:\"∑\",sung:\"♪\",sup:\"⊃\",sup1:\"¹\",sup2:\"²\",sup3:\"³\",supE:\"⫆\",supdot:\"⪾\",supdsub:\"⫘\",supe:\"⊇\",supedot:\"⫄\",suphsol:\"⟉\",suphsub:\"⫗\",suplarr:\"⥻\",supmult:\"⫂\",supnE:\"⫌\",supne:\"⊋\",supplus:\"⫀\",supset:\"⊃\",supseteq:\"⊇\",supseteqq:\"⫆\",supsetneq:\"⊋\",supsetneqq:\"⫌\",supsim:\"⫈\",supsub:\"⫔\",supsup:\"⫖\",swArr:\"⇙\",swarhk:\"⤦\",swarr:\"↙\",swarrow:\"↙\",swnwar:\"⤪\",szli:\"ß\",szlig:\"ß\",target:\"⌖\",tau:\"τ\",tbrk:\"⎴\",tcaron:\"ť\",tcedil:\"ţ\",tcy:\"т\",tdot:\"⃛\",telrec:\"⌕\",tfr:\"𝔱\",there4:\"∴\",therefore:\"∴\",theta:\"θ\",thetasym:\"ϑ\",thetav:\"ϑ\",thickapprox:\"≈\",thicksim:\"∼\",thinsp:\" \",thkap:\"≈\",thksim:\"∼\",thor:\"þ\",thorn:\"þ\",tilde:\"˜\",time:\"×\",times:\"×\",timesb:\"⊠\",timesbar:\"⨱\",timesd:\"⨰\",tint:\"∭\",toea:\"⤨\",top:\"⊤\",topbot:\"⌶\",topcir:\"⫱\",topf:\"𝕥\",topfork:\"⫚\",tosa:\"⤩\",tprime:\"‴\",trade:\"™\",triangle:\"▵\",triangledown:\"▿\",triangleleft:\"◃\",trianglelefteq:\"⊴\",triangleq:\"≜\",triangleright:\"▹\",trianglerighteq:\"⊵\",tridot:\"◬\",trie:\"≜\",triminus:\"⨺\",triplus:\"⨹\",trisb:\"⧍\",tritime:\"⨻\",trpezium:\"⏢\",tscr:\"𝓉\",tscy:\"ц\",tshcy:\"ћ\",tstrok:\"ŧ\",twixt:\"≬\",twoheadleftarrow:\"↞\",twoheadrightarrow:\"↠\",uArr:\"⇑\",uHar:\"⥣\",uacut:\"ú\",uacute:\"ú\",uarr:\"↑\",ubrcy:\"ў\",ubreve:\"ŭ\",ucir:\"û\",ucirc:\"û\",ucy:\"у\",udarr:\"⇅\",udblac:\"ű\",udhar:\"⥮\",ufisht:\"⥾\",ufr:\"𝔲\",ugrav:\"ù\",ugrave:\"ù\",uharl:\"↿\",uharr:\"↾\",uhblk:\"▀\",ulcorn:\"⌜\",ulcorner:\"⌜\",ulcrop:\"⌏\",ultri:\"◸\",umacr:\"ū\",um:\"¨\",uml:\"¨\",uogon:\"ų\",uopf:\"𝕦\",uparrow:\"↑\",updownarrow:\"↕\",upharpoonleft:\"↿\",upharpoonright:\"↾\",uplus:\"⊎\",upsi:\"υ\",upsih:\"ϒ\",upsilon:\"υ\",upuparrows:\"⇈\",urcorn:\"⌝\",urcorner:\"⌝\",urcrop:\"⌎\",uring:\"ů\",urtri:\"◹\",uscr:\"𝓊\",utdot:\"⋰\",utilde:\"ũ\",utri:\"▵\",utrif:\"▴\",uuarr:\"⇈\",uum:\"ü\",uuml:\"ü\",uwangle:\"⦧\",vArr:\"⇕\",vBar:\"⫨\",vBarv:\"⫩\",vDash:\"⊨\",vangrt:\"⦜\",varepsilon:\"ϵ\",varkappa:\"ϰ\",varnothing:\"∅\",varphi:\"ϕ\",varpi:\"ϖ\",varpropto:\"∝\",varr:\"↕\",varrho:\"ϱ\",varsigma:\"ς\",varsubsetneq:\"⊊︀\",varsubsetneqq:\"⫋︀\",varsupsetneq:\"⊋︀\",varsupsetneqq:\"⫌︀\",vartheta:\"ϑ\",vartriangleleft:\"⊲\",vartriangleright:\"⊳\",vcy:\"в\",vdash:\"⊢\",vee:\"∨\",veebar:\"⊻\",veeeq:\"≚\",vellip:\"⋮\",verbar:\"|\",vert:\"|\",vfr:\"𝔳\",vltri:\"⊲\",vnsub:\"⊂⃒\",vnsup:\"⊃⃒\",vopf:\"𝕧\",vprop:\"∝\",vrtri:\"⊳\",vscr:\"𝓋\",vsubnE:\"⫋︀\",vsubne:\"⊊︀\",vsupnE:\"⫌︀\",vsupne:\"⊋︀\",vzigzag:\"⦚\",wcirc:\"ŵ\",wedbar:\"⩟\",wedge:\"∧\",wedgeq:\"≙\",weierp:\"℘\",wfr:\"𝔴\",wopf:\"𝕨\",wp:\"℘\",wr:\"≀\",wreath:\"≀\",wscr:\"𝓌\",xcap:\"⋂\",xcirc:\"◯\",xcup:\"⋃\",xdtri:\"▽\",xfr:\"𝔵\",xhArr:\"⟺\",xharr:\"⟷\",xi:\"ξ\",xlArr:\"⟸\",xlarr:\"⟵\",xmap:\"⟼\",xnis:\"⋻\",xodot:\"⨀\",xopf:\"𝕩\",xoplus:\"⨁\",xotime:\"⨂\",xrArr:\"⟹\",xrarr:\"⟶\",xscr:\"𝓍\",xsqcup:\"⨆\",xuplus:\"⨄\",xutri:\"△\",xvee:\"⋁\",xwedge:\"⋀\",yacut:\"ý\",yacute:\"ý\",yacy:\"я\",ycirc:\"ŷ\",ycy:\"ы\",ye:\"¥\",yen:\"¥\",yfr:\"𝔶\",yicy:\"ї\",yopf:\"𝕪\",yscr:\"𝓎\",yucy:\"ю\",yum:\"ÿ\",yuml:\"ÿ\",zacute:\"ź\",zcaron:\"ž\",zcy:\"з\",zdot:\"ż\",zeetrf:\"ℨ\",zeta:\"ζ\",zfr:\"𝔷\",zhcy:\"ж\",zigrarr:\"⇝\",zopf:\"𝕫\",zscr:\"𝓏\",zwj:\"‍\",zwnj:\"‌\"};function ld(){if(ad)return id;ad=1;var e=Qc,t=ed,n=td(),r=Gc?Uc:(Gc=1,Uc=function(e){var t=\"string\"==typeof e?e.charCodeAt(0):e;return t>=97&&t<=102||t>=65&&t<=70||t>=48&&t<=57}),o=nd(),i=function(){if(od)return rd;od=1;var e=sd;rd=function(n){return!!t.call(e,n)&&e[n]};var t={}.hasOwnProperty;return rd}();id=function(n,r){var A,T,P={};for(T in r||(r={}),c)A=r[T],P[T]=A??c[T];return(P.position.indent||P.position.start)&&(P.indent=P.position.indent||[],P.position=P.position.start),function(n,r){var c,A,T,P,W,Z,D,z,O,_,q,U,G,Y,X,K,J,Q,ee,te=r.additional,ne=r.nonTerminated,re=r.text,oe=r.reference,ie=r.warning,ae=r.textContext,se=r.referenceContext,le=r.warningContext,ce=r.position,de=r.indent||[],ue=n.length,he=0,pe=-1,fe=ce.column||1,ge=ce.line||1,me=\"\",we=[];for(\"string\"==typeof te&&(te=te.charCodeAt(0)),K=ve(),z=ie?ye:l,he--,ue++;++he<ue;)if(W===u&&(fe=de[pe]||1),(W=n.charCodeAt(he))===f){if((D=n.charCodeAt(he+1))===d||D===u||D===h||D===p||D===f||D===m||D!=D||te&&D===te){me+=s(W),fe++;continue}for(U=G=he+1,ee=G,D===v?(ee=++U,(D=n.charCodeAt(ee))===y||D===b?(Y=x,ee=++U):Y=L):Y=k,c=\"\",q=\"\",P=\"\",X=H[Y],ee--;++ee<ue&&X(D=n.charCodeAt(ee));)P+=s(D),Y===k&&a.call(e,P)&&(c=P,q=e[P]);(T=n.charCodeAt(ee)===g)&&(ee++,(A=Y===k&&i(P))&&(c=P,q=A)),Q=1+ee-G,!T&&!ne||(P?Y===k?(T&&!q?z(E,1):(c!==P&&(Q=1+(ee=U+c.length)-U,T=!1),T||(O=c?V:S,r.attribute?(D=n.charCodeAt(ee))===w?(z(O,Q),q=null):o(D)?q=null:z(O,Q):z(O,Q))),Z=q):(T||z(R,Q),j(Z=parseInt(P,M[Y]))?(z(I,Q),Z=s(C)):Z in t?(z(N,Q),Z=t[Z]):(_=\"\",$(Z)&&z(N,Q),Z>65535&&(_+=s((Z-=65536)>>>10|55296),Z=56320|1023&Z),Z=_+s(Z))):Y!==k&&z(F,Q)),Z?(be(),K=ve(),he=ee-1,fe+=ee-G+1,we.push(Z),(J=ve()).offset++,oe&&oe.call(se,Z,{start:K,end:J},n.slice(G-1,ee)),K=J):(P=n.slice(G-1,ee),me+=P,fe+=P.length,he=ee-1)}else 10===W&&(ge++,pe++,fe=0),W==W?(me+=s(W),fe++):be();return we.join(\"\");function ve(){return{line:ge,column:fe,offset:he+(ce.offset||0)}}function ye(e,t){var n=ve();n.column+=t,n.offset+=t,ie.call(le,B[e],n,e)}function be(){me&&(we.push(me),re&&re.call(ae,me,{start:K,end:ve()}),me=\"\")}}(n,P)};var a={}.hasOwnProperty,s=String.fromCharCode,l=Function.prototype,c={warning:null,reference:null,text:null,warningContext:null,referenceContext:null,textContext:null,position:{},additional:null,attribute:!1,nonTerminated:!0},d=9,u=10,h=12,p=32,f=38,g=59,m=60,w=61,v=35,y=88,b=120,C=65533,k=\"named\",x=\"hexadecimal\",L=\"decimal\",M={};M[x]=16,M[L]=10;var H={};H[k]=o,H[L]=n,H[x]=r;var V=1,R=2,S=3,F=4,E=5,N=6,I=7,B={};function j(e){return e>=55296&&e<=57343||e>1114111}function $(e){return e>=1&&e<=8||11===e||e>=13&&e<=31||e>=127&&e<=159||e>=64976&&e<=65007||!(65535&~e)||65534==(65535&e)}return B[V]=\"Named character references must be terminated by a semicolon\",B[R]=\"Numeric character references must be terminated by a semicolon\",B[S]=\"Named character references cannot be empty\",B[F]=\"Numeric character references cannot be empty\",B[E]=\"Named character references must be known\",B[N]=\"Numeric character references cannot be disallowed\",B[I]=\"Numeric character references cannot be outside the permissible Unicode range\",id}var cd,dd,ud,hd,pd,fd,gd,md,wd,vd,yd,bd={exports:{}};function Cd(){return cd||(cd=1,e=bd,t=function(e){var t=/(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i,n=0,r={},o={manual:e.Prism&&e.Prism.manual,disableWorkerMessageHandler:e.Prism&&e.Prism.disableWorkerMessageHandler,util:{encode:function e(t){return t instanceof i?new i(t.type,e(t.content),t.alias):Array.isArray(t)?t.map(e):t.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/\\u00a0/g,\" \")},type:function(e){return Object.prototype.toString.call(e).slice(8,-1)},objId:function(e){return e.__id||Object.defineProperty(e,\"__id\",{value:++n}),e.__id},clone:function e(t,n){var r,i;switch(n=n||{},o.util.type(t)){case\"Object\":if(i=o.util.objId(t),n[i])return n[i];for(var a in r={},n[i]=r,t)t.hasOwnProperty(a)&&(r[a]=e(t[a],n));return r;case\"Array\":return i=o.util.objId(t),n[i]?n[i]:(r=[],n[i]=r,t.forEach((function(t,o){r[o]=e(t,n)})),r);default:return t}},getLanguage:function(e){for(;e;){var n=t.exec(e.className);if(n)return n[1].toLowerCase();e=e.parentElement}return\"none\"},setLanguage:function(e,n){e.className=e.className.replace(RegExp(t,\"gi\"),\"\"),e.classList.add(\"language-\"+n)},currentScript:function(){if(typeof document>\"u\")return null;if(\"currentScript\"in document)return document.currentScript;try{throw new Error}catch(r){var e=(/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(r.stack)||[])[1];if(e){var t=document.getElementsByTagName(\"script\");for(var n in t)if(t[n].src==e)return t[n]}return null}},isActive:function(e,t,n){for(var r=\"no-\"+t;e;){var o=e.classList;if(o.contains(t))return!0;if(o.contains(r))return!1;e=e.parentElement}return!!n}},languages:{plain:r,plaintext:r,text:r,txt:r,extend:function(e,t){var n=o.util.clone(o.languages[e]);for(var r in t)n[r]=t[r];return n},insertBefore:function(e,t,n,r){var i=(r=r||o.languages)[e],a={};for(var s in i)if(i.hasOwnProperty(s)){if(s==t)for(var l in n)n.hasOwnProperty(l)&&(a[l]=n[l]);n.hasOwnProperty(s)||(a[s]=i[s])}var c=r[e];return r[e]=a,o.languages.DFS(o.languages,(function(t,n){n===c&&t!=e&&(this[t]=a)})),a},DFS:function e(t,n,r,i){i=i||{};var a=o.util.objId;for(var s in t)if(t.hasOwnProperty(s)){n.call(t,s,t[s],r||s);var l=t[s],c=o.util.type(l);\"Object\"!==c||i[a(l)]?\"Array\"===c&&!i[a(l)]&&(i[a(l)]=!0,e(l,n,s,i)):(i[a(l)]=!0,e(l,n,null,i))}}},plugins:{},highlightAll:function(e,t){o.highlightAllUnder(document,e,t)},highlightAllUnder:function(e,t,n){var r={callback:n,container:e,selector:'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'};o.hooks.run(\"before-highlightall\",r),r.elements=Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)),o.hooks.run(\"before-all-elements-highlight\",r);for(var i,a=0;i=r.elements[a++];)o.highlightElement(i,!0===t,r.callback)},highlightElement:function(t,n,r){var i=o.util.getLanguage(t),a=o.languages[i];o.util.setLanguage(t,i);var s=t.parentElement;s&&\"pre\"===s.nodeName.toLowerCase()&&o.util.setLanguage(s,i);var l={element:t,language:i,grammar:a,code:t.textContent};function c(e){l.highlightedCode=e,o.hooks.run(\"before-insert\",l),l.element.innerHTML=l.highlightedCode,o.hooks.run(\"after-highlight\",l),o.hooks.run(\"complete\",l),r&&r.call(l.element)}if(o.hooks.run(\"before-sanity-check\",l),(s=l.element.parentElement)&&\"pre\"===s.nodeName.toLowerCase()&&!s.hasAttribute(\"tabindex\")&&s.setAttribute(\"tabindex\",\"0\"),!l.code)return o.hooks.run(\"complete\",l),void(r&&r.call(l.element));if(o.hooks.run(\"before-highlight\",l),l.grammar)if(n&&e.Worker){var d=new Worker(o.filename);d.onmessage=function(e){c(e.data)},d.postMessage(JSON.stringify({language:l.language,code:l.code,immediateClose:!0}))}else c(o.highlight(l.code,l.grammar,l.language));else c(o.util.encode(l.code))},highlight:function(e,t,n){var r={code:e,grammar:t,language:n};if(o.hooks.run(\"before-tokenize\",r),!r.grammar)throw new Error('The language \"'+r.language+'\" has no grammar.');return r.tokens=o.tokenize(r.code,r.grammar),o.hooks.run(\"after-tokenize\",r),i.stringify(o.util.encode(r.tokens),r.language)},tokenize:function(e,t){var n=t.rest;if(n){for(var r in n)t[r]=n[r];delete t.rest}var o=new l;return c(o,o.head,e),s(e,o,t,o.head,0),function(e){for(var t=[],n=e.head.next;n!==e.tail;)t.push(n.value),n=n.next;return t}(o)},hooks:{all:{},add:function(e,t){var n=o.hooks.all;n[e]=n[e]||[],n[e].push(t)},run:function(e,t){var n=o.hooks.all[e];if(n&&n.length)for(var r,i=0;r=n[i++];)r(t)}},Token:i};function i(e,t,n,r){this.type=e,this.content=t,this.alias=n,this.length=0|(r||\"\").length}function a(e,t,n,r){e.lastIndex=t;var o=e.exec(n);if(o&&r&&o[1]){var i=o[1].length;o.index+=i,o[0]=o[0].slice(i)}return o}function s(e,t,n,r,l,u){for(var h in n)if(n.hasOwnProperty(h)&&n[h]){var p=n[h];p=Array.isArray(p)?p:[p];for(var f=0;f<p.length;++f){if(u&&u.cause==h+\",\"+f)return;var g=p[f],m=g.inside,w=!!g.lookbehind,v=!!g.greedy,y=g.alias;if(v&&!g.pattern.global){var b=g.pattern.toString().match(/[imsuy]*$/)[0];g.pattern=RegExp(g.pattern.source,b+\"g\")}for(var C=g.pattern||g,k=r.next,x=l;k!==t.tail&&!(u&&x>=u.reach);x+=k.value.length,k=k.next){var L=k.value;if(t.length>e.length)return;if(!(L instanceof i)){var M,H=1;if(v){if(!(M=a(C,x,e,w))||M.index>=e.length)break;var V=M.index,R=M.index+M[0].length,S=x;for(S+=k.value.length;V>=S;)S+=(k=k.next).value.length;if(x=S-=k.value.length,k.value instanceof i)continue;for(var F=k;F!==t.tail&&(S<R||\"string\"==typeof F.value);F=F.next)H++,S+=F.value.length;H--,L=e.slice(x,S),M.index-=x}else if(!(M=a(C,0,L,w)))continue;V=M.index;var E=M[0],N=L.slice(0,V),I=L.slice(V+E.length),B=x+L.length;u&&B>u.reach&&(u.reach=B);var j=k.prev;if(N&&(j=c(t,j,N),x+=N.length),d(t,j,H),k=c(t,j,new i(h,m?o.tokenize(E,m):E,y,E)),I&&c(t,k,I),H>1){var $={cause:h+\",\"+f,reach:B};s(e,t,n,k.prev,x,$),u&&$.reach>u.reach&&(u.reach=$.reach)}}}}}}function l(){var e={value:null,prev:null,next:null},t={value:null,prev:e,next:null};e.next=t,this.head=e,this.tail=t,this.length=0}function c(e,t,n){var r=t.next,o={value:n,prev:t,next:r};return t.next=o,r.prev=o,e.length++,o}function d(e,t,n){for(var r=t.next,o=0;o<n&&r!==e.tail;o++)r=r.next;t.next=r,r.prev=t,e.length-=o}if(e.Prism=o,i.stringify=function e(t,n){if(\"string\"==typeof t)return t;if(Array.isArray(t)){var r=\"\";return t.forEach((function(t){r+=e(t,n)})),r}var i={type:t.type,content:e(t.content,n),tag:\"span\",classes:[\"token\",t.type],attributes:{},language:n},a=t.alias;a&&(Array.isArray(a)?Array.prototype.push.apply(i.classes,a):i.classes.push(a)),o.hooks.run(\"wrap\",i);var s=\"\";for(var l in i.attributes)s+=\" \"+l+'=\"'+(i.attributes[l]||\"\").replace(/\"/g,\"&quot;\")+'\"';return\"<\"+i.tag+' class=\"'+i.classes.join(\" \")+'\"'+s+\">\"+i.content+\"</\"+i.tag+\">\"},!e.document)return e.addEventListener&&(o.disableWorkerMessageHandler||e.addEventListener(\"message\",(function(t){var n=JSON.parse(t.data),r=n.language,i=n.code,a=n.immediateClose;e.postMessage(o.highlight(i,o.languages[r],r)),a&&e.close()}),!1)),o;var u=o.util.currentScript();function h(){o.manual||o.highlightAll()}if(u&&(o.filename=u.src,u.hasAttribute(\"data-manual\")&&(o.manual=!0)),!o.manual){var p=document.readyState;\"loading\"===p||\"interactive\"===p&&u&&u.defer?document.addEventListener(\"DOMContentLoaded\",h):window.requestAnimationFrame?window.requestAnimationFrame(h):window.setTimeout(h,16)}return o}(typeof window<\"u\"?window:typeof WorkerGlobalScope<\"u\"&&self instanceof WorkerGlobalScope?self:{}),e.exports&&(e.exports=t),typeof rn<\"u\"&&(rn.Prism=t)),bd.exports;var e,t}function kd(){if(yd)return vd;yd=1;var e,t,n=\"object\"==typeof globalThis?globalThis:\"object\"==typeof self?self:\"object\"==typeof window?window:\"object\"==typeof rn?rn:{},r=(t=(e=\"Prism\"in n)?n.Prism:void 0,function(){e?n.Prism=t:delete n.Prism,e=void 0,t=void 0});n.Prism={manual:!0,disableWorkerMessageHandler:!0};var o=Oc(),i=ld(),a=Cd(),s=function(){if(ud)return dd;function e(e){e.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\\s\\S])*?-->/,greedy:!0},prolog:{pattern:/<\\?[\\s\\S]+?\\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,greedy:!0,inside:{\"internal-subset\":{pattern:/(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/\"[^\"]*\"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\\]]/,\"doctype-tag\":/^DOCTYPE/i,name:/[^\\s<>'\"]+/}},cdata:{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,greedy:!0},tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,greedy:!0,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},\"special-attr\":[],\"attr-value\":{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}},punctuation:/\\/?>/,\"attr-name\":{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:[{pattern:/&[\\da-z]{1,8};/i,alias:\"named-entity\"},/&#x?[\\da-f]{1,8};/i]},e.languages.markup.tag.inside[\"attr-value\"].inside.entity=e.languages.markup.entity,e.languages.markup.doctype.inside[\"internal-subset\"].inside=e.languages.markup,e.hooks.add(\"wrap\",(function(e){\"entity\"===e.type&&(e.attributes.title=e.content.value.replace(/&amp;/,\"&\"))})),Object.defineProperty(e.languages.markup.tag,\"addInlined\",{value:function(t,n){var r={};r[\"language-\"+n]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:!0,inside:e.languages[n]},r.cdata=/^<!\\[CDATA\\[|\\]\\]>$/i;var o={\"included-cdata\":{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:r}};o[\"language-\"+n]={pattern:/[\\s\\S]+/,inside:e.languages[n]};var i={};i[t]={pattern:RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g,(function(){return t})),\"i\"),lookbehind:!0,greedy:!0,inside:o},e.languages.insertBefore(\"markup\",\"cdata\",i)}}),Object.defineProperty(e.languages.markup.tag,\"addAttribute\",{value:function(t,n){e.languages.markup.tag.inside[\"special-attr\"].push({pattern:RegExp(/(^|[\"'\\s])/.source+\"(?:\"+t+\")\"+/\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\"i\"),lookbehind:!0,inside:{\"attr-name\":/^[^\\s=]+/,\"attr-value\":{pattern:/=[\\s\\S]+/,inside:{value:{pattern:/(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,lookbehind:!0,alias:[n,\"language-\"+n],inside:e.languages[n]},punctuation:[{pattern:/^=/,alias:\"attr-equals\"},/\"|'/]}}}})}}),e.languages.html=e.languages.markup,e.languages.mathml=e.languages.markup,e.languages.svg=e.languages.markup,e.languages.xml=e.languages.extend(\"markup\",{}),e.languages.ssml=e.languages.xml,e.languages.atom=e.languages.xml,e.languages.rss=e.languages.xml}return ud=1,dd=e,e.displayName=\"markup\",e.aliases=[\"html\",\"mathml\",\"svg\",\"xml\",\"ssml\",\"atom\",\"rss\"],dd}(),l=function(){if(pd)return hd;function e(e){!function(e){var t=/(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;e.languages.css={comment:/\\/\\*[\\s\\S]*?\\*\\//,atrule:{pattern:/@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,inside:{rule:/^@[\\w-]+/,\"selector-function-argument\":{pattern:/(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,lookbehind:!0,alias:\"selector\"},keyword:{pattern:/(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,lookbehind:!0}}},url:{pattern:RegExp(\"\\\\burl\\\\((?:\"+t.source+\"|\"+/(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source+\")\\\\)\",\"i\"),greedy:!0,inside:{function:/^url/i,punctuation:/^\\(|\\)$/,string:{pattern:RegExp(\"^\"+t.source+\"$\"),alias:\"url\"}}},selector:{pattern:RegExp(\"(^|[{}\\\\s])[^{}\\\\s](?:[^{};\\\"'\\\\s]|\\\\s+(?![\\\\s{])|\"+t.source+\")*(?=\\\\s*\\\\{)\"),lookbehind:!0},string:{pattern:t,greedy:!0},property:{pattern:/(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,lookbehind:!0},important:/!important\\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,lookbehind:!0},punctuation:/[(){};:,]/},e.languages.css.atrule.inside.rest=e.languages.css;var n=e.languages.markup;n&&(n.tag.addInlined(\"style\",\"css\"),n.tag.addAttribute(\"style\",\"css\"))}(e)}return pd=1,hd=e,e.displayName=\"css\",e.aliases=[],hd}(),c=function(){if(gd)return fd;function e(e){e.languages.clike={comment:[{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\\\:])\\/\\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:!0},\"class-name\":{pattern:/(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\\\]/}},keyword:/\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,boolean:/\\b(?:false|true)\\b/,function:/\\b\\w+(?=\\()/,number:/\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,punctuation:/[{}[\\];(),.:]/}}return gd=1,fd=e,e.displayName=\"clike\",e.aliases=[],fd}(),d=function(){if(wd)return md;function e(e){e.languages.javascript=e.languages.extend(\"clike\",{\"class-name\":[e.languages.clike[\"class-name\"],{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\\})\\s*)catch\\b/,lookbehind:!0},{pattern:/(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,lookbehind:!0}],function:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,number:{pattern:RegExp(/(^|[^\\w$])/.source+\"(?:\"+/NaN|Infinity/.source+\"|\"+/0[bB][01]+(?:_[01]+)*n?/.source+\"|\"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+\"|\"+/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source+\"|\"+/\\d+(?:_\\d+)*n/.source+\"|\"+/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source+\")\"+/(?![\\w$])/.source),lookbehind:!0},operator:/--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/}),e.languages.javascript[\"class-name\"][0].pattern=/(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/,e.languages.insertBefore(\"javascript\",\"keyword\",{regex:{pattern:/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,lookbehind:!0,greedy:!0,inside:{\"regex-source\":{pattern:/^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,lookbehind:!0,alias:\"language-regex\",inside:e.languages.regex},\"regex-delimiter\":/^\\/|\\/$/,\"regex-flags\":/^[a-z]+$/}},\"function-variable\":{pattern:/#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,alias:\"function\"},parameter:[{pattern:/(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,lookbehind:!0,inside:e.languages.javascript},{pattern:/(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,lookbehind:!0,inside:e.languages.javascript},{pattern:/(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,lookbehind:!0,inside:e.languages.javascript},{pattern:/((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,lookbehind:!0,inside:e.languages.javascript}],constant:/\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/}),e.languages.insertBefore(\"javascript\",\"string\",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:\"comment\"},\"template-string\":{pattern:/`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,greedy:!0,inside:{\"template-punctuation\":{pattern:/^`|`$/,alias:\"string\"},interpolation:{pattern:/((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,lookbehind:!0,inside:{\"interpolation-punctuation\":{pattern:/^\\$\\{|\\}$/,alias:\"punctuation\"},rest:e.languages.javascript}},string:/[\\s\\S]+/}},\"string-property\":{pattern:/((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,lookbehind:!0,greedy:!0,alias:\"property\"}}),e.languages.insertBefore(\"javascript\",\"operator\",{\"literal-property\":{pattern:/((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,lookbehind:!0,alias:\"property\"}}),e.languages.markup&&(e.languages.markup.tag.addInlined(\"script\",\"javascript\"),e.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\"javascript\")),e.languages.js=e.languages.javascript}return wd=1,md=e,e.displayName=\"javascript\",e.aliases=[\"js\"],md}();r();var u={}.hasOwnProperty;function h(){}h.prototype=a;var p=new h;function f(e){if(\"function\"!=typeof e||!e.displayName)throw new Error(\"Expected `function` for `grammar`, got `\"+e+\"`\");void 0===p.languages[e.displayName]&&e(p)}return vd=p,p.highlight=function(e,t){var n,r=a.highlight;if(\"string\"!=typeof e)throw new Error(\"Expected `string` for `value`, got `\"+e+\"`\");if(\"Object\"===p.util.type(t))n=t,t=null;else{if(\"string\"!=typeof t)throw new Error(\"Expected `string` for `name`, got `\"+t+\"`\");if(!u.call(p.languages,t))throw new Error(\"Unknown language: `\"+t+\"` is not registered\");n=p.languages[t]}return r.call(this,e,n,t)},p.register=f,p.alias=function(e,t){var n,r,o,i,a=p.languages,s=e;for(n in t&&((s={})[e]=t),s)for(r=s[n],o=(r=\"string\"==typeof r?[r]:r).length,i=-1;++i<o;)a[r[i]]=a[n]},p.registered=function(e){if(\"string\"!=typeof e)throw new Error(\"Expected `string` for `language`, got `\"+e+\"`\");return u.call(p.languages,e)},p.listLanguages=function(){var e,t=p.languages,n=[];for(e in t)u.call(t,e)&&\"object\"==typeof t[e]&&n.push(e);return n},f(s),f(l),f(c),f(d),p.util.encode=function(e){return e},p.Token.stringify=function(e,t,n){var r;return\"string\"==typeof e?{type:\"text\",value:e}:\"Array\"===p.util.type(e)?function(e,t){for(var n,r=[],o=e.length,i=-1;++i<o;)\"\"!==(n=e[i])&&null!=n&&r.push(n);for(i=-1,o=r.length;++i<o;)n=r[i],r[i]=p.Token.stringify(n,t,r);return r}(e,t):(r={type:e.type,content:p.Token.stringify(e.content,t,n),tag:\"span\",classes:[\"token\",e.type],attributes:{},language:t,parent:n},e.alias&&(r.classes=r.classes.concat(e.alias)),p.hooks.run(\"wrap\",r),o(r.tag+\".\"+r.classes.join(\".\"),function(e){var t;for(t in e)e[t]=i(e[t]);return e}(r.attributes),r.content))},vd}var xd,Ld,Md,Hd,Vd,Rd,Sd,Fd,Ed,Nd,Id,Bd,jd,$d,Ad,Td={};function Pd(){if(xd)return Td;xd=1;var e=react__WEBPACK_IMPORTED_MODULE_1__;function t(n){return function(r,o){return function(n,r,o){if(n.tagName){var i=n.properties&&Array.isArray(n.properties.className)?n.properties.className.join(\" \"):n.properties.className;return e.createElement(n.tagName,Object.assign({key:\"fract-\".concat(o,\"-\").concat(r)},n.properties,{className:i}),n.children&&n.children.map(t(o+1)))}return n.value}(r,o,n)}}return Td.depth=t,Td}function Wd(){if(Md)return Ld;function e(n){if(null==n)return t;if(\"string\"==typeof n)return function(e){return t;function t(t){return!(!t||t.type!==e)}}(n);if(\"object\"==typeof n)return\"length\"in n?function(t){for(var n=[],r=-1;++r<t.length;)n[r]=e(t[r]);return o;function o(){for(var e=-1;++e<n.length;)if(n[e].apply(this,arguments))return!0;return!1}}(n):function(e){return t;function t(t){var n;for(n in e)if(t[n]!==e[n])return!1;return!0}}(n);if(\"function\"==typeof n)return n;throw new Error(\"Expected function, string, or object as test\")}function t(){return!0}return Md=1,Ld=e}function Zd(){if(Ed)return Fd;Ed=1,Fd=i;var e=Wd(),t=Sd?Rd:(Sd=1,Rd=function(e){return\"\u001b[33m\"+e+\"\u001b[39m\"}),n=!0,r=\"skip\",o=!1;function i(i,a,s,l){var c,d;\"function\"==typeof a&&\"function\"!=typeof s&&(l=s,s=a,a=null),d=e(a),c=l?-1:1,function e(i,u,h){var p,f=\"object\"==typeof i&&null!==i?i:{};return\"string\"==typeof f.type&&(p=\"string\"==typeof f.tagName?f.tagName:\"string\"==typeof f.name?f.name:void 0,g.displayName=\"node (\"+t(f.type+(p?\"<\"+p+\">\":\"\"))+\")\"),g;function g(){var t,p,f=h.concat(i),g=[];if((!a||d(i,u,h[h.length-1]||null))&&(g=function(e){return null!==e&&\"object\"==typeof e&&\"length\"in e?e:\"number\"==typeof e?[n,e]:[e]}(s(i,h)),g[0]===o))return g;if(i.children&&g[0]!==r)for(p=(l?i.children.length:-1)+c;p>-1&&p<i.children.length;){if((t=e(i.children[p],p,f)())[0]===o)return t;p=\"number\"==typeof t[1]?t[1]:p+c}return g}}(i,null,[])()}return i.CONTINUE=n,i.SKIP=r,i.EXIT=o,Fd}function Dd(){if(jd)return Bd;jd=1;var e=function(){if(Vd)return Hd;Vd=1;var e=Wd();Hd=function(n,r,o){var i=e(o||r),a=null==r.cascade||r.cascade;return function e(n,r,o){var s,l,c,d,u;if(!i(n,r,o))return null;if(n.children){for(s=[],l=-1;++l<n.children.length;)(c=e(n.children[l],l,n))&&s.push(c);if(a&&n.children.length&&!s.length)return null}for(u in d={},n)t.call(n,u)&&(d[u]=\"children\"===u?s:n[u]);return d}(n,null,null)};var t={}.hasOwnProperty;return Hd}(),t=Zd(),n=function(){if(Id)return Nd;function e(){this.map=new WeakMap}function t(){this.keys=[],this.values=[]}return Id=1,Nd=\"function\"==typeof WeakMap?e:t,e.prototype.has=function(e){return this.map.has(e)},e.prototype.set=function(e,t){return this.map.set(e,t),this},e.prototype.get=function(e){return this.map.get(e)},e.prototype.clear=function(){},t.prototype.has=function(e){return-1!==this.keys.indexOf(e)},t.prototype.set=function(e,t){var n=this.keys.indexOf(e);return-1===n?(this.keys.push(e),this.values.push(t)):this.values[n]=t,this},t.prototype.get=function(e){var t=this.keys.indexOf(e);return-1===t?void 0:this.values[t]},t.prototype.clear=function(){this.keys=[],this.values=[]},Nd}();function r(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{lineNumber:1};return e.reduce((function(e,n){var o=t.lineNumber;if(\"text\"===n.type){if(-1===n.value.indexOf(\"\\n\"))return n.lineStart=o,n.lineEnd=o,e.nodes.push(n),e;for(var i=n.value.split(\"\\n\"),a=0;a<i.length;a++){var s=0===a?t.lineNumber:++t.lineNumber;e.nodes.push({type:\"text\",value:a===i.length-1?i[a]:\"\".concat(i[a],\"\\n\"),lineStart:s,lineEnd:s})}return e.lineNumber=t.lineNumber,e}if(n.children){var l=r(n.children,t),c=l.nodes[0],d=l.nodes[l.nodes.length-1];return n.lineStart=c?c.lineStart:o,n.lineEnd=d?d.lineEnd:o,n.children=l.nodes,e.lineNumber=l.lineNumber,e.nodes.push(n),e}return e.nodes.push(n),e}),{nodes:[],lineNumber:t.lineNumber})}function o(e,t,n){var r=t.className||\"refractor-marker\";return{type:\"element\",tagName:t.component||\"div\",properties:t.component?Object.assign({},n,{className:r}):{className:r},children:e,lineStart:t.line,lineEnd:e[e.length-1].lineEnd,isMarker:!0}}function i(r,i,a){if(0===i.length||0===r.length)return r;for(var s=i.reduce((function(r,o){return function(r,o){var i={type:\"root\",children:o},a=new n,s=new n,l=new n,c=[];function d(e,t,n){c.push(t),n.forEach((function(t){e.has(t)||(e.set(t,Object.assign({},t,{children:[]})),t!==i&&c.push(t))}));for(var r=n.length;r--;){var o=e.get(n[r]),a=n[r+1],s=e.get(a)||t;-1===o.children.indexOf(s)&&o.children.push(s)}}t(i,(function(e,t){if(!e.children){if(e.lineStart<r)return void d(a,e,t);if(e.lineStart===r)return void d(s,e,t);e.lineEnd>r&&c.some((function(e){return-1!==t.indexOf(e)}))&&d(l,e,t)}}));var u=e(i,(function(e){return-1===c.indexOf(e)})),h=function(e){var n=e.get(i);return n?(t(n,(function(e,t){if(e.children)return e.lineStart=0,void(e.lineEnd=0);t.forEach((function(t){t.lineStart=Math.max(t.lineStart,e.lineStart),t.lineEnd=Math.max(t.lineEnd,e.lineEnd)}))})),n.children):[]},p=[].concat(h(a),h(s),h(l),u?u.children:[]);return a.clear(),s.clear(),l.clear(),p}(o.line,r)}),r),l=[],c=0,d=0;d<i.length;d++){for(var u=i[d],h=s[c];h&&h.lineEnd<u.line;h=s[++c])l.push(h);for(var p=[],f=s[c];f&&f.lineEnd===u.line;f=s[++c])p.push(f);p.length>0&&l.push(o(p,u,a))}for(;c<s.length;)l.push(s[c++]);return l}return Bd=function(e,t){var n=t.markers.map((function(e){return e.line?e:{line:e}})).sort((function(e,t){return e.line-t.line}));return i(r(e).nodes,n,t)}}var zd=on(function(){if(Ad)return $d;Ad=1;var e=react__WEBPACK_IMPORTED_MODULE_1__,t=kd(),n=Pd(),r=Dd(),o=e.createElement;function i(e){var i=\"language-\".concat(e.language),a={className:i},s={className:[e.className||\"refractor\",i].filter(Boolean).join(\" \")};e.inline&&(a.style={display:\"inline\"},a.className=e.className||\"refractor\");var l=t.highlight(e.value,e.language);e.markers&&e.markers.length>0&&(l=r(l,{markers:e.markers}));var c=0===l.length?e.value:l.map(n.depth(0)),d=o(\"code\",a,c);return e.inline?d:o(\"pre\",s,d)}return i.registerLanguage=function(e){return t.register(e)},i.hasLanguage=function(e){return t.registered(e)},$d=i}());const Od=[\"top\",\"right\",\"bottom\",\"left\"],_d=Math.min,qd=Math.max,Ud=Math.round,Gd=Math.floor,Yd=e=>({x:e,y:e}),Xd={left:\"right\",right:\"left\",bottom:\"top\",top:\"bottom\"},Kd={start:\"end\",end:\"start\"};function Jd(e,t,n){return qd(e,_d(t,n))}function Qd(e,t){return\"function\"==typeof e?e(t):e}function eu(e){return e.split(\"-\")[0]}function tu(e){return e.split(\"-\")[1]}function nu(e){return\"x\"===e?\"y\":\"x\"}function ru(e){return\"y\"===e?\"height\":\"width\"}function ou(e){return[\"top\",\"bottom\"].includes(eu(e))?\"y\":\"x\"}function iu(e){return nu(ou(e))}function au(e){return e.replace(/start|end/g,(e=>Kd[e]))}function su(e){return e.replace(/left|right|bottom|top/g,(e=>Xd[e]))}function lu(e){return\"number\"!=typeof e?function(e){return{top:0,right:0,bottom:0,left:0,...e}}(e):{top:e,right:e,bottom:e,left:e}}function cu(e){const{x:t,y:n,width:r,height:o}=e;return{width:r,height:o,top:n,left:t,right:t+r,bottom:n+o,x:t,y:n}}function du(e,t,n){let{reference:r,floating:o}=e;const i=ou(t),a=iu(t),s=ru(a),l=eu(t),c=\"y\"===i,d=r.x+r.width/2-o.width/2,u=r.y+r.height/2-o.height/2,h=r[s]/2-o[s]/2;let p;switch(l){case\"top\":p={x:d,y:r.y-o.height};break;case\"bottom\":p={x:d,y:r.y+r.height};break;case\"right\":p={x:r.x+r.width,y:u};break;case\"left\":p={x:r.x-o.width,y:u};break;default:p={x:r.x,y:r.y}}switch(tu(t)){case\"start\":p[a]-=h*(n&&c?-1:1);break;case\"end\":p[a]+=h*(n&&c?-1:1)}return p}async function uu(e,t){var n;void 0===t&&(t={});const{x:r,y:o,platform:i,rects:a,elements:s,strategy:l}=e,{boundary:c=\"clippingAncestors\",rootBoundary:d=\"viewport\",elementContext:u=\"floating\",altBoundary:h=!1,padding:p=0}=Qd(t,e),f=lu(p),g=s[h?\"floating\"===u?\"reference\":\"floating\":u],m=cu(await i.getClippingRect({element:null==(n=await(null==i.isElement?void 0:i.isElement(g)))||n?g:g.contextElement||await(null==i.getDocumentElement?void 0:i.getDocumentElement(s.floating)),boundary:c,rootBoundary:d,strategy:l})),w=\"floating\"===u?{x:r,y:o,width:a.floating.width,height:a.floating.height}:a.reference,v=await(null==i.getOffsetParent?void 0:i.getOffsetParent(s.floating)),y=await(null==i.isElement?void 0:i.isElement(v))&&await(null==i.getScale?void 0:i.getScale(v))||{x:1,y:1},b=cu(i.convertOffsetParentRelativeRectToViewportRelativeRect?await i.convertOffsetParentRelativeRectToViewportRelativeRect({elements:s,rect:w,offsetParent:v,strategy:l}):w);return{top:(m.top-b.top+f.top)/y.y,bottom:(b.bottom-m.bottom+f.bottom)/y.y,left:(m.left-b.left+f.left)/y.x,right:(b.right-m.right+f.right)/y.x}}function hu(e,t){return{top:e.top-t.height,right:e.right-t.width,bottom:e.bottom-t.height,left:e.left-t.width}}function pu(e){return Od.some((t=>e[t]>=0))}function fu(e){return wu(e)?(e.nodeName||\"\").toLowerCase():\"#document\"}function gu(e){var t;return(null==e||null==(t=e.ownerDocument)?void 0:t.defaultView)||window}function mu(e){var t;return null==(t=(wu(e)?e.ownerDocument:e.document)||window.document)?void 0:t.documentElement}function wu(e){return e instanceof Node||e instanceof gu(e).Node}function vu(e){return e instanceof Element||e instanceof gu(e).Element}function yu(e){return e instanceof HTMLElement||e instanceof gu(e).HTMLElement}function bu(e){return!(typeof ShadowRoot>\"u\")&&(e instanceof ShadowRoot||e instanceof gu(e).ShadowRoot)}function Cu(e){const{overflow:t,overflowX:n,overflowY:r,display:o}=Vu(e);return/auto|scroll|overlay|hidden|clip/.test(t+r+n)&&![\"inline\",\"contents\"].includes(o)}function ku(e){return[\"table\",\"td\",\"th\"].includes(fu(e))}function xu(e){return[\":popover-open\",\":modal\"].some((t=>{try{return e.matches(t)}catch{return!1}}))}function Lu(e){const t=Mu(),n=vu(e)?Vu(e):e;return\"none\"!==n.transform||\"none\"!==n.perspective||!!n.containerType&&\"normal\"!==n.containerType||!t&&!!n.backdropFilter&&\"none\"!==n.backdropFilter||!t&&!!n.filter&&\"none\"!==n.filter||[\"transform\",\"perspective\",\"filter\"].some((e=>(n.willChange||\"\").includes(e)))||[\"paint\",\"layout\",\"strict\",\"content\"].some((e=>(n.contain||\"\").includes(e)))}function Mu(){return!(typeof CSS>\"u\"||!CSS.supports)&&CSS.supports(\"-webkit-backdrop-filter\",\"none\")}function Hu(e){return[\"html\",\"body\",\"#document\"].includes(fu(e))}function Vu(e){return gu(e).getComputedStyle(e)}function Ru(e){return vu(e)?{scrollLeft:e.scrollLeft,scrollTop:e.scrollTop}:{scrollLeft:e.scrollX,scrollTop:e.scrollY}}function Su(e){if(\"html\"===fu(e))return e;const t=e.assignedSlot||e.parentNode||bu(e)&&e.host||mu(e);return bu(t)?t.host:t}function Fu(e){const t=Su(e);return Hu(t)?e.ownerDocument?e.ownerDocument.body:e.body:yu(t)&&Cu(t)?t:Fu(t)}function Eu(e,t,n){var r;void 0===t&&(t=[]),void 0===n&&(n=!0);const o=Fu(e),i=o===(null==(r=e.ownerDocument)?void 0:r.body),a=gu(o);return i?t.concat(a,a.visualViewport||[],Cu(o)?o:[],a.frameElement&&n?Eu(a.frameElement):[]):t.concat(o,Eu(o,[],n))}function Nu(e){const t=Vu(e);let n=parseFloat(t.width)||0,r=parseFloat(t.height)||0;const o=yu(e),i=o?e.offsetWidth:n,a=o?e.offsetHeight:r,s=Ud(n)!==i||Ud(r)!==a;return s&&(n=i,r=a),{width:n,height:r,$:s}}function Iu(e){return vu(e)?e:e.contextElement}function Bu(e){const t=Iu(e);if(!yu(t))return Yd(1);const n=t.getBoundingClientRect(),{width:r,height:o,$:i}=Nu(t);let a=(i?Ud(n.width):n.width)/r,s=(i?Ud(n.height):n.height)/o;return(!a||!Number.isFinite(a))&&(a=1),(!s||!Number.isFinite(s))&&(s=1),{x:a,y:s}}const ju=Yd(0);function $u(e){const t=gu(e);return Mu()&&t.visualViewport?{x:t.visualViewport.offsetLeft,y:t.visualViewport.offsetTop}:ju}function Au(e,t,n,r){void 0===t&&(t=!1),void 0===n&&(n=!1);const o=e.getBoundingClientRect(),i=Iu(e);let a=Yd(1);t&&(r?vu(r)&&(a=Bu(r)):a=Bu(e));const s=function(e,t,n){return void 0===t&&(t=!1),!(!n||t&&n!==gu(e))&&t}(i,n,r)?$u(i):Yd(0);let l=(o.left+s.x)/a.x,c=(o.top+s.y)/a.y,d=o.width/a.x,u=o.height/a.y;if(i){const e=gu(i),t=r&&vu(r)?gu(r):r;let n=e,o=n.frameElement;for(;o&&r&&t!==n;){const e=Bu(o),t=o.getBoundingClientRect(),r=Vu(o),i=t.left+(o.clientLeft+parseFloat(r.paddingLeft))*e.x,a=t.top+(o.clientTop+parseFloat(r.paddingTop))*e.y;l*=e.x,c*=e.y,d*=e.x,u*=e.y,l+=i,c+=a,n=gu(o),o=n.frameElement}}return cu({width:d,height:u,x:l,y:c})}function Tu(e){return Au(mu(e)).left+Ru(e).scrollLeft}function Pu(e,t,n){let r;if(\"viewport\"===t)r=function(e,t){const n=gu(e),r=mu(e),o=n.visualViewport;let i=r.clientWidth,a=r.clientHeight,s=0,l=0;if(o){i=o.width,a=o.height;const e=Mu();(!e||e&&\"fixed\"===t)&&(s=o.offsetLeft,l=o.offsetTop)}return{width:i,height:a,x:s,y:l}}(e,n);else if(\"document\"===t)r=function(e){const t=mu(e),n=Ru(e),r=e.ownerDocument.body,o=qd(t.scrollWidth,t.clientWidth,r.scrollWidth,r.clientWidth),i=qd(t.scrollHeight,t.clientHeight,r.scrollHeight,r.clientHeight);let a=-n.scrollLeft+Tu(e);const s=-n.scrollTop;return\"rtl\"===Vu(r).direction&&(a+=qd(t.clientWidth,r.clientWidth)-o),{width:o,height:i,x:a,y:s}}(mu(e));else if(vu(t))r=function(e,t){const n=Au(e,!0,\"fixed\"===t),r=n.top+e.clientTop,o=n.left+e.clientLeft,i=yu(e)?Bu(e):Yd(1);return{width:e.clientWidth*i.x,height:e.clientHeight*i.y,x:o*i.x,y:r*i.y}}(t,n);else{const n=$u(e);r={...t,x:t.x-n.x,y:t.y-n.y}}return cu(r)}function Wu(e,t){const n=Su(e);return!(n===t||!vu(n)||Hu(n))&&(\"fixed\"===Vu(n).position||Wu(n,t))}function Zu(e,t){const n=t.get(e);if(n)return n;let r=Eu(e,[],!1).filter((e=>vu(e)&&\"body\"!==fu(e))),o=null;const i=\"fixed\"===Vu(e).position;let a=i?Su(e):e;for(;vu(a)&&!Hu(a);){const t=Vu(a),n=Lu(a);!n&&\"fixed\"===t.position&&(o=null),(i?!n&&!o:!n&&\"static\"===t.position&&o&&[\"absolute\",\"fixed\"].includes(o.position)||Cu(a)&&!n&&Wu(e,a))?r=r.filter((e=>e!==a)):o=t,a=Su(a)}return t.set(e,r),r}function Du(e,t,n){const r=yu(t),o=mu(t),i=\"fixed\"===n,a=Au(e,!0,i,t);let s={scrollLeft:0,scrollTop:0};const l=Yd(0);if(r||!r&&!i)if((\"body\"!==fu(t)||Cu(o))&&(s=Ru(t)),r){const e=Au(t,!0,i,t);l.x=e.x+t.clientLeft,l.y=e.y+t.clientTop}else o&&(l.x=Tu(o));return{x:a.left+s.scrollLeft-l.x,y:a.top+s.scrollTop-l.y,width:a.width,height:a.height}}function zu(e){return\"static\"===Vu(e).position}function Ou(e,t){return yu(e)&&\"fixed\"!==Vu(e).position?t?t(e):e.offsetParent:null}function _u(e,t){const n=gu(e);if(xu(e))return n;if(!yu(e)){let t=Su(e);for(;t&&!Hu(t);){if(vu(t)&&!zu(t))return t;t=Su(t)}return n}let r=Ou(e,t);for(;r&&ku(r)&&zu(r);)r=Ou(r,t);return r&&Hu(r)&&zu(r)&&!Lu(r)?n:r||function(e){let t=Su(e);for(;yu(t)&&!Hu(t);){if(Lu(t))return t;if(xu(t))return null;t=Su(t)}return null}(e)||n}const qu={convertOffsetParentRelativeRectToViewportRelativeRect:function(e){let{elements:t,rect:n,offsetParent:r,strategy:o}=e;const i=\"fixed\"===o,a=mu(r),s=!!t&&xu(t.floating);if(r===a||s&&i)return n;let l={scrollLeft:0,scrollTop:0},c=Yd(1);const d=Yd(0),u=yu(r);if((u||!u&&!i)&&((\"body\"!==fu(r)||Cu(a))&&(l=Ru(r)),yu(r))){const e=Au(r);c=Bu(r),d.x=e.x+r.clientLeft,d.y=e.y+r.clientTop}return{width:n.width*c.x,height:n.height*c.y,x:n.x*c.x-l.scrollLeft*c.x+d.x,y:n.y*c.y-l.scrollTop*c.y+d.y}},getDocumentElement:mu,getClippingRect:function(e){let{element:t,boundary:n,rootBoundary:r,strategy:o}=e;const i=[...\"clippingAncestors\"===n?xu(t)?[]:Zu(t,this._c):[].concat(n),r],a=i[0],s=i.reduce(((e,n)=>{const r=Pu(t,n,o);return e.top=qd(r.top,e.top),e.right=_d(r.right,e.right),e.bottom=_d(r.bottom,e.bottom),e.left=qd(r.left,e.left),e}),Pu(t,a,o));return{width:s.right-s.left,height:s.bottom-s.top,x:s.left,y:s.top}},getOffsetParent:_u,getElementRects:async function(e){const t=this.getOffsetParent||_u,n=this.getDimensions,r=await n(e.floating);return{reference:Du(e.reference,await t(e.floating),e.strategy),floating:{x:0,y:0,width:r.width,height:r.height}}},getClientRects:function(e){return Array.from(e.getClientRects())},getDimensions:function(e){const{width:t,height:n}=Nu(e);return{width:t,height:n}},getScale:Bu,isElement:vu,isRTL:function(e){return\"rtl\"===Vu(e).direction}};function Uu(e,t,n,r){void 0===r&&(r={});const{ancestorScroll:o=!0,ancestorResize:i=!0,elementResize:a=\"function\"==typeof ResizeObserver,layoutShift:s=\"function\"==typeof IntersectionObserver,animationFrame:l=!1}=r,c=Iu(e),d=o||i?[...c?Eu(c):[],...Eu(t)]:[];d.forEach((e=>{o&&e.addEventListener(\"scroll\",n,{passive:!0}),i&&e.addEventListener(\"resize\",n)}));const u=c&&s?function(e,t){let n,r=null;const o=mu(e);function i(){var e;clearTimeout(n),null==(e=r)||e.disconnect(),r=null}return function a(s,l){void 0===s&&(s=!1),void 0===l&&(l=1),i();const{left:c,top:d,width:u,height:h}=e.getBoundingClientRect();if(s||t(),!u||!h)return;const p={rootMargin:-Gd(d)+\"px \"+-Gd(o.clientWidth-(c+u))+\"px \"+-Gd(o.clientHeight-(d+h))+\"px \"+-Gd(c)+\"px\",threshold:qd(0,_d(1,l))||1};let f=!0;function g(e){const t=e[0].intersectionRatio;if(t!==l){if(!f)return a();t?a(!1,t):n=setTimeout((()=>{a(!1,1e-7)}),1e3)}f=!1}try{r=new IntersectionObserver(g,{...p,root:o.ownerDocument})}catch{r=new IntersectionObserver(g,p)}r.observe(e)}(!0),i}(c,n):null;let h=-1,p=null;a&&(p=new ResizeObserver((e=>{let[r]=e;r&&r.target===c&&p&&(p.unobserve(t),cancelAnimationFrame(h),h=requestAnimationFrame((()=>{var e;null==(e=p)||e.observe(t)}))),n()})),c&&!l&&p.observe(c),p.observe(t));let f,g=l?Au(e):null;return l&&function t(){const r=Au(e);g&&(r.x!==g.x||r.y!==g.y||r.width!==g.width||r.height!==g.height)&&n(),g=r,f=requestAnimationFrame(t)}(),n(),()=>{var e;d.forEach((e=>{o&&e.removeEventListener(\"scroll\",n),i&&e.removeEventListener(\"resize\",n)})),u?.(),null==(e=p)||e.disconnect(),p=null,l&&cancelAnimationFrame(f)}}const Gu=uu,Yu=function(e){return void 0===e&&(e=0),{name:\"offset\",options:e,async fn(t){var n,r;const{x:o,y:i,placement:a,middlewareData:s}=t,l=await async function(e,t){const{placement:n,platform:r,elements:o}=e,i=await(null==r.isRTL?void 0:r.isRTL(o.floating)),a=eu(n),s=tu(n),l=\"y\"===ou(n),c=[\"left\",\"top\"].includes(a)?-1:1,d=i&&l?-1:1,u=Qd(t,e);let{mainAxis:h,crossAxis:p,alignmentAxis:f}=\"number\"==typeof u?{mainAxis:u,crossAxis:0,alignmentAxis:null}:{mainAxis:0,crossAxis:0,alignmentAxis:null,...u};return s&&\"number\"==typeof f&&(p=\"end\"===s?-1*f:f),l?{x:p*d,y:h*c}:{x:h*c,y:p*d}}(t,e);return a===(null==(n=s.offset)?void 0:n.placement)&&null!=(r=s.arrow)&&r.alignmentOffset?{}:{x:o+l.x,y:i+l.y,data:{...l,placement:a}}}}},Xu=function(e){return void 0===e&&(e={}),{name:\"shift\",options:e,async fn(t){const{x:n,y:r,placement:o}=t,{mainAxis:i=!0,crossAxis:a=!1,limiter:s={fn:e=>{let{x:t,y:n}=e;return{x:t,y:n}}},...l}=Qd(e,t),c={x:n,y:r},d=await uu(t,l),u=ou(eu(o)),h=nu(u);let p=c[h],f=c[u];if(i){const e=\"y\"===h?\"bottom\":\"right\";p=Jd(p+d[\"y\"===h?\"top\":\"left\"],p,p-d[e])}if(a){const e=\"y\"===u?\"bottom\":\"right\";f=Jd(f+d[\"y\"===u?\"top\":\"left\"],f,f-d[e])}const g=s.fn({...t,[h]:p,[u]:f});return{...g,data:{x:g.x-n,y:g.y-r}}}}},Ku=function(e){return void 0===e&&(e={}),{name:\"flip\",options:e,async fn(t){var n,r;const{placement:o,middlewareData:i,rects:a,initialPlacement:s,platform:l,elements:c}=t,{mainAxis:d=!0,crossAxis:u=!0,fallbackPlacements:h,fallbackStrategy:p=\"bestFit\",fallbackAxisSideDirection:f=\"none\",flipAlignment:g=!0,...m}=Qd(e,t);if(null!=(n=i.arrow)&&n.alignmentOffset)return{};const w=eu(o),v=ou(s),y=eu(s)===s,b=await(null==l.isRTL?void 0:l.isRTL(c.floating)),C=h||(y||!g?[su(s)]:function(e){const t=su(e);return[au(e),t,au(t)]}(s)),k=\"none\"!==f;!h&&k&&C.push(...function(e,t,n,r){const o=tu(e);let i=function(e,t,n){const r=[\"left\",\"right\"],o=[\"right\",\"left\"],i=[\"top\",\"bottom\"],a=[\"bottom\",\"top\"];switch(e){case\"top\":case\"bottom\":return n?t?o:r:t?r:o;case\"left\":case\"right\":return t?i:a;default:return[]}}(eu(e),\"start\"===n,r);return o&&(i=i.map((e=>e+\"-\"+o)),t&&(i=i.concat(i.map(au)))),i}(s,g,f,b));const x=[s,...C],L=await uu(t,m),M=[];let H=(null==(r=i.flip)?void 0:r.overflows)||[];if(d&&M.push(L[w]),u){const e=function(e,t,n){void 0===n&&(n=!1);const r=tu(e),o=iu(e),i=ru(o);let a=\"x\"===o?r===(n?\"end\":\"start\")?\"right\":\"left\":\"start\"===r?\"bottom\":\"top\";return t.reference[i]>t.floating[i]&&(a=su(a)),[a,su(a)]}(o,a,b);M.push(L[e[0]],L[e[1]])}if(H=[...H,{placement:o,overflows:M}],!M.every((e=>e<=0))){var V,R;const e=((null==(V=i.flip)?void 0:V.index)||0)+1,t=x[e];if(t)return{data:{index:e,overflows:H},reset:{placement:t}};let n=null==(R=H.filter((e=>e.overflows[0]<=0)).sort(((e,t)=>e.overflows[1]-t.overflows[1]))[0])?void 0:R.placement;if(!n)switch(p){case\"bestFit\":{var S;const e=null==(S=H.filter((e=>{if(k){const t=ou(e.placement);return t===v||\"y\"===t}return!0})).map((e=>[e.placement,e.overflows.filter((e=>e>0)).reduce(((e,t)=>e+t),0)])).sort(((e,t)=>e[1]-t[1]))[0])?void 0:S[0];e&&(n=e);break}case\"initialPlacement\":n=s}if(o!==n)return{reset:{placement:n}}}return{}}}},Ju=function(e){return void 0===e&&(e={}),{name:\"hide\",options:e,async fn(t){const{rects:n}=t,{strategy:r=\"referenceHidden\",...o}=Qd(e,t);switch(r){case\"referenceHidden\":{const e=hu(await uu(t,{...o,elementContext:\"reference\"}),n.reference);return{data:{referenceHiddenOffsets:e,referenceHidden:pu(e)}}}case\"escaped\":{const e=hu(await uu(t,{...o,altBoundary:!0}),n.floating);return{data:{escapedOffsets:e,escaped:pu(e)}}}default:return{}}}}},Qu=e=>({name:\"arrow\",options:e,async fn(t){const{x:n,y:r,placement:o,rects:i,platform:a,elements:s,middlewareData:l}=t,{element:c,padding:d=0}=Qd(e,t)||{};if(null==c)return{};const u=lu(d),h={x:n,y:r},p=iu(o),f=ru(p),g=await a.getDimensions(c),m=\"y\"===p,w=m?\"top\":\"left\",v=m?\"bottom\":\"right\",y=m?\"clientHeight\":\"clientWidth\",b=i.reference[f]+i.reference[p]-h[p]-i.floating[f],C=h[p]-i.reference[p],k=await(null==a.getOffsetParent?void 0:a.getOffsetParent(c));let x=k?k[y]:0;(!x||!await(null==a.isElement?void 0:a.isElement(k)))&&(x=s.floating[y]||i.floating[f]);const L=b/2-C/2,M=x/2-g[f]/2-1,H=_d(u[w],M),V=_d(u[v],M),R=H,S=x-g[f]-V,F=x/2-g[f]/2+L,E=Jd(R,F,S),N=!l.arrow&&null!=tu(o)&&F!==E&&i.reference[f]/2-(F<R?H:V)-g[f]/2<0,I=N?F<R?F-R:F-S:0;return{[p]:h[p]+I,data:{[p]:E,centerOffset:F-E-I,...N&&{alignmentOffset:I}},reset:N}}}),eh=(e,t,n)=>{const r=new Map,o={platform:qu,...n},i={...o.platform,_c:r};return(async(e,t,n)=>{const{placement:r=\"bottom\",strategy:o=\"absolute\",middleware:i=[],platform:a}=n,s=i.filter(Boolean),l=await(null==a.isRTL?void 0:a.isRTL(t));let c=await a.getElementRects({reference:e,floating:t,strategy:o}),{x:d,y:u}=du(c,r,l),h=r,p={},f=0;for(let n=0;n<s.length;n++){const{name:i,fn:g}=s[n],{x:m,y:w,data:v,reset:y}=await g({x:d,y:u,initialPlacement:r,placement:h,strategy:o,middlewareData:p,rects:c,platform:a,elements:{reference:e,floating:t}});d=m??d,u=w??u,p={...p,[i]:{...p[i],...v}},y&&f<=50&&(f++,\"object\"==typeof y&&(y.placement&&(h=y.placement),y.rects&&(c=!0===y.rects?await a.getElementRects({reference:e,floating:t,strategy:o}):y.rects),({x:d,y:u}=du(c,h,l))),n=-1)}return{x:d,y:u,placement:h,strategy:o,middlewareData:p}})(e,t,{...o,platform:i})};var th=typeof document<\"u\"?react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_1__.useEffect;function nh(e,t){if(e===t)return!0;if(typeof e!=typeof t)return!1;if(\"function\"==typeof e&&e.toString()===t.toString())return!0;let n,r,o;if(e&&t&&\"object\"==typeof e){if(Array.isArray(e)){if(n=e.length,n!==t.length)return!1;for(r=n;0!=r--;)if(!nh(e[r],t[r]))return!1;return!0}if(o=Object.keys(e),n=o.length,n!==Object.keys(t).length)return!1;for(r=n;0!=r--;)if(!{}.hasOwnProperty.call(t,o[r]))return!1;for(r=n;0!=r--;){const n=o[r];if(!(\"_owner\"===n&&e.$$typeof||nh(e[n],t[n])))return!1}return!0}return e!=e&&t!=t}function rh(e){return typeof window>\"u\"?1:(e.ownerDocument.defaultView||window).devicePixelRatio||1}function oh(e,t){const n=rh(e);return Math.round(t*n)/n}function ih(e){const t=react__WEBPACK_IMPORTED_MODULE_1__.useRef(e);return th((()=>{t.current=e})),t}function ah(e){void 0===e&&(e={});const{placement:t=\"bottom\",strategy:n=\"absolute\",middleware:r=[],platform:o,elements:{reference:i,floating:a}={},transform:s=!0,whileElementsMounted:l,open:c}=e,[d,h]=react__WEBPACK_IMPORTED_MODULE_1__.useState({x:0,y:0,strategy:n,placement:t,middlewareData:{},isPositioned:!1}),[p,f]=react__WEBPACK_IMPORTED_MODULE_1__.useState(r);nh(p,r)||f(r);const[g,m]=react__WEBPACK_IMPORTED_MODULE_1__.useState(null),[w,v]=react__WEBPACK_IMPORTED_MODULE_1__.useState(null),y=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((e=>{e!==x.current&&(x.current=e,m(e))}),[]),b=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((e=>{e!==L.current&&(L.current=e,v(e))}),[]),C=i||g,k=a||w,x=react__WEBPACK_IMPORTED_MODULE_1__.useRef(null),L=react__WEBPACK_IMPORTED_MODULE_1__.useRef(null),M=react__WEBPACK_IMPORTED_MODULE_1__.useRef(d),H=null!=l,V=ih(l),R=ih(o),S=react__WEBPACK_IMPORTED_MODULE_1__.useCallback((()=>{if(!x.current||!L.current)return;const e={placement:t,strategy:n,middleware:p};R.current&&(e.platform=R.current),eh(x.current,L.current,e).then((e=>{const t={...e,isPositioned:!0};F.current&&!nh(M.current,t)&&(M.current=t,react_dom__WEBPACK_IMPORTED_MODULE_2__.flushSync((()=>{h(t)})))}))}),[p,t,n,R]);th((()=>{!1===c&&M.current.isPositioned&&(M.current.isPositioned=!1,h((e=>({...e,isPositioned:!1}))))}),[c]);const F=react__WEBPACK_IMPORTED_MODULE_1__.useRef(!1);th((()=>(F.current=!0,()=>{F.current=!1})),[]),th((()=>{if(C&&(x.current=C),k&&(L.current=k),C&&k){if(V.current)return V.current(C,k,S);S()}}),[C,k,S,V,H]);const E=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({reference:x,floating:L,setReference:y,setFloating:b})),[y,b]),N=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({reference:C,floating:k})),[C,k]),I=react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>{const e={position:n,left:0,top:0};if(!N.floating)return e;const t=oh(N.floating,d.x),r=oh(N.floating,d.y);return s?{...e,transform:\"translate(\"+t+\"px, \"+r+\"px)\",...rh(N.floating)>=1.5&&{willChange:\"transform\"}}:{position:n,left:t,top:r}}),[n,s,N.floating,d.x,d.y]);return react__WEBPACK_IMPORTED_MODULE_1__.useMemo((()=>({...d,update:S,refs:E,elements:N,floatingStyles:I})),[d,S,E,N,I])}const sh=e=>({name:\"arrow\",options:e,fn(t){const{element:n,padding:r}=\"function\"==typeof e?e(t):e;return n&&(o=n,{}.hasOwnProperty.call(o,\"current\"))?null!=n.current?Qu({element:n.current,padding:r}).fn(t):{}:n?Qu({element:n,padding:r}).fn(t):{};var o}}),lh=(e,t)=>({...Yu(e),options:[e,t]}),ch=(e,t)=>({...Xu(e),options:[e,t]}),dh=(e,t)=>({...Ku(e),options:[e,t]}),uh=(e,t)=>({...sh(e),options:[e,t]}),hh=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({transformPagePoint:e=>e,isStatic:!1,reducedMotion:\"never\"}),ph=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({}),fh=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null),gh=typeof document<\"u\",mh=gh?react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_1__.useEffect,wh=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({strict:!1}),vh=e=>e.replace(/([a-z])([A-Z])/g,\"$1-$2\").toLowerCase(),yh=\"data-\"+vh(\"framerAppearId\"),bh=!1,Ch=!1;class kh{constructor(){this.order=[],this.scheduled=new Set}add(e){if(!this.scheduled.has(e))return this.scheduled.add(e),this.order.push(e),!0}remove(e){const t=this.order.indexOf(e);-1!==t&&(this.order.splice(t,1),this.scheduled.delete(e))}clear(){this.order.length=0,this.scheduled.clear()}}const xh=[\"prepare\",\"read\",\"update\",\"preRender\",\"render\",\"postRender\"];function Lh(e,t){let n=!1,r=!0;const o={delta:0,timestamp:0,isProcessing:!1},i=xh.reduce(((e,t)=>(e[t]=function(e){let t=new kh,n=new kh,r=0,o=!1,i=!1;const a=new WeakSet,s={schedule:(e,i=!1,s=!1)=>{const l=s&&o,c=l?t:n;return i&&a.add(e),c.add(e)&&l&&o&&(r=t.order.length),e},cancel:e=>{n.remove(e),a.delete(e)},process:l=>{if(o)i=!0;else{if(o=!0,[t,n]=[n,t],n.clear(),r=t.order.length,r)for(let n=0;n<r;n++){const r=t.order[n];a.has(r)&&(s.schedule(r),e()),r(l)}o=!1,i&&(i=!1,s.process(l))}}};return s}((()=>n=!0)),e)),{}),a=e=>{i[e].process(o)},s=()=>{const i=performance.now();n=!1,o.delta=r?1e3/60:Math.max(Math.min(i-o.timestamp,40),1),o.timestamp=i,o.isProcessing=!0,xh.forEach(a),o.isProcessing=!1,n&&t&&(r=!1,e(s))};return{schedule:xh.reduce(((t,a)=>{const l=i[a];return t[a]=(t,i=!1,a=!1)=>(n||(n=!0,r=!0,o.isProcessing||e(s)),l.schedule(t,i,a)),t}),{}),cancel:e=>xh.forEach((t=>i[t].cancel(e))),state:o,steps:i}}const{schedule:Mh,cancel:Hh}=Lh(queueMicrotask,!1);function Vh(e){return e&&\"object\"==typeof e&&Object.prototype.hasOwnProperty.call(e,\"current\")}function Rh(e){return\"string\"==typeof e||Array.isArray(e)}function Sh(e){return null!==e&&\"object\"==typeof e&&\"function\"==typeof e.start}const Fh=[\"animate\",\"whileInView\",\"whileFocus\",\"whileHover\",\"whileTap\",\"whileDrag\",\"exit\"],Eh=[\"initial\",...Fh];function Nh(e){return Sh(e.animate)||Eh.some((t=>Rh(e[t])))}function Ih(e){return!(!Nh(e)&&!e.variants)}function Bh(e){const{initial:t,animate:n}=function(e,t){if(Nh(e)){const{initial:t,animate:n}=e;return{initial:!1===t||Rh(t)?t:void 0,animate:Rh(n)?n:void 0}}return!1!==e.inherit?t:{}}(e,(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ph));return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({initial:t,animate:n})),[jh(t),jh(n)])}function jh(e){return Array.isArray(e)?e.join(\" \"):e}const $h={animation:[\"animate\",\"variants\",\"whileHover\",\"whileTap\",\"exit\",\"whileInView\",\"whileFocus\",\"whileDrag\"],exit:[\"exit\"],drag:[\"drag\",\"dragControls\"],focus:[\"whileFocus\"],hover:[\"whileHover\",\"onHoverStart\",\"onHoverEnd\"],tap:[\"whileTap\",\"onTap\",\"onTapStart\",\"onTapCancel\"],pan:[\"onPan\",\"onPanStart\",\"onPanSessionStart\",\"onPanEnd\"],inView:[\"whileInView\",\"onViewportEnter\",\"onViewportLeave\"],layout:[\"layout\",\"layoutId\"]},Ah={};for(const e in $h)Ah[e]={isEnabled:t=>$h[e].some((e=>!!t[e]))};const Th=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({}),Ph=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({}),Wh=Symbol.for(\"motionComponentSymbol\");function Zh({preloadedFeatures:e,createVisualElement:t,useRender:n,useVisualState:r,Component:o}){e&&function(e){for(const t in e)Ah[t]={...Ah[t],...e[t]}}(e);const i=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(i,a){let s;const l={...(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hh),...i,layoutId:Dh(i)},{isStatic:c}=l,d=Bh(i),h=r(i,c);if(!c&&gh){d.visualElement=function(e,t,n,r){const{visualElement:o}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ph),i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(wh),a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fh),s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(hh).reducedMotion,l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();r=r||i.renderer,!l.current&&r&&(l.current=r(e,{visualState:t,parent:o,props:n,presenceContext:a,blockInitialAnimation:!!a&&!1===a.initial,reducedMotionConfig:s}));const c=l.current;(0,react__WEBPACK_IMPORTED_MODULE_1__.useInsertionEffect)((()=>{c&&c.update(n,a)}));const d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!(!n[yh]||window.HandoffComplete));return mh((()=>{c&&(Mh.postRender(c.render),d.current&&c.animationState&&c.animationState.animateChanges())})),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{c&&(c.updateFeatures(),!d.current&&c.animationState&&c.animationState.animateChanges(),d.current&&(d.current=!1,window.HandoffComplete=!0))})),c}(o,h,l,t);const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ph),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(wh).strict;d.visualElement&&(s=d.visualElement.loadFeatures(l,r,e,n))}return react__WEBPACK_IMPORTED_MODULE_1__.createElement(ph.Provider,{value:d},s&&d.visualElement?react__WEBPACK_IMPORTED_MODULE_1__.createElement(s,{visualElement:d.visualElement,...l}):null,n(o,i,function(e,t,n){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((r=>{r&&e.mount&&e.mount(r),t&&(r?t.mount(r):t.unmount()),n&&(\"function\"==typeof n?n(r):Vh(n)&&(n.current=r))}),[t])}(h,d.visualElement,a),h,c,d.visualElement))}));return i[Wh]=o,i}function Dh({layoutId:e}){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Th).id;return t&&void 0!==e?t+\"-\"+e:e}function zh(e){function t(t,n={}){return Zh(e(t,n))}if(typeof Proxy>\"u\")return t;const n=new Map;return new Proxy(t,{get:(e,r)=>(n.has(r)||n.set(r,t(r)),n.get(r))})}const Oh=[\"animate\",\"circle\",\"defs\",\"desc\",\"ellipse\",\"g\",\"image\",\"line\",\"filter\",\"marker\",\"mask\",\"metadata\",\"path\",\"pattern\",\"polygon\",\"polyline\",\"rect\",\"stop\",\"switch\",\"symbol\",\"svg\",\"text\",\"tspan\",\"use\",\"view\"];function _h(e){return\"string\"==typeof e&&!e.includes(\"-\")&&!!(Oh.indexOf(e)>-1||/[A-Z]/.test(e))}const qh={};const Uh=[\"transformPerspective\",\"x\",\"y\",\"z\",\"translateX\",\"translateY\",\"translateZ\",\"scale\",\"scaleX\",\"scaleY\",\"rotate\",\"rotateX\",\"rotateY\",\"rotateZ\",\"skew\",\"skewX\",\"skewY\"],Gh=new Set(Uh);function Yh(e,{layout:t,layoutId:n}){return Gh.has(e)||e.startsWith(\"origin\")||(t||void 0!==n)&&(!!qh[e]||\"opacity\"===e)}const Xh=e=>!(!e||!e.getVelocity),Kh={x:\"translateX\",y:\"translateY\",z:\"translateZ\",transformPerspective:\"perspective\"},Jh=Uh.length;const Qh=e=>t=>\"string\"==typeof t&&t.startsWith(e),ep=Qh(\"--\"),tp=Qh(\"var(--\"),np=e=>!!tp(e)&&rp.test(e.split(\"/*\")[0].trim()),rp=/var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)$/i,op=(e,t)=>t&&\"number\"==typeof e?t.transform(e):e,ip=(e,t,n)=>n>t?t:n<e?e:n,ap={test:e=>\"number\"==typeof e,parse:parseFloat,transform:e=>e},sp={...ap,transform:e=>ip(0,1,e)},lp={...ap,default:1},cp=e=>Math.round(1e5*e)/1e5,dp=/(-)?([\\d]*\\.?[\\d])+/g,up=/(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi,hp=/^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;function pp(e){return\"string\"==typeof e}const fp=e=>({test:t=>pp(t)&&t.endsWith(e)&&1===t.split(\" \").length,parse:parseFloat,transform:t=>`${t}${e}`}),gp=fp(\"deg\"),mp=fp(\"%\"),wp=fp(\"px\"),vp=fp(\"vh\"),yp=fp(\"vw\"),bp={...mp,parse:e=>mp.parse(e)/100,transform:e=>mp.transform(100*e)},Cp={...ap,transform:Math.round},kp={borderWidth:wp,borderTopWidth:wp,borderRightWidth:wp,borderBottomWidth:wp,borderLeftWidth:wp,borderRadius:wp,radius:wp,borderTopLeftRadius:wp,borderTopRightRadius:wp,borderBottomRightRadius:wp,borderBottomLeftRadius:wp,width:wp,maxWidth:wp,height:wp,maxHeight:wp,size:wp,top:wp,right:wp,bottom:wp,left:wp,padding:wp,paddingTop:wp,paddingRight:wp,paddingBottom:wp,paddingLeft:wp,margin:wp,marginTop:wp,marginRight:wp,marginBottom:wp,marginLeft:wp,rotate:gp,rotateX:gp,rotateY:gp,rotateZ:gp,scale:lp,scaleX:lp,scaleY:lp,scaleZ:lp,skew:gp,skewX:gp,skewY:gp,distance:wp,translateX:wp,translateY:wp,translateZ:wp,x:wp,y:wp,z:wp,perspective:wp,transformPerspective:wp,opacity:sp,originX:bp,originY:bp,originZ:wp,zIndex:Cp,fillOpacity:sp,strokeOpacity:sp,numOctaves:Cp};function xp(e,t,n,r){const{style:o,vars:i,transform:a,transformOrigin:s}=e;let l=!1,c=!1,d=!0;for(const e in t){const n=t[e];if(ep(e)){i[e]=n;continue}const r=kp[e],u=op(n,r);if(Gh.has(e)){if(l=!0,a[e]=u,!d)continue;n!==(r.default||0)&&(d=!1)}else e.startsWith(\"origin\")?(c=!0,s[e]=u):o[e]=u}if(t.transform||(l||r?o.transform=function(e,{enableHardwareAcceleration:t=!0,allowTransformNone:n=!0},r,o){let i=\"\";for(let t=0;t<Jh;t++){const n=Uh[t];void 0!==e[n]&&(i+=`${Kh[n]||n}(${e[n]}) `)}return t&&!e.z&&(i+=\"translateZ(0)\"),i=i.trim(),o?i=o(e,r?\"\":i):n&&r&&(i=\"none\"),i}(e.transform,n,d,r):o.transform&&(o.transform=\"none\")),c){const{originX:e=\"50%\",originY:t=\"50%\",originZ:n=0}=s;o.transformOrigin=`${e} ${t} ${n}`}}const Lp=()=>({style:{},transform:{},transformOrigin:{},vars:{}});function Mp(e,t,n){for(const r in t)!Xh(t[r])&&!Yh(r,n)&&(e[r]=t[r])}function Hp(e,t,n){const r={};return Mp(r,e.style||{},e),Object.assign(r,function({transformTemplate:e},t,n){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const r={style:{},transform:{},transformOrigin:{},vars:{}};return xp(r,t,{enableHardwareAcceleration:!n},e),Object.assign({},r.vars,r.style)}),[t])}(e,t,n)),r}function Vp(e,t,n){const r={},o=Hp(e,t,n);return e.drag&&!1!==e.dragListener&&(r.draggable=!1,o.userSelect=o.WebkitUserSelect=o.WebkitTouchCallout=\"none\",o.touchAction=!0===e.drag?\"none\":\"pan-\"+(\"x\"===e.drag?\"y\":\"x\")),void 0===e.tabIndex&&(e.onTap||e.onTapStart||e.whileTap)&&(r.tabIndex=0),r.style=o,r}const Rp=new Set([\"animate\",\"exit\",\"variants\",\"initial\",\"style\",\"values\",\"variants\",\"transition\",\"transformTemplate\",\"custom\",\"inherit\",\"onBeforeLayoutMeasure\",\"onAnimationStart\",\"onAnimationComplete\",\"onUpdate\",\"onDragStart\",\"onDrag\",\"onDragEnd\",\"onMeasureDragConstraints\",\"onDirectionLock\",\"onDragTransitionEnd\",\"_dragX\",\"_dragY\",\"onHoverStart\",\"onHoverEnd\",\"onViewportEnter\",\"onViewportLeave\",\"globalTapTarget\",\"ignoreStrict\",\"viewport\"]);function Sp(e){return e.startsWith(\"while\")||e.startsWith(\"drag\")&&\"draggable\"!==e||e.startsWith(\"layout\")||e.startsWith(\"onTap\")||e.startsWith(\"onPan\")||e.startsWith(\"onLayout\")||Rp.has(e)}let Fp=e=>!Sp(e);try{(Ep=require(\"@emotion/is-prop-valid\").default)&&(Fp=e=>e.startsWith(\"on\")?!Sp(e):Ep(e))}catch{}var Ep;function Np(e,t,n){return\"string\"==typeof e?e:wp.transform(t+n*e)}const Ip={offset:\"stroke-dashoffset\",array:\"stroke-dasharray\"},Bp={offset:\"strokeDashoffset\",array:\"strokeDasharray\"};function jp(e,{attrX:t,attrY:n,attrScale:r,originX:o,originY:i,pathLength:a,pathSpacing:s=1,pathOffset:l=0,...c},d,u,h){if(xp(e,c,d,h),u)return void(e.style.viewBox&&(e.attrs.viewBox=e.style.viewBox));e.attrs=e.style,e.style={};const{attrs:p,style:f,dimensions:g}=e;p.transform&&(g&&(f.transform=p.transform),delete p.transform),g&&(void 0!==o||void 0!==i||f.transform)&&(f.transformOrigin=function(e,t,n){return`${Np(t,e.x,e.width)} ${Np(n,e.y,e.height)}`}(g,void 0!==o?o:.5,void 0!==i?i:.5)),void 0!==t&&(p.x=t),void 0!==n&&(p.y=n),void 0!==r&&(p.scale=r),void 0!==a&&function(e,t,n=1,r=0,o=!0){e.pathLength=1;const i=o?Ip:Bp;e[i.offset]=wp.transform(-r);const a=wp.transform(t),s=wp.transform(n);e[i.array]=`${a} ${s}`}(p,a,s,l,!1)}const $p=()=>({style:{},transform:{},transformOrigin:{},vars:{},attrs:{}}),Ap=e=>\"string\"==typeof e&&\"svg\"===e.toLowerCase();function Tp(e,t,n,r){const o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const n={style:{},transform:{},transformOrigin:{},vars:{},attrs:{}};return jp(n,t,{enableHardwareAcceleration:!1},Ap(r),e.transformTemplate),{...n.attrs,style:{...n.style}}}),[t]);if(e.style){const t={};Mp(t,e.style,e),o.style={...t,...o.style}}return o}function Pp(e=!1){return(t,n,r,{latestValues:o},i)=>{const a=(_h(t)?Tp:Vp)(n,o,i,t),s=function(e,t,n){const r={};for(const o in e)\"values\"===o&&\"object\"==typeof e.values||(Fp(o)||!0===n&&Sp(o)||!t&&!Sp(o)||e.draggable&&o.startsWith(\"onDrag\"))&&(r[o]=e[o]);return r}(n,\"string\"==typeof t,e),l=t!==react__WEBPACK_IMPORTED_MODULE_1__.Fragment?{...s,...a,ref:r}:{},{children:c}=n,d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>Xh(c)?c.get():c),[c]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(t,{...l,children:d})}}function Wp(e,{style:t,vars:n},r,o){Object.assign(e.style,t,o&&o.getProjectionStyles(r));for(const t in n)e.style.setProperty(t,n[t])}const Zp=new Set([\"baseFrequency\",\"diffuseConstant\",\"kernelMatrix\",\"kernelUnitLength\",\"keySplines\",\"keyTimes\",\"limitingConeAngle\",\"markerHeight\",\"markerWidth\",\"numOctaves\",\"targetX\",\"targetY\",\"surfaceScale\",\"specularConstant\",\"specularExponent\",\"stdDeviation\",\"tableValues\",\"viewBox\",\"gradientTransform\",\"pathLength\",\"startOffset\",\"textLength\",\"lengthAdjust\"]);function Dp(e,t,n,r){Wp(e,t,void 0,r);for(const n in t.attrs)e.setAttribute(Zp.has(n)?n:vh(n),t.attrs[n])}function zp(e,t){const{style:n}=e,r={};for(const o in n)(Xh(n[o])||t.style&&Xh(t.style[o])||Yh(o,e))&&(r[o]=n[o]);return r}function Op(e,t){const n=zp(e,t);for(const r in e)if(Xh(e[r])||Xh(t[r])){n[-1!==Uh.indexOf(r)?\"attr\"+r.charAt(0).toUpperCase()+r.substring(1):r]=e[r]}return n}function _p(e,t,n,r={},o={}){return\"function\"==typeof t&&(t=t(void 0!==n?n:e.custom,r,o)),\"string\"==typeof t&&(t=e.variants&&e.variants[t]),\"function\"==typeof t&&(t=t(void 0!==n?n:e.custom,r,o)),t}function qp(e){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return null===t.current&&(t.current=e()),t.current}const Up=e=>Array.isArray(e);function Gp(e){const t=Xh(e)?e.get():e;return(n=t)&&\"object\"==typeof n&&n.mix&&n.toValue?t.toValue():t;var n}const Yp=e=>(t,n)=>{const r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(ph),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fh),i=()=>function({scrapeMotionValuesFromProps:e,createRenderState:t,onMount:n},r,o,i){const a={latestValues:Xp(r,o,i,e),renderState:t()};return n&&(a.mount=e=>n(r,e,a)),a}(e,t,r,o);return n?i():qp(i)};function Xp(e,t,n,r){const o={},i=r(e,{});for(const e in i)o[e]=Gp(i[e]);let{initial:a,animate:s}=e;const l=Nh(e),c=Ih(e);t&&c&&!l&&!1!==e.inherit&&(void 0===a&&(a=t.initial),void 0===s&&(s=t.animate));let d=!!n&&!1===n.initial;d=d||!1===a;const u=d?s:a;return u&&\"boolean\"!=typeof u&&!Sh(u)&&(Array.isArray(u)?u:[u]).forEach((t=>{const n=_p(e,t);if(!n)return;const{transitionEnd:r,transition:i,...a}=n;for(const e in a){let t=a[e];if(Array.isArray(t)){t=t[d?t.length-1:0]}null!==t&&(o[e]=t)}for(const e in r)o[e]=r[e]})),o}const Kp=e=>e,{schedule:Jp,cancel:Qp,state:ef,steps:tf}=Lh(typeof requestAnimationFrame<\"u\"?requestAnimationFrame:Kp,!0),nf={useVisualState:Yp({scrapeMotionValuesFromProps:Op,createRenderState:$p,onMount:(e,t,{renderState:n,latestValues:r})=>{Jp.read((()=>{try{n.dimensions=\"function\"==typeof t.getBBox?t.getBBox():t.getBoundingClientRect()}catch{n.dimensions={x:0,y:0,width:0,height:0}}})),Jp.render((()=>{jp(n,r,{enableHardwareAcceleration:!1},Ap(t.tagName),e.transformTemplate),Dp(t,n)}))}})},rf={useVisualState:Yp({scrapeMotionValuesFromProps:zp,createRenderState:Lp})};function of(e,t,n,r={passive:!0}){return e.addEventListener(t,n,r),()=>e.removeEventListener(t,n)}const af=e=>\"mouse\"===e.pointerType?\"number\"!=typeof e.button||e.button<=0:!1!==e.isPrimary;function sf(e,t=\"page\"){return{point:{x:e[t+\"X\"],y:e[t+\"Y\"]}}}function lf(e,t,n,r){return of(e,t,(e=>t=>af(t)&&e(t,sf(t)))(n),r)}const cf=(e,t)=>n=>t(e(n)),df=(...e)=>e.reduce(cf);function uf(e){let t=null;return()=>null===t&&(t=e,()=>{t=null})}const hf=uf(\"dragHorizontal\"),pf=uf(\"dragVertical\");function ff(e){let t=!1;if(\"y\"===e)t=pf();else if(\"x\"===e)t=hf();else{const e=hf(),n=pf();e&&n?t=()=>{e(),n()}:(e&&e(),n&&n())}return t}function gf(){const e=ff(!0);return!e||(e(),!1)}class mf{constructor(e){this.isMounted=!1,this.node=e}update(){}}function wf(e,t){const n=\"pointer\"+(t?\"enter\":\"leave\"),r=\"onHover\"+(t?\"Start\":\"End\");return lf(e.current,n,((n,o)=>{if(\"touch\"===n.pointerType||gf())return;const i=e.getProps();e.animationState&&i.whileHover&&e.animationState.setActive(\"whileHover\",t),i[r]&&Jp.update((()=>i[r](n,o)))}),{passive:!e.getProps()[r]})}const vf=(e,t)=>!!t&&(e===t||vf(e,t.parentElement));function yf(e,t){if(!t)return;const n=new PointerEvent(\"pointer\"+e);t(n,sf(n))}const bf=new WeakMap,Cf=new WeakMap,kf=e=>{const t=bf.get(e.target);t&&t(e)},xf=e=>{e.forEach(kf)};function Lf(e,t,n){const r=function({root:e,...t}){const n=e||document;Cf.has(n)||Cf.set(n,{});const r=Cf.get(n),o=JSON.stringify(t);return r[o]||(r[o]=new IntersectionObserver(xf,{root:e,...t})),r[o]}(t);return bf.set(e,n),r.observe(e),()=>{bf.delete(e),r.unobserve(e)}}const Mf={some:0,all:1};const Hf={inView:{Feature:class extends mf{constructor(){super(...arguments),this.hasEnteredView=!1,this.isInView=!1}startObserver(){this.unmount();const{viewport:e={}}=this.node.getProps(),{root:t,margin:n,amount:r=\"some\",once:o}=e,i={root:t?t.current:void 0,rootMargin:n,threshold:\"number\"==typeof r?r:Mf[r]};return Lf(this.node.current,i,(e=>{const{isIntersecting:t}=e;if(this.isInView===t||(this.isInView=t,o&&!t&&this.hasEnteredView))return;t&&(this.hasEnteredView=!0),this.node.animationState&&this.node.animationState.setActive(\"whileInView\",t);const{onViewportEnter:n,onViewportLeave:r}=this.node.getProps(),i=t?n:r;i&&i(e)}))}mount(){this.startObserver()}update(){if(typeof IntersectionObserver>\"u\")return;const{props:e,prevProps:t}=this.node;[\"amount\",\"margin\",\"root\"].some(function({viewport:e={}},{viewport:t={}}={}){return n=>e[n]!==t[n]}(e,t))&&this.startObserver()}unmount(){}}},tap:{Feature:class extends mf{constructor(){super(...arguments),this.removeStartListeners=Kp,this.removeEndListeners=Kp,this.removeAccessibleListeners=Kp,this.startPointerPress=(e,t)=>{if(this.isPressing)return;this.removeEndListeners();const n=this.node.getProps(),r=lf(window,\"pointerup\",((e,t)=>{if(!this.checkPressEnd())return;const{onTap:n,onTapCancel:r,globalTapTarget:o}=this.node.getProps();Jp.update((()=>{o||vf(this.node.current,e.target)?n&&n(e,t):r&&r(e,t)}))}),{passive:!(n.onTap||n.onPointerUp)}),o=lf(window,\"pointercancel\",((e,t)=>this.cancelPress(e,t)),{passive:!(n.onTapCancel||n.onPointerCancel)});this.removeEndListeners=df(r,o),this.startPress(e,t)},this.startAccessiblePress=()=>{const e=of(this.node.current,\"keydown\",(e=>{if(\"Enter\"!==e.key||this.isPressing)return;this.removeEndListeners(),this.removeEndListeners=of(this.node.current,\"keyup\",(e=>{\"Enter\"!==e.key||!this.checkPressEnd()||yf(\"up\",((e,t)=>{const{onTap:n}=this.node.getProps();n&&Jp.update((()=>n(e,t)))}))})),yf(\"down\",((e,t)=>{this.startPress(e,t)}))})),t=of(this.node.current,\"blur\",(()=>{this.isPressing&&yf(\"cancel\",((e,t)=>this.cancelPress(e,t)))}));this.removeAccessibleListeners=df(e,t)}}startPress(e,t){this.isPressing=!0;const{onTapStart:n,whileTap:r}=this.node.getProps();r&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!0),n&&Jp.update((()=>n(e,t)))}checkPressEnd(){return this.removeEndListeners(),this.isPressing=!1,this.node.getProps().whileTap&&this.node.animationState&&this.node.animationState.setActive(\"whileTap\",!1),!gf()}cancelPress(e,t){if(!this.checkPressEnd())return;const{onTapCancel:n}=this.node.getProps();n&&Jp.update((()=>n(e,t)))}mount(){const e=this.node.getProps(),t=lf(e.globalTapTarget?window:this.node.current,\"pointerdown\",this.startPointerPress,{passive:!(e.onTapStart||e.onPointerStart)}),n=of(this.node.current,\"focus\",this.startAccessiblePress);this.removeStartListeners=df(t,n)}unmount(){this.removeStartListeners(),this.removeEndListeners(),this.removeAccessibleListeners()}}},focus:{Feature:class extends mf{constructor(){super(...arguments),this.isActive=!1}onFocus(){let e=!1;try{e=this.node.current.matches(\":focus-visible\")}catch{e=!0}!e||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!0),this.isActive=!0)}onBlur(){!this.isActive||!this.node.animationState||(this.node.animationState.setActive(\"whileFocus\",!1),this.isActive=!1)}mount(){this.unmount=df(of(this.node.current,\"focus\",(()=>this.onFocus())),of(this.node.current,\"blur\",(()=>this.onBlur())))}unmount(){}}},hover:{Feature:class extends mf{mount(){this.unmount=df(wf(this.node,!0),wf(this.node,!1))}unmount(){}}}};function Vf(e,t){if(!Array.isArray(t))return!1;const n=t.length;if(n!==e.length)return!1;for(let r=0;r<n;r++)if(t[r]!==e[r])return!1;return!0}function Rf(e,t,n){const r=e.getProps();return _p(r,t,void 0!==n?n:r.custom,function(e){const t={};return e.values.forEach(((e,n)=>t[n]=e.get())),t}(e),function(e){const t={};return e.values.forEach(((e,n)=>t[n]=e.getVelocity())),t}(e))}let Sf=Kp;const Ff=e=>1e3*e,Ef=e=>e/1e3,Nf=!1,If=(e,t,n)=>(((1-3*n+3*t)*e+(3*n-6*t))*e+3*t)*e;function Bf(e,t,n,r){if(e===t&&n===r)return Kp;const o=t=>function(e,t,n,r,o){let i,a,s=0;do{a=t+(n-t)/2,i=If(a,r,o)-e,i>0?n=a:t=a}while(Math.abs(i)>1e-7&&++s<12);return a}(t,0,1,e,n);return e=>0===e||1===e?e:If(o(e),t,r)}const jf=Bf(.42,0,1,1),$f=Bf(0,0,.58,1),Af=Bf(.42,0,.58,1),Tf=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,Pf=e=>t=>1-e(1-t),Wf=e=>1-Math.sin(Math.acos(e)),Zf=Pf(Wf),Df=Tf(Wf),zf=Bf(.33,1.53,.69,.99),Of=Pf(zf),_f=Tf(Of),qf={linear:Kp,easeIn:jf,easeInOut:Af,easeOut:$f,circIn:Wf,circInOut:Df,circOut:Zf,backIn:Of,backInOut:_f,backOut:zf,anticipate:e=>(e*=2)<1?.5*Of(e):.5*(2-Math.pow(2,-10*(e-1)))},Uf=e=>{if(Array.isArray(e)){const[t,n,r,o]=e;return Bf(t,n,r,o)}return\"string\"==typeof e?qf[e]:e},Gf=(e,t,n)=>{const r=t-e;return 0===r?1:(n-e)/r},Yf=(e,t,n)=>e+(t-e)*n;function Xf(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+(t-e)*(2/3-n)*6:e}const Kf=(e,t)=>n=>!!(pp(n)&&hp.test(n)&&n.startsWith(e)||t&&Object.prototype.hasOwnProperty.call(n,t)),Jf=(e,t,n)=>r=>{if(!pp(r))return r;const[o,i,a,s]=r.match(dp);return{[e]:parseFloat(o),[t]:parseFloat(i),[n]:parseFloat(a),alpha:void 0!==s?parseFloat(s):1}},Qf={...ap,transform:e=>Math.round((e=>ip(0,255,e))(e))},eg={test:Kf(\"rgb\",\"red\"),parse:Jf(\"red\",\"green\",\"blue\"),transform:({red:e,green:t,blue:n,alpha:r=1})=>\"rgba(\"+Qf.transform(e)+\", \"+Qf.transform(t)+\", \"+Qf.transform(n)+\", \"+cp(sp.transform(r))+\")\"};const tg={test:Kf(\"#\"),parse:function(e){let t=\"\",n=\"\",r=\"\",o=\"\";return e.length>5?(t=e.substring(1,3),n=e.substring(3,5),r=e.substring(5,7),o=e.substring(7,9)):(t=e.substring(1,2),n=e.substring(2,3),r=e.substring(3,4),o=e.substring(4,5),t+=t,n+=n,r+=r,o+=o),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:o?parseInt(o,16)/255:1}},transform:eg.transform},ng={test:Kf(\"hsl\",\"hue\"),parse:Jf(\"hue\",\"saturation\",\"lightness\"),transform:({hue:e,saturation:t,lightness:n,alpha:r=1})=>\"hsla(\"+Math.round(e)+\", \"+mp.transform(cp(t))+\", \"+mp.transform(cp(n))+\", \"+cp(sp.transform(r))+\")\"},rg=(e,t,n)=>{const r=e*e,o=n*(t*t-r)+r;return o<0?0:Math.sqrt(o)},og=[tg,eg,ng];function ig(e){const t=(n=e,og.find((e=>e.test(n))));var n;let r=t.parse(e);return t===ng&&(r=function({hue:e,saturation:t,lightness:n,alpha:r}){e/=360,n/=100;let o=0,i=0,a=0;if(t/=100){const r=n<.5?n*(1+t):n+t-n*t,s=2*n-r;o=Xf(s,r,e+1/3),i=Xf(s,r,e),a=Xf(s,r,e-1/3)}else o=i=a=n;return{red:Math.round(255*o),green:Math.round(255*i),blue:Math.round(255*a),alpha:r}}(r)),r}const ag=(e,t)=>{const n=ig(e),r=ig(t),o={...n};return e=>(o.red=rg(n.red,r.red,e),o.green=rg(n.green,r.green,e),o.blue=rg(n.blue,r.blue,e),o.alpha=Yf(n.alpha,r.alpha,e),eg.transform(o))},sg={test:e=>eg.test(e)||tg.test(e)||ng.test(e),parse:e=>eg.test(e)?eg.parse(e):ng.test(e)?ng.parse(e):tg.parse(e),transform:e=>pp(e)?e:e.hasOwnProperty(\"red\")?eg.transform(e):ng.transform(e)};const lg=\"number\",cg=\"color\",dg=/(var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\))|(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))|((-)?([\\d]*\\.?[\\d])+)/gi;function ug(e){const t=e.toString(),n=t.match(dg)||[],r=[],o={color:[],number:[],var:[]},i=[];for(let e=0;e<n.length;e++){const t=n[e];sg.test(t)?(o.color.push(e),i.push(cg),r.push(sg.parse(t))):t.startsWith(\"var(\")?(o.var.push(e),i.push(\"var\"),r.push(t)):(o.number.push(e),i.push(lg),r.push(parseFloat(t)))}return{values:r,split:t.replace(dg,\"${}\").split(\"${}\"),indexes:o,types:i}}function hg(e){return ug(e).values}function pg(e){const{split:t,types:n}=ug(e),r=t.length;return e=>{let o=\"\";for(let i=0;i<r;i++)if(o+=t[i],void 0!==e[i]){const t=n[i];o+=t===lg?cp(e[i]):t===cg?sg.transform(e[i]):e[i]}return o}}const fg=e=>\"number\"==typeof e?0:e;const gg={test:function(e){var t,n;return isNaN(e)&&pp(e)&&((null===(t=e.match(dp))||void 0===t?void 0:t.length)||0)+((null===(n=e.match(up))||void 0===n?void 0:n.length)||0)>0},parse:hg,createTransformer:pg,getAnimatableNone:function(e){const t=hg(e);return pg(e)(t.map(fg))}};function mg(e,t){return n=>n>0?t:e}function wg(e,t){return n=>Yf(e,t,n)}function vg(e){return\"number\"==typeof e?wg:\"string\"==typeof e?np(e)?mg:sg.test(e)?ag:Cg:Array.isArray(e)?yg:\"object\"==typeof e?sg.test(e)?ag:bg:mg}function yg(e,t){const n=[...e],r=n.length,o=e.map(((e,n)=>vg(e)(e,t[n])));return e=>{for(let t=0;t<r;t++)n[t]=o[t](e);return n}}function bg(e,t){const n={...e,...t},r={};for(const o in n)void 0!==e[o]&&void 0!==t[o]&&(r[o]=vg(e[o])(e[o],t[o]));return e=>{for(const t in r)n[t]=r[t](e);return n}}const Cg=(e,t)=>{const n=gg.createTransformer(t),r=ug(e),o=ug(t);return r.indexes.var.length===o.indexes.var.length&&r.indexes.color.length===o.indexes.color.length&&r.indexes.number.length>=o.indexes.number.length?df(yg(function(e,t){var n;const r=[],o={color:0,var:0,number:0};for(let i=0;i<t.values.length;i++){const a=t.types[i],s=e.indexes[a][o[a]],l=null!==(n=e.values[s])&&void 0!==n?n:0;r[i]=l,o[a]++}return r}(r,o),o.values),n):mg(e,t)};function kg(e,t,n){return\"number\"==typeof e&&\"number\"==typeof t&&\"number\"==typeof n?Yf(e,t,n):vg(e)(e,t)}function xg(e,t,{clamp:n=!0,ease:r,mixer:o}={}){const i=e.length;if(1===i)return()=>t[0];e[0]>e[i-1]&&(e=[...e].reverse(),t=[...t].reverse());const a=function(e,t,n){const r=[],o=n||kg,i=e.length-1;for(let n=0;n<i;n++){let i=o(e[n],e[n+1]);if(t){const e=Array.isArray(t)?t[n]||Kp:t;i=df(e,i)}r.push(i)}return r}(t,r,o),s=a.length,l=t=>{let n=0;if(s>1)for(;n<e.length-2&&!(t<e[n+1]);n++);const r=Gf(e[n],e[n+1],t);return a[n](r)};return n?t=>l(ip(e[0],e[i-1],t)):l}function Lg(e){const t=[0];return function(e,t){const n=e[e.length-1];for(let r=1;r<=t;r++){const o=Gf(0,t,r);e.push(Yf(n,1,o))}}(t,e.length-1),t}function Mg({duration:e=300,keyframes:t,times:n,ease:r=\"easeInOut\"}){const o=(e=>Array.isArray(e)&&\"number\"!=typeof e[0])(r)?r.map(Uf):Uf(r),i={done:!1,value:t[0]},a=function(e,t){return e.map((e=>e*t))}(n&&n.length===t.length?n:Lg(t),e),s=xg(a,t,{ease:Array.isArray(o)?o:(l=t,c=o,l.map((()=>c||Af)).splice(0,l.length-1))});var l,c;return{calculatedDuration:e,next:t=>(i.value=s(t),i.done=t>=e,i)}}function Hg(e,t){return t?e*(1e3/t):0}function Vg(e,t,n){const r=Math.max(t-5,0);return Hg(n-e(r),t-r)}const Rg=.001;function Sg({duration:e=800,bounce:t=.25,velocity:n=0,mass:r=1}){let o,i,a=1-t;a=ip(.05,1,a),e=ip(.01,10,Ef(e)),a<1?(o=t=>{const r=t*a,o=r*e,i=r-n,s=Eg(t,a),l=Math.exp(-o);return Rg-i/s*l},i=t=>{const r=t*a*e,i=r*n+n,s=Math.pow(a,2)*Math.pow(t,2)*e,l=Math.exp(-r),c=Eg(Math.pow(t,2),a);return(-o(t)+Rg>0?-1:1)*((i-s)*l)/c}):(o=t=>Math.exp(-t*e)*((t-n)*e+1)-.001,i=t=>Math.exp(-t*e)*(e*e*(n-t)));const s=function(e,t,n){let r=n;for(let n=1;n<Fg;n++)r-=e(r)/t(r);return r}(o,i,5/e);if(e=Ff(e),isNaN(s))return{stiffness:100,damping:10,duration:e};{const t=Math.pow(s,2)*r;return{stiffness:t,damping:2*a*Math.sqrt(r*t),duration:e}}}const Fg=12;function Eg(e,t){return e*Math.sqrt(1-t*t)}const Ng=[\"duration\",\"bounce\"],Ig=[\"stiffness\",\"damping\",\"mass\"];function Bg(e,t){return t.some((t=>void 0!==e[t]))}function jg({keyframes:e,restDelta:t,restSpeed:n,...r}){const o=e[0],i=e[e.length-1],a={done:!1,value:o},{stiffness:s,damping:l,mass:c,duration:d,velocity:u,isResolvedFromDuration:h}=function(e){let t={velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1,...e};if(!Bg(e,Ig)&&Bg(e,Ng)){const n=Sg(e);t={...t,...n,mass:1},t.isResolvedFromDuration=!0}return t}({...r,velocity:-Ef(r.velocity||0)}),p=u||0,f=l/(2*Math.sqrt(s*c)),g=i-o,m=Ef(Math.sqrt(s/c)),w=Math.abs(g)<5;let v;if(n||(n=w?.01:2),t||(t=w?.005:.5),f<1){const e=Eg(m,f);v=t=>{const n=Math.exp(-f*m*t);return i-n*((p+f*m*g)/e*Math.sin(e*t)+g*Math.cos(e*t))}}else if(1===f)v=e=>i-Math.exp(-m*e)*(g+(p+m*g)*e);else{const e=m*Math.sqrt(f*f-1);v=t=>{const n=Math.exp(-f*m*t),r=Math.min(e*t,300);return i-n*((p+f*m*g)*Math.sinh(r)+e*g*Math.cosh(r))/e}}return{calculatedDuration:h&&d||null,next:e=>{const r=v(e);if(h)a.done=e>=d;else{let o=p;0!==e&&(o=f<1?Vg(v,e,r):0);const s=Math.abs(o)<=n,l=Math.abs(i-r)<=t;a.done=s&&l}return a.value=a.done?i:r,a}}}function $g({keyframes:e,velocity:t=0,power:n=.8,timeConstant:r=325,bounceDamping:o=10,bounceStiffness:i=500,modifyTarget:a,min:s,max:l,restDelta:c=.5,restSpeed:d}){const u=e[0],h={done:!1,value:u},p=e=>void 0===s?l:void 0===l||Math.abs(s-e)<Math.abs(l-e)?s:l;let f=n*t;const g=u+f,m=void 0===a?g:a(g);m!==g&&(f=m-u);const w=e=>-f*Math.exp(-e/r),v=e=>m+w(e),y=e=>{const t=w(e),n=v(e);h.done=Math.abs(t)<=c,h.value=h.done?m:n};let b,C;const k=e=>{var t;t=h.value,(void 0!==s&&t<s||void 0!==l&&t>l)&&(b=e,C=jg({keyframes:[h.value,p(h.value)],velocity:Vg(v,e,h.value),damping:o,stiffness:i,restDelta:c,restSpeed:d}))};return k(0),{calculatedDuration:null,next:e=>{let t=!1;return!C&&void 0===b&&(t=!0,y(e),k(e)),void 0!==b&&e>b?C.next(e-b):(!t&&y(e),h)}}}let Ag;function Tg(){Ag=void 0}const Pg={now:()=>(void 0===Ag&&Pg.set(ef.isProcessing||Ch?ef.timestamp:performance.now()),Ag),set:e=>{Ag=e,queueMicrotask(Tg)}},Wg=e=>{const t=({timestamp:t})=>e(t);return{start:()=>Jp.update(t,!0),stop:()=>Qp(t),now:()=>ef.isProcessing?ef.timestamp:Pg.now()}};function Zg(e){let t=0;let n=e.next(t);for(;!n.done&&t<2e4;)t+=50,n=e.next(t);return t>=2e4?1/0:t}const Dg={decay:$g,inertia:$g,tween:Mg,keyframes:Mg,spring:jg},zg=e=>e/100;function Og({autoplay:e=!0,delay:t=0,driver:n=Wg,keyframes:r,type:o=\"keyframes\",repeat:i=0,repeatDelay:a=0,repeatType:s=\"loop\",onPlay:l,onStop:c,onComplete:d,onUpdate:u,...h}){let p,f,g=1,m=!1;const w=()=>{f=new Promise((e=>{p=e}))};let v;w();const y=Dg[o]||Mg;let b;y!==Mg&&\"number\"!=typeof r[0]&&(b=df(zg,kg(r[0],r[1])),r=[0,100]);const C=y({...h,keyframes:r});let k;\"mirror\"===s&&(k=y({...h,keyframes:[...r].reverse(),velocity:-(h.velocity||0)}));let x=\"idle\",L=null,M=null,H=null;null===C.calculatedDuration&&i&&(C.calculatedDuration=Zg(C));const{calculatedDuration:V}=C;let R=1/0,S=1/0;null!==V&&(R=V+a,S=R*(i+1)-a);let F=0;const E=e=>{if(null===M)return;g>0&&(M=Math.min(M,e)),g<0&&(M=Math.min(e-S/g,M)),F=null!==L?L:Math.round(e-M)*g;const n=F-t*(g>=0?1:-1),o=g>=0?n<0:n>S;F=Math.max(n,0),\"finished\"===x&&null===L&&(F=S);let l=F,c=C;if(i){const e=Math.min(F,S)/R;let t=Math.floor(e),n=e%1;!n&&e>=1&&(n=1),1===n&&t--,t=Math.min(t,i+1),!!(t%2)&&(\"reverse\"===s?(n=1-n,a&&(n-=a/R)):\"mirror\"===s&&(c=k)),l=ip(0,1,n)*R}const d=o?{done:!1,value:r[0]}:c.next(l);b&&(d.value=b(d.value));let{done:h}=d;!o&&null!==V&&(h=g>=0?F>=S:F<=0);const p=null===L&&(\"finished\"===x||\"running\"===x&&h);return u&&u(d.value),p&&B(),d},N=()=>{v&&v.stop(),v=void 0},I=()=>{x=\"idle\",N(),p(),w(),M=H=null},B=()=>{x=\"finished\",d&&d(),N(),p()},j=()=>{if(m)return;v||(v=n(E));const e=v.now();l&&l(),null!==L?M=e-L:(!M||\"finished\"===x)&&(M=e),\"finished\"===x&&w(),H=M,L=null,x=\"running\",v.start()};e&&j();const $={then:(e,t)=>f.then(e,t),get time(){return Ef(F)},set time(e){e=Ff(e),F=e,null===L&&v&&0!==g?M=v.now()-e/g:L=e},get duration(){const e=null===C.calculatedDuration?Zg(C):C.calculatedDuration;return Ef(e)},get speed(){return g},set speed(e){e===g||!v||(g=e,$.time=Ef(F))},get state(){return x},play:j,pause:()=>{x=\"paused\",L=F},stop:()=>{m=!0,\"idle\"!==x&&(x=\"idle\",c&&c(),I())},cancel:()=>{null!==H&&E(H),I()},complete:()=>{x=\"finished\"},sample:e=>(M=0,E(e))};return $}const _g={type:\"spring\",stiffness:500,damping:25,restSpeed:10},qg={type:\"keyframes\",duration:.8},Ug={type:\"keyframes\",ease:[.25,.1,.35,1],duration:.3},Gg=(e,{keyframes:t})=>t.length>2?qg:Gh.has(e)?e.startsWith(\"scale\")?{type:\"spring\",stiffness:550,damping:0===t[1]?2*Math.sqrt(550):30,restSpeed:10}:_g:Ug,Yg=(e,t)=>\"zIndex\"!==e&&!(\"number\"!=typeof t&&!Array.isArray(t)&&(\"string\"!=typeof t||!gg.test(t)&&\"0\"!==t||t.startsWith(\"url(\"))),Xg=new Set([\"brightness\",\"contrast\",\"saturate\",\"opacity\"]);function Kg(e){const[t,n]=e.slice(0,-1).split(\"(\");if(\"drop-shadow\"===t)return e;const[r]=n.match(dp)||[];if(!r)return e;const o=n.replace(r,\"\");let i=Xg.has(t)?1:0;return r!==n&&(i*=100),t+\"(\"+i+o+\")\"}const Jg=/([a-z-]*)\\(.*?\\)/g,Qg={...gg,getAnimatableNone:e=>{const t=e.match(Jg);return t?t.map(Kg).join(\" \"):e}},em={...kp,color:sg,backgroundColor:sg,outlineColor:sg,fill:sg,stroke:sg,borderColor:sg,borderTopColor:sg,borderRightColor:sg,borderBottomColor:sg,borderLeftColor:sg,filter:Qg,WebkitFilter:Qg},tm=e=>em[e];function nm(e,t){let n=tm(e);return n!==Qg&&(n=gg),n.getAnimatableNone?n.getAnimatableNone(t):void 0}const rm=e=>/^0[^.\\s]+$/.test(e);function om(e){return\"number\"==typeof e?0===e:null!==e?\"none\"===e||\"0\"===e||rm(e):void 0}function im(e,t){return e[t]||e.default||e}const am=(e,t,n,r={})=>o=>{const i=im(r,e)||{},a=i.delay||r.delay||0;let{elapsed:s=0}=r;s-=Ff(a);const l=function(e,t,n,r){const o=Yg(t,n);let i;i=Array.isArray(n)?[...n]:[null,n];const a=void 0!==r.from?r.from:e.get();let s;const l=[];for(let e=0;e<i.length;e++)null===i[e]&&(i[e]=0===e?a:i[e-1]),om(i[e])&&l.push(e),\"string\"==typeof i[e]&&\"none\"!==i[e]&&\"0\"!==i[e]&&(s=i[e]);if(o&&l.length&&s)for(let e=0;e<l.length;e++)i[l[e]]=nm(t,s);return i}(t,e,n,i),c=l[0],d=l[l.length-1],u=Yg(e,c),h=Yg(e,d);let p={keyframes:l,velocity:t.getVelocity(),ease:\"easeOut\",...i,delay:-s,onUpdate:e=>{t.set(e),i.onUpdate&&i.onUpdate(e)},onComplete:()=>{o(),i.onComplete&&i.onComplete()}};if(function({when:e,delay:t,delayChildren:n,staggerChildren:r,staggerDirection:o,repeat:i,repeatType:a,repeatDelay:s,from:l,elapsed:c,...d}){return!!Object.keys(d).length}(i)||(p={...p,...Gg(e,p)}),p.duration&&(p.duration=Ff(p.duration)),p.repeatDelay&&(p.repeatDelay=Ff(p.repeatDelay)),!u||!h||Nf||!1===i.type||bh)return function({keyframes:e,delay:t,onUpdate:n,onComplete:r}){const o=()=>(n&&n(e[e.length-1]),r&&r(),{time:0,speed:1,duration:0,play:Kp,pause:Kp,stop:Kp,then:e=>(e(),Promise.resolve()),cancel:Kp,complete:Kp});return t?Og({keyframes:[0,1],duration:0,delay:t,onComplete:o}):o()}(p);if(!r.isHandoff&&t.owner&&t.owner.current instanceof HTMLElement&&!t.owner.getProps().onUpdate){const e=!1;if(e)return e}return Og(p)};function sm(e){return!(!Xh(e)||!e.add)}const lm=e=>/^\\-?\\d*\\.?\\d+$/.test(e);function cm(e,t){-1===e.indexOf(t)&&e.push(t)}function dm(e,t){const n=e.indexOf(t);n>-1&&e.splice(n,1)}class um{constructor(){this.subscriptions=[]}add(e){return cm(this.subscriptions,e),()=>dm(this.subscriptions,e)}notify(e,t,n){const r=this.subscriptions.length;if(r)if(1===r)this.subscriptions[0](e,t,n);else for(let o=0;o<r;o++){const r=this.subscriptions[o];r&&r(e,t,n)}}getSize(){return this.subscriptions.length}clear(){this.subscriptions.length=0}}class hm{constructor(e,t={}){var n;this.version=\"11.0.8\",this.canTrackVelocity=!1,this.events={},this.updateAndNotify=(e,t=!0)=>{const n=Pg.now();this.updatedAt!==n&&this.setPrevFrameValue(),this.prev=this.current,this.setCurrent(e),this.current!==this.prev&&this.events.change&&this.events.change.notify(this.current),t&&this.events.renderRequest&&this.events.renderRequest.notify(this.current)},this.hasAnimated=!1,this.setCurrent(e),this.canTrackVelocity=(n=this.current,!isNaN(parseFloat(n))),this.owner=t.owner}setCurrent(e){this.current=e,this.updatedAt=Pg.now()}setPrevFrameValue(e=this.current){this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt}onChange(e){return this.on(\"change\",e)}on(e,t){this.events[e]||(this.events[e]=new um);const n=this.events[e].add(t);return\"change\"===e?()=>{n(),Jp.read((()=>{this.events.change.getSize()||this.stop()}))}:n}clearListeners(){for(const e in this.events)this.events[e].clear()}attach(e,t){this.passiveEffect=e,this.stopPassiveEffect=t}set(e,t=!0){t&&this.passiveEffect?this.passiveEffect(e,this.updateAndNotify):this.updateAndNotify(e,t)}setWithVelocity(e,t,n){this.set(t),this.prev=void 0,this.prevFrameValue=e,this.prevUpdatedAt=this.updatedAt-n}jump(e){this.updateAndNotify(e),this.prev=e,this.prevUpdatedAt=this.prevFrameValue=void 0,this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}get(){return this.current}getPrevious(){return this.prev}getVelocity(){const e=Pg.now();if(!this.canTrackVelocity||void 0===this.prevFrameValue||e-this.updatedAt>30)return 0;const t=Math.min(this.updatedAt-this.prevUpdatedAt,30);return Hg(parseFloat(this.current)-parseFloat(this.prevFrameValue),t)}start(e){return this.stop(),new Promise((t=>{this.hasAnimated=!0,this.animation=e(t),this.events.animationStart&&this.events.animationStart.notify()})).then((()=>{this.events.animationComplete&&this.events.animationComplete.notify(),this.clearAnimation()}))}stop(){this.animation&&(this.animation.stop(),this.events.animationCancel&&this.events.animationCancel.notify()),this.clearAnimation()}isAnimating(){return!!this.animation}clearAnimation(){delete this.animation}destroy(){this.clearListeners(),this.stop(),this.stopPassiveEffect&&this.stopPassiveEffect()}}function pm(e,t){return new hm(e,t)}const fm=e=>t=>t.test(e),gm=[ap,wp,mp,gp,yp,vp,{test:e=>\"auto\"===e,parse:e=>e}],mm=e=>gm.find(fm(e)),wm=[...gm,sg,gg];function vm(e,t,n){e.hasValue(t)?e.getValue(t).set(n):e.addValue(t,pm(n))}function ym(e,t){return t?(t[e]||t.default||t).from:void 0}function bm({protectedKeys:e,needsAnimating:t},n){const r=e.hasOwnProperty(n)&&!0!==t[n];return t[n]=!1,r}function Cm(e,t){const n=e.get();if(!Array.isArray(t))return n!==t;for(let e=0;e<t.length;e++)if(t[e]!==n)return!0}function km(e,t,{delay:n=0,transitionOverride:r,type:o}={}){let{transition:i=e.getDefaultTransition(),transitionEnd:a,...s}=e.makeTargetAnimatable(t);const l=e.getValue(\"willChange\");r&&(i=r);const c=[],d=o&&e.animationState&&e.animationState.getState()[o];for(const t in s){const r=e.getValue(t),o=s[t];if(!r||void 0===o||d&&bm(d,t))continue;const a={delay:n,elapsed:0,...im(i||{},t)};if(window.HandoffAppearAnimations){const n=e.getProps()[yh];if(n){const e=window.HandoffAppearAnimations(n,t,r,Jp);null!==e&&(a.elapsed=e,a.isHandoff=!0)}}let u=!a.isHandoff&&!Cm(r,o);if(\"spring\"===a.type&&(r.getVelocity()||a.velocity)&&(u=!1),r.animation&&(u=!1),u)continue;r.start(am(t,r,o,e.shouldReduceMotion&&Gh.has(t)?{type:!1}:a));const h=r.animation;sm(l)&&(l.add(t),h.then((()=>l.remove(t)))),c.push(h)}return a&&Promise.all(c).then((()=>{a&&function(e,t){const n=Rf(e,t);let{transitionEnd:r={},transition:o={},...i}=n?e.makeTargetAnimatable(n,!1):{};i={...i,...r};for(const t in i)vm(e,t,(a=i[t],Up(a)?a[a.length-1]||0:a));var a}(e,a)})),c}function xm(e,t,n={}){const r=Rf(e,t,n.custom);let{transition:o=e.getDefaultTransition()||{}}=r||{};n.transitionOverride&&(o=n.transitionOverride);const i=r?()=>Promise.all(km(e,r,n)):()=>Promise.resolve(),a=e.variantChildren&&e.variantChildren.size?(r=0)=>{const{delayChildren:i=0,staggerChildren:a,staggerDirection:s}=o;return function(e,t,n=0,r=0,o=1,i){const a=[],s=(e.variantChildren.size-1)*r,l=1===o?(e=0)=>e*r:(e=0)=>s-e*r;return Array.from(e.variantChildren).sort(Lm).forEach(((e,r)=>{e.notify(\"AnimationStart\",t),a.push(xm(e,t,{...i,delay:n+l(r)}).then((()=>e.notify(\"AnimationComplete\",t))))})),Promise.all(a)}(e,t,i+r,a,s,n)}:()=>Promise.resolve(),{when:s}=o;if(s){const[e,t]=\"beforeChildren\"===s?[i,a]:[a,i];return e().then((()=>t()))}return Promise.all([i(),a(n.delay)])}function Lm(e,t){return e.sortNodePosition(t)}const Mm=[...Fh].reverse(),Hm=Fh.length;function Vm(e){return t=>Promise.all(t.map((({animation:t,options:n})=>function(e,t,n={}){let r;if(e.notify(\"AnimationStart\",t),Array.isArray(t)){const o=t.map((t=>xm(e,t,n)));r=Promise.all(o)}else if(\"string\"==typeof t)r=xm(e,t,n);else{const o=\"function\"==typeof t?Rf(e,t,n.custom):t;r=Promise.all(km(e,o,n))}return r.then((()=>e.notify(\"AnimationComplete\",t)))}(e,t,n))))}function Rm(e){let t=Vm(e);const n={animate:Sm(!0),whileInView:Sm(),whileHover:Sm(),whileTap:Sm(),whileDrag:Sm(),whileFocus:Sm(),exit:Sm()};let r=!0;const o=(t,n)=>{const r=Rf(e,n);if(r){const{transition:e,transitionEnd:n,...o}=r;t={...t,...o,...n}}return t};function i(i,a){const s=e.getProps(),l=e.getVariantContext(!0)||{},c=[],d=new Set;let u={},h=1/0;for(let t=0;t<Hm;t++){const g=Mm[t],m=n[g],w=void 0!==s[g]?s[g]:l[g],v=Rh(w),y=g===a?m.isActive:null;!1===y&&(h=t);let b=w===l[g]&&w!==s[g]&&v;if(b&&r&&e.manuallyAnimateOnMount&&(b=!1),m.protectedKeys={...u},!m.isActive&&null===y||!w&&!m.prevProp||Sh(w)||\"boolean\"==typeof w)continue;let C=(p=m.prevProp,(\"string\"==typeof(f=w)?f!==p:!!Array.isArray(f)&&!Vf(f,p))||g===a&&m.isActive&&!b&&v||t>h&&v),k=!1;const x=Array.isArray(w)?w:[w];let L=x.reduce(o,{});!1===y&&(L={});const{prevResolvedValues:M={}}=m,H={...M,...L},V=e=>{C=!0,d.has(e)&&(k=!0,d.delete(e)),m.needsAnimating[e]=!0};for(const e in H){const t=L[e],n=M[e];if(u.hasOwnProperty(e))continue;let r=!1;r=Up(t)&&Up(n)?!Vf(t,n):t!==n,r?void 0!==t?V(e):d.add(e):void 0!==t&&d.has(e)?V(e):m.protectedKeys[e]=!0}m.prevProp=w,m.prevResolvedValues=L,m.isActive&&(u={...u,...L}),r&&e.blockInitialAnimation&&(C=!1),C&&(!b||k)&&c.push(...x.map((e=>({animation:e,options:{type:g,...i}}))))}var p,f;if(d.size){const t={};d.forEach((n=>{const r=e.getBaseTarget(n);void 0!==r&&(t[n]=r)})),c.push({animation:t})}let g=!!c.length;return r&&(!1===s.initial||s.initial===s.animate)&&!e.manuallyAnimateOnMount&&(g=!1),r=!1,g?t(c):Promise.resolve()}return{animateChanges:i,setActive:function(t,r,o){var a;if(n[t].isActive===r)return Promise.resolve();null===(a=e.variantChildren)||void 0===a||a.forEach((e=>{var n;return null===(n=e.animationState)||void 0===n?void 0:n.setActive(t,r)})),n[t].isActive=r;const s=i(o,t);for(const e in n)n[e].protectedKeys={};return s},setAnimateFunction:function(n){t=n(e)},getState:()=>n}}function Sm(e=!1){return{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}let Fm=0;const Em={animation:{Feature:class extends mf{constructor(e){super(e),e.animationState||(e.animationState=Rm(e))}updateAnimationControlsSubscription(){const{animate:e}=this.node.getProps();this.unmount(),Sh(e)&&(this.unmount=e.subscribe(this.node))}mount(){this.updateAnimationControlsSubscription()}update(){const{animate:e}=this.node.getProps(),{animate:t}=this.node.prevProps||{};e!==t&&this.updateAnimationControlsSubscription()}unmount(){}}},exit:{Feature:class extends mf{constructor(){super(...arguments),this.id=Fm++}update(){if(!this.node.presenceContext)return;const{isPresent:e,onExitComplete:t,custom:n}=this.node.presenceContext,{isPresent:r}=this.node.prevPresenceContext||{};if(!this.node.animationState||e===r)return;const o=this.node.animationState.setActive(\"exit\",!e,{custom:n??this.node.getProps().custom});t&&!e&&o.then((()=>t(this.id)))}mount(){const{register:e}=this.node.presenceContext||{};e&&(this.unmount=e(this.id))}unmount(){}}}},Nm=(e,t)=>Math.abs(e-t);class Im{constructor(e,t,{transformPagePoint:n,contextWindow:r,dragSnapToOrigin:o=!1}={}){if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.contextWindow=window,this.updatePoint=()=>{if(!this.lastMoveEvent||!this.lastMoveEventInfo)return;const e=$m(this.lastMoveEventInfo,this.history),t=null!==this.startEvent,n=function(e,t){const n=Nm(e.x,t.x),r=Nm(e.y,t.y);return Math.sqrt(n**2+r**2)}(e.offset,{x:0,y:0})>=3;if(!t&&!n)return;const{point:r}=e,{timestamp:o}=ef;this.history.push({...r,timestamp:o});const{onStart:i,onMove:a}=this.handlers;t||(i&&i(this.lastMoveEvent,e),this.startEvent=this.lastMoveEvent),a&&a(this.lastMoveEvent,e)},this.handlePointerMove=(e,t)=>{this.lastMoveEvent=e,this.lastMoveEventInfo=Bm(t,this.transformPagePoint),Jp.update(this.updatePoint,!0)},this.handlePointerUp=(e,t)=>{this.end();const{onEnd:n,onSessionEnd:r,resumeAnimation:o}=this.handlers;if(this.dragSnapToOrigin&&o&&o(),!this.lastMoveEvent||!this.lastMoveEventInfo)return;const i=$m(\"pointercancel\"===e.type?this.lastMoveEventInfo:Bm(t,this.transformPagePoint),this.history);this.startEvent&&n&&n(e,i),r&&r(e,i)},!af(e))return;this.dragSnapToOrigin=o,this.handlers=t,this.transformPagePoint=n,this.contextWindow=r||window;const i=Bm(sf(e),this.transformPagePoint),{point:a}=i,{timestamp:s}=ef;this.history=[{...a,timestamp:s}];const{onSessionStart:l}=t;l&&l(e,$m(i,this.history)),this.removeListeners=df(lf(this.contextWindow,\"pointermove\",this.handlePointerMove),lf(this.contextWindow,\"pointerup\",this.handlePointerUp),lf(this.contextWindow,\"pointercancel\",this.handlePointerUp))}updateHandlers(e){this.handlers=e}end(){this.removeListeners&&this.removeListeners(),Qp(this.updatePoint)}}function Bm(e,t){return t?{point:t(e.point)}:e}function jm(e,t){return{x:e.x-t.x,y:e.y-t.y}}function $m({point:e},t){return{point:e,delta:jm(e,Tm(t)),offset:jm(e,Am(t)),velocity:Pm(t,.1)}}function Am(e){return e[0]}function Tm(e){return e[e.length-1]}function Pm(e,t){if(e.length<2)return{x:0,y:0};let n=e.length-1,r=null;const o=Tm(e);for(;n>=0&&(r=e[n],!(o.timestamp-r.timestamp>Ff(t)));)n--;if(!r)return{x:0,y:0};const i=Ef(o.timestamp-r.timestamp);if(0===i)return{x:0,y:0};const a={x:(o.x-r.x)/i,y:(o.y-r.y)/i};return a.x===1/0&&(a.x=0),a.y===1/0&&(a.y=0),a}function Wm(e){return e.max-e.min}function Zm(e,t=0,n=.01){return Math.abs(e-t)<=n}function Dm(e,t,n,r=.5){e.origin=r,e.originPoint=Yf(t.min,t.max,e.origin),e.scale=Wm(n)/Wm(t),(Zm(e.scale,1,1e-4)||isNaN(e.scale))&&(e.scale=1),e.translate=Yf(n.min,n.max,e.origin)-e.originPoint,(Zm(e.translate)||isNaN(e.translate))&&(e.translate=0)}function zm(e,t,n,r){Dm(e.x,t.x,n.x,r?r.originX:void 0),Dm(e.y,t.y,n.y,r?r.originY:void 0)}function Om(e,t,n){e.min=n.min+t.min,e.max=e.min+Wm(t)}function _m(e,t,n){e.min=t.min-n.min,e.max=e.min+Wm(t)}function qm(e,t,n){_m(e.x,t.x,n.x),_m(e.y,t.y,n.y)}function Um(e,t,n){return{min:void 0!==t?e.min+t:void 0,max:void 0!==n?e.max+n-(e.max-e.min):void 0}}function Gm(e,t){let n=t.min-e.min,r=t.max-e.max;return t.max-t.min<e.max-e.min&&([n,r]=[r,n]),{min:n,max:r}}const Ym=.35;function Xm(e,t,n){return{min:Km(e,t),max:Km(e,n)}}function Km(e,t){return\"number\"==typeof e?e:e[t]||0}function Jm(e){return[e(\"x\"),e(\"y\")]}function Qm({top:e,left:t,right:n,bottom:r}){return{x:{min:t,max:n},y:{min:e,max:r}}}function ew(e){return void 0===e||1===e}function tw({scale:e,scaleX:t,scaleY:n}){return!ew(e)||!ew(t)||!ew(n)}function nw(e){return tw(e)||rw(e)||e.z||e.rotate||e.rotateX||e.rotateY}function rw(e){return ow(e.x)||ow(e.y)}function ow(e){return e&&\"0%\"!==e}function iw(e,t,n){return n+t*(e-n)}function aw(e,t,n,r,o){return void 0!==o&&(e=iw(e,o,r)),iw(e,n,r)+t}function sw(e,t=0,n=1,r,o){e.min=aw(e.min,t,n,r,o),e.max=aw(e.max,t,n,r,o)}function lw(e,{x:t,y:n}){sw(e.x,t.translate,t.scale,t.originPoint),sw(e.y,n.translate,n.scale,n.originPoint)}function cw(e){return Number.isInteger(e)||e>1.0000000000001||e<.999999999999?e:1}function dw(e,t){e.min=e.min+t,e.max=e.max+t}function uw(e,t,[n,r,o]){const i=void 0!==t[o]?t[o]:.5,a=Yf(e.min,e.max,i);sw(e,t[n],t[r],a,t.scale)}const hw=[\"x\",\"scaleX\",\"originX\"],pw=[\"y\",\"scaleY\",\"originY\"];function fw(e,t){uw(e.x,t,hw),uw(e.y,t,pw)}function gw(e,t){return Qm(function(e,t){if(!t)return e;const n=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}(e.getBoundingClientRect(),t))}const mw=({current:e})=>e?e.ownerDocument.defaultView:null,ww=new WeakMap;class vw{constructor(e){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic={x:{min:0,max:0},y:{min:0,max:0}},this.visualElement=e}start(e,{snapToCursor:t=!1}={}){const{presenceContext:n}=this.visualElement;if(n&&!1===n.isPresent)return;const{dragSnapToOrigin:r}=this.getProps();this.panSession=new Im(e,{onSessionStart:e=>{const{dragSnapToOrigin:n}=this.getProps();n?this.pauseAnimation():this.stopAnimation(),t&&this.snapToCursor(sf(e,\"page\").point)},onStart:(e,t)=>{const{drag:n,dragPropagation:r,onDragStart:o}=this.getProps();if(n&&!r&&(this.openGlobalLock&&this.openGlobalLock(),this.openGlobalLock=ff(n),!this.openGlobalLock))return;this.isDragging=!0,this.currentDirection=null,this.resolveConstraints(),this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!0,this.visualElement.projection.target=void 0),Jm((e=>{let t=this.getAxisMotionValue(e).get()||0;if(mp.test(t)){const{projection:n}=this.visualElement;if(n&&n.layout){const r=n.layout.layoutBox[e];r&&(t=Wm(r)*(parseFloat(t)/100))}}this.originPoint[e]=t})),o&&Jp.update((()=>o(e,t)),!1,!0);const{animationState:i}=this.visualElement;i&&i.setActive(\"whileDrag\",!0)},onMove:(e,t)=>{const{dragPropagation:n,dragDirectionLock:r,onDirectionLock:o,onDrag:i}=this.getProps();if(!n&&!this.openGlobalLock)return;const{offset:a}=t;if(r&&null===this.currentDirection)return this.currentDirection=function(e,t=10){let n=null;return Math.abs(e.y)>t?n=\"y\":Math.abs(e.x)>t&&(n=\"x\"),n}(a),void(null!==this.currentDirection&&o&&o(this.currentDirection));this.updateAxis(\"x\",t.point,a),this.updateAxis(\"y\",t.point,a),this.visualElement.render(),i&&i(e,t)},onSessionEnd:(e,t)=>this.stop(e,t),resumeAnimation:()=>Jm((e=>{var t;return\"paused\"===this.getAnimationState(e)&&(null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.play())}))},{transformPagePoint:this.visualElement.getTransformPagePoint(),dragSnapToOrigin:r,contextWindow:mw(this.visualElement)})}stop(e,t){const n=this.isDragging;if(this.cancel(),!n)return;const{velocity:r}=t;this.startAnimation(r);const{onDragEnd:o}=this.getProps();o&&Jp.update((()=>o(e,t)))}cancel(){this.isDragging=!1;const{projection:e,animationState:t}=this.visualElement;e&&(e.isAnimationBlocked=!1),this.panSession&&this.panSession.end(),this.panSession=void 0;const{dragPropagation:n}=this.getProps();!n&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),t&&t.setActive(\"whileDrag\",!1)}updateAxis(e,t,n){const{drag:r}=this.getProps();if(!n||!yw(e,r,this.currentDirection))return;const o=this.getAxisMotionValue(e);let i=this.originPoint[e]+n[e];this.constraints&&this.constraints[e]&&(i=function(e,{min:t,max:n},r){return void 0!==t&&e<t?e=r?Yf(t,e,r.min):Math.max(e,t):void 0!==n&&e>n&&(e=r?Yf(n,e,r.max):Math.min(e,n)),e}(i,this.constraints[e],this.elastic[e])),o.set(i)}resolveConstraints(){var e;const{dragConstraints:t,dragElastic:n}=this.getProps(),r=this.visualElement.projection&&!this.visualElement.projection.layout?this.visualElement.projection.measure(!1):null===(e=this.visualElement.projection)||void 0===e?void 0:e.layout,o=this.constraints;t&&Vh(t)?this.constraints||(this.constraints=this.resolveRefConstraints()):this.constraints=!(!t||!r)&&function(e,{top:t,left:n,bottom:r,right:o}){return{x:Um(e.x,n,o),y:Um(e.y,t,r)}}(r.layoutBox,t),this.elastic=function(e=Ym){return!1===e?e=0:!0===e&&(e=Ym),{x:Xm(e,\"left\",\"right\"),y:Xm(e,\"top\",\"bottom\")}}(n),o!==this.constraints&&r&&this.constraints&&!this.hasMutatedConstraints&&Jm((e=>{this.getAxisMotionValue(e)&&(this.constraints[e]=function(e,t){const n={};return void 0!==t.min&&(n.min=t.min-e.min),void 0!==t.max&&(n.max=t.max-e.min),n}(r.layoutBox[e],this.constraints[e]))}))}resolveRefConstraints(){const{dragConstraints:e,onMeasureDragConstraints:t}=this.getProps();if(!e||!Vh(e))return!1;const n=e.current,{projection:r}=this.visualElement;if(!r||!r.layout)return!1;const o=function(e,t,n){const r=gw(e,n),{scroll:o}=t;return o&&(dw(r.x,o.offset.x),dw(r.y,o.offset.y)),r}(n,r.root,this.visualElement.getTransformPagePoint());let i=function(e,t){return{x:Gm(e.x,t.x),y:Gm(e.y,t.y)}}(r.layout.layoutBox,o);if(t){const e=t(function({x:e,y:t}){return{top:t.min,right:e.max,bottom:t.max,left:e.min}}(i));this.hasMutatedConstraints=!!e,e&&(i=Qm(e))}return i}startAnimation(e){const{drag:t,dragMomentum:n,dragElastic:r,dragTransition:o,dragSnapToOrigin:i,onDragTransitionEnd:a}=this.getProps(),s=this.constraints||{},l=Jm((a=>{if(!yw(a,t,this.currentDirection))return;let l=s&&s[a]||{};i&&(l={min:0,max:0});const c=r?200:1e6,d=r?40:1e7,u={type:\"inertia\",velocity:n?e[a]:0,bounceStiffness:c,bounceDamping:d,timeConstant:750,restDelta:1,restSpeed:10,...o,...l};return this.startAxisValueAnimation(a,u)}));return Promise.all(l).then(a)}startAxisValueAnimation(e,t){const n=this.getAxisMotionValue(e);return n.start(am(e,n,0,t))}stopAnimation(){Jm((e=>this.getAxisMotionValue(e).stop()))}pauseAnimation(){Jm((e=>{var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.pause()}))}getAnimationState(e){var t;return null===(t=this.getAxisMotionValue(e).animation)||void 0===t?void 0:t.state}getAxisMotionValue(e){const t=\"_drag\"+e.toUpperCase(),n=this.visualElement.getProps();return n[t]||this.visualElement.getValue(e,(n.initial?n.initial[e]:void 0)||0)}snapToCursor(e){Jm((t=>{const{drag:n}=this.getProps();if(!yw(t,n,this.currentDirection))return;const{projection:r}=this.visualElement,o=this.getAxisMotionValue(t);if(r&&r.layout){const{min:n,max:i}=r.layout.layoutBox[t];o.set(e[t]-Yf(n,i,.5))}}))}scalePositionWithinConstraints(){if(!this.visualElement.current)return;const{drag:e,dragConstraints:t}=this.getProps(),{projection:n}=this.visualElement;if(!Vh(t)||!n||!this.constraints)return;this.stopAnimation();const r={x:0,y:0};Jm((e=>{const t=this.getAxisMotionValue(e);if(t){const n=t.get();r[e]=function(e,t){let n=.5;const r=Wm(e),o=Wm(t);return o>r?n=Gf(t.min,t.max-r,e.min):r>o&&(n=Gf(e.min,e.max-o,t.min)),ip(0,1,n)}({min:n,max:n},this.constraints[e])}}));const{transformTemplate:o}=this.visualElement.getProps();this.visualElement.current.style.transform=o?o({},\"\"):\"none\",n.root&&n.root.updateScroll(),n.updateLayout(),this.resolveConstraints(),Jm((t=>{if(!yw(t,e,null))return;const n=this.getAxisMotionValue(t),{min:o,max:i}=this.constraints[t];n.set(Yf(o,i,r[t]))}))}addListeners(){if(!this.visualElement.current)return;ww.set(this.visualElement,this);const e=lf(this.visualElement.current,\"pointerdown\",(e=>{const{drag:t,dragListener:n=!0}=this.getProps();t&&n&&this.start(e)})),t=()=>{const{dragConstraints:e}=this.getProps();Vh(e)&&(this.constraints=this.resolveRefConstraints())},{projection:n}=this.visualElement,r=n.addEventListener(\"measure\",t);n&&!n.layout&&(n.root&&n.root.updateScroll(),n.updateLayout()),t();const o=of(window,\"resize\",(()=>this.scalePositionWithinConstraints())),i=n.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t})=>{this.isDragging&&t&&(Jm((t=>{const n=this.getAxisMotionValue(t);n&&(this.originPoint[t]+=e[t].translate,n.set(n.get()+e[t].translate))})),this.visualElement.render())}));return()=>{o(),e(),r(),i&&i()}}getProps(){const e=this.visualElement.getProps(),{drag:t=!1,dragDirectionLock:n=!1,dragPropagation:r=!1,dragConstraints:o=!1,dragElastic:i=Ym,dragMomentum:a=!0}=e;return{...e,drag:t,dragDirectionLock:n,dragPropagation:r,dragConstraints:o,dragElastic:i,dragMomentum:a}}}function yw(e,t,n){return!(!0!==t&&t!==e||null!==n&&n!==e)}const bw=e=>(t,n)=>{e&&Jp.update((()=>e(t,n)))};const Cw={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function kw(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}const xw={correct:(e,t)=>{if(!t.target)return e;if(\"string\"==typeof e){if(!wp.test(e))return e;e=parseFloat(e)}return`${kw(e,t.target.x)}% ${kw(e,t.target.y)}%`}},Lw={correct:(e,{treeScale:t,projectionDelta:n})=>{const r=e,o=gg.parse(e);if(o.length>5)return r;const i=gg.createTransformer(e),a=\"number\"!=typeof o[0]?1:0,s=n.x.scale*t.x,l=n.y.scale*t.y;o[0+a]/=s,o[1+a]/=l;const c=Yf(s,l,.5);return\"number\"==typeof o[2+a]&&(o[2+a]/=c),\"number\"==typeof o[3+a]&&(o[3+a]/=c),i(o)}};class Mw extends react__WEBPACK_IMPORTED_MODULE_1__.Component{componentDidMount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n,layoutId:r}=this.props,{projection:o}=e;var i;i=Vw,Object.assign(qh,i),o&&(t.group&&t.group.add(o),n&&n.register&&r&&n.register(o),o.root.didUpdate(),o.addEventListener(\"animationComplete\",(()=>{this.safeToRemove()})),o.setOptions({...o.options,onExitComplete:()=>this.safeToRemove()})),Cw.hasEverUpdated=!0}getSnapshotBeforeUpdate(e){const{layoutDependency:t,visualElement:n,drag:r,isPresent:o}=this.props,i=n.projection;return i&&(i.isPresent=o,r||e.layoutDependency!==t||void 0===t?i.willUpdate():this.safeToRemove(),e.isPresent!==o&&(o?i.promote():i.relegate()||Jp.postRender((()=>{const e=i.getStack();(!e||!e.members.length)&&this.safeToRemove()})))),null}componentDidUpdate(){const{projection:e}=this.props.visualElement;e&&(e.root.didUpdate(),Mh.postRender((()=>{!e.currentAnimation&&e.isLead()&&this.safeToRemove()})))}componentWillUnmount(){const{visualElement:e,layoutGroup:t,switchLayoutGroup:n}=this.props,{projection:r}=e;r&&(r.scheduleCheckAfterUnmount(),t&&t.group&&t.group.remove(r),n&&n.deregister&&n.deregister(r))}safeToRemove(){const{safeToRemove:e}=this.props;e&&e()}render(){return null}}function Hw(e){const[t,n]=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fh);if(null===e)return[!0,null];const{isPresent:t,onExitComplete:n,register:r}=e,o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>r(o)),[]),!t&&n?[!1,()=>n&&n(o)]:[!0]}(),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Th);return react__WEBPACK_IMPORTED_MODULE_1__.createElement(Mw,{...e,layoutGroup:r,switchLayoutGroup:(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Ph),isPresent:t,safeToRemove:n})}const Vw={borderRadius:{...xw,applyTo:[\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\"]},borderTopLeftRadius:xw,borderTopRightRadius:xw,borderBottomLeftRadius:xw,borderBottomRightRadius:xw,boxShadow:Lw},Rw=[\"TopLeft\",\"TopRight\",\"BottomLeft\",\"BottomRight\"],Sw=Rw.length,Fw=e=>\"string\"==typeof e?parseFloat(e):e,Ew=e=>\"number\"==typeof e||wp.test(e);function Nw(e,t){return void 0!==e[t]?e[t]:e.borderRadius}const Iw=jw(0,.5,Zf),Bw=jw(.5,.95,Kp);function jw(e,t,n){return r=>r<e?0:r>t?1:n(Gf(e,t,r))}function $w(e,t){e.min=t.min,e.max=t.max}function Aw(e,t){$w(e.x,t.x),$w(e.y,t.y)}function Tw(e,t,n,r,o){return e=iw(e-=t,1/n,r),void 0!==o&&(e=iw(e,1/o,r)),e}function Pw(e,t,[n,r,o],i,a){!function(e,t=0,n=1,r=.5,o,i=e,a=e){if(mp.test(t)&&(t=parseFloat(t),t=Yf(a.min,a.max,t/100)-a.min),\"number\"!=typeof t)return;let s=Yf(i.min,i.max,r);e===i&&(s-=t),e.min=Tw(e.min,t,n,s,o),e.max=Tw(e.max,t,n,s,o)}(e,t[n],t[r],t[o],t.scale,i,a)}const Ww=[\"x\",\"scaleX\",\"originX\"],Zw=[\"y\",\"scaleY\",\"originY\"];function Dw(e,t,n,r){Pw(e.x,t,Ww,n?n.x:void 0,r?r.x:void 0),Pw(e.y,t,Zw,n?n.y:void 0,r?r.y:void 0)}function zw(e){return 0===e.translate&&1===e.scale}function Ow(e){return zw(e.x)&&zw(e.y)}function _w(e,t){return Math.round(e.x.min)===Math.round(t.x.min)&&Math.round(e.x.max)===Math.round(t.x.max)&&Math.round(e.y.min)===Math.round(t.y.min)&&Math.round(e.y.max)===Math.round(t.y.max)}function qw(e){return Wm(e.x)/Wm(e.y)}class Uw{constructor(){this.members=[]}add(e){cm(this.members,e),e.scheduleRender()}remove(e){if(dm(this.members,e),e===this.prevLead&&(this.prevLead=void 0),e===this.lead){const e=this.members[this.members.length-1];e&&this.promote(e)}}relegate(e){const t=this.members.findIndex((t=>e===t));if(0===t)return!1;let n;for(let e=t;e>=0;e--){const t=this.members[e];if(!1!==t.isPresent){n=t;break}}return!!n&&(this.promote(n),!0)}promote(e,t){const n=this.lead;if(e!==n&&(this.prevLead=n,this.lead=e,e.show(),n)){n.instance&&n.scheduleRender(),e.scheduleRender(),e.resumeFrom=n,t&&(e.resumeFrom.preserveOpacity=!0),n.snapshot&&(e.snapshot=n.snapshot,e.snapshot.latestValues=n.animationValues||n.latestValues),e.root&&e.root.isUpdating&&(e.isLayoutDirty=!0);const{crossfade:r}=e.options;!1===r&&n.hide()}}exitAnimationComplete(){this.members.forEach((e=>{const{options:t,resumingFrom:n}=e;t.onExitComplete&&t.onExitComplete(),n&&n.options.onExitComplete&&n.options.onExitComplete()}))}scheduleRender(){this.members.forEach((e=>{e.instance&&e.scheduleRender(!1)}))}removeLeadSnapshot(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)}}function Gw(e,t,n){let r=\"\";const o=e.x.translate/t.x,i=e.y.translate/t.y;if((o||i)&&(r=`translate3d(${o}px, ${i}px, 0) `),(1!==t.x||1!==t.y)&&(r+=`scale(${1/t.x}, ${1/t.y}) `),n){const{rotate:e,rotateX:t,rotateY:o}=n;e&&(r+=`rotate(${e}deg) `),t&&(r+=`rotateX(${t}deg) `),o&&(r+=`rotateY(${o}deg) `)}const a=e.x.scale*t.x,s=e.y.scale*t.y;return(1!==a||1!==s)&&(r+=`scale(${a}, ${s})`),r||\"none\"}const Yw=(e,t)=>e.depth-t.depth;class Xw{constructor(){this.children=[],this.isDirty=!1}add(e){cm(this.children,e),this.isDirty=!0}remove(e){dm(this.children,e),this.isDirty=!0}forEach(e){this.isDirty&&this.children.sort(Yw),this.isDirty=!1,this.children.forEach(e)}}const Kw=[\"\",\"X\",\"Y\",\"Z\"],Jw={visibility:\"hidden\"};let Qw=0;const ev={type:\"projectionFrame\",totalNodes:0,resolvedTargetDeltas:0,recalculatedProjection:0};function tv({attachResizeListener:e,defaultParent:t,measureScroll:n,checkIsScrollRoot:r,resetTransform:o}){return class{constructor(e={},n=t?.()){this.id=Qw++,this.animationId=0,this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.isProjectionDirty=!1,this.isSharedProjectionDirty=!1,this.isTransformDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.hasTreeAnimated=!1,this.updateScheduled=!1,this.projectionUpdateScheduled=!1,this.checkUpdateFailed=()=>{this.isUpdating&&(this.isUpdating=!1,this.clearAllSnapshots())},this.updateProjection=()=>{var e;this.projectionUpdateScheduled=!1,ev.totalNodes=ev.resolvedTargetDeltas=ev.recalculatedProjection=0,this.nodes.forEach(ov),this.nodes.forEach(uv),this.nodes.forEach(hv),this.nodes.forEach(iv),e=ev,window.MotionDebug&&window.MotionDebug.record(e)},this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.latestValues=e,this.root=n?n.root||n:this,this.path=n?[...n.path,n]:[],this.parent=n,this.depth=n?n.depth+1:0;for(let e=0;e<this.path.length;e++)this.path[e].shouldResetTransform=!0;this.root===this&&(this.nodes=new Xw)}addEventListener(e,t){return this.eventHandlers.has(e)||this.eventHandlers.set(e,new um),this.eventHandlers.get(e).add(t)}notifyListeners(e,...t){const n=this.eventHandlers.get(e);n&&n.notify(...t)}hasListeners(e){return this.eventHandlers.has(e)}mount(t,n=this.root.hasTreeAnimated){if(this.instance)return;var r;this.isSVG=(r=t)instanceof SVGElement&&\"svg\"!==r.tagName,this.instance=t;const{layoutId:o,layout:i,visualElement:a}=this.options;if(a&&!a.current&&a.mount(t),this.root.nodes.add(this),this.parent&&this.parent.children.add(this),n&&(i||o)&&(this.isLayoutDirty=!0),e){let n;const r=()=>this.root.updateBlockedByResize=!1;e(t,(()=>{this.root.updateBlockedByResize=!0,n&&n(),n=function(e,t){const n=Pg.now(),r=({timestamp:o})=>{const i=o-n;i>=t&&(Qp(r),e(i-t))};return Jp.read(r,!0),()=>Qp(r)}(r,250),Cw.hasAnimatedSinceResize&&(Cw.hasAnimatedSinceResize=!1,this.nodes.forEach(dv))}))}o&&this.root.registerSharedNode(o,this),!1!==this.options.animate&&a&&(o||i)&&this.addEventListener(\"didUpdate\",(({delta:e,hasLayoutChanged:t,hasRelativeTargetChanged:n,layout:r})=>{if(this.isTreeAnimationBlocked())return this.target=void 0,void(this.relativeTarget=void 0);const o=this.options.transition||a.getDefaultTransition()||vv,{onLayoutAnimationStart:i,onLayoutAnimationComplete:s}=a.getProps(),l=!this.targetLayout||!_w(this.targetLayout,r)||n,c=!t&&n;if(this.options.layoutRoot||this.resumeFrom&&this.resumeFrom.instance||c||t&&(l||!this.currentAnimation)){this.resumeFrom&&(this.resumingFrom=this.resumeFrom,this.resumingFrom.resumingFrom=void 0),this.setAnimationOrigin(e,c);const t={...im(o,\"layout\"),onPlay:i,onComplete:s};(a.shouldReduceMotion||this.options.layoutRoot)&&(t.delay=0,t.type=!1),this.startAnimation(t)}else t||dv(this),this.isLead()&&this.options.onExitComplete&&this.options.onExitComplete();this.targetLayout=r}))}unmount(){this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this);const e=this.getStack();e&&e.remove(this),this.parent&&this.parent.children.delete(this),this.instance=void 0,Qp(this.updateProjection)}blockUpdate(){this.updateManuallyBlocked=!0}unblockUpdate(){this.updateManuallyBlocked=!1}isUpdateBlocked(){return this.updateManuallyBlocked||this.updateBlockedByResize}isTreeAnimationBlocked(){return this.isAnimationBlocked||this.parent&&this.parent.isTreeAnimationBlocked()||!1}startUpdate(){this.isUpdateBlocked()||(this.isUpdating=!0,this.nodes&&this.nodes.forEach(pv),this.animationId++)}getTransformTemplate(){const{visualElement:e}=this.options;return e&&e.getProps().transformTemplate}willUpdate(e=!0){if(this.root.hasTreeAnimated=!0,this.root.isUpdateBlocked())return void(this.options.onExitComplete&&this.options.onExitComplete());if(!this.root.isUpdating&&this.root.startUpdate(),this.isLayoutDirty)return;this.isLayoutDirty=!0;for(let e=0;e<this.path.length;e++){const t=this.path[e];t.shouldResetTransform=!0,t.updateScroll(\"snapshot\"),t.options.layoutRoot&&t.willUpdate(!1)}const{layoutId:t,layout:n}=this.options;if(void 0===t&&!n)return;const r=this.getTransformTemplate();this.prevTransformTemplateValue=r?r(this.latestValues,\"\"):void 0,this.updateSnapshot(),e&&this.notifyListeners(\"willUpdate\")}update(){if(this.updateScheduled=!1,this.isUpdateBlocked())return this.unblockUpdate(),this.clearAllSnapshots(),void this.nodes.forEach(sv);this.isUpdating||this.nodes.forEach(lv),this.isUpdating=!1,window.HandoffCancelAllAnimations&&window.HandoffCancelAllAnimations(),this.nodes.forEach(cv),this.nodes.forEach(nv),this.nodes.forEach(rv),this.clearAllSnapshots();const e=Pg.now();ef.delta=ip(0,1e3/60,e-ef.timestamp),ef.timestamp=e,ef.isProcessing=!0,tf.update.process(ef),tf.preRender.process(ef),tf.render.process(ef),ef.isProcessing=!1}didUpdate(){this.updateScheduled||(this.updateScheduled=!0,Mh.read((()=>this.update())))}clearAllSnapshots(){this.nodes.forEach(av),this.sharedNodes.forEach(fv)}scheduleUpdateProjection(){this.projectionUpdateScheduled||(this.projectionUpdateScheduled=!0,Jp.preRender(this.updateProjection,!1,!0))}scheduleCheckAfterUnmount(){Jp.postRender((()=>{this.isLayoutDirty?this.root.didUpdate():this.root.checkUpdateFailed()}))}updateSnapshot(){this.snapshot||!this.instance||(this.snapshot=this.measure())}updateLayout(){if(!(this.instance&&(this.updateScroll(),this.options.alwaysMeasureLayout&&this.isLead()||this.isLayoutDirty)))return;if(this.resumeFrom&&!this.resumeFrom.instance)for(let e=0;e<this.path.length;e++)this.path[e].updateScroll();const e=this.layout;this.layout=this.measure(!1),this.layoutCorrected={x:{min:0,max:0},y:{min:0,max:0}},this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners(\"measure\",this.layout.layoutBox);const{visualElement:t}=this.options;t&&t.notify(\"LayoutMeasure\",this.layout.layoutBox,e?e.layoutBox:void 0)}updateScroll(e=\"measure\"){let t=!(!this.options.layoutScroll||!this.instance);this.scroll&&this.scroll.animationId===this.root.animationId&&this.scroll.phase===e&&(t=!1),t&&(this.scroll={animationId:this.root.animationId,phase:e,isRoot:r(this.instance),offset:n(this.instance)})}resetTransform(){if(!o)return;const e=this.isLayoutDirty||this.shouldResetTransform,t=this.projectionDelta&&!Ow(this.projectionDelta),n=this.getTransformTemplate(),r=n?n(this.latestValues,\"\"):void 0,i=r!==this.prevTransformTemplateValue;e&&(t||nw(this.latestValues)||i)&&(o(this.instance,r),this.shouldResetTransform=!1,this.scheduleRender())}measure(e=!0){const t=this.measurePageBox();let n=this.removeElementScroll(t);return e&&(n=this.removeTransform(n)),Cv((r=n).x),Cv(r.y),{animationId:this.root.animationId,measuredBox:t,layoutBox:n,latestValues:{},source:this.id};var r}measurePageBox(){const{visualElement:e}=this.options;if(!e)return{x:{min:0,max:0},y:{min:0,max:0}};const t=e.measureViewportBox(),{scroll:n}=this.root;return n&&(dw(t.x,n.offset.x),dw(t.y,n.offset.y)),t}removeElementScroll(e){const t={x:{min:0,max:0},y:{min:0,max:0}};Aw(t,e);for(let n=0;n<this.path.length;n++){const r=this.path[n],{scroll:o,options:i}=r;if(r!==this.root&&o&&i.layoutScroll){if(o.isRoot){Aw(t,e);const{scroll:n}=this.root;n&&(dw(t.x,-n.offset.x),dw(t.y,-n.offset.y))}dw(t.x,o.offset.x),dw(t.y,o.offset.y)}}return t}applyTransform(e,t=!1){const n={x:{min:0,max:0},y:{min:0,max:0}};Aw(n,e);for(let e=0;e<this.path.length;e++){const r=this.path[e];!t&&r.options.layoutScroll&&r.scroll&&r!==r.root&&fw(n,{x:-r.scroll.offset.x,y:-r.scroll.offset.y}),nw(r.latestValues)&&fw(n,r.latestValues)}return nw(this.latestValues)&&fw(n,this.latestValues),n}removeTransform(e){const t={x:{min:0,max:0},y:{min:0,max:0}};Aw(t,e);for(let e=0;e<this.path.length;e++){const n=this.path[e];if(!n.instance||!nw(n.latestValues))continue;tw(n.latestValues)&&n.updateSnapshot();const r={x:{min:0,max:0},y:{min:0,max:0}};Aw(r,n.measurePageBox()),Dw(t,n.latestValues,n.snapshot?n.snapshot.layoutBox:void 0,r)}return nw(this.latestValues)&&Dw(t,this.latestValues),t}setTargetDelta(e){this.targetDelta=e,this.root.scheduleUpdateProjection(),this.isProjectionDirty=!0}setOptions(e){this.options={...this.options,...e,crossfade:void 0===e.crossfade||e.crossfade}}clearMeasurements(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1}forceRelativeParentToResolveTarget(){this.relativeParent&&this.relativeParent.resolvedRelativeTargetAt!==ef.timestamp&&this.relativeParent.resolveTargetDelta(!0)}resolveTargetDelta(e=!1){var t;const n=this.getLead();this.isProjectionDirty||(this.isProjectionDirty=n.isProjectionDirty),this.isTransformDirty||(this.isTransformDirty=n.isTransformDirty),this.isSharedProjectionDirty||(this.isSharedProjectionDirty=n.isSharedProjectionDirty);const r=!!this.resumingFrom||this!==n;if(!(e||r&&this.isSharedProjectionDirty||this.isProjectionDirty||null!==(t=this.parent)&&void 0!==t&&t.isProjectionDirty||this.attemptToResolveRelativeTarget))return;const{layout:o,layoutId:i}=this.options;if(this.layout&&(o||i)){if(this.resolvedRelativeTargetAt=ef.timestamp,!this.targetDelta&&!this.relativeTarget){const e=this.getClosestProjectingParent();e&&e.layout&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},qm(this.relativeTargetOrigin,this.layout.layoutBox,e.layout.layoutBox),Aw(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}if(this.relativeTarget||this.targetDelta){if(this.target||(this.target={x:{min:0,max:0},y:{min:0,max:0}},this.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}}),this.relativeTarget&&this.relativeTargetOrigin&&this.relativeParent&&this.relativeParent.target?(this.forceRelativeParentToResolveTarget(),a=this.target,s=this.relativeTarget,l=this.relativeParent.target,Om(a.x,s.x,l.x),Om(a.y,s.y,l.y)):this.targetDelta?(this.resumingFrom?this.target=this.applyTransform(this.layout.layoutBox):Aw(this.target,this.layout.layoutBox),lw(this.target,this.targetDelta)):Aw(this.target,this.layout.layoutBox),this.attemptToResolveRelativeTarget){this.attemptToResolveRelativeTarget=!1;const e=this.getClosestProjectingParent();e&&!!e.resumingFrom==!!this.resumingFrom&&!e.options.layoutScroll&&e.target&&1!==this.animationProgress?(this.relativeParent=e,this.forceRelativeParentToResolveTarget(),this.relativeTarget={x:{min:0,max:0},y:{min:0,max:0}},this.relativeTargetOrigin={x:{min:0,max:0},y:{min:0,max:0}},qm(this.relativeTargetOrigin,this.target,e.target),Aw(this.relativeTarget,this.relativeTargetOrigin)):this.relativeParent=this.relativeTarget=void 0}ev.resolvedTargetDeltas++}}var a,s,l}getClosestProjectingParent(){if(this.parent&&!tw(this.parent.latestValues)&&!rw(this.parent.latestValues))return this.parent.isProjecting()?this.parent:this.parent.getClosestProjectingParent()}isProjecting(){return!(!(this.relativeTarget||this.targetDelta||this.options.layoutRoot)||!this.layout)}calcProjection(){var e;const t=this.getLead(),n=!!this.resumingFrom||this!==t;let r=!0;if((this.isProjectionDirty||!(null===(e=this.parent)||void 0===e)&&e.isProjectionDirty)&&(r=!1),n&&(this.isSharedProjectionDirty||this.isTransformDirty)&&(r=!1),this.resolvedRelativeTargetAt===ef.timestamp&&(r=!1),r)return;const{layout:o,layoutId:i}=this.options;if(this.isTreeAnimating=!!(this.parent&&this.parent.isTreeAnimating||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!this.layout||!o&&!i)return;Aw(this.layoutCorrected,this.layout.layoutBox);const a=this.treeScale.x,s=this.treeScale.y;(function(e,t,n,r=!1){const o=n.length;if(!o)return;let i,a;t.x=t.y=1;for(let s=0;s<o;s++){i=n[s],a=i.projectionDelta;const o=i.instance;o&&o.style&&\"contents\"===o.style.display||(r&&i.options.layoutScroll&&i.scroll&&i!==i.root&&fw(e,{x:-i.scroll.offset.x,y:-i.scroll.offset.y}),a&&(t.x*=a.x.scale,t.y*=a.y.scale,lw(e,a)),r&&nw(i.latestValues)&&fw(e,i.latestValues))}t.x=cw(t.x),t.y=cw(t.y)})(this.layoutCorrected,this.treeScale,this.path,n),t.layout&&!t.target&&(1!==this.treeScale.x||1!==this.treeScale.y)&&(t.target=t.layout.layoutBox,t.targetWithTransforms={x:{min:0,max:0},y:{min:0,max:0}});const{target:l}=t;if(!l)return void(this.projectionTransform&&(this.projectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionTransform=\"none\",this.scheduleRender()));this.projectionDelta||(this.projectionDelta={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}},this.projectionDeltaWithTransform={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}});const c=this.projectionTransform;zm(this.projectionDelta,this.layoutCorrected,l,this.latestValues),this.projectionTransform=Gw(this.projectionDelta,this.treeScale),(this.projectionTransform!==c||this.treeScale.x!==a||this.treeScale.y!==s)&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners(\"projectionUpdate\",l)),ev.recalculatedProjection++}hide(){this.isVisible=!1}show(){this.isVisible=!0}scheduleRender(e=!0){if(this.options.scheduleRender&&this.options.scheduleRender(),e){const e=this.getStack();e&&e.scheduleRender()}this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)}setAnimationOrigin(e,t=!1){const n=this.snapshot,r=n?n.latestValues:{},o={...this.latestValues},i={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};(!this.relativeParent||!this.relativeParent.options.layoutRoot)&&(this.relativeTarget=this.relativeTargetOrigin=void 0),this.attemptToResolveRelativeTarget=!t;const a={x:{min:0,max:0},y:{min:0,max:0}},s=(n?n.source:void 0)!==(this.layout?this.layout.source:void 0),l=this.getStack(),c=!l||l.members.length<=1,d=!(!s||c||!0!==this.options.crossfade||this.path.some(wv));let u;this.animationProgress=0,this.mixTargetDelta=t=>{const n=t/1e3;var l,h,p,f,g,m;gv(i.x,e.x,n),gv(i.y,e.y,n),this.setTargetDelta(i),this.relativeTarget&&this.relativeTargetOrigin&&this.layout&&this.relativeParent&&this.relativeParent.layout&&(qm(a,this.layout.layoutBox,this.relativeParent.layout.layoutBox),p=this.relativeTarget,f=this.relativeTargetOrigin,g=a,m=n,mv(p.x,f.x,g.x,m),mv(p.y,f.y,g.y,m),u&&(l=this.relativeTarget,h=u,l.x.min===h.x.min&&l.x.max===h.x.max&&l.y.min===h.y.min&&l.y.max===h.y.max)&&(this.isProjectionDirty=!1),u||(u={x:{min:0,max:0},y:{min:0,max:0}}),Aw(u,this.relativeTarget)),s&&(this.animationValues=o,function(e,t,n,r,o,i){o?(e.opacity=Yf(0,void 0!==n.opacity?n.opacity:1,Iw(r)),e.opacityExit=Yf(void 0!==t.opacity?t.opacity:1,0,Bw(r))):i&&(e.opacity=Yf(void 0!==t.opacity?t.opacity:1,void 0!==n.opacity?n.opacity:1,r));for(let o=0;o<Sw;o++){const i=`border${Rw[o]}Radius`;let a=Nw(t,i),s=Nw(n,i);void 0===a&&void 0===s||(a||(a=0),s||(s=0),0===a||0===s||Ew(a)===Ew(s)?(e[i]=Math.max(Yf(Fw(a),Fw(s),r),0),(mp.test(s)||mp.test(a))&&(e[i]+=\"%\")):e[i]=s)}(t.rotate||n.rotate)&&(e.rotate=Yf(t.rotate||0,n.rotate||0,r))}(o,r,this.latestValues,n,d,c)),this.root.scheduleUpdateProjection(),this.scheduleRender(),this.animationProgress=n},this.mixTargetDelta(this.options.layoutRoot?1e3:0)}startAnimation(e){this.notifyListeners(\"animationStart\"),this.currentAnimation&&this.currentAnimation.stop(),this.resumingFrom&&this.resumingFrom.currentAnimation&&this.resumingFrom.currentAnimation.stop(),this.pendingAnimation&&(Qp(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=Jp.update((()=>{Cw.hasAnimatedSinceResize=!0,this.currentAnimation=function(e,t,n){const r=Xh(e)?e:pm(e);return r.start(am(\"\",r,t,n)),r.animation}(0,1e3,{...e,onUpdate:t=>{this.mixTargetDelta(t),e.onUpdate&&e.onUpdate(t)},onComplete:()=>{e.onComplete&&e.onComplete(),this.completeAnimation()}}),this.resumingFrom&&(this.resumingFrom.currentAnimation=this.currentAnimation),this.pendingAnimation=void 0}))}completeAnimation(){this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0);const e=this.getStack();e&&e.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners(\"animationComplete\")}finishAnimation(){this.currentAnimation&&(this.mixTargetDelta&&this.mixTargetDelta(1e3),this.currentAnimation.stop()),this.completeAnimation()}applyTransformsToTarget(){const e=this.getLead();let{targetWithTransforms:t,target:n,layout:r,latestValues:o}=e;if(t&&n&&r){if(this!==e&&this.layout&&r&&kv(this.options.animationType,this.layout.layoutBox,r.layoutBox)){n=this.target||{x:{min:0,max:0},y:{min:0,max:0}};const t=Wm(this.layout.layoutBox.x);n.x.min=e.target.x.min,n.x.max=n.x.min+t;const r=Wm(this.layout.layoutBox.y);n.y.min=e.target.y.min,n.y.max=n.y.min+r}Aw(t,n),fw(t,o),zm(this.projectionDeltaWithTransform,this.layoutCorrected,t,o)}}registerSharedNode(e,t){this.sharedNodes.has(e)||this.sharedNodes.set(e,new Uw),this.sharedNodes.get(e).add(t);const n=t.options.initialPromotionConfig;t.promote({transition:n?n.transition:void 0,preserveFollowOpacity:n&&n.shouldPreserveFollowOpacity?n.shouldPreserveFollowOpacity(t):void 0})}isLead(){const e=this.getStack();return!e||e.lead===this}getLead(){var e;const{layoutId:t}=this.options;return t&&(null===(e=this.getStack())||void 0===e?void 0:e.lead)||this}getPrevLead(){var e;const{layoutId:t}=this.options;return t?null===(e=this.getStack())||void 0===e?void 0:e.prevLead:void 0}getStack(){const{layoutId:e}=this.options;if(e)return this.root.sharedNodes.get(e)}promote({needsReset:e,transition:t,preserveFollowOpacity:n}={}){const r=this.getStack();r&&r.promote(this,n),e&&(this.projectionDelta=void 0,this.needsReset=!0),t&&this.setOptions({transition:t})}relegate(){const e=this.getStack();return!!e&&e.relegate(this)}resetRotation(){const{visualElement:e}=this.options;if(!e)return;let t=!1;const{latestValues:n}=e;if((n.rotate||n.rotateX||n.rotateY||n.rotateZ)&&(t=!0),!t)return;const r={};for(let t=0;t<Kw.length;t++){const o=\"rotate\"+Kw[t];n[o]&&(r[o]=n[o],e.setStaticValue(o,0))}e.render();for(const t in r)e.setStaticValue(t,r[t]);e.scheduleRender()}getProjectionStyles(e){var t,n;if(!this.instance||this.isSVG)return;if(!this.isVisible)return Jw;const r={visibility:\"\"},o=this.getTransformTemplate();if(this.needsReset)return this.needsReset=!1,r.opacity=\"\",r.pointerEvents=Gp(e?.pointerEvents)||\"\",r.transform=o?o(this.latestValues,\"\"):\"none\",r;const i=this.getLead();if(!this.projectionDelta||!this.layout||!i.target){const t={};return this.options.layoutId&&(t.opacity=void 0!==this.latestValues.opacity?this.latestValues.opacity:1,t.pointerEvents=Gp(e?.pointerEvents)||\"\"),this.hasProjected&&!nw(this.latestValues)&&(t.transform=o?o({},\"\"):\"none\",this.hasProjected=!1),t}const a=i.animationValues||i.latestValues;this.applyTransformsToTarget(),r.transform=Gw(this.projectionDeltaWithTransform,this.treeScale,a),o&&(r.transform=o(a,r.transform));const{x:s,y:l}=this.projectionDelta;r.transformOrigin=`${100*s.origin}% ${100*l.origin}% 0`,i.animationValues?r.opacity=i===this?null!==(n=null!==(t=a.opacity)&&void 0!==t?t:this.latestValues.opacity)&&void 0!==n?n:1:this.preserveOpacity?this.latestValues.opacity:a.opacityExit:r.opacity=i===this?void 0!==a.opacity?a.opacity:\"\":void 0!==a.opacityExit?a.opacityExit:0;for(const e in qh){if(void 0===a[e])continue;const{correct:t,applyTo:n}=qh[e],o=\"none\"===r.transform?a[e]:t(a[e],i);if(n){const e=n.length;for(let t=0;t<e;t++)r[n[t]]=o}else r[e]=o}return this.options.layoutId&&(r.pointerEvents=i===this?Gp(e?.pointerEvents)||\"\":\"none\"),r}clearSnapshot(){this.resumeFrom=this.snapshot=void 0}resetTree(){this.root.nodes.forEach((e=>{var t;return null===(t=e.currentAnimation)||void 0===t?void 0:t.stop()})),this.root.nodes.forEach(sv),this.root.sharedNodes.clear()}}}function nv(e){e.updateLayout()}function rv(e){var t;const n=(null===(t=e.resumeFrom)||void 0===t?void 0:t.snapshot)||e.snapshot;if(e.isLead()&&e.layout&&n&&e.hasListeners(\"didUpdate\")){const{layoutBox:t,measuredBox:r}=e.layout,{animationType:o}=e.options,i=n.source!==e.layout.source;\"size\"===o?Jm((e=>{const r=i?n.measuredBox[e]:n.layoutBox[e],o=Wm(r);r.min=t[e].min,r.max=r.min+o})):kv(o,n.layoutBox,t)&&Jm((r=>{const o=i?n.measuredBox[r]:n.layoutBox[r],a=Wm(t[r]);o.max=o.min+a,e.relativeTarget&&!e.currentAnimation&&(e.isProjectionDirty=!0,e.relativeTarget[r].max=e.relativeTarget[r].min+a)}));const a={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};zm(a,t,n.layoutBox);const s={x:{translate:0,scale:1,origin:0,originPoint:0},y:{translate:0,scale:1,origin:0,originPoint:0}};i?zm(s,e.applyTransform(r,!0),n.measuredBox):zm(s,t,n.layoutBox);const l=!Ow(a);let c=!1;if(!e.resumeFrom){const r=e.getClosestProjectingParent();if(r&&!r.resumeFrom){const{snapshot:o,layout:i}=r;if(o&&i){const a={x:{min:0,max:0},y:{min:0,max:0}};qm(a,n.layoutBox,o.layoutBox);const s={x:{min:0,max:0},y:{min:0,max:0}};qm(s,t,i.layoutBox),_w(a,s)||(c=!0),r.options.layoutRoot&&(e.relativeTarget=s,e.relativeTargetOrigin=a,e.relativeParent=r)}}}e.notifyListeners(\"didUpdate\",{layout:t,snapshot:n,delta:s,layoutDelta:a,hasLayoutChanged:l,hasRelativeTargetChanged:c})}else if(e.isLead()){const{onExitComplete:t}=e.options;t&&t()}e.options.transition=void 0}function ov(e){ev.totalNodes++,e.parent&&(e.isProjecting()||(e.isProjectionDirty=e.parent.isProjectionDirty),e.isSharedProjectionDirty||(e.isSharedProjectionDirty=!!(e.isProjectionDirty||e.parent.isProjectionDirty||e.parent.isSharedProjectionDirty)),e.isTransformDirty||(e.isTransformDirty=e.parent.isTransformDirty))}function iv(e){e.isProjectionDirty=e.isSharedProjectionDirty=e.isTransformDirty=!1}function av(e){e.clearSnapshot()}function sv(e){e.clearMeasurements()}function lv(e){e.isLayoutDirty=!1}function cv(e){const{visualElement:t}=e.options;t&&t.getProps().onBeforeLayoutMeasure&&t.notify(\"BeforeLayoutMeasure\"),e.resetTransform()}function dv(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0,e.isProjectionDirty=!0}function uv(e){e.resolveTargetDelta()}function hv(e){e.calcProjection()}function pv(e){e.resetRotation()}function fv(e){e.removeLeadSnapshot()}function gv(e,t,n){e.translate=Yf(t.translate,0,n),e.scale=Yf(t.scale,1,n),e.origin=t.origin,e.originPoint=t.originPoint}function mv(e,t,n,r){e.min=Yf(t.min,n.min,r),e.max=Yf(t.max,n.max,r)}function wv(e){return e.animationValues&&void 0!==e.animationValues.opacityExit}const vv={duration:.45,ease:[.4,0,.1,1]},yv=e=>typeof navigator<\"u\"&&navigator.userAgent&&navigator.userAgent.toLowerCase().includes(e),bv=yv(\"applewebkit/\")&&!yv(\"chrome/\")?Math.round:Kp;function Cv(e){e.min=bv(e.min),e.max=bv(e.max)}function kv(e,t,n){return\"position\"===e||\"preserve-aspect\"===e&&!Zm(qw(t),qw(n),.2)}const xv=tv({attachResizeListener:(e,t)=>of(e,\"resize\",t),measureScroll:()=>({x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}),checkIsScrollRoot:()=>!0}),Lv={current:void 0},Mv=tv({measureScroll:e=>({x:e.scrollLeft,y:e.scrollTop}),defaultParent:()=>{if(!Lv.current){const e=new xv({});e.mount(window),e.setOptions({layoutScroll:!0}),Lv.current=e}return Lv.current},resetTransform:(e,t)=>{e.style.transform=void 0!==t?t:\"none\"},checkIsScrollRoot:e=>\"fixed\"===window.getComputedStyle(e).position}),Hv={pan:{Feature:class extends mf{constructor(){super(...arguments),this.removePointerDownListener=Kp}onPointerDown(e){this.session=new Im(e,this.createPanHandlers(),{transformPagePoint:this.node.getTransformPagePoint(),contextWindow:mw(this.node)})}createPanHandlers(){const{onPanSessionStart:e,onPanStart:t,onPan:n,onPanEnd:r}=this.node.getProps();return{onSessionStart:bw(e),onStart:bw(t),onMove:n,onEnd:(e,t)=>{delete this.session,r&&Jp.update((()=>r(e,t)))}}}mount(){this.removePointerDownListener=lf(this.node.current,\"pointerdown\",(e=>this.onPointerDown(e)))}update(){this.session&&this.session.updateHandlers(this.createPanHandlers())}unmount(){this.removePointerDownListener(),this.session&&this.session.end()}}},drag:{Feature:class extends mf{constructor(e){super(e),this.removeGroupControls=Kp,this.removeListeners=Kp,this.controls=new vw(e)}mount(){const{dragControls:e}=this.node.getProps();e&&(this.removeGroupControls=e.subscribe(this.controls)),this.removeListeners=this.controls.addListeners()||Kp}unmount(){this.removeGroupControls(),this.removeListeners()}},ProjectionNode:Mv,MeasureLayout:Hw}},Vv=/var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;function Rv(e,t,n=1){const[r,o]=function(e){const t=Vv.exec(e);if(!t)return[,];const[,n,r]=t;return[n,r]}(e);if(!r)return;const i=window.getComputedStyle(t).getPropertyValue(r);if(i){const e=i.trim();return lm(e)?parseFloat(e):e}return np(o)?Rv(o,t,n+1):o}const Sv=new Set([\"width\",\"height\",\"top\",\"left\",\"right\",\"bottom\",\"x\",\"y\",\"translateX\",\"translateY\"]),Fv=e=>Sv.has(e),Ev=e=>e===ap||e===wp,Nv=(e,t)=>parseFloat(e.split(\", \")[t]),Iv=(e,t)=>(n,{transform:r})=>{if(\"none\"===r||!r)return 0;const o=r.match(/^matrix3d\\((.+)\\)$/);if(o)return Nv(o[1],t);{const t=r.match(/^matrix\\((.+)\\)$/);return t?Nv(t[1],e):0}},Bv=new Set([\"x\",\"y\",\"z\"]),jv=Uh.filter((e=>!Bv.has(e)));const $v={width:({x:e},{paddingLeft:t=\"0\",paddingRight:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),height:({y:e},{paddingTop:t=\"0\",paddingBottom:n=\"0\"})=>e.max-e.min-parseFloat(t)-parseFloat(n),top:(e,{top:t})=>parseFloat(t),left:(e,{left:t})=>parseFloat(t),bottom:({y:e},{top:t})=>parseFloat(t)+(e.max-e.min),right:({x:e},{left:t})=>parseFloat(t)+(e.max-e.min),x:Iv(4,13),y:Iv(5,14)};$v.translateX=$v.x,$v.translateY=$v.y;const Av=(e,t,n={},r={})=>{t={...t},r={...r};const o=Object.keys(t).filter(Fv);let i=[],a=!1;const s=[];if(o.forEach((o=>{const l=e.getValue(o);if(!e.hasValue(o))return;let c=n[o],d=mm(c);const u=t[o];let h;if(Up(u)){const e=u.length,t=null===u[0]?1:0;c=u[t],d=mm(c);for(let n=t;n<e&&null!==u[n];n++)h?Sf(mm(u[n])===h):h=mm(u[n])}else h=mm(u);if(d!==h)if(Ev(d)&&Ev(h)){const e=l.get();\"string\"==typeof e&&l.set(parseFloat(e)),\"string\"==typeof u?t[o]=parseFloat(u):Array.isArray(u)&&h===wp&&(t[o]=u.map(parseFloat))}else d?.transform&&h?.transform&&(0===c||0===u)?0===c?l.set(h.transform(c)):t[o]=d.transform(u):(a||(i=function(e){const t=[];return jv.forEach((n=>{const r=e.getValue(n);void 0!==r&&(t.push([n,r.get()]),r.set(n.startsWith(\"scale\")?1:0))})),t.length&&e.render(),t}(e),a=!0),s.push(o),r[o]=void 0!==r[o]?r[o]:t[o],l.jump(u))})),s.length){const n=s.indexOf(\"height\")>=0?window.pageYOffset:null,o=((e,t,n)=>{const r=t.measureViewportBox(),o=t.current,i=getComputedStyle(o),{display:a}=i,s={};\"none\"===a&&t.setStaticValue(\"display\",e.display||\"block\"),n.forEach((e=>{s[e]=$v[e](r,i)})),t.render();const l=t.measureViewportBox();return n.forEach((n=>{const r=t.getValue(n);r&&r.jump(s[n]),e[n]=$v[n](l,i)})),e})(t,e,s);return i.length&&i.forEach((([t,n])=>{e.getValue(t).set(n)})),e.render(),gh&&null!==n&&window.scrollTo({top:n}),{target:o,transitionEnd:r}}return{target:t,transitionEnd:r}};function Tv(e,t,n,r){return(e=>Object.keys(e).some(Fv))(t)?Av(e,t,n,r):{target:t,transitionEnd:r}}const Pv=(e,t,n,r)=>{const o=function(e,{...t},n){const r=e.current;if(!(r instanceof Element))return{target:t,transitionEnd:n};n&&(n={...n}),e.values.forEach((e=>{const t=e.get();if(!np(t))return;const n=Rv(t,r);n&&e.set(n)}));for(const e in t){const o=t[e];if(!np(o))continue;const i=Rv(o,r);i&&(t[e]=i,n||(n={}),void 0===n[e]&&(n[e]=o))}return{target:t,transitionEnd:n}}(e,t,r);return Tv(e,t=o.target,n,r=o.transitionEnd)},Wv={current:null},Zv={current:!1};const Dv=new WeakMap,zv=Object.keys(Ah),Ov=zv.length,_v=[\"AnimationStart\",\"AnimationComplete\",\"Update\",\"BeforeLayoutMeasure\",\"LayoutMeasure\",\"LayoutAnimationStart\",\"LayoutAnimationComplete\"],qv=Eh.length;class Uv{constructor({parent:e,props:t,presenceContext:n,reducedMotionConfig:r,visualState:o},i={}){this.current=null,this.children=new Set,this.isVariantNode=!1,this.isControllingVariants=!1,this.shouldReduceMotion=null,this.values=new Map,this.features={},this.valueSubscriptions=new Map,this.prevMotionValues={},this.events={},this.propEventSubscriptions={},this.notifyUpdate=()=>this.notify(\"Update\",this.latestValues),this.render=()=>{this.current&&(this.triggerBuild(),this.renderInstance(this.current,this.renderState,this.props.style,this.projection))},this.scheduleRender=()=>Jp.render(this.render,!1,!0);const{latestValues:a,renderState:s}=o;this.latestValues=a,this.baseTarget={...a},this.initialValues=t.initial?{...a}:{},this.renderState=s,this.parent=e,this.props=t,this.presenceContext=n,this.depth=e?e.depth+1:0,this.reducedMotionConfig=r,this.options=i,this.isControllingVariants=Nh(t),this.isVariantNode=Ih(t),this.isVariantNode&&(this.variantChildren=new Set),this.manuallyAnimateOnMount=!(!e||!e.current);const{willChange:l,...c}=this.scrapeMotionValuesFromProps(t,{});for(const e in c){const t=c[e];void 0!==a[e]&&Xh(t)&&(t.set(a[e],!1),sm(l)&&l.add(e))}}scrapeMotionValuesFromProps(e,t){return{}}mount(e){this.current=e,Dv.set(e,this),this.projection&&!this.projection.instance&&this.projection.mount(e),this.parent&&this.isVariantNode&&!this.isControllingVariants&&(this.removeFromVariantTree=this.parent.addVariantChild(this)),this.values.forEach(((e,t)=>this.bindToMotionValue(t,e))),Zv.current||function(){if(Zv.current=!0,gh)if(window.matchMedia){const e=window.matchMedia(\"(prefers-reduced-motion)\"),t=()=>Wv.current=e.matches;e.addListener(t),t()}else Wv.current=!1}(),this.shouldReduceMotion=\"never\"!==this.reducedMotionConfig&&(\"always\"===this.reducedMotionConfig||Wv.current),this.parent&&this.parent.children.add(this),this.update(this.props,this.presenceContext)}unmount(){Dv.delete(this.current),this.projection&&this.projection.unmount(),Qp(this.notifyUpdate),Qp(this.render),this.valueSubscriptions.forEach((e=>e())),this.removeFromVariantTree&&this.removeFromVariantTree(),this.parent&&this.parent.children.delete(this);for(const e in this.events)this.events[e].clear();for(const e in this.features)this.features[e].unmount();this.current=null}bindToMotionValue(e,t){const n=Gh.has(e),r=t.on(\"change\",(t=>{this.latestValues[e]=t,this.props.onUpdate&&Jp.update(this.notifyUpdate,!1,!0),n&&this.projection&&(this.projection.isTransformDirty=!0)})),o=t.on(\"renderRequest\",this.scheduleRender);this.valueSubscriptions.set(e,(()=>{r(),o()}))}sortNodePosition(e){return this.current&&this.sortInstanceNodePosition&&this.type===e.type?this.sortInstanceNodePosition(this.current,e.current):0}loadFeatures({children:e,...t},n,r,o){let i,a;for(let e=0;e<Ov;e++){const n=zv[e],{isEnabled:r,Feature:o,ProjectionNode:s,MeasureLayout:l}=Ah[n];s&&(i=s),r(t)&&(!this.features[n]&&o&&(this.features[n]=new o(this)),l&&(a=l))}if((\"html\"===this.type||\"svg\"===this.type)&&!this.projection&&i){this.projection=new i(this.latestValues,this.parent&&this.parent.projection);const{layoutId:e,layout:n,drag:r,dragConstraints:a,layoutScroll:s,layoutRoot:l}=t;this.projection.setOptions({layoutId:e,layout:n,alwaysMeasureLayout:!!r||a&&Vh(a),visualElement:this,scheduleRender:()=>this.scheduleRender(),animationType:\"string\"==typeof n?n:\"both\",initialPromotionConfig:o,layoutScroll:s,layoutRoot:l})}return a}updateFeatures(){for(const e in this.features){const t=this.features[e];t.isMounted?t.update():(t.mount(),t.isMounted=!0)}}triggerBuild(){this.build(this.renderState,this.latestValues,this.options,this.props)}measureViewportBox(){return this.current?this.measureInstanceViewportBox(this.current,this.props):{x:{min:0,max:0},y:{min:0,max:0}}}getStaticValue(e){return this.latestValues[e]}setStaticValue(e,t){this.latestValues[e]=t}makeTargetAnimatable(e,t=!0){return this.makeTargetAnimatableFromInstance(e,t)}update(e,t){(e.transformTemplate||this.props.transformTemplate)&&this.scheduleRender(),this.prevProps=this.props,this.props=e,this.prevPresenceContext=this.presenceContext,this.presenceContext=t;for(let t=0;t<_v.length;t++){const n=_v[t];this.propEventSubscriptions[n]&&(this.propEventSubscriptions[n](),delete this.propEventSubscriptions[n]);const r=e[\"on\"+n];r&&(this.propEventSubscriptions[n]=this.on(n,r))}this.prevMotionValues=function(e,t,n){const{willChange:r}=t;for(const o in t){const i=t[o],a=n[o];if(Xh(i))e.addValue(o,i),sm(r)&&r.add(o);else if(Xh(a))e.addValue(o,pm(i,{owner:e})),sm(r)&&r.remove(o);else if(a!==i)if(e.hasValue(o)){const t=e.getValue(o);!t.hasAnimated&&t.set(i)}else{const t=e.getStaticValue(o);e.addValue(o,pm(void 0!==t?t:i,{owner:e}))}}for(const r in n)void 0===t[r]&&e.removeValue(r);return t}(this,this.scrapeMotionValuesFromProps(e,this.prevProps),this.prevMotionValues),this.handleChildMotionValue&&this.handleChildMotionValue()}getProps(){return this.props}getVariant(e){return this.props.variants?this.props.variants[e]:void 0}getDefaultTransition(){return this.props.transition}getTransformPagePoint(){return this.props.transformPagePoint}getClosestVariantNode(){return this.isVariantNode?this:this.parent?this.parent.getClosestVariantNode():void 0}getVariantContext(e=!1){if(e)return this.parent?this.parent.getVariantContext():void 0;if(!this.isControllingVariants){const e=this.parent&&this.parent.getVariantContext()||{};return void 0!==this.props.initial&&(e.initial=this.props.initial),e}const t={};for(let e=0;e<qv;e++){const n=Eh[e],r=this.props[n];(Rh(r)||!1===r)&&(t[n]=r)}return t}addVariantChild(e){const t=this.getClosestVariantNode();if(t)return t.variantChildren&&t.variantChildren.add(e),()=>t.variantChildren.delete(e)}addValue(e,t){t!==this.values.get(e)&&(this.removeValue(e),this.bindToMotionValue(e,t)),this.values.set(e,t),this.latestValues[e]=t.get()}removeValue(e){this.values.delete(e);const t=this.valueSubscriptions.get(e);t&&(t(),this.valueSubscriptions.delete(e)),delete this.latestValues[e],this.removeValueFromRenderState(e,this.renderState)}hasValue(e){return this.values.has(e)}getValue(e,t){if(this.props.values&&this.props.values[e])return this.props.values[e];let n=this.values.get(e);return void 0===n&&void 0!==t&&(n=pm(t,{owner:this}),this.addValue(e,n)),n}readValue(e){var t;return void 0===this.latestValues[e]&&this.current?null!==(t=this.getBaseTargetFromProps(this.props,e))&&void 0!==t?t:this.readValueFromInstance(this.current,e,this.options):this.latestValues[e]}setBaseTarget(e,t){this.baseTarget[e]=t}getBaseTarget(e){var t;const{initial:n}=this.props,r=\"string\"==typeof n||\"object\"==typeof n?null===(t=_p(this.props,n))||void 0===t?void 0:t[e]:void 0;if(n&&void 0!==r)return r;const o=this.getBaseTargetFromProps(this.props,e);return void 0===o||Xh(o)?void 0!==this.initialValues[e]&&void 0===r?void 0:this.baseTarget[e]:o}on(e,t){return this.events[e]||(this.events[e]=new um),this.events[e].add(t)}notify(e,...t){this.events[e]&&this.events[e].notify(...t)}}class Gv extends Uv{sortInstanceNodePosition(e,t){return 2&e.compareDocumentPosition(t)?1:-1}getBaseTargetFromProps(e,t){return e.style?e.style[t]:void 0}removeValueFromRenderState(e,{vars:t,style:n}){delete t[e],delete n[e]}makeTargetAnimatableFromInstance({transition:e,transitionEnd:t,...n},r){const o=function(e,t,n){const r={};for(const o in e){const e=ym(o,t);if(void 0!==e)r[o]=e;else{const e=n.getValue(o);e&&(r[o]=e.get())}}return r}(n,e||{},this);if(r){!function(e,t,n){var r,o;const i=Object.keys(t).filter((t=>!e.hasValue(t))),a=i.length;if(a)for(let l=0;l<a;l++){const a=i[l],c=t[a];let d=null;Array.isArray(c)&&(d=c[0]),null===d&&(d=null!==(o=null!==(r=n[a])&&void 0!==r?r:e.readValue(a))&&void 0!==o?o:t[a]),null!=d&&(\"string\"==typeof d&&(lm(d)||rm(d))?d=parseFloat(d):(s=d,!wm.find(fm(s))&&gg.test(c)&&(d=nm(a,c))),e.addValue(a,pm(d,{owner:e})),void 0===n[a]&&(n[a]=d),null!==d&&e.setBaseTarget(a,d))}var s}(this,n,o);const e=Pv(this,n,o,t);t=e.transitionEnd,n=e.target}return{transition:e,transitionEnd:t,...n}}}class Yv extends Gv{constructor(){super(...arguments),this.type=\"html\"}readValueFromInstance(e,t){if(Gh.has(t)){const e=tm(t);return e&&e.default||0}{const r=(n=e,window.getComputedStyle(n)),o=(ep(t)?r.getPropertyValue(t):r[t])||0;return\"string\"==typeof o?o.trim():o}var n}measureInstanceViewportBox(e,{transformPagePoint:t}){return gw(e,t)}build(e,t,n,r){xp(e,t,n,r.transformTemplate)}scrapeMotionValuesFromProps(e,t){return zp(e,t)}handleChildMotionValue(){this.childSubscription&&(this.childSubscription(),delete this.childSubscription);const{children:e}=this.props;Xh(e)&&(this.childSubscription=e.on(\"change\",(e=>{this.current&&(this.current.textContent=`${e}`)})))}renderInstance(e,t,n,r){Wp(e,t,n,r)}}class Xv extends Gv{constructor(){super(...arguments),this.type=\"svg\",this.isSVGTag=!1}getBaseTargetFromProps(e,t){return e[t]}readValueFromInstance(e,t){if(Gh.has(t)){const e=tm(t);return e&&e.default||0}return t=Zp.has(t)?t:vh(t),e.getAttribute(t)}measureInstanceViewportBox(){return{x:{min:0,max:0},y:{min:0,max:0}}}scrapeMotionValuesFromProps(e,t){return Op(e,t)}build(e,t,n,r){jp(e,t,n,this.isSVGTag,r.transformTemplate)}renderInstance(e,t,n,r){Dp(e,t,0,r)}mount(e){this.isSVGTag=Ap(e.tagName),super.mount(e)}}const Kv=(e,t)=>_h(e)?new Xv(t,{enableHardwareAcceleration:!1}):new Yv(t,{enableHardwareAcceleration:!0}),Jv={...Em,...Hf,...Hv,...{layout:{ProjectionNode:Mv,MeasureLayout:Hw}}},Qv=zh(((e,t)=>function(e,{forwardMotionProps:t=!1},n,r){return{..._h(e)?nf:rf,preloadedFeatures:n,useRender:Pp(t),createVisualElement:r,Component:e}}(e,t,Jv,Kv)));function ey(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);return mh((()=>(e.current=!0,()=>{e.current=!1})),[]),e}class ty extends react__WEBPACK_IMPORTED_MODULE_1__.Component{getSnapshotBeforeUpdate(e){const t=this.props.childRef.current;if(t&&e.isPresent&&!this.props.isPresent){const e=this.props.sizeRef.current;e.height=t.offsetHeight||0,e.width=t.offsetWidth||0,e.top=t.offsetTop,e.left=t.offsetLeft}return null}componentDidUpdate(){}render(){return this.props.children}}function ny({children:e,isPresent:t}){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({width:0,height:0,top:0,left:0});return (0,react__WEBPACK_IMPORTED_MODULE_1__.useInsertionEffect)((()=>{const{width:e,height:i,top:a,left:s}=o.current;if(t||!r.current||!e||!i)return;r.current.dataset.motionPopId=n;const l=document.createElement(\"style\");return document.head.appendChild(l),l.sheet&&l.sheet.insertRule(`\\n          [data-motion-pop-id=\"${n}\"] {\\n            position: absolute !important;\\n            width: ${e}px !important;\\n            height: ${i}px !important;\\n            top: ${a}px !important;\\n            left: ${s}px !important;\\n          }\\n        `),()=>{document.head.removeChild(l)}}),[t]),react__WEBPACK_IMPORTED_MODULE_1__.createElement(ty,{isPresent:t,childRef:r,sizeRef:o},react__WEBPACK_IMPORTED_MODULE_1__.cloneElement(e,{ref:r}))}const ry=({children:e,initial:t,isPresent:n,onExitComplete:r,custom:o,presenceAffectsLayout:i,mode:a})=>{const s=qp(oy),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({id:l,initial:t,isPresent:n,custom:o,onExitComplete:e=>{s.set(e,!0);for(const e of s.values())if(!e)return;r&&r()},register:e=>(s.set(e,!1),()=>s.delete(e))})),i?void 0:[n]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{s.forEach(((e,t)=>s.set(t,!1)))}),[n]),react__WEBPACK_IMPORTED_MODULE_1__.useEffect((()=>{!n&&!s.size&&r&&r()}),[n]),\"popLayout\"===a&&(e=react__WEBPACK_IMPORTED_MODULE_1__.createElement(ny,{isPresent:n},e)),react__WEBPACK_IMPORTED_MODULE_1__.createElement(fh.Provider,{value:c},e)};function oy(){return new Map}const iy=e=>e.key||\"\";const ay=({children:e,custom:t,initial:n=!0,onExitComplete:r,exitBeforeEnter:o,presenceAffectsLayout:i=!0,mode:a=\"sync\"})=>{const s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Th).forceRender||function(){const e=ey(),[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{e.current&&n(t+1)}),[t]);return[(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>Jp.postRender(r)),[r]),t]}()[0],l=ey(),c=function(e){const t=[];return react__WEBPACK_IMPORTED_MODULE_1__.Children.forEach(e,(e=>{(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(e)&&t.push(e)})),t}(e);let d=c;const h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map).current,g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(d),m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Map).current,w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!0);if(mh((()=>{w.current=!1,function(e,t){e.forEach((e=>{const n=iy(e);t.set(n,e)}))}(c,m),g.current=d})),v=()=>{w.current=!0,m.clear(),h.clear()},(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>()=>v()),[]),w.current)return react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,d.map((e=>react__WEBPACK_IMPORTED_MODULE_1__.createElement(ry,{key:iy(e),isPresent:!0,initial:!!n&&void 0,presenceAffectsLayout:i,mode:a},e))));var v;d=[...d];const y=g.current.map(iy),C=c.map(iy),x=y.length;for(let e=0;e<x;e++){const t=y[e];-1===C.indexOf(t)&&!h.has(t)&&h.set(t,void 0)}return\"wait\"===a&&h.size&&(d=[]),h.forEach(((e,n)=>{if(-1!==C.indexOf(n))return;const o=m.get(n);if(!o)return;const p=y.indexOf(n);let f=e;if(!f){const e=()=>{h.delete(n);const e=Array.from(m.keys()).filter((e=>!C.includes(e)));if(e.forEach((e=>m.delete(e))),g.current=c.filter((t=>{const r=iy(t);return r===n||e.includes(r)})),!h.size){if(!1===l.current)return;s(),r&&r()}};f=react__WEBPACK_IMPORTED_MODULE_1__.createElement(ry,{key:iy(o),isPresent:!1,onExitComplete:e,custom:t,presenceAffectsLayout:i,mode:a},o),h.set(n,f)}d.splice(p,0,f)})),d=d.map((e=>{const t=e.key;return h.has(t)?e:react__WEBPACK_IMPORTED_MODULE_1__.createElement(ry,{key:iy(e),isPresent:!0,presenceAffectsLayout:i,mode:a},e)})),react__WEBPACK_IMPORTED_MODULE_1__.createElement(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,null,h.size?d:d.map((e=>(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(e))))},sy=function(e){const t=function(e){const t={...e,color:Ue(e?.color)};return{light:at({scheme:\"light\"},t),dark:at({scheme:\"dark\"},t)}}(e);return He({_version:2,avatar:de.avatar,button:de.button,card:de.card,color:Pt(t),container:de.container,font:ke,input:de.input,layer:de.layer,media:de.media,radius:de.radius,shadow:de.shadow,space:de.space,style:de.style})}(),ly=[],cy={},dy=\"--motion-content-opacity\",uy={initial:{opacity:.5,[dy]:0,scale:.97,willChange:\"transform\"},animate:{opacity:[null,1,1],[dy]:[null,null,1],scale:1},exit:{opacity:[null,null,0],[dy]:[null,0,0],scale:.97},transition:{duration:.4,type:\"spring\"}};function hy(e){return 0===e?0:e/16+\"rem\"}function py(e,t,n){return(t?.map(n)||[]).map(((t,n)=>0===n?t:{[`@media screen and (min-width: ${e[n-1]}px)`]:t}))}function fy(e,t,n=ly){if(!Array.isArray(n))throw new Error(\"the property must be array of numbers\");if(0===n.length)return null;const{media:r,space:o}=ve(e);return py(r,n,(e=>{return n=t,r=hy(o[e]),n.reduce(((e,t)=>(e[t]=r,e)),{});var n,r}))}function gy(e,t){const{$size:n,$weight:r}=t,{font:o,media:i}=ve(t.theme),{family:a,sizes:s,weights:l}=o[e],c=r&&l[r]||l.regular,d=s[2],u={position:\"relative\",fontFamily:a,fontWeight:c,padding:\"1px 0\",margin:0,\"&:before\":{content:'\"\"',display:\"block\",height:0},\"&:after\":{content:'\"\"',display:\"block\",height:0},\"& > code, & > span\":{display:\"block\"},\"&:not([hidden])\":{display:\"block\"}};if(!n)return gy.warned||(console.warn(\"No size specified for responsive font\",{fontKey:e,$size:n,props:t,base:u}),gy.warned=!0),[u];return[u,...py(i,n,(e=>function(e){const{ascenderHeight:t,descenderHeight:n,fontSize:r,iconSize:o,letterSpacing:i,lineHeight:a}=e,s=t+n,l=a-s,c=(l-o)/2,d=2*Math.floor(1.125*r/2)+1,u=(l-d)/2;return{fontSize:hy(r),lineHeight:`calc(${a} / ${r})`,letterSpacing:hy(i),transform:`translateY(${hy(n)})`,\"&:before\":{marginTop:`calc(${hy(0-s)} - 1px)`},\"&:after\":{marginBottom:\"-1px\"},\"& svg:not([data-sanity-icon])\":{fontSize:`calc(${d} / 16 * 1rem)`,margin:hy(u)},\"& [data-sanity-icon]\":{fontSize:`calc(${o} / 16 * 1rem)`,margin:hy(c)}}}(s[e]||d)))]}function my(e){const{media:t}=ve(e.theme);return py(t,e.$align,(e=>({textAlign:e})))}function wy(e,t){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>JSON.stringify(e??t)),[t,e]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>function(e,t){return void 0===e?t||ly:Array.isArray(e)?e:[e]}(e,t)),[n])}function vy(e,t=()=>ly,n){const r=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)((n=>{if(!e)return;const r=n.target;if(!(r instanceof Node))return;const o=t().flat();for(const e of o)if(e&&(r===e||e.contains(r)))return;e(n)})),o=!!e;(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!o)return;const e=e=>r(e);return document.addEventListener(\"mousedown\",e),()=>{document.removeEventListener(\"mousedown\",e)}}),[o,r]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(e?\"MouseDown On\":\"MouseDown Off\")}function yy(e,t){(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{e.current?.setCustomValidity(t||\"\")}),[t,e])}var by,Cy,ky=[],xy=\"ResizeObserver loop completed with undelivered notifications.\";(Cy=by||(by={})).BORDER_BOX=\"border-box\",Cy.CONTENT_BOX=\"content-box\",Cy.DEVICE_PIXEL_CONTENT_BOX=\"device-pixel-content-box\";var Ly,My=function(e){return Object.freeze(e)},Hy=function(){return function(e,t){this.inlineSize=e,this.blockSize=t,My(this)}}(),Vy=function(){function e(e,t,n,r){return this.x=e,this.y=t,this.width=n,this.height=r,this.top=this.y,this.left=this.x,this.bottom=this.top+this.height,this.right=this.left+this.width,My(this)}return e.prototype.toJSON=function(){var e=this;return{x:e.x,y:e.y,top:e.top,right:e.right,bottom:e.bottom,left:e.left,width:e.width,height:e.height}},e.fromRect=function(t){return new e(t.x,t.y,t.width,t.height)},e}(),Ry=function(e){return e instanceof SVGElement&&\"getBBox\"in e},Sy=function(e){if(Ry(e)){var t=e.getBBox(),n=t.width,r=t.height;return!n&&!r}var o=e,i=o.offsetWidth,a=o.offsetHeight;return!(i||a||e.getClientRects().length)},Fy=function(e){var t;if(e instanceof Element)return!0;var n=null===(t=e?.ownerDocument)||void 0===t?void 0:t.defaultView;return!!(n&&e instanceof n.Element)},Ey=typeof window<\"u\"?window:{},Ny=new WeakMap,Iy=/auto|scroll/,By=/^tb|vertical/,jy=/msie|trident/i.test(Ey.navigator&&Ey.navigator.userAgent),$y=function(e){return parseFloat(e||\"0\")},Ay=function(e,t,n){return void 0===e&&(e=0),void 0===t&&(t=0),void 0===n&&(n=!1),new Hy((n?t:e)||0,(n?e:t)||0)},Ty=My({devicePixelContentBoxSize:Ay(),borderBoxSize:Ay(),contentBoxSize:Ay(),contentRect:new Vy(0,0,0,0)}),Py=function(e,t){if(void 0===t&&(t=!1),Ny.has(e)&&!t)return Ny.get(e);if(Sy(e))return Ny.set(e,Ty),Ty;var n=getComputedStyle(e),r=Ry(e)&&e.ownerSVGElement&&e.getBBox(),o=!jy&&\"border-box\"===n.boxSizing,i=By.test(n.writingMode||\"\"),a=!r&&Iy.test(n.overflowY||\"\"),s=!r&&Iy.test(n.overflowX||\"\"),l=r?0:$y(n.paddingTop),c=r?0:$y(n.paddingRight),d=r?0:$y(n.paddingBottom),u=r?0:$y(n.paddingLeft),h=r?0:$y(n.borderTopWidth),p=r?0:$y(n.borderRightWidth),f=r?0:$y(n.borderBottomWidth),g=u+c,m=l+d,w=(r?0:$y(n.borderLeftWidth))+p,v=h+f,y=s?e.offsetHeight-v-e.clientHeight:0,b=a?e.offsetWidth-w-e.clientWidth:0,C=o?g+w:0,k=o?m+v:0,x=r?r.width:$y(n.width)-C-b,L=r?r.height:$y(n.height)-k-y,M=x+g+b+w,H=L+m+y+v,V=My({devicePixelContentBoxSize:Ay(Math.round(x*devicePixelRatio),Math.round(L*devicePixelRatio),i),borderBoxSize:Ay(M,H,i),contentBoxSize:Ay(x,L,i),contentRect:new Vy(u,l,x,L)});return Ny.set(e,V),V},Wy=function(e,t,n){var r=Py(e,n),o=r.borderBoxSize,i=r.contentBoxSize,a=r.devicePixelContentBoxSize;switch(t){case by.DEVICE_PIXEL_CONTENT_BOX:return a;case by.BORDER_BOX:return o;default:return i}},Zy=function(){return function(e){var t=Py(e);this.target=e,this.contentRect=t.contentRect,this.borderBoxSize=My([t.borderBoxSize]),this.contentBoxSize=My([t.contentBoxSize]),this.devicePixelContentBoxSize=My([t.devicePixelContentBoxSize])}}(),Dy=function(e){if(Sy(e))return 1/0;for(var t=0,n=e.parentNode;n;)t+=1,n=n.parentNode;return t},zy=function(){var e=1/0,t=[];ky.forEach((function(n){if(0!==n.activeTargets.length){var r=[];n.activeTargets.forEach((function(t){var n=new Zy(t.target),o=Dy(t.target);r.push(n),t.lastReportedSize=Wy(t.target,t.observedBox),o<e&&(e=o)})),t.push((function(){n.callback.call(n.observer,r,n.observer)})),n.activeTargets.splice(0,n.activeTargets.length)}}));for(var n=0,r=t;n<r.length;n++){(0,r[n])()}return e},Oy=function(e){ky.forEach((function(t){t.activeTargets.splice(0,t.activeTargets.length),t.skippedTargets.splice(0,t.skippedTargets.length),t.observationTargets.forEach((function(n){n.isActive()&&(Dy(n.target)>e?t.activeTargets.push(n):t.skippedTargets.push(n))}))}))},_y=function(){var e,t=0;for(Oy(t);ky.some((function(e){return e.activeTargets.length>0}));)t=zy(),Oy(t);return ky.some((function(e){return e.skippedTargets.length>0}))&&(\"function\"==typeof ErrorEvent?e=new ErrorEvent(\"error\",{message:xy}):((e=document.createEvent(\"Event\")).initEvent(\"error\",!1,!1),e.message=xy),window.dispatchEvent(e)),t>0},qy=[],Uy=function(e){if(!Ly){var t=0,n=document.createTextNode(\"\");new MutationObserver((function(){return qy.splice(0).forEach((function(e){return e()}))})).observe(n,{characterData:!0}),Ly=function(){n.textContent=\"\".concat(t?t--:t++)}}qy.push(e),Ly()},Gy=0,Yy={attributes:!0,characterData:!0,childList:!0,subtree:!0},Xy=[\"resize\",\"load\",\"transitionend\",\"animationend\",\"animationstart\",\"animationiteration\",\"keyup\",\"keydown\",\"mouseup\",\"mousedown\",\"mouseover\",\"mouseout\",\"blur\",\"focus\"],Ky=function(e){return void 0===e&&(e=0),Date.now()+e},Jy=!1,Qy=new(function(){function e(){var e=this;this.stopped=!0,this.listener=function(){return e.schedule()}}return e.prototype.run=function(e){var t,n=this;if(void 0===e&&(e=250),!Jy){Jy=!0;var r=Ky(e);t=function(){var t=!1;try{t=_y()}finally{if(Jy=!1,e=r-Ky(),!Gy)return;t?n.run(1e3):e>0?n.run(e):n.start()}},Uy((function(){requestAnimationFrame(t)}))}},e.prototype.schedule=function(){this.stop(),this.run()},e.prototype.observe=function(){var e=this,t=function(){return e.observer&&e.observer.observe(document.body,Yy)};document.body?t():Ey.addEventListener(\"DOMContentLoaded\",t)},e.prototype.start=function(){var e=this;this.stopped&&(this.stopped=!1,this.observer=new MutationObserver(this.listener),this.observe(),Xy.forEach((function(t){return Ey.addEventListener(t,e.listener,!0)})))},e.prototype.stop=function(){var e=this;this.stopped||(this.observer&&this.observer.disconnect(),Xy.forEach((function(t){return Ey.removeEventListener(t,e.listener,!0)})),this.stopped=!0)},e}()),eb=function(e){!Gy&&e>0&&Qy.start(),!(Gy+=e)&&Qy.stop()},tb=function(){function e(e,t){this.target=e,this.observedBox=t||by.CONTENT_BOX,this.lastReportedSize={inlineSize:0,blockSize:0}}return e.prototype.isActive=function(){var e,t=Wy(this.target,this.observedBox,!0);return e=this.target,!Ry(e)&&!function(e){switch(e.tagName){case\"INPUT\":if(\"image\"!==e.type)break;case\"VIDEO\":case\"AUDIO\":case\"EMBED\":case\"OBJECT\":case\"CANVAS\":case\"IFRAME\":case\"IMG\":return!0}return!1}(e)&&\"inline\"===getComputedStyle(e).display&&(this.lastReportedSize=t),this.lastReportedSize.inlineSize!==t.inlineSize||this.lastReportedSize.blockSize!==t.blockSize},e}(),nb=function(){return function(e,t){this.activeTargets=[],this.skippedTargets=[],this.observationTargets=[],this.observer=e,this.callback=t}}(),rb=new WeakMap,ob=function(e,t){for(var n=0;n<e.length;n+=1)if(e[n].target===t)return n;return-1},ib=function(){function e(){}return e.connect=function(e,t){var n=new nb(e,t);rb.set(e,n)},e.observe=function(e,t,n){var r=rb.get(e),o=0===r.observationTargets.length;ob(r.observationTargets,t)<0&&(o&&ky.push(r),r.observationTargets.push(new tb(t,n&&n.box)),eb(1),Qy.schedule())},e.unobserve=function(e,t){var n=rb.get(e),r=ob(n.observationTargets,t),o=1===n.observationTargets.length;r>=0&&(o&&ky.splice(ky.indexOf(n),1),n.observationTargets.splice(r,1),eb(-1))},e.disconnect=function(e){var t=this,n=rb.get(e);n.observationTargets.slice().forEach((function(n){return t.unobserve(e,n.target)})),n.activeTargets.splice(0,n.activeTargets.length)},e}(),ab=function(){function e(e){if(0===arguments.length)throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");if(\"function\"!=typeof e)throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");ib.connect(this,e)}return e.prototype.observe=function(e,t){if(0===arguments.length)throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");if(!Fy(e))throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");ib.observe(this,e,t)},e.prototype.unobserve=function(e){if(0===arguments.length)throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");if(!Fy(e))throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");ib.unobserve(this,e)},e.prototype.disconnect=function(){ib.disconnect(this)},e.toString=function(){return\"function ResizeObserver () { [polyfill code] }\"},e}();const sb=typeof document<\"u\"&&typeof window<\"u\"&&window.ResizeObserver?window.ResizeObserver:ab,lb=function(){const e=new WeakMap,t=new WeakMap;return{subscribe(n,r){const o=t.get(n)||[];let i=e.get(n);return t.has(n)||(t.set(n,o),i={subscribe(e,t){const n=new sb((([e])=>{t({_contentRect:e.contentRect,border:{width:e.borderBoxSize[0].inlineSize,height:e.borderBoxSize[0].blockSize},content:{width:e.contentRect.width,height:e.contentRect.height}})}));return n.observe(e),()=>{n.unobserve(e),n.disconnect()}}}.subscribe(n,(e=>{for(const t of o)t(e)}))),o.push(r),()=>{const e=o.indexOf(r);e>-1&&o.splice(e,1),0===o.length&&i&&i()}}}}();function cb(e){const[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(e)return lb.subscribe(e,n)}),[e]),t}function db(e){return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>(addEventListener(\"keydown\",e),()=>removeEventListener(\"keydown\",e))),[e])}function ub(e,t){const{subscribe:n,getSnapshot:r}=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{let t;const n=()=>(t||(t=window.matchMedia(e)),t);return{subscribe:e=>{const t=n();return t.addEventListener(\"change\",e),()=>t.removeEventListener(\"change\",e)},getSnapshot:()=>n().matches}}),[e]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useDebugValue)(e),(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(n,r,t)}const hb=function(){if(typeof globalThis<\"u\")return globalThis;if(typeof window<\"u\")return window;if(typeof self<\"u\")return self;if(typeof global<\"u\")return global;throw new Error(\"@sanity/ui: could not locate global scope\")}();function pb(e,t){const n=Symbol.for(e);return typeof document>\"u\"?(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(t):(hb[n]=hb[n]||(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(t),hb[n])}const fb=pb(\"@sanity/ui/context/theme\",null);function gb(t){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fb),{children:r,scheme:o=n?.scheme||\"light\",theme:i=n?.theme||null,tone:a=n?.tone||\"default\"}=t,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i?{version:0,theme:i,scheme:o,tone:a}:null),[i,o,a]),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i?nn(i,o,a):null),[o,i,a]);return l?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fb.Provider,{value:s,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jo,{theme:l,children:r})}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pre\",{children:'ThemeProvider: no \"theme\" property provided'})}function mb(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(fb);if(!e)throw new Error(\"useRootTheme(): missing context value\");return e}function wb(t){const{children:n,scheme:r,tone:o}=t,i=mb();return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gb,{scheme:r||i.scheme,theme:i.theme,tone:o,children:n})}function vb(){return ve(function(){var e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Bo);if(!e)throw Qr(18);return e}())}function yb(e,t){return 0===t?`screen and (max-width: ${e[t]-1}px)`:t===e.length?`screen and (min-width: ${e[t-1]}px)`:`screen and (min-width: ${e[t-1]}px) and (max-width: ${e[t]-1}px)`}function bb(){return 0}function Cb(){const{media:e}=vb(),t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>function(e){const t=e.length;let n;const r=()=>{if(!n){n=[];for(let r=t;r>-1;r-=1){const t=yb(e,r);n.push({index:r,mq:window.matchMedia(t)})}}return n};return{getSnapshot:()=>{for(const{index:e,mq:t}of r())if(t.matches)return e;return 0},subscribe:e=>{const t=[];for(const{mq:n}of r()){const r=()=>{n.matches&&e()};n.addEventListener(\"change\",r),t.push((()=>n.removeEventListener(\"change\",r)))}return()=>{for(const e of t)e()}}}}(e)),[e]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(t.subscribe,t.getSnapshot,bb)}function kb(e=()=>!1){return ub(\"(prefers-color-scheme: dark)\",e)}function xb(e=()=>!1){return ub(\"(prefers-reduced-motion: reduce)\",e)}function Lb(e){const{card:t,media:n}=ve(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return py(n,e.$border,(e=>e?{\"&&\":{border:r}}:{\"&&\":{border:0}}))}function Mb(e){const{card:t,media:n}=ve(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return py(n,e.$borderTop,(e=>e?{\"&&\":{borderTop:r}}:{\"&&\":{borderTop:0}}))}function Hb(e){const{card:t,media:n}=ve(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return py(n,e.$borderRight,(e=>e?{\"&&\":{borderRight:r}}:{\"&&\":{borderRight:0}}))}function Vb(e){const{card:t,media:n}=ve(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return py(n,e.$borderBottom,(e=>e?{\"&&\":{borderBottom:r}}:{\"&&\":{borderBottom:0}}))}function Rb(e){const{card:t,media:n}=ve(e.theme),r=`${t.border?.width??1}px solid var(--card-border-color)`;return py(n,e.$borderLeft,(e=>e?{\"&&\":{borderLeft:r}}:{\"&&\":{borderLeft:0}}))}gb.displayName=\"ThemeProvider\",wb.displayName=\"ThemeColorProvider\";const Sb={'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"}},Fb={content:\"content-box\",border:\"border-box\"},Eb={stretch:\"stretch\",fill:\"100%\"};function Nb(e){const{media:t}=ve(e.theme);return py(t,e.$display,(e=>({\"&:not([hidden])\":{display:e}})))}function Ib(e){const{media:t}=ve(e.theme);return py(t,e.$sizing,(e=>({boxSizing:Fb[e]})))}function Bb(e){const{media:t}=ve(e.theme);return py(t,e.$height,(e=>({height:Eb[e]})))}function jb(e){const{media:t}=ve(e.theme);return py(t,e.$overflow,(e=>({overflow:e})))}const $b={\"&&:not([hidden])\":{display:\"flex\"}};function Ab(e){const{media:t}=ve(e.theme);return py(t,e.$align,(e=>({alignItems:e})))}function Tb(e){const{media:t,space:n}=ve(e.theme);return py(t,e.$gap,(e=>({gap:e?hy(n[e]):void 0})))}function Pb(e){const{media:t}=ve(e.theme);return py(t,e.$wrap,(e=>({flexWrap:e})))}function Wb(e){const{media:t}=ve(e.theme);return py(t,e.$justify,(e=>({justifyContent:e})))}function Zb(e){const{media:t}=ve(e.theme);return py(t,e.$direction,(e=>({flexDirection:e})))}const Db={minWidth:0,minHeight:0};function zb(){return[Db,Ob]}function Ob(e){const{media:t}=ve(e.theme);return e.$flex?py(t,e.$flex,(e=>({flex:e}))):ly}function _b(e){return`inset 0 0 0 ${e.width}px ${e.color}`}function qb(e){const{base:t,border:n,focusRing:r}=e,o=r.offset+r.width,i=0-r.offset,a=t?t.bg:\"var(--card-bg-color)\";return[i>0&&`inset 0 0 0 ${i}px var(--card-focus-ring-color)`,n&&_b(n),i<0&&`0 0 0 ${0-i}px ${a}`,o>0&&`0 0 0 ${o}px var(--card-focus-ring-color)`].filter(Boolean).join(\",\")}const Ub={\"&&:not([hidden])\":{display:\"grid\"},'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"}},Gb={auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"},Yb={auto:\"auto\",min:\"min-content\",max:\"max-content\",fr:\"minmax(0, 1fr)\"};function Xb(e){const{media:t}=ve(e.theme);return py(t,e.$autoFlow,(e=>({gridAutoFlow:e})))}function Kb(e){const{media:t}=ve(e.theme);return py(t,e.$autoRows,(e=>({gridAutoRows:e&&Yb[e]})))}function Jb(e){const{media:t}=ve(e.theme);return py(t,e.$autoCols,(e=>({gridAutoColumns:e&&Gb[e]})))}function Qb(e){const{media:t}=ve(e.theme);return py(t,e.$columns,(e=>({gridTemplateColumns:e&&`repeat(${e},minmax(0,1fr));`})))}function eC(e){const{media:t}=ve(e.theme);return py(t,e.$rows,(e=>({gridTemplateRows:e&&`repeat(${e},minmax(0,1fr));`})))}function tC(e){const{media:t,space:n}=ve(e.theme);return py(t,e.$gap,(e=>({gridGap:e?hy(n[e]):void 0})))}function nC(e){const{media:t,space:n}=ve(e.theme);return py(t,e.$gapX,(e=>({columnGap:e?hy(n[e]):void 0})))}function rC(e){const{media:t,space:n}=ve(e.theme);return py(t,e.$gapY,(e=>({rowGap:e?hy(n[e]):void 0})))}const oC={auto:\"auto\",full:\"1 / -1\"},iC={auto:\"auto\",full:\"1 / -1\"};function aC(e){const{media:t}=ve(e.theme);return py(t,e.$row,(e=>\"number\"==typeof e?{gridRow:`span ${e} / span ${e}`}:{gridRow:oC[e]}))}function sC(e){const{media:t}=ve(e.theme);return py(t,e.$rowStart,(e=>({gridRowStart:e})))}function lC(e){const{media:t}=ve(e.theme);return py(t,e.$rowEnd,(e=>({gridRowEnd:e})))}function cC(e){const{media:t}=ve(e.theme);return py(t,e.$column,(e=>\"number\"==typeof e?{gridColumn:`span ${e} / span ${e}`}:{gridColumn:iC[e]}))}function dC(e){const{media:t}=ve(e.theme);return py(t,e.$columnStart,(e=>({gridColumnStart:e})))}function uC(e){const{media:t}=ve(e.theme);return py(t,e.$columnEnd,(e=>({gridColumnEnd:e})))}function hC(e){const{$fontSize:t,$iconLeft:n,$iconRight:r,$padding:o,$space:i}=e,{font:a,media:s,space:l}=ve(e.theme),c=Math.max(o.length,i.length,t.length),d=[],u=[],h=[];for(let e=0;e<c;e+=1)h[e]=void 0===t[e]?h[e-1]:t[e],d[e]=void 0===o[e]?d[e-1]:o[e],u[e]=void 0===i[e]?u[e-1]:i[e];return py(s,d,((e,t)=>{const o=a.text.sizes[h[t]]||a.text.sizes[2],i=o.lineHeight-o.ascenderHeight-o.descenderHeight,s=l[d[t]],c=l[u[t]],p={paddingTop:hy(s-o.ascenderHeight),paddingRight:hy(s),paddingBottom:hy(s-o.descenderHeight),paddingLeft:hy(s)};return r&&(p.paddingRight=hy(s+i+c)),n&&(p.paddingLeft=hy(s+i+c)),p}))}function pC(e){return hC({...e,$iconRight:!0})}const fC=Wo`\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  align-items: center;\n`;function gC(){return fC}function mC(e){const{$scheme:t,$tone:n,$weight:r}=e,{color:o,font:i}=ve(e.theme);return Wo`\n    appearance: none;\n    background: none;\n    border: 0;\n    border-radius: 0;\n    outline: none;\n    width: 100%;\n    box-sizing: border-box;\n    font-family: ${i.text.family};\n    font-weight: ${r&&i.text.weights[r]||i.text.weights.regular};\n    margin: 0;\n    position: relative;\n    z-index: 1;\n    display: block;\n\n    /* NOTE: This is a hack to disable Chrome’s autofill styles */\n    &:-webkit-autofill,\n    &:-webkit-autofill:hover,\n    &:-webkit-autofill:focus,\n    &:-webkit-autofill:active {\n      -webkit-text-fill-color: var(--input-fg-color) !important;\n      transition: background-color 5000s;\n      transition-delay: 86400s /* 24h */;\n    }\n\n    /* &:is(textarea) */\n    &[data-as='textarea'] {\n      resize: none;\n    }\n\n    color: var(--input-fg-color);\n\n    &::placeholder {\n      color: var(--input-placeholder-color);\n    }\n\n    &[data-scheme='${t}'][data-tone='${n}'] {\n      --input-fg-color: ${o.input.default.enabled.fg};\n      --input-placeholder-color: ${o.input.default.enabled.placeholder};\n\n      /* enabled */\n      &:not(:invalid):not(:disabled):not(:read-only) {\n        --input-fg-color: ${o.input.default.enabled.fg};\n        --input-placeholder-color: ${o.input.default.enabled.placeholder};\n      }\n\n      /* disabled */\n      &:not(:invalid):disabled {\n        --input-fg-color: ${o.input.default.disabled.fg};\n        --input-placeholder-color: ${o.input.default.disabled.placeholder};\n      }\n\n      /* invalid */\n      &:invalid {\n        --input-fg-color: ${o.input.invalid.enabled.fg};\n        --input-placeholder-color: ${o.input.invalid.enabled.placeholder};\n      }\n\n      /* readOnly */\n      &:read-only {\n        --input-fg-color: ${o.input.default.readOnly.fg};\n        --input-placeholder-color: ${o.input.default.readOnly.placeholder};\n      }\n    }\n  `}function wC(e){const{font:t,media:n}=ve(e.theme);return py(n,e.$fontSize,(e=>{const n=t.text.sizes[e]||t.text.sizes[2];return{fontSize:hy(n.fontSize),lineHeight:n.lineHeight/n.fontSize}}))}function vC(e){const{$hasPrefix:t,$hasSuffix:n,$scheme:r,$tone:o,$unstableDisableFocusRing:i}=e,{color:a,input:s}=ve(e.theme);return Wo`\n    --input-box-shadow: none;\n\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: block;\n    pointer-events: none;\n    z-index: 0;\n\n    background-color: var(--card-bg-color);\n    box-shadow: var(--input-box-shadow);\n\n    border-top-left-radius: ${t?0:void 0};\n    border-bottom-left-radius: ${t?0:void 0};\n    border-top-right-radius: ${n?0:void 0};\n    border-bottom-right-radius: ${n?0:void 0};\n\n    &[data-scheme='${r}'][data-tone='${o}'] {\n      --card-bg-color: ${a.input.default.enabled.bg};\n      --card-fg-color: ${a.input.default.enabled.fg};\n\n      /* enabled */\n      *:not(:disabled) + &[data-border] {\n        --input-box-shadow: ${_b({color:a.input.default.enabled.border,width:s.border.width})};\n      }\n\n      /* invalid */\n      *:not(:disabled):invalid + & {\n        --card-bg-color: ${a.input.invalid.enabled.bg};\n        --card-fg-color: ${a.input.invalid.enabled.fg};\n\n        &[data-border] {\n          --input-box-shadow: ${_b({color:a.input.invalid.enabled.border,width:s.border.width})};\n        }\n      }\n\n      /* focused */\n      *:not(:disabled):focus + & {\n        &[data-border] {\n          --input-box-shadow: ${i?void 0:qb({border:{color:a.input.default.enabled.border,width:s.border.width},focusRing:s.text.focusRing})};\n        }\n\n        &:not([data-border]) {\n          --input-box-shadow: ${i?void 0:qb({focusRing:s.text.focusRing})};\n        }\n      }\n\n      /* disabled */\n      *:not(:invalid):disabled + & {\n        --card-bg-color: ${a.input.default.disabled.bg} !important;\n        --card-fg-color: ${a.input.default.disabled.fg} !important;\n        --card-icon-color: ${a.input.default.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${_b({color:a.input.default.disabled.border,width:s.border.width})};\n        }\n      }\n\n      *:invalid:disabled + & {\n        --card-bg-color: ${a.input.invalid.disabled.bg} !important;\n        --card-fg-color: ${a.input.invalid.disabled.fg} !important;\n        --card-icon-color: ${a.input.invalid.disabled.fg} !important;\n\n        &[data-border] {\n          --input-box-shadow: ${_b({color:a.input.invalid.disabled.border,width:s.border.width})};\n        }\n      }\n\n      /* readOnly */\n      *:not(:invalid):read-only + & {\n        --card-bg-color: ${a.input.default.readOnly.bg} !important;\n        --card-fg-color: ${a.input.default.readOnly.fg} !important;\n      }\n\n      *:invalid:read-only + & {\n        --card-bg-color: ${a.input.invalid.readOnly.bg} !important;\n        --card-fg-color: ${a.input.invalid.readOnly.fg} !important;\n      }\n\n      /* hovered */\n      @media (hover: hover) {\n        *:not(:disabled):not(:read-only):not(:invalid):hover + & {\n          --card-bg-color: ${a.input.default.hovered.bg};\n          --card-fg-color: ${a.input.default.hovered.fg};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):hover + & {\n          --card-bg-color: ${a.input.invalid.hovered.bg};\n          --card-fg-color: ${a.input.invalid.hovered.fg};\n        }\n\n        *:not(:disabled):not(:read-only):not(:invalid):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${_b({color:a.input.default.hovered.border,width:s.border.width})};\n        }\n\n        *:invalid:not(:disabled):not(:read-only):not(:focus):hover + &[data-border] {\n          --input-box-shadow: ${_b({color:a.input.invalid.hovered.border,width:s.border.width})};\n        }\n      }\n    }\n  `}function yC(e){const{theme:t}=e;return[fy(t,[\"padding\"],e.$padding),fy(t,[\"paddingLeft\",\"paddingRight\"],e.$paddingX),fy(t,[\"paddingTop\",\"paddingBottom\"],e.$paddingY),fy(t,[\"paddingTop\"],e.$paddingTop),fy(t,[\"paddingRight\"],e.$paddingRight),fy(t,[\"paddingBottom\"],e.$paddingBottom),fy(t,[\"paddingLeft\"],e.$paddingLeft)].filter(Boolean)}function bC(e){const{media:t,radius:n}=ve(e.theme);return py(t,e.$radius,(e=>{let t=0;return\"number\"==typeof e&&(t=hy(n[e])),\"full\"===e&&(t=\"9999px\"),{borderRadius:t}}))}function CC(e,t){return`${e.map(hy).join(\" \")} ${t}`}const kC=zo.div((function(e){return gy(\"label\",e)}),my,(function(e){const{$accent:t,$muted:n}=e,{font:r}=ve(e.theme);return Wo`\n    text-transform: uppercase;\n\n    ${t&&Wo`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&Wo`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `})),xC=zo.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`,LC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{accent:r,align:o,children:i,muted:a=!1,size:s=2,textOverflow:l,weight:c,...d}=t;let u=i;return u=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"ellipsis\"===l?xC:\"span\",{children:u}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kC,{\"data-ui\":\"Label\",...d,$accent:r,$align:wy(o),$muted:a,$size:wy(s),$weight:c,ref:n,children:u})}));LC.displayName=\"ForwardRef(Label)\";const MC=function(e){const{$color:t}=e,{avatar:n}=ve(e.theme);return{\"--avatar-bg-color\":`var(--card-avatar-${t}-bg-color)`,\"--avatar-fg-color\":`var(--card-avatar-${t}-fg-color)`,backgroundColor:\"var(--avatar-bg-color)\",position:\"relative\",boxSizing:\"border-box\",userSelect:\"none\",boxShadow:\"0 0 0 1px var(--card-bg-color)\",'&[data-status=\"inactive\"]':{opacity:.5},\"&>svg\":{\"&:not([hidden])\":{display:\"block\"}},'&[data-as=\"button\"]':{WebkitFontSmoothing:\"inherit\",appearance:\"none\",margin:0,padding:0,border:0,font:\"inherit\",color:\"inherit\",outline:\"none\",\"&:focus\":{boxShadow:qb({focusRing:n.focusRing})},\"&:focus:not(:focus-visible)\":{boxShadow:\"none\"}}}},HC=function(){return{position:\"absolute\",boxSizing:\"border-box\",zIndex:0,opacity:0,transition:\"all 0.2s linear\",transform:\"rotate(-90deg) translate3d(0, 6px, 0)\",left:0,right:0,top:0,bottom:0,\"& > svg\":{width:\"11px\",height:\"7px\",position:\"absolute\",top:\"-5px\",left:\"50%\",transform:\"translateX(-6px)\",\"&:not([hidden])\":{display:\"block\"}},\"[data-arrow-position='inside'] > &\":{transform:\"rotate(-90deg) translate3d(0, 6px, 0)\",opacity:0},\"[data-arrow-position='top'] > &\":{opacity:1,transform:\"rotate(0deg)\"},\"[data-arrow-position='bottom'] > &\":{opacity:1,transform:\"rotate(-180deg)\"}}},VC=function(){return{strokeWidth:\"4px\",stroke:\"var(--card-bg-color)\"}},RC=function(){return{strokeWidth:\"2px\",stroke:\"var(--avatar-bg-color)\",'[data-status=\"editing\"] &':{strokeDasharray:\"2 4\",strokeLinecap:\"round\"}}},SC=function(){return{width:\"100%\",height:\"100%\",color:\"var(--avatar-fg-color)\",alignItems:\"center\",justifyContent:\"center\",textTransform:\"uppercase\",textAlign:\"center\",borderRadius:\"50%\",\"&:not([hidden])\":{display:\"flex\"}}},FC=function(){return{position:\"relative\"}};const EC=zo.div((function(e){const{avatar:t,media:n}=ve(e.theme);return py(n,e.$size,(e=>{const n=t.sizes[e]||t.sizes[0];return{width:hy(n.size),height:hy(n.size),borderRadius:hy(n.size/2),\"&>svg\":{width:hy(n.size),height:hy(n.size),borderRadius:hy(n.size/2)}}}))}),MC),NC=zo.div(HC),IC=zo.ellipse(VC),BC=zo.ellipse(RC),jC=zo.div(SC),$C=zo(LC)({color:\"inherit\"}),AC=zo.svg(FC);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(r,o){const{__unstable_hideInnerStroke:i,as:a,color:s=\"gray\",src:l,title:c,initials:d,onImageLoadError:u,arrowPosition:h,animateArrowFrom:f,status:m=\"online\",size:w=1,...v}=r,{avatar:y}=vb(),b=un.isValidElementType(a)?a:\"div\",C=wy(w),x=(y.sizes[C[0]]||y.sizes[0]).size,H=x/2,V=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),[R,S]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(f||h||\"inside\"),[F,E]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),N=`avatar-image-${V}`;(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(R===h)return;const e=requestAnimationFrame((()=>S(h)));return()=>cancelAnimationFrame(e)}),[R,h]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{l&&E(!1)}),[l]);const I=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{E(!0),u&&u(new Error(\"Avatar: the image failed to load\"))}),[u]),B=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>C.map((e=>1===e?1:2===e?3:3===e?5:0))),[C]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(EC,{as:b,\"data-as\":\"string\"==typeof b?b:void 0,\"data-ui\":\"Avatar\",...v,$color:s,$size:C,\"aria-label\":c,\"data-arrow-position\":R,\"data-status\":m,ref:o,title:c,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NC,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{width:\"11\",height:\"7\",viewBox:\"0 0 11 7\",fill:\"none\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.67948 1.50115L11 7L0 7L4.32052 1.50115C4.92109 0.736796 6.07891 0.736795 6.67948 1.50115Z\",fill:s})})}),!F&&l&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(AC,{viewBox:`0 0 ${x} ${x}`,fill:\"none\",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"defs\",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"pattern\",{id:N,patternContentUnits:\"objectBoundingBox\",width:\"1\",height:\"1\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"image\",{href:l,width:\"1\",height:\"1\",onError:I})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:H,cy:H,r:H,fill:`url(#${N})`}),!i&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IC,{cx:H,cy:H,rx:H,ry:H,vectorEffect:\"non-scaling-stroke\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BC,{cx:H,cy:H,rx:H,ry:H,vectorEffect:\"non-scaling-stroke\"})]}),(F||!l)&&d&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jC,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($C,{forwardedAs:\"span\",size:B,weight:\"medium\",children:d})})})]})})).displayName=\"ForwardRef(Avatar)\";const TC=zo.div((function(e){const{avatar:t,media:n}=ve(e.theme);return py(n,e.$size,(e=>{const n=t.sizes[e];return n?{borderRadius:hy(n.size/2),minWidth:hy(n.size),height:hy(n.size)}:cy}))}),(function(e){const{space:t}=ve(e.theme);return Wo`\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    user-select: none;\n    color: inherit;\n    color: var(--card-fg-color);\n    background: var(--card-bg-color);\n    box-shadow:\n      0 0 0 1px var(--card-bg-color),\n      inset 0 0 0 1px var(--card-hairline-hard-color);\n    padding: 0 ${hy(t[2])};\n\n    &:not([hidden]) {\n      display: flex;\n    }\n  `})),PC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{count:r,size:o=1}=t,i=wy(o),a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i.map((e=>1===e?1:2===e?3:3===e?5:0))),[i]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TC,{$size:i,\"data-ui\":\"AvatarCounter\",ref:n,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LC,{as:\"span\",size:a,weight:\"medium\",children:r})})}));PC.displayName=\"ForwardRef(AvatarCounter)\";const WC=Wo`\n  white-space: nowrap;\n\n  & > div {\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  }\n`;const ZC=zo.div((function(e){const{avatar:t,media:n}=ve(e.theme);return py(n,e.$size,(e=>{const n=t.sizes[e];return n?{\"& > div + div\":{marginLeft:hy(n.distance)}}:cy}))}),(function(){return WC}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{children:o,maxLength:i=4,size:a=1,...s}=n,l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(o).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)),[o]),c=Math.max(i,0),d=wy(a),u=l.length,h=u-(c-1),p=h>1?l.slice(h,u):l;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(ZC,{\"data-ui\":\"AvatarStack\",...s,ref:r,$size:d,children:[0===u&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PC,{count:u,size:d})}),0!==u&&h>1&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PC,{count:h,size:d})}),p.map(((t,n)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(t,{size:d})},String(n))))]})})).displayName=\"ForwardRef(AvatarStack)\";const DC=zo.div((function(){return Sb}),zb,(function(){return[Ib,Bb,jb,Nb]}),(function(){return[aC,sC,lC,cC,dC,uC]}),(function(e){const{theme:t}=e;return[fy(t,[\"margin\"],e.$margin),fy(t,[\"marginLeft\",\"marginRight\"],e.$marginX),fy(t,[\"marginTop\",\"marginBottom\"],e.$marginY),fy(t,[\"marginTop\"],e.$marginTop),fy(t,[\"marginRight\"],e.$marginRight),fy(t,[\"marginBottom\"],e.$marginBottom),fy(t,[\"marginLeft\"],e.$marginLeft)].filter(Boolean)}),yC),zC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r=\"div\",column:o,columnStart:i,columnEnd:a,display:s=\"block\",flex:l,height:c,margin:d=0,marginX:u,marginY:h,marginTop:p,marginRight:f,marginBottom:g,marginLeft:m,overflow:w,padding:v=0,paddingX:y,paddingY:b,paddingTop:C,paddingRight:k,paddingBottom:x,paddingLeft:L,row:M,rowStart:H,rowEnd:V,sizing:R,...S}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DC,{\"data-as\":\"string\"==typeof r?r:void 0,\"data-ui\":\"Box\",...S,$column:wy(o),$columnStart:wy(i),$columnEnd:wy(a),$display:wy(s),$flex:wy(l),$height:wy(c),$margin:wy(d),$marginX:wy(u),$marginY:wy(h),$marginTop:wy(p),$marginRight:wy(f),$marginBottom:wy(g),$marginLeft:wy(m),$overflow:wy(w),$padding:wy(v),$paddingX:wy(y),$paddingY:wy(b),$paddingTop:wy(C),$paddingRight:wy(k),$paddingBottom:wy(x),$paddingLeft:wy(L),$row:wy(M),$rowStart:wy(H),$rowEnd:wy(V),$sizing:wy(R),as:r,ref:n,children:t.children})}));zC.displayName=\"ForwardRef(Box)\";const OC=zo.div((function(e){return gy(\"text\",e)}),my,(function(e){const{$accent:t,$muted:n}=e,{font:r}=ve(e.theme);return Wo`\n    color: var(--card-fg-color);\n\n    ${t&&Wo`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&Wo`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n      background-color: var(--card-code-bg-color);\n      color: var(--card-code-fg-color);\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${r.text.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n      color: var(--card-icon-color);\n\n      & path {\n        vector-effect: non-scaling-stroke !important;\n      }\n    }\n  `})),_C=zo.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`,qC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{accent:r=!1,align:o,children:i,muted:a=!1,size:s=2,textOverflow:l,weight:c,...d}=t;let u=i;return\"ellipsis\"===l&&(u=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_C,{children:u})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(OC,{\"data-ui\":\"Text\",...d,$accent:r,$align:wy(o),$muted:a,ref:n,$size:wy(s),$weight:c,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:u})})}));qC.displayName=\"ForwardRef(Text)\";const UC=zo(zC)(bC,(function(e){const{$tone:t}=e;return{\"--card-bg-color\":`var(--card-badge-${t}-bg-color)`,\"--card-fg-color\":`var(--card-badge-${t}-fg-color)`,backgroundColor:\"var(--card-bg-color)\",cursor:\"default\",\"&:not([hidden])\":{display:\"inline-block\",verticalAlign:\"top\"}}}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,fontSize:o=1,mode:i,padding:a=1,radius:s=\"full\",tone:l=\"default\",...c}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UC,{\"data-ui\":\"Badge\",...c,$tone:l,$radius:wy(s),padding:wy(a),ref:n,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:o,children:r})})})).displayName=\"ForwardRef(Badge)\";const GC=zo(zC)(zb,(function(){return[$b,Ab,Tb,Pb,Wb,Zb]})),YC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{align:r,as:o,direction:i=\"row\",gap:a,justify:s,wrap:l,...c}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(GC,{\"data-ui\":\"Flex\",...c,$align:wy(r),$direction:wy(i),$gap:wy(a),$justify:wy(s),$wrap:wy(l),forwardedAs:o,ref:n})}));YC.displayName=\"ForwardRef(Flex)\";const XC=Oo`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`,KC=zo(qC)`\n  & > span > svg {\n    animation: ${XC} 500ms linear infinite;\n  }\n`,JC=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(KC,{\"data-ui\":\"Spinner\",...t,ref:n,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Gs,{})})}));function QC(e,t,n=!1){return{\"--card-backdrop-color\":e.backdrop,\"--card-focus-ring-color\":e.focusRing,\"--card-shadow-outline-color\":e.shadow.outline,\"--card-shadow-umbra-color\":e.shadow.umbra,\"--card-shadow-penumbra-color\":e.shadow.penumbra,\"--card-shadow-ambient-color\":e.shadow.ambient,\"--card-accent-fg-color\":t.accent.fg,\"--card-avatar-gray-bg-color\":t.avatar.gray.bg,\"--card-avatar-gray-fg-color\":t.avatar.gray.fg,\"--card-avatar-blue-bg-color\":t.avatar.blue.bg,\"--card-avatar-blue-fg-color\":t.avatar.blue.fg,\"--card-avatar-purple-bg-color\":t.avatar.purple.bg,\"--card-avatar-purple-fg-color\":t.avatar.purple.fg,\"--card-avatar-magenta-bg-color\":t.avatar.magenta.bg,\"--card-avatar-magenta-fg-color\":t.avatar.magenta.fg,\"--card-avatar-red-bg-color\":t.avatar.red.bg,\"--card-avatar-red-fg-color\":t.avatar.red.fg,\"--card-avatar-orange-bg-color\":t.avatar.orange.bg,\"--card-avatar-orange-fg-color\":t.avatar.orange.fg,\"--card-avatar-yellow-bg-color\":t.avatar.yellow.bg,\"--card-avatar-yellow-fg-color\":t.avatar.yellow.fg,\"--card-avatar-green-bg-color\":t.avatar.green.bg,\"--card-avatar-green-fg-color\":t.avatar.green.fg,\"--card-avatar-cyan-bg-color\":t.avatar.cyan.bg,\"--card-avatar-cyan-fg-color\":t.avatar.cyan.fg,\"--card-bg-color\":t.bg,\"--card-bg-image\":n?`repeating-conic-gradient(${t.bg} 0% 25%, ${t.muted.bg} 0% 50%)`:void 0,\"--card-border-color\":t.border,\"--card-badge-default-bg-color\":t.badge.default.bg,\"--card-badge-default-dot-color\":t.badge.default.dot,\"--card-badge-default-fg-color\":t.badge.default.fg,\"--card-badge-default-icon-color\":t.badge.default.icon,\"--card-badge-primary-bg-color\":t.badge.primary.bg,\"--card-badge-primary-dot-color\":t.badge.primary.dot,\"--card-badge-primary-fg-color\":t.badge.primary.fg,\"--card-badge-primary-icon-color\":t.badge.primary.icon,\"--card-badge-positive-bg-color\":t.badge.positive.bg,\"--card-badge-positive-dot-color\":t.badge.positive.dot,\"--card-badge-positive-fg-color\":t.badge.positive.fg,\"--card-badge-positive-icon-color\":t.badge.positive.icon,\"--card-badge-caution-bg-color\":t.badge.caution.bg,\"--card-badge-caution-dot-color\":t.badge.caution.dot,\"--card-badge-caution-fg-color\":t.badge.caution.fg,\"--card-badge-caution-icon-color\":t.badge.caution.icon,\"--card-badge-critical-bg-color\":t.badge.critical.bg,\"--card-badge-critical-dot-color\":t.badge.critical.dot,\"--card-badge-critical-fg-color\":t.badge.critical.fg,\"--card-badge-critical-icon-color\":t.badge.critical.icon,\"--card-code-bg-color\":t.code.bg,\"--card-code-fg-color\":t.code.fg,\"--card-fg-color\":t.fg,\"--card-icon-color\":t.icon,\"--card-kbd-bg-color\":t.kbd.bg,\"--card-kbd-border-color\":t.kbd.border,\"--card-kbd-fg-color\":t.kbd.fg,\"--card-link-fg-color\":t.link.fg,\"--card-muted-bg-color\":t.muted.bg,\"--card-muted-fg-color\":t.muted.fg,\"--card-skeleton-color-from\":t.skeleton.from,\"--card-skeleton-color-to\":t.skeleton.to,\"--card-bg2-color\":t.muted.bg,\"--card-link-color\":t.link.fg,\"--card-hairline-soft-color\":t.border,\"--card-hairline-hard-color\":t.border}}function ek(...e){return e.filter(Boolean).join(\",\")}JC.displayName=\"ForwardRef(Spinner)\";const tk=zo.button(bC,(function(e){const{$width:t}=e,{style:n}=ve(e.theme);return Wo`\n    ${n?.button};\n\n    -webkit-font-smoothing: inherit;\n    appearance: none;\n    display: inline-flex;\n    align-items: center;\n    font: inherit;\n    border: 0;\n    outline: none;\n    user-select: none;\n    text-decoration: none;\n    border: 0;\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n    white-space: nowrap;\n    text-align: left;\n    position: relative;\n    vertical-align: top;\n\n    ${\"fill\"===t&&Wo`\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    `}\n\n    & > span {\n      display: block;\n      flex: 1;\n      min-width: 0;\n      border-radius: inherit;\n    }\n\n    &::-moz-focus-inner {\n      border: 0;\n      padding: 0;\n    }\n  `}),(function(e){const{$mode:t}=e,{button:n,color:r,style:o}=ve(e.theme),i=\"ghost\"===e.$mode,a=r.button[t]||r.button.default,s=a[e.$tone]||a.default,l={width:n.border.width,color:\"var(--card-border-color)\"},c=void 0;return[QC(r,s.enabled),{backgroundColor:\"var(--card-bg-color)\",color:\"var(--card-fg-color)\",boxShadow:_b(l),'&:disabled, &[data-disabled=\"true\"]':QC(r,s.disabled),\"&:not([data-disabled='true'])\":{boxShadow:ek(_b(l),i?c:void 0),\"&:focus\":{boxShadow:qb({base:r,border:{width:2,color:r.bg},focusRing:n.focusRing})},\"&:focus:not(:focus-visible)\":{boxShadow:ek(_b(l),i?c:void 0)},\"@media (hover: hover)\":{\"&:hover\":QC(r,s.hovered),\"&:active\":QC(r,s.pressed),\"&[data-hovered]\":QC(r,s.hovered)},\"&[data-selected]\":QC(r,s.pressed)}},o?.button?.root].filter(Boolean)})),nk=zo.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--card-bg-color);\n  border-radius: inherit;\n  z-index: 1;\n  box-shadow: inherit;\n`,rk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{children:o,disabled:i,fontSize:a=1,icon:s,iconRight:l,justify:c=\"center\",loading:d,mode:u=\"default\",padding:h=3,paddingX:p,paddingY:f,paddingTop:m,paddingBottom:w,paddingLeft:v,paddingRight:y,radius:b=2,selected:C,space:k=3,text:x,textAlign:L,tone:M=\"default\",type:H=\"button\",muted:V=!1,width:S,...F}=n,{button:E}=vb(),N=wy(c),I=wy(h),B=wy(p),j=wy(f),$=wy(m),A=wy(w),T=wy(v),P=wy(y),W=wy(b),Z=wy(k),D=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({padding:I,paddingX:B,paddingY:j,paddingTop:$,paddingBottom:A,paddingLeft:T,paddingRight:P})),[I,B,j,$,A,T,P]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(tk,{\"data-ui\":\"Button\",...F,$mode:u,$radius:W,$tone:M,\"data-disabled\":!(!d&&!i),\"data-selected\":C?\"\":void 0,disabled:!(!d&&!i),ref:r,type:H,$width:S,children:[!!d&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(nk,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(JC,{})}),(s||x||l)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{as:\"span\",...D,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{as:\"span\",justify:N,gap:Z,children:[s&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:a,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(s)&&s,dn.isValidElementType(s)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s,{})]}),x&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{muted:V,align:L,size:a,textOverflow:\"ellipsis\",weight:E.textWeight,children:x}),l&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:a,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(l)&&l,dn.isValidElementType(l)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(l,{})]})]})}),o&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{as:\"span\",...D,children:o})]})}));function ok(e){const{$checkered:t}=e,{space:n}=ve(e.theme);return Wo`\n    ${t&&Wo`\n      background-size: ${n[3]}px ${n[3]}px;\n      background-position: 50% 50%;\n      background-image: var(--card-bg-image);\n    `}\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      outline: none;\n      text-decoration: none;\n    }\n\n    /* &:is(pre) */\n    &[data-as='pre'] {\n      font: inherit;\n    }\n  `}function ik(e){const{$checkered:t,$focusRing:n,$muted:r}=e,{card:o,color:i,style:a}=ve(e.theme),s={width:o.border.width,color:\"var(--card-border-color)\"};return Wo`\n    color-scheme: ${i._dark?\"dark\":\"light\"};\n\n    ${QC(i,i,t)}\n\n    background-color: ${r?\"var(--card-muted-bg-color)\":\"var(--card-bg-color)\"};\n    color: var(--card-fg-color);\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      --card-focus-ring-box-shadow: none;\n\n      cursor: default;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &:disabled {\n        ${QC(i,i.selectable.default.disabled,t)}\n      }\n\n      &:not(:disabled) {\n        &[data-pressed] {\n          ${QC(i,i.selectable.default.pressed,t)}\n        }\n\n        &[data-selected] {\n          ${QC(i,i.selectable.default.selected,t)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${QC(i,i.selectable.default.hovered,t)}\n            }\n\n            &:active {\n              ${QC(i,i.selectable.default.pressed,t)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${n?qb({base:i,border:s,focusRing:o.focusRing}):void 0};\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      cursor: pointer;\n      box-shadow: var(--card-focus-ring-box-shadow);\n\n      &[data-disabled] {\n        ${QC(i,i.selectable.default.disabled,t)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${QC(i,i.selectable.default.pressed,t)}\n        }\n\n        &[data-selected] {\n          ${QC(i,i.selectable.default.selected,t)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-pressed]):not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${QC(i,i.selectable.default.hovered,t)}\n            }\n\n            &:active {\n              ${QC(i,i.selectable.default.pressed,t)}\n            }\n          }\n        }\n\n        &:focus-visible {\n          --card-focus-ring-box-shadow: ${n?qb({base:i,border:s,focusRing:o.focusRing}):void 0};\n        }\n      }\n    }\n\n    ${a?.card?.root}\n  `}rk.displayName=\"ForwardRef(Button)\";const ak=zo(zC)((function(){return[Lb,Mb,Hb,Vb,Rb]}),bC,(function(e){const{card:t,media:n,shadow:r}=ve(e.theme);return py(n,e.$shadow,(e=>function(e,t=1){return e?{boxShadow:`0 0 0 ${hy(t)} var(--card-shadow-outline-color), ${CC(e.umbra,\"var(--card-shadow-umbra-color)\")}, ${CC(e.penumbra,\"var(--card-shadow-penumbra-color)\")}, ${CC(e.ambient,\"var(--card-shadow-ambient-color)\")}`}:cy}(r[e],t.shadow.outline)))}),(function(e){return[ok(e),ik(e)]})),sk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{__unstable_checkered:r=!1,__unstable_focusRing:o=!1,as:i,border:a,borderTop:s,borderRight:l,borderBottom:c,borderLeft:d,muted:u,pressed:h,radius:p=0,scheme:f,selected:g,shadow:m,tone:w=\"default\",...v}=t,y=dn.isValidElementType(i)?i:\"div\",b=mb(),C=\"inherit\"===w?b.tone:w;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wb,{scheme:f,tone:C,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ak,{\"data-as\":\"string\"==typeof y?y:void 0,\"data-scheme\":b.scheme,\"data-ui\":\"Card\",\"data-tone\":C,...v,$border:wy(a),$borderTop:wy(s),$borderRight:wy(l),$borderBottom:wy(c),$borderLeft:wy(d),$checkered:r,$focusRing:o,$muted:u,$radius:wy(p),$shadow:wy(m),$tone:C,\"data-checkered\":r?\"\":void 0,\"data-pressed\":h?\"\":void 0,\"data-selected\":g?\"\":void 0,forwardedAs:y,ref:n,selected:g})})}));sk.displayName=\"ForwardRef(Card)\";const lk=zo.div((function(){return Wo`\n    position: relative;\n    display: inline-block;\n  `})),ck=zo.input((function(e){const{color:t,input:n,radius:r}=ve(e.theme),{focusRing:o}=n.checkbox;return Wo`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    outline: none;\n    opacity: 0;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n\n    & + span {\n      position: relative;\n      display: block;\n      height: ${hy(n.checkbox.size)};\n      width: ${hy(n.checkbox.size)};\n      box-sizing: border-box;\n      box-shadow: ${_b({color:t.input.default.enabled.border,width:n.border.width})};\n      border-radius: ${hy(r[2])};\n      line-height: 1;\n      background-color: ${t.input.default.enabled.bg};\n\n      & > svg {\n        display: block;\n        position: absolute;\n        opacity: 0;\n        height: 100%;\n        width: 100%;\n\n        & > path {\n          vector-effect: non-scaling-stroke;\n          stroke-width: 1.5px !important;\n        }\n      }\n    }\n\n    &:checked + span {\n      background: ${t.input.default.enabled.fg};\n      box-shadow: ${_b({color:t.input.default.enabled.fg,width:n.border.width})};\n      color: ${t.input.default.enabled.bg};\n    }\n\n    /* focus */\n    &:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${qb({focusRing:o})};\n    }\n\n    /* focus when checked - uses a different offset */\n    &:not(:disabled):focus:focus-visible&:checked + span {\n      box-shadow: ${qb({focusRing:{width:1,offset:1}})};\n    }\n\n    &[data-error] + span {\n      background-color: ${t.input.invalid.enabled.border};\n      box-shadow: ${_b({width:n.border.width,color:t.input.invalid.enabled.muted.bg})};\n      color: ${t.input.default.disabled.fg};\n    }\n    &[data-error]&:checked + span {\n      background-color: ${t.input.invalid.enabled.muted.bg};\n      color: ${t.input.default.enabled.bg};\n    }\n    &[data-error]&:checked&:not(:disabled):focus:focus-visible + span {\n      box-shadow: ${qb({border:{width:n.border.width,color:t.input.invalid.readOnly.muted.bg},focusRing:{width:1,offset:1}})};\n    }\n\n    &:disabled + span {\n      background-color: ${t.input.default.disabled.bg};\n      box-shadow: ${_b({width:n.border.width,color:t.input.default.disabled.border})};\n      color: ${t.input.default.disabled.fg};\n    }\n    &:disabled&:checked + span {\n      background-color: ${t.input.default.disabled.muted.bg};\n    }\n\n    &[data-read-only] + span {\n      background-color: ${t.input.default.readOnly.bg};\n      box-shadow: ${_b({width:n.border.width,color:t.input.default.readOnly.border})};\n      color: ${t.input.default.readOnly.fg};\n    }\n\n    &[data-read-only]&:checked + span {\n      background-color: ${t.input.default.readOnly.muted.bg};\n    }\n\n    &:checked + span > svg:first-child {\n      opacity: 1;\n    }\n    &:indeterminate + span > svg:last-child {\n      opacity: 1;\n    }\n  `}));function dk({theme:e}){const{color:{syntax:t}}=ve(e);return{\"&.atrule\":{color:t.atrule},\"&.attr-name\":{color:t.attrName},\"&.attr-value\":{color:t.attrValue},\"&.attribute\":{color:t.attribute},\"&.boolean\":{color:t.boolean},\"&.builtin\":{color:t.builtin},\"&.cdata\":{color:t.cdata},\"&.char\":{color:t.char},\"&.class\":{color:t.class},\"&.class-name\":{color:t.className},\"&.comment\":{color:t.comment},\"&.constant\":{color:t.constant},\"&.deleted\":{color:t.deleted},\"&.doctype\":{color:t.doctype},\"&.entity\":{color:t.entity},\"&.function\":{color:t.function},\"&.hexcode\":{color:t.hexcode},\"&.id\":{color:t.id},\"&.important\":{color:t.important},\"&.inserted\":{color:t.inserted},\"&.keyword\":{color:t.keyword},\"&.number\":{color:t.number},\"&.operator\":{color:t.operator},\"&.prolog\":{color:t.prolog},\"&.property\":{color:t.property},\"&.pseudo-class\":{color:t.pseudoClass},\"&.pseudo-element\":{color:t.pseudoElement},\"&.punctuation\":{color:t.punctuation},\"&.regex\":{color:t.regex},\"&.selector\":{color:t.selector},\"&.string\":{color:t.string},\"&.symbol\":{color:t.symbol},\"&.tag\":{color:t.tag},\"&.unit\":{color:t.unit},\"&.url\":{color:t.url},\"&.variable\":{color:t.variable}}}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{checked:o,className:i,disabled:a,indeterminate:s,customValidity:l,readOnly:c,style:d,...u}=n,h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>h.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{h.current&&(h.current.indeterminate=s||!1)}),[s]),yy(h,l),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(lk,{className:i,\"data-ui\":\"Checkbox\",style:d,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ck,{\"data-read-only\":!a&&c?\"\":void 0,\"data-error\":l?\"\":void 0,...u,checked:o,disabled:a||c,type:\"checkbox\",readOnly:c,ref:h}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"span\",{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Li,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Is,{})]})]})})).displayName=\"ForwardRef(Checkbox)\";const uk=zo.pre((function(){return Wo`\n    color: var(--card-code-fg-color);\n\n    & code {\n      font-family: inherit;\n\n      &.refractor .token {\n        ${dk}\n      }\n    }\n\n    & a {\n      color: inherit;\n      text-decoration: underline;\n      border-radius: 1px;\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `}),(function(e){return gy(\"code\",e)}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{children:o,language:i,size:a=2,weight:s,...l}=n,c=\"string\"==typeof i?i:void 0,d=!!c&&zd.hasLanguage(c);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(uk,{\"data-ui\":\"Code\",...l,$size:wy(a),$weight:s,ref:r,children:[!(c&&d)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"code\",{children:o}),c&&d&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zd,{inline:!0,language:c,value:String(o)})]})})).displayName=\"ForwardRef(Code)\";const hk={width:\"100%\",margin:\"0 auto\"};const pk=zo(zC)((function(){return hk}),(function(e){const{container:t,media:n}=ve(e.theme);return py(n,e.$width,(e=>({maxWidth:\"auto\"===e?\"none\":hy(t[e])})))})),fk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r,width:o=2,...i}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pk,{\"data-ui\":\"Container\",...i,$width:wy(o),forwardedAs:r,ref:n})}));fk.displayName=\"ForwardRef(Container)\";const gk=zo(zC)((function(){return[Ub,Xb,Kb,Jb,Qb,eC,tC,nC,rC]}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r,autoRows:o,autoCols:i,autoFlow:a,columns:s,gap:l,gapX:c,gapY:d,rows:u,children:h,...p}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gk,{\"data-as\":\"string\"==typeof r?r:void 0,\"data-ui\":\"Grid\",...p,$autoRows:wy(o),$autoCols:wy(i),$autoFlow:wy(a),$columns:wy(s),$gap:wy(l),$gapX:wy(c),$gapY:wy(d),$rows:wy(u),forwardedAs:r,ref:n,children:h})})).displayName=\"ForwardRef(Grid)\";const mk=zo.div((function(e){const{$accent:t,$muted:n}=e,{font:r}=ve(e.theme);return Wo`\n    ${t&&Wo`\n      color: var(--card-accent-fg-color);\n    `}\n\n    ${n&&Wo`\n      color: var(--card-muted-fg-color);\n    `}\n\n    & code {\n      font-family: ${r.code.family};\n      border-radius: 1px;\n    }\n\n    & a {\n      text-decoration: none;\n      border-radius: 1px;\n      color: var(--card-link-color);\n      outline: none;\n\n      @media (hover: hover) {\n        &:hover {\n          text-decoration: underline;\n        }\n      }\n\n      &:focus {\n        box-shadow:\n          0 0 0 1px var(--card-bg-color),\n          0 0 0 3px var(--card-focus-ring-color);\n      }\n\n      &:focus:not(:focus-visible) {\n        box-shadow: none;\n      }\n    }\n\n    & strong {\n      font-weight: ${r.heading.weights.bold};\n    }\n\n    & svg {\n      /* Certain popular CSS libraries changes the defaults for SVG display */\n      /* Make sure SVGs are rendered as inline elements */\n      display: inline;\n    }\n\n    & [data-sanity-icon] {\n      vertical-align: baseline;\n    }\n  `}),my,(function(e){return gy(\"heading\",e)})),wk=zo.span`\n  display: block;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  overflow: clip;\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{accent:r=!1,align:o,children:i,muted:a=!1,size:s=2,textOverflow:l,weight:c,...d}=t;let u=i;return\"ellipsis\"===l&&(u=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wk,{children:u})),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(mk,{\"data-ui\":\"Heading\",...d,$accent:r,$align:wy(o),$muted:a,$size:wy(s),$weight:c,ref:n,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:u})})})).displayName=\"ForwardRef(Heading)\";const vk=zo(zC)((function(){return{lineHeight:0,\"&&:not([hidden])\":{display:\"block\"},\"& > div\":{display:\"inline-block\",verticalAlign:\"middle\"}}}),(function(e){const{media:t,space:n}=ve(e.theme);return py(t,e.$space,(e=>{const t=hy(.5===e?n[1]/2:n[e]);return{margin:`-${t} 0 0 -${t}`,\"& > div\":{padding:`${t} 0 0 ${t}`}}}))})),yk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r,children:o,space:i,...a}=t,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>react__WEBPACK_IMPORTED_MODULE_1__.Children.map(o,(t=>t&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{children:t})))),[o]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vk,{\"data-ui\":\"Inline\",...a,$space:wy(i),forwardedAs:r,ref:n,children:s})}));yk.displayName=\"ForwardRef(Inline)\";const bk=zo.kbd(bC,(function(){return Wo`\n    --card-bg-color: var(--card-kbd-bg-color);\n    --card-border-color: var(--card-kbd-border-color);\n    --card-fg-color: var(--card-kbd-fg-color);\n\n    box-shadow: inset 0 0 0 1px var(--card-border-color);\n    background: var(--card-bg-color);\n    font: inherit;\n\n    vertical-align: top;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `})),Ck=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,fontSize:o=0,padding:i=1,radius:a=2,...s}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bk,{\"data-ui\":\"KBD\",...s,$radius:wy(a),ref:n,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{as:\"span\",padding:i,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{as:\"span\",size:o,weight:\"semibold\",children:r})})})}));Ck.displayName=\"ForwardRef(KBD)\";const kk={name:\"@sanity/ui/origin\",fn({middlewareData:e,placement:t,rects:n}){const[r]=t.split(\"-\"),o=n.floating.width,i=n.floating.height,a=e.shift?.x||0,s=e.shift?.y||0;if(o<=0||i<=0)return{};const l=[\"bottom\",\"top\"].includes(r),{originX:c,originY:d}=l?{originX:xk(.5-a/o,0,1),originY:\"bottom\"===r?0:1}:{originX:\"left\"===r?1:0,originY:xk(.5-s/i,0,1)};return{data:{originX:c,originY:d}}}};function xk(e,t,n){return Math.min(Math.max(e,t),n)}function Lk(e,t,n){const r=t.x-e.x,o=t.y-e.y,i=Math.sqrt(r*r+o*o);return Mk(e,t,Math.min(1,n/i))}function Mk(e,t,n){return{x:e.x+(t.x-e.x)*n,y:e.y+(t.y-e.y)*n}}const Hk=zo.div((({$w:e})=>Wo`\n    position: absolute;\n    width: ${e}px;\n    height: ${e}px;\n\n    :empty + & {\n      display: none;\n    }\n\n    & > svg {\n      display: block;\n      line-height: 0;\n      transform-origin: ${e/2}px ${e/2}px;\n    }\n\n    [data-placement^='top'] > & {\n      bottom: -${e}px;\n\n      & > svg {\n        transform: rotate(0);\n      }\n    }\n\n    [data-placement^='right'] > & {\n      left: -${e}px;\n\n      & > svg {\n        transform: rotate(90deg);\n      }\n    }\n\n    [data-placement^='left'] > & {\n      right: -${e}px;\n\n      & > svg {\n        transform: rotate(-90deg);\n      }\n    }\n\n    [data-placement^='bottom'] > & {\n      top: -${e}px;\n\n      & > svg {\n        transform: rotate(180deg);\n      }\n    }\n  `)),Vk=zo.path`\n  stroke: var(--card-shadow-outline-color);\n`,Rk=zo.path`\n  fill: var(--card-bg-color);\n`,Sk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{width:o,height:i,radius:a=0,...s}=n,{card:l}=vb(),c=l.shadow.outline,d=function(e){const t=e.length,n=[];for(let r=0;r<t;r+=1){const t=e[r],o=e[r-1],i=e[r+1];if(o&&t.radius){const e=Lk(t,o,t.radius),r=Lk(t,i,t.radius),a=Mk(e,t,.5),s=Mk(t,r,.5);n.push({type:\"point\",...e}),n.push({type:\"curve\",curveEnd:r,startControl:a,endControl:s})}else n.push({type:\"point\",...t})}return n}([{x:0,y:0},{x:a,y:0,radius:a},{x:o/2,y:i-1,radius:a},{x:o-a,y:0,radius:a},{x:o,y:0}]),u=function(e){return e.map(((e,t)=>\"point\"===e.type?`${0===t?\"M\":\"L\"} ${e.x} ${e.y}`:\"curve\"===e.type?`C ${e.startControl.x} ${e.startControl.y} ${e.endControl.x} ${e.endControl.y} ${e.curveEnd.x} ${e.curveEnd.y}`:\"\")).join(\" \")}(d),h=`${u}`,p=`${u} M ${o} -1 M 0 -1 Z`;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Hk,{...s,$w:o,ref:r,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{width:o,height:o,viewBox:`0 0 ${o} ${o}`,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"mask\",{id:\"stroke-mask\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:0,y:c,width:o,height:o,fill:\"white\"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Vk,{d:h,mask:\"url(#stroke-mask)\",strokeWidth:2*c}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Rk,{d:p})]})})}));Sk.displayName=\"ForwardRef(Arrow)\";const Fk=pb(\"@sanity/ui/context/boundaryElement\",null);function Ek(e){return!(!e||\"object\"!=typeof e||Array.isArray(e))}const Nk={version:0,element:null};function Ik(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Fk);if(e&&(!Ek(e)||0!==e.version))throw new Error(\"useBoundaryElement(): the context value is not compatible\");return e||Nk}function Bk({children:e,condition:t,wrapper:n}){return t?n(e):e}Bk.displayName=\"ConditionalWrapper\";function jk(e){if(!Ek(e)||0!==e.version)throw new Error(\"the context value is not compatible\");if(!e)throw new Error(\"components using `useLayer()` should be wrapped in a <LayerProvider>.\");if(0===e.version)return e;throw new Error(\"could not get layer context\")}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const r=vb(),{children:o,media:i=r.media,...a}=t,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[l,c]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),d=cb(l),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>d?.border.width??window.innerWidth),[d]),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>function(e,t){const n=[];for(let r=0;r<e.length;r+=1)e[r]>t&&n.push(r);return n}(i,u)),[i,u]),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>function(e,t){const n=[];for(let r=0;r<e.length;r+=1)e[r]<=t&&n.push(r);return n}(i,u)),[i,u]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>s.current));const f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{s.current=e,c(e)}),[]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{\"data-ui\":\"ElementQuery\",...a,\"data-eq-max\":h.length?h.join(\" \"):void 0,\"data-eq-min\":p.length?p.join(\" \"):void 0,ref:f,children:o})})).displayName=\"ForwardRef(ElementQuery)\";const $k=pb(\"@sanity/ui/context/layer\",null);function Ak(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)($k);if(!e)throw new Error(\"useLayer(): missing context value\");try{return jk(e)}catch(e){throw e instanceof Error?new Error(`useLayer(): ${e.message}`):new Error(`useLayer(): ${e}`)}}function Tk(e){return e instanceof Node&&e.nodeType===Node.ELEMENT_NODE}function Pk(e){return Tk(e)&&\"A\"===e.nodeName}function Wk(e){return Tk(e)&&\"BUTTON\"===e.nodeName}function Zk(e,t){return e.contains(t)||e===t}function Dk(e){return e.tabIndex>0||0===e.tabIndex&&null!==e.getAttribute(\"tabIndex\")||(Pk(e)?!!e.href&&\"ignore\"!==e.rel:function(e){return Tk(e)&&\"INPUT\"===e.nodeName}(e)?\"hidden\"!==e.type&&\"file\"!==e.type&&!e.disabled:!!(Wk(e)||function(e){return Tk(e)&&\"SELECT\"===e.nodeName}(e)||function(e){return Tk(e)&&\"TEXTAREA\"===e.nodeName}(e))&&!e.disabled)}function zk(e){if(!Dk(e))return!1;try{e.focus()}catch{}return document.activeElement===e}function Ok(e){for(let t=0;t<e.childNodes.length;t++){const n=e.childNodes[t];if(Tk(n)&&(zk(n)||Ok(n)))return!0}return!1}function _k(e){for(let t=e.childNodes.length-1;t>=0;t--){const n=e.childNodes[t];if(Tk(n)&&(zk(n)||_k(n)))return!0}return!1}function qk(e){if(!(e instanceof Element))return!1;const t=window.getComputedStyle(e);return t.overflowX.includes(\"auto\")||t.overflowX.includes(\"scroll\")||t.overflowY.includes(\"auto\")||t.overflowY.includes(\"scroll\")}function Uk(t){const{children:n,zOffset:r=0}=t,o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)($k),i=o&&jk(o),a=i?.registerChild,s=(i?.level??0)+1,l=wy(r),c=l.length-1,d=Math.min(Cb(),c),u=i?i.zIndex+l[d]:l[d],[,h]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),[m,w]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),v=0===m,y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=a?.(e);return void 0!==e?h((t=>{const n=t[e]??0,r={...t,[e]:n+1};return w(Object.keys(r).length),r})):w((e=>e+1)),()=>{void 0!==e?h((t=>{const n={...t};return 1===n[e]?(delete n[e],w(Object.keys(n).length)):n[e]-=1,n})):w((e=>e-1)),t?.()}}),[a]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>a?.(s)),[s,a]);const b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({version:0,isTopLayer:v,level:s,registerChild:y,size:m,zIndex:u})),[v,s,y,m,u]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)($k.Provider,{value:b,children:n})}Uk.displayName=\"LayerProvider\";const Gk=zo.div({position:\"relative\"}),Yk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,onActivate:o,onFocus:i,style:a=cy,...s}=t,{zIndex:l,isTopLayer:c}=Ak(),d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(c);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>u.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{h.current!==c&&c&&o?.({activeElement:d.current}),h.current=c}),[c,o]);const f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{i?.(e);const t=u.current,n=document.activeElement;!c||!t||!n||Tk(n)&&Zk(t,n)&&(d.current=n)}),[c,i]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Gk,{...s,\"data-ui\":\"Layer\",onFocus:f,ref:u,style:{...a,zIndex:l},children:r})})),Xk=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,zOffset:o=1,...i}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Uk,{zOffset:o,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Yk,{...i,ref:n,children:r})})}));Xk.displayName=\"ForwardRef(Layer)\";const Kk=\"@sanity/ui/context/portal\",Jk=Symbol.for(`${Kk}/element`);hb[Jk]=null;const Qk=pb(Kk,{version:0,boundaryElement:null,get element(){return typeof document>\"u\"?null:(hb[Jk]||(hb[Jk]=document.createElement(\"div\"),hb[Jk].setAttribute(\"data-portal\",\"\"),document.body.appendChild(hb[Jk])),hb[Jk])}});function ex(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Qk);if(!e)throw new Error(\"usePortal(): missing context value\");if(!Ek(e)||0!==e.version)throw new Error(\"usePortal(): the context value is not compatible\");return e}function tx(e){const{children:t,__unstable_name:n}=e,r=ex(),o=(n?r.elements&&r.elements[n]:r.element)||r.elements?.default;return o?(0,react_dom__WEBPACK_IMPORTED_MODULE_2__.createPortal)(t,o):null}function nx(t){const{boundaryElement:n,children:r,element:o,__unstable_elements:i}=t,a=function(e){const t=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(e);return function(e,t){if(!e||!t)return e===t;const n=Object.keys(e),r=Object.keys(t);return n.length===r.length&&n.every((n=>e[n]===t[n]))}(t.current,e)||(t.current=e),t.current}(i),s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(rx,(()=>document.body),(()=>null)),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({version:0,boundaryElement:n||null,element:o||s,elements:a})),[n,o,a,s]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Qk.Provider,{value:l,children:r})}tx.displayName=\"Portal\",nx.displayName=\"PortalProvider\";const rx=()=>()=>{};const ox=zo.div`\n  display: block;\n  width: 0;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  overflow: clip;\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r,children:o}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ox,{\"aria-hidden\":!0,as:r,\"data-ui\":\"SrOnly\",ref:n,children:o})})).displayName=\"ForwardRef(SrOnly)\";const ix=zo.div`\n  position: relative;\n`,ax=zo.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r=\"div\",gap:o=0,getItemKey:i,items:a=[],onChange:s,renderItem:l,...c}=t,{space:d}=vb(),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[f,m]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),[w,v]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0),[y,C]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>u.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!h.current)return;const e=h.current.firstChild;e instanceof HTMLElement&&C(e.offsetHeight)}),[l]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!u.current)return;let e=u.current.parentNode;for(;e&&!qk(e);)e=e.parentNode;if(e){const t=e;if(!(t instanceof HTMLElement))return;const n=()=>{m(t.scrollTop)};t.addEventListener(\"scroll\",n,{passive:!0});const r=new sb((e=>{v(e[0].contentRect.height)}));return r.observe(t),n(),()=>{t.removeEventListener(\"scroll\",n),r.unobserve(t),r.disconnect()}}const t=()=>{m(window.scrollY)},n=()=>{v(window.innerHeight)};return window.addEventListener(\"scroll\",t,{passive:!0}),window.addEventListener(\"resize\",n),v(window.innerHeight),t(),()=>{window.removeEventListener(\"scroll\",t),window.removeEventListener(\"resize\",n)}}),[]);const k=a.length,x=y?k*(y+d[o])-d[o]:0,L=x?Math.max(Math.floor(f/x*k)-2,0):0,H=x?Math.ceil((f+w)/x*k)+1:0;(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{s&&s({fromIndex:L,gap:d[o],itemHeight:y,scrollHeight:w,scrollTop:f,toIndex:H})}),[L,o,y,s,w,f,d,H]);const V=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>l&&0!==a.length?-1===y?[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ax,{children:l(a[0])},0)]:a.slice(L,H).map(((t,n)=>{const r=L+n,a=l(t),s=i?i(t,r):r;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ax,{style:{top:r*(y+d[o])},children:a},s)})):null),[L,o,i,y,a,l,d,H]),R=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({height:x})),[x]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ix,{as:r,\"data-ui\":\"VirtualList\",...c,ref:u,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{ref:h,style:R,children:V})})})).displayName=\"ForwardRef(VirtualList)\";const sx=[0,0,0,0],lx={top:[\"bottom\",\"left\",\"right\"],\"top-start\":[\"bottom-start\",\"left-start\",\"right-start\"],\"top-end\":[\"bottom-end\",\"left-end\",\"right-end\"],bottom:[\"top\",\"left\",\"right\"],\"bottom-start\":[\"top-start\",\"left-start\",\"right-start\"],\"bottom-end\":[\"top-end\",\"left-end\",\"right-end\"],left:[\"right\",\"top\",\"bottom\"],\"left-start\":[\"right-start\",\"top-start\",\"bottom-start\"],\"left-end\":[\"right-end\",\"top-end\",\"bottom-end\"],right:[\"left\",\"top\",\"bottom\"],\"right-start\":[\"left-start\",\"top-start\",\"bottom-start\"],\"right-end\":[\"left-end\",\"top-end\",\"bottom-end\"]};const cx=zo(Qv(sk))`\n  &:not([hidden]) {\n    display: flex;\n  }\n  flex-direction: column;\n  width: max-content;\n  min-width: min-content;\n  & > * {\n    opacity: var(${dy}, 1);\n    will-change: opacity;\n  }\n`,dx=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{__unstable_margins:o,animate:i,arrow:a,arrowRef:s,arrowX:l,arrowY:c,children:d,padding:u,placement:h,originX:p,originY:f,overflow:m,radius:w,scheme:v,shadow:y,strategy:b,style:C,tone:k,width:x,x:L,y:M,...H}=n,{zIndex:V}=Ak(),R=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>o||sx),[o]),S=(L??0)+R[3],F=(M??0)+R[0],E=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({left:S,originX:p,originY:f,position:b,top:F,width:x,zIndex:V,willChange:i?\"transform\":void 0,...C})),[i,p,f,b,C,x,S,F,V]),N=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({left:null!==l?l:void 0,top:null!==c?c:void 0,right:void 0,bottom:void 0})),[l,c]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(cx,{\"data-ui\":\"Popover\",...H,\"data-placement\":h,radius:w,ref:r,scheme:v,shadow:y,sizing:\"border\",style:E,tone:k,...i?uy:{},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YC,{\"data-ui\":\"Popover__wrapper\",direction:\"column\",flex:1,overflow:m,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YC,{direction:\"column\",flex:1,padding:u,children:d})}),a&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Sk,{ref:s,style:N,width:19,height:8,radius:2})]})})));dx.displayName=\"Memo(ForwardRef(PopoverCard))\";const ux=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(r,o){const{container:i,layer:a}=vb(),s=Ik(),{__unstable_margins:l=sx,animate:c=!1,arrow:d=!1,boundaryElement:u=s.element,children:h,constrainSize:f=!1,content:m,disabled:w,fallbackPlacements:v=r.fallbackPlacements??lx[r.placement??\"bottom\"],matchReferenceWidth:y,floatingBoundary:C=r.boundaryElement??s.element,onActivate:x,open:L,overflow:M=\"hidden\",padding:V,placement:R=\"bottom\",portal:F,preventOverflow:E=!0,radius:N=3,referenceBoundary:I=r.boundaryElement??s.element,referenceElement:B,scheme:j,shadow:$=3,tone:A=\"inherit\",width:T=\"auto\",zOffset:P=a.popover.zOffset,updateRef:W,...Z}=r,D=!xb()&&c,z=cb(u)?.border,O=wy(V),_=wy(N),q=wy($),U=wy(T),G=wy(P),Y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),X=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),K=\"viewport\";(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(o,(()=>Y.current));const J=Cb(),Q=f||E?z?.width:void 0,ee=function(e){const{container:t,mediaIndex:n,width:r}=e,o=r[n],i=void 0===o?r[r.length-1]:o;return\"number\"==typeof i?t[i]:void 0}({container:i,mediaIndex:J,width:U}),te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ee);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{te.current=ee}),[ee]);const ne=function(e){const{boundaryWidth:t,currentWidth:n}=e;if(void 0!==n||void 0!==t)return Math.min(n??1/0,(t||1/0)-8)}({boundaryWidth:Q,currentWidth:ee}),re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(ne);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{re.current=ne}),[ne]);const oe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=Y.current;if(!L||!e)return;const t=oe.current;y?void 0!==t&&(e.style.width=`${t}px`):void 0!==ee&&(e.style.width=`${ee}px`),\"number\"==typeof ne&&(e.style.maxWidth=`${ne}px`)}),[ee,y,ne,L]);const ie=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const e=[];return(f||E)&&e.push(dh({boundary:C||void 0,fallbackPlacements:v,padding:4,rootBoundary:K})),e.push(lh({mainAxis:4})),(f||y)&&e.push(function(e){const{apply:t,margins:n,padding:r=0}=e;return{name:\"@sanity/ui/size\",async fn(o){const{elements:i,placement:a,platform:s,rects:l}=o,{floating:c,reference:d}=l,u=await Gu(o,{altBoundary:!0,boundary:e.boundaryElement||void 0,elementContext:\"floating\",padding:r,rootBoundary:\"viewport\"});let h=1/0,p=1/0;const f=c.width,g=c.height;a.includes(\"top\")&&(h=f-(u.left+u.right),p=g-u.top),a.includes(\"right\")&&(h=f-u.right,p=g-(u.top+u.bottom)),a.includes(\"bottom\")&&(h=f-(u.left+u.right),p=g-u.bottom),a.includes(\"left\")&&(h=f-u.left,p=g-(u.top+u.bottom)),t({availableWidth:h-n[1]-n[3],availableHeight:p-n[0]-n[2],elements:i,referenceWidth:d.width-n[1]-n[3]});const m=await s.getDimensions(i.floating),w=m.height;return f!==m.width||g!==w?{reset:{rects:!0}}:{}}}}({apply({availableWidth:e,availableHeight:t,elements:n,referenceWidth:r}){oe.current=r;const o=te.current,i=re.current;y?n.floating.style.width=`${r}px`:void 0!==o&&(n.floating.style.width=`${o}px`),f&&(n.floating.style.maxWidth=`${Math.min(e,i??1/0)}px`,n.floating.style.maxHeight=`${t}px`)},boundaryElement:C||void 0,constrainSize:f,margins:l,matchReferenceWidth:y,padding:4})),E&&e.push(ch({boundary:C||void 0,rootBoundary:K,padding:4})),d&&e.push(uh({element:X,padding:4})),D&&e.push(kk),e.push({...Ju(t={boundary:I||void 0,padding:4,strategy:\"referenceHidden\"}),options:[t,n]}),e;var t,n}),[D,d,f,v,C,l,y,E,I]),{x:ae,y:se,middlewareData:le,placement:ce,refs:de,strategy:ue,update:he}=ah({middleware:ie,placement:R,whileElementsMounted:Uu}),pe=le.hide?.referenceHidden,fe=le.arrow?.x,ge=le.arrow?.y,me=le[\"@sanity/ui/origin\"]?.originX,we=le[\"@sanity/ui/origin\"]?.originY,ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{X.current=e}),[]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{Y.current=e,de.setFloating(e)}),[de]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{de.setReference(e);const t=function(e){let t=Object.getOwnPropertyDescriptor(e.props,\"ref\")?.get,n=t&&\"isReactWarning\"in t&&t.isReactWarning;return n?e.ref:(t=Object.getOwnPropertyDescriptor(e,\"ref\")?.get,n=t&&\"isReactWarning\"in t&&t.isReactWarning,n?e.props.ref:e.props.ref||e.ref)}(h);\"function\"==typeof t?t(e):t&&(t.current=e)}),[h,de]),Ce=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>!h||B?null:(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(h,{ref:be})),[h,B,be]);if((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{W&&(\"function\"==typeof W?W(he):W&&(W.current=he))}),[he,W]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{Ce||de.setReference(B||null)}),[B,de,Ce]),w)return h||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{});const ke=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Uk,{zOffset:G,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dx,{...Z,__unstable_margins:l,animate:D,arrow:d,arrowRef:ve,arrowX:fe,arrowY:ge,hidden:pe,overflow:M,padding:O,placement:ce,radius:_,ref:ye,scheme:j,shadow:q,originX:me,originY:we,strategy:ue,tone:A,width:y?oe.current:ee,x:ae,y:se,children:m})});return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bk,{condition:D,wrapper:t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ay,{children:t}),children:L&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bk,{condition:!!F,wrapper:t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tx,{__unstable_name:\"string\"==typeof F?F:void 0,children:t}),children:ke})}),Ce]})})));ux.displayName=\"Memo(ForwardRef(Popover))\";const hx=zo.div((function(){return Wo`\n    position: relative;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n\n    &[data-read-only] {\n      outline: 1px solid red;\n    }\n  `})),px=zo.input((function(e){const{color:t,input:n}=ve(e.theme),r=(n.radio.size-n.radio.markSize)/2;return Wo`\n    appearance: none;\n    position: absolute;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    z-index: 1;\n    padding: 0;\n    margin: 0;\n    border-radius: ${hy(n.radio.size/2)};\n    border: none;\n\n    /* enabled */\n    & + span {\n      display: block;\n      position: relative;\n      height: ${hy(n.radio.size)};\n      width: ${hy(n.radio.size)};\n      border-radius: ${hy(n.radio.size/2)};\n      background: ${t.input.default.enabled.bg};\n      box-shadow: ${_b({color:t.input.default.enabled.border,width:n.border.width})};\n\n      &::after {\n        content: '';\n        position: absolute;\n        top: ${hy(r)};\n        left: ${hy(r)};\n        height: ${hy(n.radio.markSize)};\n        width: ${hy(n.radio.markSize)};\n        border-radius: ${hy(n.radio.markSize/2)};\n        background: ${t.input.default.enabled.fg};\n        opacity: 0;\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus + span {\n      box-shadow: ${qb({border:{width:n.border.width,color:t.input.default.enabled.border},focusRing:n.radio.focusRing})};\n    }\n\n    &:not(:disabled):focus:not(:focus-visible) + span {\n      box-shadow: ${_b({color:t.input.default.enabled.border,width:n.border.width})};\n    }\n\n    &:checked + span::after {\n      opacity: 1;\n    }\n\n    /* customValidity */\n    &[data-error] + span {\n      background-color: ${t.input.invalid.enabled.border};\n      box-shadow: ${_b({width:n.border.width,color:t.input.invalid.enabled.muted.bg})};\n      &::after {\n        background: ${t.input.invalid.enabled.muted.bg};\n      }\n    }\n\n    /* read only */\n    &[data-read-only] + span {\n      box-shadow: 0 0 0 1px ${t.input.default.readOnly.border};\n      background: ${t.input.default.readOnly.bg};\n\n      &::after {\n        background: ${t.input.default.readOnly.border};\n      }\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled + span {\n      box-shadow: 0 0 0 1px ${t.input.default.disabled.border};\n      background: ${t.input.default.disabled.bg};\n\n      &::after {\n        background: ${t.input.default.disabled.border};\n      }\n    }\n  `}));function fx(e){const{font:t}=ve(e.theme);return Wo`\n    -webkit-font-smoothing: antialiased;\n    appearance: none;\n    border: 0;\n    font-family: ${t.text.family};\n    color: inherit;\n    width: 100%;\n    outline: none;\n    margin: 0;\n\n    &:disabled {\n      opacity: 1;\n    }\n  `}function gx(e){const{color:t,input:n}=ve(e.theme);return Wo`\n    /* enabled */\n    background-color: ${t.input.default.enabled.bg};\n    color: ${t.input.default.enabled.fg};\n    box-shadow: ${_b({color:t.input.default.enabled.border,width:n.border.width})};\n\n    /* hovered */\n    @media (hover: hover) {\n      &:not(:disabled):hover {\n        background-color: ${t.input.default.hovered.bg};\n        color: ${t.input.default.hovered.fg};\n        box-shadow: ${_b({color:t.input.default.hovered.border,width:n.border.width})};\n      }\n    }\n\n    /* focused */\n    &:not(:disabled):focus {\n      box-shadow: ${qb({border:{width:n.border.width,color:t.input.default.enabled.border},focusRing:n.select.focusRing})};\n    }\n\n    /* read-only */\n    &[data-read-only] {\n      background-color: ${t.input.default.readOnly.bg};\n      color: ${t.input.default.readOnly.fg};\n      box-shadow: ${_b({color:t.input.default.readOnly.border,width:n.border.width})};\n    }\n\n    /* disabled */\n    &:not([data-read-only]):disabled {\n      background-color: ${t.input.default.disabled.bg};\n      color: ${t.input.default.disabled.fg};\n      box-shadow: ${_b({color:t.input.default.disabled.border,width:n.border.width})};\n    }\n  `}function mx(e){const{$fontSize:t}=e,{font:n,media:r}=ve(e.theme);return py(r,t,(e=>{return{fontSize:hy((t=n.text.sizes[e]||n.text.sizes[2]).fontSize),lineHeight:hy(t.lineHeight)};var t}))}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{className:o,disabled:i,style:a,customValidity:s,readOnly:l,...c}=n,d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>d.current)),yy(d,s),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(hx,{className:o,\"data-ui\":\"Radio\",style:a,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(px,{\"data-read-only\":!i&&l?\"\":void 0,\"data-error\":s?\"\":void 0,...c,disabled:i||l,readOnly:l,ref:d,type:\"radio\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{})]})})).displayName=\"ForwardRef(Radio)\";const wx=function(){return Wo`\n    position: relative;\n    width: -moz-available;\n    width: -webkit-fill-available;\n    width: stretch;\n\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `},vx=function(){return[bC,fx,gx,mx,pC]},yx=function(e){const{color:t}=ve(e.theme);return Wo`\n    pointer-events: none;\n    position: absolute;\n    top: 0;\n    right: 0;\n\n    /* enabled */\n    --card-fg-color: ${t.input.default.enabled.fg};\n\n    /* hover */\n    @media (hover: hover) {\n      select:not(disabled):not(:read-only):hover + && {\n        --card-fg-color: ${t.input.default.hovered.fg};\n      }\n    }\n\n    /* disabled */\n    select:disabled + && {\n      --card-fg-color: ${t.input.default.disabled.fg};\n    }\n\n    /* read-only */\n    select[data-read-only] + && {\n      --card-fg-color: ${t.input.default.readOnly.fg};\n    }\n  `},bx=zo.div(wx),Cx=zo.select(vx),kx=zo(zC)(yx);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{children:o,customValidity:i,disabled:a,fontSize:s=2,padding:l=3,radius:c=2,readOnly:d,space:u=3,...h}=n,p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>p.current)),yy(p,i),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(bx,{\"data-ui\":\"Select\",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Cx,{\"data-read-only\":!a&&d?\"\":void 0,\"data-ui\":\"Select\",...h,$fontSize:wy(s),$padding:wy(l),$radius:wy(c),$space:wy(u),disabled:a||d,ref:p,children:o}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kx,{padding:l,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:s,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mi,{})})})]})})).displayName=\"ForwardRef(Select)\";const xx={\"&&:not([hidden])\":{display:\"grid\"},'&[data-as=\"ul\"],&[data-as=\"ol\"]':{listStyle:\"none\"},gridTemplateColumns:\"minmax(0, 1fr)\",gridAutoRows:\"min-content\"};const Lx=zo(zC)((function(){return xx}),(function(e){const{media:t,space:n}=ve(e.theme);return py(t,e.$space,(e=>({gridGap:hy(n[e])})))})),Mx=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{as:r,space:o,...i}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Lx,{\"data-as\":\"string\"==typeof r?r:void 0,\"data-ui\":\"Stack\",...i,$space:wy(o),forwardedAs:r,ref:n})}));Mx.displayName=\"ForwardRef(Stack)\";const Hx=zo.span((function(){return Wo`\n    position: relative;\n    &:not([hidden]) {\n      display: inline-block;\n    }\n  `})),Vx=zo.input((function(){return Wo`\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    opacity: 0;\n    height: 100%;\n    width: 100%;\n    outline: none;\n    padding: 0;\n    margin: 0;\n\n    /* Place the input element above the representation element */\n    z-index: 1;\n  `})),Rx=zo.span((function(e){const{color:t,input:n}=ve(e.theme);return Wo`\n    --switch-bg-color: ${t.input.default.enabled.border};\n    --switch-fg-color: ${t.input.default.enabled.bg};\n    --switch-box-shadow: none;\n\n    &:not([hidden]) {\n      display: block;\n    }\n    position: relative;\n    width: ${hy(n.switch.width)};\n    height: ${hy(n.switch.height)};\n    border-radius: ${hy(n.switch.height/2)};\n\n    /* Make sure it’s not possible to interact with the wrapper element */\n    pointer-events: none;\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      z-index: 1;\n      box-shadow: var(--switch-box-shadow);\n      border-radius: inherit;\n    }\n\n    /* Focus styles */\n    input:focus + && {\n      --switch-box-shadow: ${qb({focusRing:n.switch.focusRing})};\n    }\n\n    input:focus:not(:focus-visible) + && {\n      --switch-box-shadow: none;\n    }\n\n    input:checked + && {\n      --switch-bg-color: ${t.input.default.enabled.fg};\n      --switch-fg-color: ${t.input.default.enabled.bg};\n    }\n\n    @media (hover: hover) {\n      input:not(:disabled):hover + && {\n        --switch-bg-color: ${t.input.default.hovered.border};\n        --switch-fg-color: ${t.input.default.hovered.bg};\n      }\n\n      input:not(:disabled):checked:hover + && {\n        --switch-bg-color: ${t.input.default.enabled.fg};\n        --switch-fg-color: ${t.input.default.enabled.bg};\n      }\n    }\n\n    input:not([data-read-only]):disabled + && {\n      --switch-bg-color: ${t.input.default.disabled.border};\n      --switch-fg-color: ${t.input.default.disabled.bg};\n    }\n\n    input[data-read-only]:disabled + && {\n      --switch-bg-color: ${t.input.default.readOnly.border};\n      --switch-fg-color: ${t.input.default.readOnly.bg};\n    }\n\n    input:checked[data-read-only]:disabled + && {\n      --switch-bg-color: ${t.input.default.readOnly.fg};\n      --switch-fg-color: ${t.input.default.readOnly.bg};\n    }\n  `})),Sx=zo.span((function(e){const{input:t}=ve(e.theme);return Wo`\n    &:not([hidden]) {\n      display: block;\n    }\n    background-color: var(--switch-bg-color);\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: ${hy(t.switch.width)};\n    height: ${hy(t.switch.height)};\n    border-radius: ${hy(t.switch.height/2)};\n  `})),Fx=zo.span((function(e){const{$indeterminate:t}=e,{input:n}=ve(e.theme),r=n.switch.width,o=n.switch.height,i=n.switch.padding,a=o-2*n.switch.padding,s=r-2*i-a,l=r/2-a/2-i,c=!0!==t&&!0===e.$checked;return Wo`\n    &:not([hidden]) {\n      display: block;\n    }\n    position: absolute;\n    left: ${hy(i)};\n    top: ${hy(i)};\n    height: ${hy(a)};\n    width: ${hy(a)};\n    border-radius: ${hy(a/2)};\n    transition-property: transform;\n    transition-duration: ${n.switch.transitionDurationMs}ms;\n    transition-timing-function: ${n.switch.transitionTimingFunction};\n    background: var(--switch-fg-color);\n    transform: translate3d(0, 0, 0);\n    box-shadow: 0px 1px 0px 0px rgba(0, 0, 0, 0.05);\n\n    ${c&&Wo`\n      transform: translate3d(${s}px, 0, 0);\n    `}\n\n    ${t&&Wo`\n      transform: translate3d(${l}px, 0, 0);\n    `}\n  `}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{checked:o,className:i,disabled:a,indeterminate:s,readOnly:l,style:c,...d}=n,u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>u.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{u.current&&(u.current.indeterminate=s||!1)}),[s]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Hx,{className:i,\"data-ui\":\"Switch\",style:c,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Vx,{\"data-read-only\":!a&&l?\"\":void 0,...d,checked:!0!==s&&o,disabled:a||l,type:\"checkbox\",ref:u}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Rx,{\"aria-hidden\":!0,\"data-name\":\"representation\",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Sx,{}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Fx,{$checked:o,$indeterminate:s})]})]})})).displayName=\"ForwardRef(Switch)\";const Ex=zo.span(gC),Nx=zo.span`\n  flex: 1;\n  min-width: 0;\n  display: block;\n  position: relative;\n`,Ix=zo.textarea(hC,mC,wC),Bx=zo.div(bC,vC);(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{border:o=!0,customValidity:i,disabled:a=!1,fontSize:s=2,padding:l=3,radius:c=2,weight:d,__unstable_disableFocusRing:u,...h}=n,p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),f=mb();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>p.current)),yy(p,i),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ex,{\"data-ui\":\"TextArea\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Nx,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ix,{\"data-as\":\"textarea\",\"data-scheme\":f.scheme,\"data-tone\":f.tone,...h,$fontSize:wy(s),$padding:wy(l),$scheme:f.scheme,$space:wy(0),$tone:f.tone,$weight:d,disabled:a,ref:p}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bx,{$radius:wy(c),$unstableDisableFocusRing:u,$scheme:f.scheme,$tone:f.tone,\"data-border\":o?\"\":void 0,\"data-scheme\":f.scheme,\"data-tone\":f.tone})]})})})).displayName=\"ForwardRef(TextArea)\";const jx={zIndex:2},$x=zo(sk).attrs({forwardedAs:\"span\"})(gC),Ax=zo.span`\n  flex: 1;\n  min-width: 0;\n  display: block;\n  position: relative;\n`,Tx=zo(sk).attrs({forwardedAs:\"span\"})`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n`,Px=zo(sk).attrs({forwardedAs:\"span\"})`\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n\n  & > span {\n    display: block;\n    margin: -1px;\n  }\n`,Wx=zo.input(hC,mC,wC),Zx=zo.span(bC,vC),Dx=zo(zC)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`,zx=zo(zC)`\n  position: absolute;\n  top: 0;\n  right: 0;\n`,Ox=zo(sk)`\n  background-color: transparent;\n  position: absolute;\n  top: 0;\n  right: 0;\n`,_x=zo(rk)({\"&:not([hidden])\":{display:\"block\"}}),qx=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{__unstable_disableFocusRing:o,border:i=!0,clearButton:a,disabled:s=!1,fontSize:l=2,icon:c,iconRight:d,onClear:u,padding:h=3,prefix:p,radius:f=2,readOnly:m,space:w=3,suffix:v,customValidity:y,type:C=\"text\",weight:x,...L}=n,M=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),H=mb(),V=wy(l),F=wy(h),E=wy(f),N=wy(w),I=!!a,B=!!c,j=!!d,$=!!v,A=!!p;(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>M.current)),yy(M,y);const T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{e.preventDefault(),e.stopPropagation()}),[]),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{e.preventDefault(),e.stopPropagation(),u&&u(),M.current?.focus()}),[u,M]),W=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>p&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Tx,{borderTop:!0,borderLeft:!0,borderBottom:!0,radius:E,sizing:\"border\",tone:\"inherit\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:p})})),[p,E]),Z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Zx,{$hasPrefix:A,$unstableDisableFocusRing:o,$hasSuffix:$,$radius:E,$scheme:H.scheme,$tone:H.tone,\"data-border\":i?\"\":void 0,\"data-scheme\":H.scheme,\"data-tone\":H.tone,children:[c&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Dx,{padding:F,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:V,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(c)&&c,dn.isValidElementType(c)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(c,{})]})}),!I&&d&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zx,{padding:F,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:V,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(d)&&d,dn.isValidElementType(d)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(d,{})]})})]})),[o,i,V,c,d,F,E,H,I,A,$]),D=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>F.map((e=>0===e?0:1===e||2===e?1:e-2))),[F]),z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>F.map((e=>0===e||1===e?0:2===e?1:e-1))),[F]),O=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>\"object\"==typeof a?a:cy),[a]),_=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>!s&&!m&&a&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Ox,{forwardedAs:\"span\",padding:D,style:jx,tone:y?\"critical\":\"inherit\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_x,{\"aria-label\":\"Clear\",\"data-qa\":\"clear-button\",fontSize:V,icon:Bi,mode:\"bleed\",padding:z,radius:E,...O,onClick:P,onMouseDown:T})})),[a,D,z,O,y,s,V,P,T,E,m]),q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>v&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Px,{borderTop:!0,borderRight:!0,borderBottom:!0,radius:E,sizing:\"border\",tone:\"inherit\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"span\",{children:v})})),[E,v]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)($x,{\"data-ui\":\"TextInput\",tone:H.tone,children:[W,(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Ax,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Wx,{\"data-as\":\"input\",\"data-scheme\":H.scheme,\"data-tone\":H.tone,...L,$fontSize:V,$iconLeft:B,$iconRight:j||I,$padding:F,$scheme:H.scheme,$space:N,$tone:H.tone,$weight:x,disabled:s,readOnly:m,ref:M,type:C}),Z,_]}),q]})}));qx.displayName=\"ForwardRef(TextInput)\";const Ux={top:[\"top-end\",\"top-start\",\"bottom\",\"left\",\"right\"],\"top-start\":[\"top\",\"top-end\",\"bottom-start\",\"left-start\",\"right-start\"],\"top-end\":[\"top\",\"top-start\",\"bottom-end\",\"left-end\",\"right-end\"],bottom:[\"bottom-end\",\"bottom-start\",\"top\",\"left\",\"right\"],\"bottom-start\":[\"bottom\",\"bottom-end\",\"top-start\",\"left-start\",\"right-start\"],\"bottom-end\":[\"bottom\",\"bottom-start\",\"top-end\",\"left-end\",\"right-end\"],left:[\"left-end\",\"left-start\",\"right\",\"top\",\"bottom\"],\"left-start\":[\"left\",\"left-end\",\"right-start\",\"top-start\",\"bottom-start\"],\"left-end\":[\"left\",\"left-start\",\"right-end\",\"top-end\",\"bottom-end\"],right:[\"right-end\",\"right-start\",\"left\",\"top\",\"bottom\"],\"right-start\":[\"right\",\"right-end\",\"left-start\",\"top-start\",\"bottom-start\"],\"right-end\":[\"right\",\"right-start\",\"left-end\",\"top-end\",\"bottom-end\"]},Gx=zo(Qv(sk))`\n  & > * {\n    opacity: var(${dy}, 1);\n    will-change: opacity;\n  }\n`,Yx=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{animate:o,arrow:i,arrowRef:a,arrowX:s,arrowY:l,children:c,originX:d,originY:u,padding:h,placement:p,radius:f,scheme:m,shadow:w,style:v,...y}=n,b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({originX:d,originY:u,willChange:o?\"transform\":void 0,...v})),[o,d,u,v]),C=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({left:null!==s?s:void 0,top:null!==l?l:void 0,right:void 0,bottom:void 0})),[s,l]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Gx,{\"data-ui\":\"Tooltip__card\",...y,\"data-placement\":p,padding:h,radius:f,ref:r,scheme:m,shadow:w,style:b,...o?uy:{},children:[c,i&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Sk,{ref:a,style:C,width:15,height:6,radius:2})]})})));Yx.displayName=\"Memo(ForwardRef(TooltipCard))\";const Xx=pb(\"@sanity/ui/context/tooltipDelayGroup\",null);const Kx=zo(Xk)`\n  pointer-events: none;\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(r,o){const i=Ik(),{layer:a}=vb(),{animate:s=!1,arrow:l=!1,boundaryElement:c=i?.element,children:d,content:u,disabled:h,fallbackPlacements:m=r.fallbackPlacements??Ux[r.placement??\"bottom\"],padding:w=2,placement:y=\"bottom\",portal:C,radius:x=2,scheme:V,shadow:R=2,zOffset:F=a.tooltip.zOffset,delay:E,...N}=r,I=!xb()&&s,B=wy(m),j=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[$,A]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),P=\"viewport\",[W,Z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(o,(()=>j.current));const D=ex(),z=\"string\"==typeof C?D.elements?.[C]||null:D.element,O=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const e=[];return e.push(dh({boundary:c||void 0,fallbackPlacements:B,padding:4,rootBoundary:P})),e.push(lh({mainAxis:4})),e.push(ch({boundary:c||void 0,rootBoundary:P,padding:4})),l&&e.push(uh({element:T,padding:4})),I&&e.push(kk),e}),[I,l,c,B]),{floatingStyles:_,placement:q,middlewareData:U,refs:G,update:Y}=ah({middleware:O,placement:y,whileElementsMounted:Uu}),X=U.arrow?.x,K=U.arrow?.y,J=U[\"@sanity/ui/origin\"]?.originX,Q=U[\"@sanity/ui/origin\"]?.originY,ee=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),[te,ne]=function(e){const[t,n]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(e),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();return[t,(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{const o=()=>{n(e)};if(r.current&&(clearTimeout(r.current),r.current=void 0),!t)return o();r.current=setTimeout(o,t)}),[])]}(!1),re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(Xx),oe=te||re?.openTooltipId===ee,ae=null!==re,se=\"number\"==typeof E?E:E?.open||0,le=\"number\"==typeof E?E:E?.close||0,ce=ae?re.openDelay:se,de=ae?re.closeDelay:le,ue=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{if(ae)if(e){const n=t?0:ce;re.setIsGroupActive(e,n),re.setOpenTooltipId(ee,n)}else{const n=de>200?de:200;re.setIsGroupActive(e,n),re.setOpenTooltipId(null,t?0:de)}else ne(e,t?0:e?ce:de)}),[ae,re,ce,ee,de,ne]),he=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1),d?.props?.onBlur?.(e)}),[d?.props,ue]),pe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1,!0),d?.props.onClick?.(e)}),[d?.props,ue]),fe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1,!0),d?.props.onContextMenu?.(e)}),[d?.props,ue]),ge=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!0),d?.props?.onFocus?.(e)}),[d?.props,ue]),me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!0),d?.props?.onMouseEnter?.(e)}),[d?.props,ue]),we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{ue(!1),d?.props?.onMouseLeave?.(e)}),[d?.props,ue]);(function({handleIsOpenChange:e,referenceElement:t,showTooltip:n}){const r=(0,use_effect_event__WEBPACK_IMPORTED_MODULE_3__.useEffectEvent)(((n,r)=>{t&&(t===n||n instanceof Node&&t.contains(n)||(e(!1),r()))}));(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!n)return;const e=t=>{r(t.target,(()=>window.removeEventListener(\"mousemove\",e)))};return window.addEventListener(\"mousemove\",e),()=>window.removeEventListener(\"mousemove\",e)}),[r,n])})({handleIsOpenChange:ue,referenceElement:$,showTooltip:oe}),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{h&&oe&&ue(!1)}),[h,ue,oe]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{!u&&oe&&ue(!1)}),[u,ue,oe]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>G.setReference($)),[$,G]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(oe)return window.addEventListener(\"keydown\",e),()=>{window.removeEventListener(\"keydown\",e)};function e(e){\"Escape\"===e.key&&ue(!1,!0)}}),[ue,oe]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)((()=>{const e=[...c?[c.offsetWidth]:[],z?.offsetWidth||document.body.offsetWidth];Z(Math.min(...e)-8)}),[c,z]);const ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{T.current=e,Y()}),[Y]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{j.current=e,G.setFloating(e)}),[G]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(d?.ref,(()=>be.current));const Ce=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>d?(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(d,{onBlur:he,onFocus:ge,onMouseEnter:me,onMouseLeave:we,onClick:pe,onContextMenu:fe,ref:be}):null),[d,he,pe,fe,ge,me,we]);if((0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(Ce)return A(be.current),()=>A(null)}),[Ce]),!Ce)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{});if(h)return Ce;const ke=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Kx,{\"data-ui\":\"Tooltip\",...N,ref:ye,style:{..._,maxWidth:W>0?`${W}px`:void 0},zOffset:F,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Yx,{...N,animate:I,arrow:l,arrowRef:ve,arrowX:X,arrowY:K,originX:J,originY:Q,padding:w,placement:q,radius:x,ref:ye,scheme:V,shadow:R,children:u})});return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bk,{condition:I,wrapper:t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ay,{children:t}),children:oe&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Bk,{condition:!!C,wrapper:t=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tx,{__unstable_name:\"string\"==typeof C?C:void 0,children:t}),children:ke})}),Ce]})})).displayName=\"ForwardRef(Tooltip)\";const Jx=zo.div`\n  line-height: 0;\n`,Qx=zo(zC)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`,eL=Oo`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`,tL=zo(Gs)`\n  animation: ${eL} 500ms linear infinite;\n`;function nL(t){const{children:n,id:r,onSelect:o,selected:i,value:a}=t,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{setTimeout((()=>{o(a)}),0)}),[o,a]),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{var t;\"Enter\"===e.key&&(!Pk(t=e.currentTarget)&&!Wk(t))&&s()}),[s]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"li\",{\"aria-selected\":i,\"data-ui\":\"AutocompleteOption\",id:r,role:\"option\",onClick:s,onKeyDown:l,children:n})}function rL(e,t){return\"input/change\"===t.type?{...e,activeValue:null,focused:!0,query:t.query}:\"input/focus\"===t.type?{...e,focused:!0}:\"root/blur\"===t.type?{...e,focused:!1,query:null}:\"root/clear\"===t.type?{...e,activeValue:null,query:null,value:null}:\"root/escape\"===t.type?{...e,focused:!1,query:null}:\"root/open\"===t.type?{...e,query:e.query||t.query}:\"root/setActiveValue\"===t.type?{...e,activeValue:t.value,listFocused:t.listFocused||e.listFocused}:\"root/setListFocused\"===t.type?{...e,listFocused:t.listFocused}:\"value/change\"===t.type?{...e,activeValue:t.value,query:null,value:t.value}:e}const oL=[\"Control\",\"Shift\",\"Alt\",\"Enter\",\"Home\",\"End\",\"PageUp\",\"PageDown\",\"Meta\",\"Tab\",\"CapsLock\"],iL=[\"bottom-start\",\"top-start\"],aL=(e,t)=>t?t.value:e,sL=(e,t)=>t.value.toLowerCase().indexOf(e.toLowerCase())>-1;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{border:o=!0,customValidity:i,disabled:a,filterOption:s,fontSize:l=2,icon:c,id:d,listBox:u=cy,loading:h,onBlur:f,onChange:m,onFocus:w,onQueryChange:v,onSelect:y,openButton:C,openOnFocus:x,options:L,padding:M=3,popover:V=cy,prefix:R,radius:F=2,readOnly:N,relatedElements:I,renderOption:B,renderPopover:j,renderValue:$=aL,suffix:A,value:T,...P}=n,[W,Z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(rL,{activeValue:T||null,focused:!1,listFocused:!1,query:null,value:T||null}),{activeValue:D,focused:z,listFocused:O,query:_,value:q}=W,U=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((({value:t})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sk,{\"data-as\":\"button\",padding:M,radius:2,tone:\"inherit\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:l,textOverflow:\"ellipsis\",children:t})})),[l,M]),G=\"function\"==typeof B?B:U,Y=\"function\"==typeof s?s:sL,X=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),K=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),J=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),Q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),ee=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1),te=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(q),ne=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(T),re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>J.current));const oe=`${d}-listbox`,ie=Array.isArray(L)?L:ly,ae=wy(M),se=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>null!==q?ie.find((e=>e.value===q)):void 0),[ie,q]),le=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>ie.filter((e=>!_||Y(_,e)))),[Y,ie,_]),ce=le.length,de=D?`${d}-option-${D}`:void 0,ue=null!==_&&h||z&&null!==_,he=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{setTimeout((()=>{if(re.current)return;const t=(I||[]).concat(X.current?[X.current]:[],K.current?[K.current]:[]);let n=!1;if(document.activeElement)for(const e of t)if(e===document.activeElement||e.contains(document.activeElement)){n=!0;break}!1===n&&(Z({type:\"root/blur\"}),re.current=!1,v&&v(null),f&&f(e))}),0)}),[f,v,I]),pe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=Q.current,n=e.target instanceof HTMLElement?e.target:null,r=t?.contains(n)||!1;r!==ee.current&&(ee.current=r,Z({type:\"root/setListFocused\",listFocused:r}))}),[]),fe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{Z({type:\"value/change\",value:e}),re.current=!1,y&&y(e),te.current=e,m&&m(e),v&&v(null),J.current?.focus()}),[m,y,v]),ge=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"ArrowDown\"===e.key){if(e.preventDefault(),!ce)return;const t=le.find((e=>e.value===D)),n=t?le.indexOf(t):-1,r=le[(n+1)%ce];return void(r&&Z({type:\"root/setActiveValue\",value:r.value,listFocused:!0}))}if(\"ArrowUp\"===e.key){if(e.preventDefault(),!ce)return;const t=le.find((e=>e.value===D)),n=t?le.indexOf(t):-1,r=le[-1===n?ce-1:(ce+n-1)%ce];return void(r&&Z({type:\"root/setActiveValue\",value:r.value,listFocused:!0}))}if(\"Escape\"===e.key)return Z({type:\"root/escape\"}),re.current=!1,v&&v(null),void J.current?.focus();const t=e.target,n=Q.current;n!==t&&!n?.contains(t)||oL.includes(e.key)||J.current?.focus()}),[D,le,ce,v]),me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.currentTarget.value;Z({type:\"input/change\",query:t}),v&&v(t)}),[v]),we=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{Z({type:\"root/open\",query:q?$(q,se):\"\"})}),[se,$,q]),ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{z||(Z({type:\"input/focus\"}),w&&w(e),x&&we())}),[z,w,x,we]),ye=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{re.current=!0}),[]),be=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{re.current=!1}),[]),Ce=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{Z({type:\"root/clear\"}),te.current=\"\",m&&m(\"\"),v&&v(null),J.current?.focus()}),[m,v]),ke=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{Z({type:\"input/focus\"})}),[]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(T!==ne.current)return ne.current=T,void(void 0!==T&&(Z({type:\"value/change\",value:T}),te.current=T));T!==te.current&&(te.current=T||null,Z({type:\"value/change\",value:T||null}))}),[T]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{!z&&te.current&&Z({type:\"root/setActiveValue\",value:te.current})}),[z]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=Q.current;if(!e)return;const t=le.find((e=>e.value===D));if(t){const r=le.indexOf(t),o=e.childNodes[r];if(o){if(n=o,document.activeElement&&n.contains(document.activeElement))return;Ok(o)}}var n}),[D,le]);const xe=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(!h&&!a&&q)return{\"aria-label\":\"Clear\",onFocus:ke}}),[a,ke,h,q]),Le=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>ae.map((e=>0===e?0:1===e||2===e?1:e-2))),[ae]),Me=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>ae.map((e=>Math.max(e-1,0)))),[ae]),He=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>\"object\"==typeof C?C:cy),[C]),Ve=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{we(),He.onClick&&He.onClick(e),function(e){const t=requestAnimationFrame(e)}((()=>J.current?.focus()))}),[He,we]),Re=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>a||N||!C?void 0:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{\"aria-hidden\":ue,padding:Le,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(rk,{\"aria-label\":\"Open\",disabled:ue,fontSize:l,icon:Mi,mode:\"bleed\",padding:Me,...He,onClick:Ve})})),[a,ue,l,Ve,C,Le,Me,He,N]),Se=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>null===_?null!==q?$(q,se):\"\":_),[se,_,$,q]),Fe=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qx,{...P,\"aria-activedescendant\":de,\"aria-autocomplete\":\"list\",\"aria-expanded\":ue,\"aria-owns\":oe,autoCapitalize:\"off\",autoComplete:\"off\",autoCorrect:\"off\",border:o,clearButton:xe,customValidity:i,disabled:a,fontSize:l,icon:c,iconRight:h&&tL,id:d,inputMode:\"search\",onChange:me,onClear:Ce,onFocus:ve,padding:ae,prefix:R,radius:F,readOnly:N,ref:J,role:\"combobox\",spellCheck:!1,suffix:A||Re,value:Se}),Ee=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{\"Tab\"===e.key&&O&&J.current?.focus()}),[O]),Ne=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>0===le.length?null:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Qx,{\"data-ui\":\"AutoComplete__results\",onKeyDown:Ee,padding:1,...u,tabIndex:-1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mx,{as:\"ul\",\"aria-multiselectable\":!1,\"data-ui\":\"AutoComplete__resultsList\",id:oe,ref:Q,role:\"listbox\",space:1,children:le.map((t=>{const n=null!==D?t.value===D:se===t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(nL,{id:`${d}-option-${t.value}`,onSelect:fe,selected:n,value:t.value,children:(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(G(t),{disabled:h,selected:n,tabIndex:O&&n?0:-1})},t.value)}))})})),[D,se,le,fe,Ee,d,u,oe,O,h,G]),Ie=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>j?j({content:Ne,hidden:!ue,inputElement:J.current,onMouseEnter:ye,onMouseLeave:be},K):0===ce?null:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ux,{arrow:!1,constrainSize:!0,content:Ne,fallbackPlacements:iL,matchReferenceWidth:!0,onMouseEnter:ye,onMouseLeave:be,open:ue,overflow:\"auto\",placement:\"bottom-start\",portal:!0,radius:F,ref:K,referenceElement:J.current,...V})),[Ne,ue,ce,ye,be,V,F,j]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(Jx,{\"data-ui\":\"Autocomplete\",onBlur:he,onFocus:pe,onKeyDown:ge,ref:X,children:[Fe,Ie]})})).displayName=\"ForwardRef(Autocomplete)\";const lL=zo.ol`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style: none;\n  align-items: center;\n  white-space: nowrap;\n  line-height: 0;\n`,cL=zo(rk)`\n  appearance: none;\n  margin: -4px;\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{children:o,maxLength:i,separator:a,space:s=2,...l}=n,c=wy(s),[d,u]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>u(!1)),[]),m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>u(!0)),[]);vy(f,(()=>[h.current,p.current]));const w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>react__WEBPACK_IMPORTED_MODULE_1__.Children.toArray(o).filter(react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)),[o]),v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const t=w.length;if(i&&t>i){const n=Math.ceil(i/2),r=Math.floor(i/2);return[...w.slice(0,n-1),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ux,{constrainSize:!0,content:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mx,{as:\"ol\",overflow:\"auto\",padding:c,space:c,children:w.slice(n-1,t-r)}),open:d,placement:\"top\",portal:!0,ref:p,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cL,{fontSize:1,mode:\"bleed\",onClick:d?f:m,padding:1,ref:h,selected:d,text:\"…\"})},\"button\"),...w.slice(t-r)]}return w}),[f,m,i,d,w,c]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lL,{\"data-ui\":\"Breadcrumbs\",...l,ref:r,children:v.map(((n,r)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[r>0&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{\"aria-hidden\":!0,as:\"li\",paddingX:c,children:a||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{muted:!0,children:\"/\"})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{as:\"li\",children:n})]},r)))})})).displayName=\"ForwardRef(Breadcrumbs)\";const dL=pb(\"@sanity/ui/context/dialog\",{version:0});function uL(e,t,n){return!e||!t||(Zk(e,n)||Zk(t,n))}const hL=zo(Xk)(yC,(function({theme:e}){const{color:t}=ve(e);return{\"&:not([hidden])\":{display:\"flex\"},top:0,left:0,right:0,bottom:0,alignItems:\"center\",justifyContent:\"center\",outline:\"none\",background:t.backdrop}}),(function(e){const{media:t}=ve(e.theme);return py(t,e.$position,(e=>({\"&&\":{position:e}})))}),(function(e){return e.$animate?Wo`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  `:Wo``})),pL=zo(fk)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`,fL=zo(sk)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n  overflow: clip;\n`,gL=zo(YC)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`,mL=zo(zC)`\n  position: relative;\n  z-index: 2;\n`,wL=zo(zC)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`,vL=zo(zC)`\n  position: relative;\n  z-index: 3;\n`,yL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{__unstable_autoFocus:o,__unstable_hideCloseButton:i,children:a,contentRef:s,footer:l,header:c,id:d,onClickOutside:u,onClose:h,portal:f,radius:g,scheme:m,shadow:w,width:v}=n,y=ex(),C=f?y.elements?.[f]||null:y.element,x=Ik().element,L=wy(g),M=wy(w),H=wy(v),V=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),R=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),F=Ak(),{isTopLayer:E}=F,N=`${d}_label`,I=!!h&&!1===i,B=!!c||I;return (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>V.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(s,(()=>R.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{o&&V.current&&Ok(V.current)}),[o,V]),db((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(!E||!h)return;const t=document.activeElement;t&&!uL(x,C,t)||\"Escape\"===e.key&&(e.preventDefault(),e.stopPropagation(),h())}),[x,E,h,C])),vy(E&&u&&(e=>{const t=e.target;t&&!uL(x,C,t)||u()}),(()=>[V.current])),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pL,{\"data-ui\":\"DialogCard\",width:H,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fL,{radius:L,ref:V,scheme:m,shadow:M,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(gL,{direction:\"column\",children:[B&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(mL,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{align:\"center\",padding:3,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{flex:1,padding:2,children:c&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{id:N,size:1,weight:\"semibold\",children:c})}),I&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{flex:\"none\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(rk,{\"aria-label\":\"Close dialog\",disabled:!h,icon:Bi,mode:\"bleed\",onClick:h,padding:2})})]})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wL,{flex:1,ref:R,tabIndex:-1,children:a}),l&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vL,{children:l})]})})})}));yL.displayName=\"ForwardRef(DialogCard)\";(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(dL),{layer:i}=vb(),{__unstable_autoFocus:a=!0,__unstable_hideCloseButton:s=!1,cardRadius:l=4,cardShadow:c=3,children:d,contentRef:u,footer:h,header:p,id:g,onActivate:m,onClickOutside:w,onClose:v,onFocus:y,padding:C=3,portal:x,position:L=o.position||\"fixed\",scheme:M,width:H=0,zOffset:V=o.zOffset||i.dialog.zOffset,animate:R=!1,...S}=n,F=!xb()&&R,E=ex(),N=x?E.elements?.[x]||null:E.element,I=Ik().element,B=wy(l),j=wy(C),$=wy(L),A=wy(H),T=wy(V),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),W=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),Z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),D=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{y?.(e);const t=e.target,n=Z.current;n&&t===P.current?_k(n):n&&t===W.current?Ok(n):Tk(e.target)&&(D.current=e.target)}),[y]),O=`${g}_label`,_=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(),q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{_.current&&clearTimeout(_.current),_.current=setTimeout((()=>{const e=document.activeElement;if(e&&!uL(I,N,e)){const e=D.current;if(!e||!document.body.contains(e)){const e=Z.current;return void(e&&Ok(e))}e.focus()}}),0)}),[I,N]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tx,{__unstable_name:x,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(hL,{...S,$animate:F,$padding:j,$position:$,\"aria-labelledby\":O,\"aria-modal\":!0,\"data-ui\":\"Dialog\",id:g,onActivate:m,onClick:q,onFocus:z,ref:r,role:\"dialog\",zOffset:T,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{ref:P,tabIndex:0}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yL,{__unstable_autoFocus:a,__unstable_hideCloseButton:s,contentRef:u,footer:h,header:p,id:g,onClickOutside:w,onClose:v,portal:x,radius:B,ref:Z,scheme:M,shadow:c,width:A,children:d}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{ref:W,tabIndex:0})]})})})).displayName=\"ForwardRef(Dialog)\";const bL=zo.kbd`\n  font: inherit;\n  padding: 1px;\n\n  &:not([hidden]) {\n    display: block;\n  }\n`,CL=zo(Ck)`\n  &:not([hidden]) {\n    display: block;\n  }\n`,kL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,r){const{fontSize:o,keys:i,padding:a,radius:s,space:l=.5,...c}=t,d=wy(l);return i&&0!==i.length?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bL,{\"data-ui\":\"Hotkeys\",...c,ref:r,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yk,{as:\"span\",space:d,children:i.map(((t,n)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CL,{fontSize:o,padding:a,radius:s,children:t},n)))})}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{})}));kL.displayName=\"ForwardRef(Hotkeys)\";const xL=pb(\"@sanity/ui/context/menu\",null);function LL(e){return Pk(e)&&\"true\"!==e.getAttribute(\"data-disabled\")||Wk(e)&&!e.disabled}function ML(e){return e.filter(LL)}function HL(e,t){const n=[];let r=t;for(;r!==e;){const t=r.parentElement;if(!t)return n;const o=Array.from(t.childNodes).indexOf(r);if(n.unshift(o),t===e)return n;r=t}return n}const VL=[];function RL(e){const{onKeyDown:t,originElement:n,shouldFocus:r,rootElementRef:o}=e,i=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]),[a,s]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(a),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>i.current[a]||null),[a]),d=!!o.current,u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{s(e),l.current=e}),[]),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{if(!e)return()=>{};if(-1===i.current.indexOf(e)&&(i.current.push(e),function(e,t){if(!e)return;const n=new WeakMap;for(const r of t)n.set(r,HL(e,r));t.sort(((e,t)=>{const r=n.get(e)||VL,o=n.get(t)||VL,i=Math.max(r.length,o.length);for(let e=0;e<i;e+=1){const t=r[e]||-1,n=o[e]||-1;if(t!==n)return t-n}return 0}))}(o.current,i.current)),t){const t=i.current.indexOf(e);u(t)}return()=>{const t=i.current.indexOf(e);t>-1&&i.current.splice(t,1)}}),[o,u]),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"Tab\"!==e.key)if(\"Home\"!==e.key)if(\"End\"!==e.key)if(\"ArrowUp\"!==e.key)if(\"ArrowDown\"!==e.key)t&&t(e);else{e.preventDefault(),e.stopPropagation();const t=ML(i.current),n=t.length;if(0===n)return;const r=i.current[l.current];let o=t.indexOf(r);o=(o+1)%n;const a=t[o],s=i.current.indexOf(a);u(s)}else{e.preventDefault(),e.stopPropagation();const t=ML(i.current),n=t.length;if(0===n)return;const r=i.current[l.current];let o=t.indexOf(r);o=(o-1+n)%n;const a=t[o],s=i.current.indexOf(a);u(s)}else{e.preventDefault(),e.stopPropagation();const t=ML(i.current),n=t[t.length-1];if(!n)return;const r=i.current.indexOf(n);u(r)}else{e.preventDefault(),e.stopPropagation();const t=ML(i.current)[0];if(!t)return;const n=i.current.indexOf(t);u(n)}else n&&n.focus()}),[t,n,u]),m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.currentTarget,n=i.current.indexOf(t);u(n)}),[u]),w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{u(-2),o.current?.focus()}),[o,u]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!d)return;const e=requestAnimationFrame((()=>{if(-1!==a)(i.current[a]||null)?.focus();else{if(\"first\"===r){const e=ML(i.current)[0];if(e){const t=i.current.indexOf(e);u(t)}}if(\"last\"===r){const e=ML(i.current),t=e[e.length-1];if(t){const e=i.current.indexOf(t);u(e)}}}}));return()=>cancelAnimationFrame(e)}),[a,d,u,r]),{activeElement:c,activeIndex:a,handleItemMouseEnter:m,handleItemMouseLeave:w,handleKeyDown:f,mount:h}}const SL=zo(zC)`\n  outline: none;\n  overflow: auto;\n`,FL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,focusFirst:o,focusLast:i,onClickOutside:a,onEscape:s,onItemClick:l,onItemSelect:c,onKeyDown:d,originElement:u,padding:h=1,registerElement:f,shouldFocus:m=(t.focusFirst?\"first\":t.focusLast&&\"last\")||null,space:w=1,...v}=t,y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>y.current));const{isTopLayer:C}=Ak(),{activeElement:x,activeIndex:L,handleItemMouseEnter:M,handleItemMouseLeave:H,handleKeyDown:V,mount:R}=RL({onKeyDown:d,originElement:u,shouldFocus:m,rootElementRef:y}),F=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),E=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{F.current&&(F.current(),F.current=null),y.current=e,y.current&&f&&(F.current=f(y.current))}),[f]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{c&&c(L)}),[L,c]),vy(C&&a,(()=>[y.current])),db((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{C&&\"Escape\"===e.key&&(e.stopPropagation(),s&&s())}),[C,s]));const N=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({version:0,activeElement:x,activeIndex:L,mount:R,onClickOutside:a,onEscape:s,onItemClick:l,onItemMouseEnter:M,onItemMouseLeave:H,registerElement:f,onMouseEnter:M,onMouseLeave:H})),[x,L,R,M,H,a,s,l,f]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(xL.Provider,{value:N,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SL,{\"data-ui\":\"Menu\",...v,onKeyDown:V,padding:h,ref:E,role:\"menu\",tabIndex:-1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mx,{space:w,children:r})})})}));FL.displayName=\"ForwardRef(Menu)\";(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,r){const{__unstable_disableRestoreFocusOnClose:o=!1,boundaryElement:i,button:a,id:s,menu:l,onClose:c,onOpen:d,placement:u,popoverScheme:h,portal:f=!0,popover:m,popoverRadius:w,preventOverflow:v}=t,[y,C]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[x,L]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[V,R]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[F,E]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),N=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(y);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{d&&y&&!N.current&&d()}),[d,y]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{c&&!y&&N.current&&c()}),[c,y]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{N.current=y}),[y]);const I=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{C((e=>!e)),L(null)}),[]),B=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{y&&e.preventDefault()}),[y]),j=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>\"ArrowDown\"===e.key||\"Enter\"===e.key||\" \"===e.key?(e.preventDefault(),C(!0),void L(\"first\")):\"ArrowUp\"===e.key?(e.preventDefault(),C(!0),void L(\"last\")):void 0),[]),$=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.target;if(t instanceof Node&&(!V||t!==V&&!V.contains(t))){for(const e of F)if(t===e||e.contains(t))return;C(!1)}}),[V,F]),A=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{C(!1),!o&&V&&V.focus()}),[V,o]),T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.relatedTarget;if(t instanceof Node){for(const e of F)if(e===t||e.contains(t))return;C(!1)}}),[F]),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{C(!1),!o&&V&&V.focus()}),[V,o]),W=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>(E((t=>t.concat([e]))),()=>E((t=>t.filter((t=>t!==e)))))),[]),Z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({\"aria-labelledby\":s,onBlurCapture:T,onClickOutside:$,onEscape:A,onItemClick:P,originElement:V,registerElement:W,shouldFocus:x})),[V,$,A,P,s,T,W,x]),D=l&&(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(l,Z),z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),O=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>a&&(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(a,{\"data-ui\":\"MenuButton\",id:s,onClick:I,onKeyDown:j,onMouseDown:B,\"aria-haspopup\":!0,\"aria-expanded\":y,ref:z,selected:a.props.selected??y})),[a,I,j,B,s,y]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>z.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(O)return R(z.current),()=>R(null)}),[O]);const _=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({boundaryElement:i,overflow:\"auto\",placement:u,portal:f,preventOverflow:v,radius:w,scheme:h,...m||{}})),[i,u,w,h,f,v,m]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ux,{\"data-ui\":\"MenuButton__popover\",..._,content:D,open:y,children:O||(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{})})})).displayName=\"ForwardRef(MenuButton)\";const EL=zo.hr`\n  height: 1px;\n  border: 0;\n  background: var(--card-hairline-soft-color);\n  margin: 0;\n`;EL.displayName=\"MenuDivider\";const NL=zo(zC)(bC,(function(){return Wo`\n    background-color: inherit;\n    color: inherit;\n\n    &[data-as='button'] {\n      -webkit-font-smoothing: inherit;\n      appearance: none;\n      outline: none;\n      font: inherit;\n      text-align: inherit;\n      border: 0;\n      width: -moz-available;\n      width: -webkit-fill-available;\n      width: stretch;\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `}),(function(e){const{$tone:t}=e,{color:n,style:r}=ve(e.theme),o=n.selectable[t];return Wo`\n    ${QC(n,o.enabled)}\n\n    background-color: var(--card-bg-color);\n    color: var(--card-fg-color);\n    outline: none;\n\n    /* &:is(button) */\n    &[data-as='button'] {\n      &:disabled {\n        ${QC(n,o.disabled)}\n      }\n\n      &:not(:disabled) {\n        &[aria-pressed='true'] {\n          ${QC(n,o.pressed)}\n        }\n\n        &[data-selected],\n        &[aria-selected='true'] > & {\n          ${QC(n,o.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${QC(n,o.hovered)}\n            }\n\n            &:active {\n              ${QC(n,o.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    /* &:is(a) */\n    &[data-as='a'] {\n      &[data-disabled] {\n        ${QC(n,o.disabled)}\n      }\n\n      &:not([data-disabled]) {\n        &[data-pressed] {\n          ${QC(n,o.pressed)}\n        }\n\n        &[data-selected] {\n          ${QC(n,o.selected)}\n        }\n\n        @media (hover: hover) {\n          &:not([data-selected]) {\n            &[data-hovered],\n            &:hover {\n              ${QC(n,o.hovered)}\n            }\n            &:active {\n              ${QC(n,o.pressed)}\n            }\n          }\n        }\n      }\n    }\n\n    ${r?.card?.root}\n  `}));function IL(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(xL);if(!e)throw new Error(\"useMenu(): missing context value\");if(!Ek(e)||0!==e.version)throw new Error(\"useMenu(): the context value is not compatible\");return e}function BL(n){const{as:r=\"button\",children:o,fontSize:i=1,icon:a,onClick:s,padding:l=3,popover:c,radius:d=2,space:u=3,text:h,tone:f=\"default\",...g}=n,m=IL(),{scheme:w}=mb(),{activeElement:v,mount:y,onClickOutside:b,onEscape:C,onItemClick:x,onItemMouseEnter:L=m.onMouseEnter,registerElement:H}=m,[V,S]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[F,E]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[N,I]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),B=!!v&&v===V,[j,$]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),A=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{$(!1),L(e),E(!0)}),[L]),T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{\"ArrowLeft\"===e.key&&(e.stopPropagation(),E(!1),requestAnimationFrame((()=>{V?.focus()})))}),[V]),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{s?.(e),I(\"first\"),E(!0)}),[s]),W=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{E(!1),x?.()}),[x]),Z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>$(!0)),[]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>y(V)),[y,V]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{B||E(!1)}),[B]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{F||$(!1)}),[F]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!N)return;const e=requestAnimationFrame((()=>I(null)));return()=>cancelAnimationFrame(e)}),[N]);const D=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FL,{onClickOutside:b,onEscape:C,onItemClick:W,onKeyDown:T,onMouseEnter:Z,registerElement:H,shouldFocus:N,children:o}),z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=e.currentTarget;if(document.activeElement===t&&\"ArrowRight\"===e.key)return I(\"first\"),E(!0),void $(!0)}),[]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ux,{...c,content:D,\"data-ui\":\"MenuGroup__popover\",open:F,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NL,{\"data-as\":r,\"data-ui\":\"MenuGroup\",forwardedAs:r,...g,\"aria-pressed\":\"button\"===r?j:void 0,\"data-pressed\":\"button\"!==r?j:void 0,\"data-selected\":!j&&B?\"\":void 0,$radius:wy(d),$tone:f,$scheme:w,onClick:P,onKeyDown:z,onMouseEnter:A,ref:S,tabIndex:-1,type:\"button\"===r?\"button\":void 0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{gap:u,padding:l,children:[a&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:i,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(a)&&a,dn.isValidElementType(a)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(a,{})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{flex:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:i,textOverflow:\"ellipsis\",weight:\"medium\",children:h})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:i,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Vi,{})})]})})})}NL.displayName=\"Selectable\",BL.displayName=\"MenuGroup\";const jL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){const{as:o=\"button\",children:i,disabled:a,fontSize:s=1,hotkeys:l,icon:c,iconRight:d,onClick:u,padding:h=3,paddingX:f,paddingY:m,paddingTop:w,paddingRight:v,paddingBottom:y,paddingLeft:C,pressed:x,radius:L=2,selected:H,space:V=3,text:F,tone:E=\"default\",...N}=n,{scheme:I}=mb(),B=IL(),{activeElement:j,mount:$,onItemClick:A,onItemMouseEnter:T=B.onMouseEnter,onItemMouseLeave:P=B.onMouseLeave}=B,[W,Z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),D=!!j&&j===W,z=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(r,(()=>z.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>$(W,H)),[$,W,H]);const O=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{a||(u&&u(e),A&&A())}),[a,u,A]),_=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({padding:h,paddingX:f,paddingY:m,paddingTop:w,paddingRight:v,paddingBottom:y,paddingLeft:C})),[h,f,m,w,v,y,C]),q=wy(s).map((e=>e-1)),U=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{z.current=e,Z(e)}),[]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(NL,{\"data-ui\":\"MenuItem\",...N,\"aria-pressed\":\"button\"===o&&x,\"data-pressed\":\"button\"!==o&&x?\"\":void 0,\"data-selected\":D?\"\":void 0,\"data-disabled\":a?\"\":void 0,forwardedAs:o,$radius:wy(L),$padding:wy(0),$tone:a?\"default\":E,$scheme:I,disabled:a,onClick:O,onMouseEnter:T,onMouseLeave:P,ref:U,role:\"menuitem\",tabIndex:-1,type:\"button\"===o?\"button\":void 0,children:[(c||F||d)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{as:\"span\",gap:V,align:\"center\",..._,children:[c&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:s,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(c)&&c,dn.isValidElementType(c)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(c,{})]}),F&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{flex:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:s,textOverflow:\"ellipsis\",weight:\"medium\",children:F})}),l&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kL,{fontSize:q,keys:l,style:{marginTop:-4,marginBottom:-4}}),d&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(qC,{size:s,children:[(0,react__WEBPACK_IMPORTED_MODULE_1__.isValidElement)(d)&&d,dn.isValidElementType(d)&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(d,{})]})]}),i&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{as:\"span\",..._,children:i})]})}));jL.displayName=\"ForwardRef(MenuItem)\";const $L=Wo`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${Oo`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`,AL=Wo`\n  opacity: ${({$visible:e})=>e?1:0};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated:e})=>e?$L:Wo`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`,TL=zo(zC)(bC,AL),PL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{animated:r=!1,delay:o,radius:i,...a}=t,[s,l]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!o);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!o)return l(!0);const e=setTimeout((()=>{l(!0)}),o);return()=>{clearTimeout(e)}}),[o]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TL,{...a,$animated:r,$radius:wy(i),$visible:s,ref:n})}));PL.displayName=\"ForwardRef(Skeleton)\";const WL=zo(PL)((e=>{const{$size:t,$style:n}=e,{font:r,media:o}=ve(e.theme),i=r[n];return py(o,t,(e=>{const t=i.sizes[e];return{height:t.lineHeight-t.ascenderHeight-t.descenderHeight}}))}));(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{size:r=2,...o}=t,i=wy(r);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WL,{...o,$size:i,ref:n,$style:\"text\"})})).displayName=\"ForwardRef(TextSkeleton)\";(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{size:r=2,...o}=t,i=wy(r);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WL,{...o,$size:i,ref:n,$style:\"label\"})})).displayName=\"ForwardRef(LabelSkeleton)\";(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{size:r=2,...o}=t,i=wy(r);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WL,{...o,$size:i,ref:n,$style:\"heading\"})})).displayName=\"ForwardRef(HeadingSkeleton)\";(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{size:r=2,...o}=t,i=wy(r);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WL,{...o,$size:i,ref:n,$style:\"code\"})})).displayName=\"ForwardRef(CodeSkeleton)\";const ZL=zo(rk)`\n  max-width: 100%;\n`;function DL(e){return!!e}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{icon:r,id:o,focused:i,fontSize:a=1,label:s,onClick:l,onFocus:c,padding:d=2,selected:u,...h}=t,f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),g=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>f.current));const m=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{g.current=!1}),[]),w=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{g.current=!0,c&&c(e)}),[c]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{i&&!g.current&&(f.current&&f.current.focus(),g.current=!0)}),[i]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ZL,{\"data-ui\":\"Tab\",...h,\"aria-selected\":u?\"true\":\"false\",fontSize:a,icon:r,id:o,mode:\"bleed\",onClick:l,onBlur:m,onFocus:w,padding:d,ref:f,role:\"tab\",selected:u,tabIndex:u?0:-1,text:s,type:\"button\"})})).displayName=\"ForwardRef(Tab)\";const zL=zo(yk)`\n  & > div {\n    display: inline-block;\n    vertical-align: middle;\n    max-width: 100%;\n    box-sizing: border-box;\n  }\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,...o}=t,[i,a]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1),s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>r.filter(DL)),[r]).map(((e,t)=>(0,react__WEBPACK_IMPORTED_MODULE_1__.cloneElement)(e,{focused:i===t,key:t,onFocus:()=>c(t)}))),l=s.length,c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{a(e)}),[]),d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{\"ArrowLeft\"===e.key&&a((e=>(e+l-1)%l)),\"ArrowRight\"===e.key&&a((e=>(e+1)%l))}),[l]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zL,{\"data-ui\":\"TabList\",...o,onKeyDown:d,ref:n,role:\"tablist\",children:s})})).displayName=\"ForwardRef(TabList)\";function OL(e){if(\"treeitem\"===e.getAttribute(\"role\")&&e.focus(),\"none\"===e.getAttribute(\"role\")){const t=e.firstChild;t&&t instanceof HTMLElement&&t.focus()}}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{flex:r,...o}=t;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{\"data-ui\":\"TabPanel\",...o,flex:r,ref:n,role:\"tabpanel\",tabIndex:void 0===t.tabIndex?0:t.tabIndex,children:t.children})})).displayName=\"ForwardRef(TabPanel)\",Oo`\n  0% {\n    width: 0;\n  }\n  100% {\n    width: 100%;\n  }\n`,pb(\"@sanity/ui/context/toast\",null);const _L=pb(\"@sanity/ui/context/tree\",null);function qL(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(_L);if(!e)throw new Error(\"Tree: missing context value\");return e}(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{children:r,space:o=1,onFocus:i,...a}=t,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),[l,c]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(l),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>[]),[]),[h,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]),[m,w]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),v=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(m);(0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(n,(()=>s.current)),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{d.current=l}),[l]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{v.current=m}),[m]);const y=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t,n,r)=>(w((r=>({...r,[t]:{element:e,expanded:n}}))),r&&c(e),()=>{w((e=>{const n={...e};return delete n[t],n}))})),[]),C=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{w((n=>{const r=n[e];return r?{...n,[e]:{...r,expanded:t}}:n}))}),[]),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({version:0,focusedElement:l||h[0]||null,level:0,path:u,registerItem:y,setExpanded:C,setFocusedElement:c,space:o,state:m})),[l,h,u,y,C,o,m]),L=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(d.current){if(\"ArrowDown\"===e.key){e.preventDefault();const t=function(e,t,n){const r=t.indexOf(n),o=t.slice(r),i=t.length;for(let t=1;t<i;t+=1){if(!o[t])continue;const n=o[t].getAttribute(\"data-tree-key\");if(!n)continue;const r=n.split(\"/\");r.pop();const i=[];let a=!0;for(let t=0;t<r.length;t+=1){i.push(r[t]);const n=i.join(\"/\");if(!e[n]?.expanded){a=!1;break}}if(a)return o[t]}return null}(v.current,h,d.current);return void(t&&(OL(t),c(t)))}if(\"ArrowUp\"===e.key){e.preventDefault();const t=function(e,t,n){const r=t.indexOf(n),o=t.slice(0,r);for(let t=o.length-1;t>=0;t-=1){const n=o[t].getAttribute(\"data-tree-key\");if(!n)continue;const r=n.split(\"/\");r.pop();const i=[];let a=!0;for(let t=0;t<r.length;t+=1){i.push(r[t]);const n=i.join(\"/\");if(!e[n]?.expanded){a=!1;break}}if(a)return o[t]}return null}(v.current,h,d.current);return void(t&&(OL(t),c(t)))}if(\"ArrowLeft\"===e.key){e.preventDefault();const t=d.current.getAttribute(\"data-tree-key\");if(!t)return;const n=v.current[t];if(!n)return;if(n.expanded)w((e=>{const n=e[t];return n?{...e,[t]:{...n,expanded:!1}}:e}));else{const e=t.split(\"/\");e.pop();const n=e.join(\"/\"),r=n&&v.current[n];r&&(r.element.focus(),c(r.element))}return}if(\"ArrowRight\"===e.key){e.preventDefault();const t=d.current.getAttribute(\"data-tree-key\");if(!t)return;return void(v.current[t]?.expanded||w((e=>{const n=e[t];return n?{...e,[t]:{...n,expanded:!0}}:e})))}}}),[h]),H=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{c(e.target),i?.(e)}),[i]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!s.current)return;const e=Array.from(s.current.querySelectorAll('[data-ui=\"TreeItem\"]'));f(e)}),[r]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_L.Provider,{value:x,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mx,{as:\"ul\",\"data-ui\":\"Tree\",...a,onFocus:H,onKeyDown:L,ref:s,role:\"tree\",space:o,children:r})})}))).displayName=\"Memo(ForwardRef(Tree))\";const UL=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const{children:n,expanded:r=!1,...o}=t,i=qL();return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mx,{as:\"ul\",\"data-ui\":\"TreeGroup\",...o,hidden:!r,marginTop:i.space,role:\"group\",space:i.space,children:n})})),GL=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(zo.li((function(){return Wo`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `}),(function(e){const{color:t}=ve(e.theme),n=t.selectable.default;return Wo`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${QC(t,n.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${QC(t,n.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${QC(t,n.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${QC(t,n.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${QC(t,n.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${QC(t,n.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${QC(t,n.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${QC(t,n.selected)}\n        }\n      }\n    }\n  `}))),YL=zo(zC).attrs({forwardedAs:\"a\"})((function(e){const{$level:t}=e,{space:n}=ve(e.theme);return Wo`\n    padding-left: ${hy(n[2]*t)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `})),XL=zo(qC)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`;(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(n){const{children:r,expanded:o=!1,fontSize:i=1,href:a,icon:s,id:l,linkAs:c,muted:d,onClick:u,padding:h=2,selected:f=!1,space:m=2,text:w,weight:v,...y}=n,C=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),x=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),M=qL(),{path:H,registerItem:V,setExpanded:R,setFocusedElement:S}=M,F=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),E=l||F,N=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>H.concat([E||\"\"])),[E,H]),I=N.join(\"/\"),B=M.state[I],j=M.focusedElement===C.current,$=void 0===B?.expanded?o:B?.expanded||!1,A=M.focusedElement&&M.focusedElement===C.current?0:-1,T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({...M,level:M.level+1,path:N})),[N,M]),P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{u&&u(e);const t=e.target;t instanceof HTMLElement&&(\"TreeItem\"===t.getAttribute(\"data-ui\")||t.closest('[data-ui=\"TreeItem__box\"]'))&&(e.stopPropagation(),R(I,!$),S(C.current))}),[$,I,u,R,S]),W=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{j&&\"Enter\"===e.key&&(x.current||C.current)?.click()}),[j]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(C.current)return V(C.current,N.join(\"/\"),$,f)}),[$,N,V,f]);const Z=(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{padding:h,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(zC,{marginRight:m,style:{visibility:s||r?\"visible\":\"hidden\",pointerEvents:\"none\"},children:[s&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{muted:d,size:i,weight:v,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(s,{})}),!s&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(XL,{muted:d,size:i,weight:v,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ml,{style:{transform:$?\"rotate(90deg)\":void 0}})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{flex:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{muted:d,size:i,textOverflow:\"ellipsis\",weight:v,children:w})})]});return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(GL,a?{\"data-selected\":f?\"\":void 0,\"data-tree-id\":E,\"data-tree-key\":I,\"data-ui\":\"TreeItem\",...y,onClick:P,ref:C,role:\"none\",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YL,{$level:M.level,\"aria-expanded\":$,as:c,\"data-ui\":\"TreeItem__box\",href:a,ref:x,role:\"treeitem\",tabIndex:A,children:Z}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_L.Provider,{value:T,children:r&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UL,{hidden:!$,children:r})})]}:{\"data-selected\":f?\"\":void 0,\"data-ui\":\"TreeItem\",\"data-tree-id\":E,\"data-tree-key\":I,...y,\"aria-expanded\":$,onClick:P,onKeyDown:W,ref:C,role:\"treeitem\",tabIndex:A,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YL,{$level:M.level,as:\"div\",\"data-ui\":\"TreeItem__box\",children:Z}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_L.Provider,{value:T,children:r&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(UL,{expanded:$,children:r})})]})})).displayName=\"Memo(TreeItem)\";const KL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"access-denied\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.1568 6.84315C21.281 9.96734 21.281 15.0327 18.1568 18.1569C15.0326 21.281 9.96733 21.281 6.84313 18.1569C3.71894 15.0327 3.71894 9.96734 6.84313 6.84315C9.96733 3.71895 15.0326 3.71895 18.1568 6.84315ZM18.1568 6.84315L6.844 18.156\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));KL.displayName=\"ForwardRef(AccessDeniedIcon)\";const JL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"activity\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 15H19L15.5 7L11 18L8 12L6 15H4\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));JL.displayName=\"ForwardRef(ActivityIcon)\";const QL=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12.4H17M12.5 8V17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));QL.displayName=\"ForwardRef(AddCircleIcon)\";const eM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add-comment\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5H9.5V20.5L13.5 16.5H16.5C17.6046 16.5 18.5 15.6046 18.5 14.5V12M15 6.5H22M18.5 10V3\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));eM.displayName=\"ForwardRef(AddCommentIcon)\";const tM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"add-document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V12M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5M6.5 9.5V19.5H11M20 17.5H16.5M16.5 17.5H13M16.5 17.5V14M16.5 17.5V21\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));tM.displayName=\"ForwardRef(AddDocumentIcon)\";const nM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"add\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5V20M5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));nM.displayName=\"ForwardRef(AddIcon)\";const rM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"add-user\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.17857 15.2368C3.10714 15.7632 1.5 16.8158 1.5 20.5H16.5C16.5 16.8158 15.2589 15.943 13.8214 15.2368C12.75 14.7105 10.6071 14.7105 10.6071 13.1316C10.6071 11.5526 11.6786 10.7632 11.6786 8.65789C11.6786 6.55263 10.6071 5.5 9 5.5C7.39285 5.5 6.32142 6.55263 6.32142 8.65789C6.32142 10.7632 7.39286 11.5526 7.39286 13.1316C7.39286 14.7105 5.25 14.7105 4.17857 15.2368Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 7V14M16 10.5H23\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));rM.displayName=\"ForwardRef(AddUserIcon)\";const oM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"api\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.93047 13.2107L6.66782 10.3728H6.73089L7.45854 13.2107H5.93047ZM8.17164 16H9.66089L7.56041 9H5.93047L3.82999 16H5.20767L5.65396 14.2876H7.73505L8.17164 16Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5389 9V16H11.9166V13.7782H13.0323C14.541 13.7782 15.5015 12.8517 15.5015 11.3964C15.5015 9.92654 14.5701 9 13.1003 9H10.5389ZM11.9166 10.1303H12.751C13.6533 10.1303 14.1044 10.5475 14.1044 11.3867C14.1044 12.2308 13.6533 12.6431 12.751 12.6431H11.9166V10.1303Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21.1675 16V14.8164H19.717V10.1836H21.1675V9H16.8889V10.1836H18.3393V14.8164H16.8889V16H21.1675Z\",fill:\"currentColor\"})]})}));oM.displayName=\"ForwardRef(ApiIcon)\";const iM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"archive\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10V17M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 7.5H20.5M16 14L12.5 17.5L9 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));iM.displayName=\"ForwardRef(ArchiveIcon)\";const aM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 19.5V5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 14L12.5 19.5L7 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));aM.displayName=\"ForwardRef(ArrowDownIcon)\";const sM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 18L5.5 12.5L11 7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));sM.displayName=\"ForwardRef(ArrowLeftIcon)\";const lM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 12.5H5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 7L19.5 12.5L14 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));lM.displayName=\"ForwardRef(ArrowRightIcon)\";const cM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-top-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 8.5L7 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 8.5H16.5V16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));cM.displayName=\"ForwardRef(ArrowTopRightIcon)\";const dM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"arrow-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 11L12.5 5.5L18 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));dM.displayName=\"ForwardRef(ArrowUpIcon)\";const uM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"asterisk\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 4V21M16.75 5.13879L8.25 19.8612M19.8612 8.25L5.13878 16.75M4.00002 12.5H21M5.13881 8.25L19.8612 16.75M8.25002 5.13879L16.75 19.8612\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));uM.displayName=\"ForwardRef(AsteriskIcon)\";const hM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bar-chart\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V19.5H20M8.5 18V13M11.5 18V9M14.5 18V11M17.5 18V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));hM.displayName=\"ForwardRef(BarChartIcon)\";const pM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"basket\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 10.5H5L6.5 19.5H18.5L20 10.5H16.5M8.5 10.5L10.2721 5.18377C10.4082 4.77543 10.7903 4.5 11.2208 4.5H13.7792C14.2097 4.5 14.5918 4.77543 14.7279 5.18377L16.5 10.5M8.5 10.5H16.5M8.5 10.5L9.5 19.5M16.5 10.5L15.5 19.5M12.5 10.5V19.5M19.5 13.5H5.5M19 16.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));pM.displayName=\"ForwardRef(BasketIcon)\";const fM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bell\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 17.5V18.5C10.5 20 11.5 20.5 12.5 20.5C13.5 20.5 14.5 20 14.5 18.5V17.5M5.5 17.5C6.5 16 6.5 15 6.5 12C6.5 8 8.5 5.5 12.5 5.5C16.5 5.5 18.5 8 18.5 12C18.5 15 18.5 16 19.5 17.5H5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fM.displayName=\"ForwardRef(BellIcon)\";const gM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bill\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.50001 5.5C8.50003 5.5 8.50003 8 8.50003 8V9.5M6.50001 5.5C4.5 5.5 4.5 8 4.5 8L4.50001 9.5H8.50003M6.50001 5.5C6.50001 5.5 15.8333 5.5 17.6667 5.5C19.5 5.5 19.5 8.5 19.5 8.5V20L17.6667 19L15.8333 20L14 19L12.1667 20L10.3334 19L8.50003 20V9.5M11 12.5H15M11 9.5H16M11 15.5H16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));gM.displayName=\"ForwardRef(BillIcon)\";const mM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"binary-document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 12.5V17.5M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM12.5 12.5V17.5H15.5V12.5H12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})]})}));mM.displayName=\"ForwardRef(BinaryDocumentIcon)\";const wM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"block-content\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 7.60002L11 7.60003V6.40003L21 6.40002V7.60002Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 11.2667L12.4833 11.2667V10.0667L21 10.0667V11.2667Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 14.9334H13.9254V13.7334L21 13.7334V14.9334Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 18.6002H4V17.4002H21V18.6002Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.86438 15.6H11.2L8.27623 7.60003H6.92377L4 15.6H5.29072L6.0371 13.4767H9.12362L9.86438 15.6ZM7.53546 9.05255H7.63086L8.80374 12.4344H6.35698L7.53546 9.05255Z\",fill:\"currentColor\"})]})}));wM.displayName=\"ForwardRef(BlockContentIcon)\";const vM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"block-element\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 19.5H20M5 5.5H20M6.5 8.5H18.5V16.5H6.5V8.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vM.displayName=\"ForwardRef(BlockElementIcon)\";const yM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"blockquote\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 17.5H19M6 7.5H19M10 12.5H17M6.5 12V18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));yM.displayName=\"ForwardRef(BlockquoteIcon)\";const bM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bold\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.2087 18C15.5322 18 16.9731 16.793 16.9731 14.8844C16.9731 13.4812 15.9245 12.3949 14.4836 12.2892V12.1534C15.6001 11.9875 16.4526 10.9841 16.4526 9.82991C16.4526 8.14761 15.1927 7.11409 13.0804 7.11409H8.32019V18H13.2087ZM10.5985 8.85674H12.4995C13.5859 8.85674 14.212 9.37727 14.212 10.2448C14.212 11.1199 13.5406 11.6254 12.3109 11.6254H10.5985V8.85674ZM10.5985 16.2574V13.1643H12.575C13.9178 13.1643 14.6496 13.6924 14.6496 14.6882C14.6496 15.7066 13.9404 16.2574 12.6278 16.2574H10.5985Z\",fill:\"currentColor\"})})}));bM.displayName=\"ForwardRef(BoldIcon)\";const CM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bolt\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 11.5L9 21L11 13.5H7L16 4L14 11.5H18Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));CM.displayName=\"ForwardRef(BoltIcon)\";const kM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"book\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 17.5V5.5L12.5 6.5M20.5 17.5L12.5 18.5M20.5 17.5V18.5M4.5 17.5V5.5L12.5 6.5M4.5 17.5L12.5 18.5M4.5 17.5V18.5M12.5 18.5L4.5 19.5V18.5M12.5 18.5L20.5 19.5V18.5M12.5 18.5V6.5M12.5 18.5H4.5M12.5 18.5H20.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));kM.displayName=\"ForwardRef(BookIcon)\";const xM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bottle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 17.5L17.5 17.5M17.5 13C17.5 12.087 17.5 11.3518 17.5 11C17.5 8.5 14.5 9 14.5 7.37494L14.5 5.5M17.5 13C17.5 15.1229 17.5 18.7543 17.5 20.5022C17.5 21.0545 17.0523 21.5 16.5 21.5L8.5 21.5C7.94772 21.5 7.5 21.0547 7.5 20.5024C7.5 18.8157 7.5 15.3546 7.5 13M17.5 13L7.5 13M7.5 13C7.5 12.2538 7.5 11.5648 7.5 11C7.5 8.5 10.5 9 10.5 7.37494L10.5 5.5M10.5 5.5L10.5 3.99999C10.5 3.72385 10.7239 3.49999 11 3.49999L14 3.49999C14.2761 3.49999 14.5 3.72385 14.5 3.99999L14.5 5.5M10.5 5.5L14.5 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xM.displayName=\"ForwardRef(BottleIcon)\";const LM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"bulb-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H14V20.5C14 21.0523 13.5523 21.5 13 21.5H12C11.4477 21.5 11 21.0523 11 20.5V19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10C18 11.94 17.3978 12.9767 16.4272 14.3368Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.4272 14.3368L15.9388 13.9883L15.9388 13.9883L16.4272 14.3368ZM14 19.5V18.9H13.4V19.5H14ZM11 19.5H11.6V18.9H11V19.5ZM8.57284 14.3368L9.06122 13.9883L9.06122 13.9883L8.57284 14.3368ZM16.1 17.212C16.1 16.3069 16.3868 15.4261 16.9155 14.6853L15.9388 13.9883C15.2678 14.9284 14.9 16.0519 14.9 17.212H16.1ZM16.1 18.5V17.212H14.9V18.5H16.1ZM14.5 20.1C15.3837 20.1 16.1 19.3837 16.1 18.5H14.9C14.9 18.7209 14.7209 18.9 14.5 18.9V20.1ZM14 20.1H14.5V18.9H14V20.1ZM13.4 19.5V20.5H14.6V19.5H13.4ZM13.4 20.5C13.4 20.7209 13.2209 20.9 13 20.9V22.1C13.8837 22.1 14.6 21.3837 14.6 20.5H13.4ZM13 20.9H12V22.1H13V20.9ZM12 20.9C11.7791 20.9 11.6 20.7209 11.6 20.5H10.4C10.4 21.3837 11.1163 22.1 12 22.1V20.9ZM11.6 20.5V19.5H10.4V20.5H11.6ZM10.5 20.1H11V18.9H10.5V20.1ZM8.9 18.5C8.9 19.3837 9.61634 20.1 10.5 20.1V18.9C10.2791 18.9 10.1 18.7209 10.1 18.5H8.9ZM8.9 17.212V18.5H10.1V17.212H8.9ZM8.08446 14.6853C8.61315 15.4261 8.9 16.3069 8.9 17.212H10.1C10.1 16.0519 9.73217 14.9284 9.06122 13.9883L8.08446 14.6853ZM6.4 10C6.4 11.0377 6.56208 11.8595 6.86624 12.611C7.16624 13.3521 7.59495 13.9995 8.08446 14.6853L9.06122 13.9883C8.58004 13.314 8.22233 12.7629 7.97858 12.1607C7.739 11.5688 7.6 10.9023 7.6 10H6.4ZM12.5 3.9C9.16863 3.9 6.4 6.66863 6.4 10H7.6C7.6 7.33137 9.83137 5.1 12.5 5.1V3.9ZM18.6 10C18.6 6.66863 15.8314 3.9 12.5 3.9V5.1C15.1686 5.1 17.4 7.33137 17.4 10H18.6ZM16.9155 14.6853C17.4051 13.9995 17.8338 13.3521 18.1338 12.611C18.4379 11.8595 18.6 11.0377 18.6 10H17.4C17.4 10.9023 17.261 11.5688 17.0214 12.1607C16.7777 12.7629 16.42 13.314 15.9388 13.9883L16.9155 14.6853Z\",fill:\"currentColor\"})]})}));LM.displayName=\"ForwardRef(BulbFilledIcon)\";const MM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"bulb-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 16.5H15.5M11 20V20.5C11 21.0523 11.4477 21.5 12 21.5H13C13.5523 21.5 14 21.0523 14 20.5V20M18 10C18 11.94 17.3978 12.9767 16.4272 14.3368C15.8273 15.1773 15.5 16.1794 15.5 17.212V18.5C15.5 19.0523 15.0523 19.5 14.5 19.5H10.5C9.94772 19.5 9.5 19.0523 9.5 18.5V17.212C9.5 16.1794 9.17266 15.1773 8.57284 14.3368C7.60216 12.9767 7 11.94 7 10C7 7 9.5 4.5 12.5 4.5C15.5 4.5 18 7 18 10Z\",stroke:\"currentColor\",strokeWidth:1.2})})}));MM.displayName=\"ForwardRef(BulbOutlineIcon)\";const HM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"calendar\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 10.5V19.5H20.5V10.5M4.5 10.5V5.5H20.5V10.5M4.5 10.5H12.5H20.5M20.5 13.5H16.5M16.5 13.5H12.5M16.5 13.5V10.5M16.5 13.5V16.5M12.5 13.5H8.5M12.5 13.5V16.5M12.5 13.5V10.5M8.5 13.5H4.5M8.5 13.5V10.5M8.5 13.5V16.5M20.5 16.5H16.5M16.5 16.5H12.5M16.5 16.5V19.5M12.5 16.5H8.5M12.5 16.5V19.5M8.5 16.5H4.5M8.5 16.5V19.5M17.5 8V3M7.5 8V3\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));HM.displayName=\"ForwardRef(CalendarIcon)\";const VM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"case\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 8.5122V6C9 5.44772 9.44772 5 10 5H15C15.5523 5 16 5.44772 16 6V8.5122M4.5 12V18.5C4.5 19.0523 4.94772 19.5 5.5 19.5H19.5C20.0523 19.5 20.5 19.0523 20.5 18.5V12M4.5 12V9.5122C4.5 8.95991 4.94772 8.5122 5.5 8.5122H19.5C20.0523 8.5122 20.5 8.95991 20.5 9.5122V12M4.5 12L11.7978 14.7367C12.2505 14.9064 12.7495 14.9064 13.2022 14.7367L20.5 12\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));VM.displayName=\"ForwardRef(CaseIcon)\";const RM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chart-upward\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V19.5H20M7.5 16L11.5 11.5L15.5 14L19.5 8.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));RM.displayName=\"ForwardRef(ChartUpwardIcon)\";const SM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"checkmark-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 12.1316L11.7414 14.5L16 10M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));SM.displayName=\"ForwardRef(CheckmarkCircleIcon)\";const FM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"checkmark\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 11.5L10.5 16.5L19.5 7.60001\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));FM.displayName=\"ForwardRef(CheckmarkIcon)\";const EM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 10.5L12.5 15L8 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));EM.displayName=\"ForwardRef(ChevronDownIcon)\";const NM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 17L10 12.5L14.5 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));NM.displayName=\"ForwardRef(ChevronLeftIcon)\";const IM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 8L15 12.5L10.5 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));IM.displayName=\"ForwardRef(ChevronRightIcon)\";const BM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"chevron-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 14.5L12.5 10L17 14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));BM.displayName=\"ForwardRef(ChevronUpIcon)\";const jM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:8,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));jM.displayName=\"ForwardRef(CircleIcon)\";const $M=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clipboard\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 5.5H6.5V19.5H18.5V5.5H17M12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$M.displayName=\"ForwardRef(ClipboardIcon)\";const AM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clipboard-image\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 5.5H6.5V19.5H10.5M17 5.5H18.5V11.5M10.5 18.5L12.73 15.8983C13.1327 15.4285 13.8613 15.4335 14.2575 15.909L15.299 17.1588C15.6754 17.6105 16.3585 17.6415 16.7743 17.2257L16.9903 17.0097C17.2947 16.7053 17.7597 16.6298 18.1447 16.8223L20.5 18M10.5 11.5H20.5V21.5H10.5V11.5ZM12.5 3C11.5 3 11.5 4.5 11 4.5C10 4.5 9.5 5 9.5 6.5H15.6C15.6 5 15 4.5 14 4.5C13.5 4.5 13.5 3 12.5 3Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));AM.displayName=\"ForwardRef(ClipboardImageIcon)\";const TM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"clock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 8V12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));TM.displayName=\"ForwardRef(ClockIcon)\";const PM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"close-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 15.5L12.5 12.5M12.5 12.5L15.5 9.5M12.5 12.5L9.5 9.5M12.5 12.5L15.5 15.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));PM.displayName=\"ForwardRef(CloseCircleIcon)\";const WM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"close\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 7L7 18M7 7L18 18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));WM.displayName=\"ForwardRef(CloseIcon)\";const ZM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"code-block\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 15L8.5 12.5L11 10M14 10L16.5 12.5L14 15M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ZM.displayName=\"ForwardRef(CodeBlockIcon)\";const DM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"code\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 16L7.5 12.5L11 9M14 9L17.5 12.5L14 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));DM.displayName=\"ForwardRef(CodeIcon)\";const zM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"cog\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.2624 5.40607L13.8714 4.42848C13.6471 3.86771 13.104 3.5 12.5 3.5C11.896 3.5 11.3529 3.86771 11.1286 4.42848L10.7376 5.40607C10.5857 5.78585 10.2869 6.08826 9.90901 6.2448C9.53111 6.40133 9.10603 6.39874 8.73006 6.23761L7.76229 5.82285C7.20716 5.58494 6.56311 5.70897 6.13604 6.13604C5.70897 6.56311 5.58494 7.20716 5.82285 7.76229L6.23761 8.73006C6.39874 9.10602 6.40133 9.53111 6.2448 9.90901C6.08826 10.2869 5.78585 10.5857 5.40607 10.7376L4.42848 11.1286C3.86771 11.3529 3.5 11.896 3.5 12.5C3.5 13.104 3.86771 13.6471 4.42848 13.8714L5.40607 14.2624C5.78585 14.4143 6.08826 14.7131 6.2448 15.091C6.40133 15.4689 6.39874 15.894 6.23761 16.2699L5.82285 17.2377C5.58494 17.7928 5.70897 18.4369 6.13604 18.864C6.56311 19.291 7.20716 19.4151 7.76229 19.1772L8.73006 18.7624C9.10603 18.6013 9.53111 18.5987 9.90901 18.7552C10.2869 18.9117 10.5857 19.2141 10.7376 19.5939L11.1286 20.5715C11.3529 21.1323 11.896 21.5 12.5 21.5C13.104 21.5 13.6471 21.1323 13.8714 20.5715L14.2624 19.5939C14.4143 19.2141 14.7131 18.9117 15.091 18.7552C15.4689 18.5987 15.894 18.6013 16.2699 18.7624L17.2377 19.1771C17.7928 19.4151 18.4369 19.291 18.864 18.864C19.291 18.4369 19.4151 17.7928 19.1771 17.2377L18.7624 16.2699C18.6013 15.894 18.5987 15.4689 18.7552 15.091C18.9117 14.7131 19.2141 14.4143 19.5939 14.2624L20.5715 13.8714C21.1323 13.6471 21.5 13.104 21.5 12.5C21.5 11.896 21.1323 11.3529 20.5715 11.1286L19.5939 10.7376C19.2141 10.5857 18.9117 10.2869 18.7552 9.90901C18.5987 9.53111 18.6013 9.10602 18.7624 8.73006L19.1772 7.76229C19.4151 7.20716 19.291 6.56311 18.864 6.13604C18.4369 5.70897 17.7928 5.58494 17.2377 5.82285L16.2699 6.23761C15.894 6.39874 15.4689 6.40133 15.091 6.2448C14.7131 6.08826 14.4143 5.78585 14.2624 5.40607Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 12.5C16.5 14.7091 14.7091 16.5 12.5 16.5C10.2909 16.5 8.5 14.7091 8.5 12.5C8.5 10.2909 10.2909 8.5 12.5 8.5C14.7091 8.5 16.5 10.2909 16.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));zM.displayName=\"ForwardRef(CogIcon)\";const OM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"collapse\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 14.5L10.5 14.5V19M19 10.5H14.5L14.5 6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 14.5L6 19M14.5 10.5L19 6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));OM.displayName=\"ForwardRef(CollapseIcon)\";const _M=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"color-wheel\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.43853 5.10896L11.1606 9.26642M13.8394 15.7336L15.5615 19.891M15.7336 11.1606L19.891 9.43853M9.26642 13.8394L5.10896 15.5615M5.3139 9.52342L9.23359 11.147M15.7664 13.853L19.6861 15.4766M13.853 9.23359L15.4766 5.3139M9.52342 19.6861L11.147 15.7664M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5ZM16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_M.displayName=\"ForwardRef(ColorWheelIcon)\";const qM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"comment\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 16.5H9.5V20.5L13.5 16.5H17.5C18.6046 16.5 19.5 15.6046 19.5 14.5V8.5C19.5 7.39543 18.6046 6.5 17.5 6.5H7.5C6.39543 6.5 5.5 7.39543 5.5 8.5V14.5C5.5 15.6046 6.39543 16.5 7.5 16.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qM.displayName=\"ForwardRef(CommentIcon)\";const UM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"component\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 8.5L12.5 12.5M12.5 12.5L16.5 16.5M12.5 12.5L16.5 8.5M12.5 12.5L8.5 16.5M12.5 4L21 12.5L12.5 21L4 12.5L12.5 4Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));UM.displayName=\"ForwardRef(ComponentIcon)\";const GM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"compose\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 6L19 8M14 5.5H5.5V19.5H19.5V11M9 16L9.5 13.5L19 4L21 6L11.5 15.5L9 16Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));GM.displayName=\"ForwardRef(ComposeIcon)\";const YM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"confetti\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 6.25C16.9142 6.25 17.25 5.91421 17.25 5.5C17.25 5.08579 16.9142 4.75 16.5 4.75C16.0858 4.75 15.75 5.08579 15.75 5.5C15.75 5.91421 16.0858 6.25 16.5 6.25Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 16.25C19.9142 16.25 20.25 15.9142 20.25 15.5C20.25 15.0858 19.9142 14.75 19.5 14.75C19.0858 14.75 18.75 15.0858 18.75 15.5C18.75 15.9142 19.0858 16.25 19.5 16.25Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 4C11 6 14.5 5.5 12.5 7.5M21 12C19 14 19.5 10.5 17.5 12.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.066 16.4904C15.3965 17.1598 13.1126 15.9613 10.9647 13.8135C8.81684 11.6656 7.61835 9.38165 8.28782 8.71218M16.066 16.4904C16.7355 15.8209 15.537 13.537 13.3891 11.3891C11.2412 9.2412 8.95729 8.04271 8.28782 8.71218M16.066 16.4904C15.8661 16.6902 15.6277 16.8474 15.3657 16.952L6.99288 20.296C6.26931 20.5849 5.44878 20.4193 4.9038 19.8744C4.35883 19.3294 4.19324 18.5089 4.48221 17.7853L7.82614 9.41242C7.93077 9.15042 8.08793 8.91208 8.28782 8.71218M20 5C20 14 11.5 5.32688 11.5 14.3269\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));YM.displayName=\"ForwardRef(ConfettiIcon)\";const XM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"controls\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 5V7.5M6.5 7.5C5.39543 7.5 4.5 8.39543 4.5 9.5C4.5 10.6046 5.39543 11.5 6.5 11.5M6.5 7.5C7.60457 7.5 8.5 8.39543 8.5 9.5C8.5 10.6046 7.60457 11.5 6.5 11.5M6.5 11.5V20M12.5 5V13.5M12.5 13.5C11.3954 13.5 10.5 14.3954 10.5 15.5C10.5 16.6046 11.3954 17.5 12.5 17.5M12.5 13.5C13.6046 13.5 14.5 14.3954 14.5 15.5C14.5 16.6046 13.6046 17.5 12.5 17.5M12.5 17.5V20M18.5 5V7.5M18.5 7.5C17.3954 7.5 16.5 8.39543 16.5 9.5C16.5 10.6046 17.3954 11.5 18.5 11.5M18.5 7.5C19.6046 7.5 20.5 8.39543 20.5 9.5C20.5 10.6046 19.6046 11.5 18.5 11.5M18.5 11.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));XM.displayName=\"ForwardRef(ControlsIcon)\";const KM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"copy\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 8.5H5.5V20.5H16.5V16.5M19.5 4.5H8.5V16.5H19.5V4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));KM.displayName=\"ForwardRef(CopyIcon)\";const JM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"credit-card\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 9.5H4.5V11.5H20.5V9.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 15.5H14M5.5 18.5H19.5C20.0523 18.5 20.5 18.0523 20.5 17.5V7.5C20.5 6.94772 20.0523 6.5 19.5 6.5H5.5C4.94772 6.5 4.5 6.94772 4.5 7.5V17.5C4.5 18.0523 4.94772 18.5 5.5 18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));JM.displayName=\"ForwardRef(CreditCardIcon)\";const QM=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"crop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 5V15.5H20M5 9.5H15.5V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));QM.displayName=\"ForwardRef(CropIcon)\";const eH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"cube\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 22V13M12.5 13L4.5 8M12.5 13L20.5 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));eH.displayName=\"ForwardRef(CubeIcon)\";const tH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"dashboard\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 19.5V12.5M10.5 12.5V5.5M5.5 12.5H19.5M5.5 19.5H19.5V5.5H5.5V19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));tH.displayName=\"ForwardRef(DashboardIcon)\";const nH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"database\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 7V17.5C18.5 19.0594 16.0504 20.5 12.5 20.5C8.9496 20.5 6.5 19.0594 6.5 17.5V7M18.5 7C18.5 8.45543 15.8137 9.5 12.5 9.5C9.18629 9.5 6.5 8.45543 6.5 7C6.5 5.54457 9.18629 4.5 12.5 4.5C15.8137 4.5 18.5 5.54457 18.5 7Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));nH.displayName=\"ForwardRef(DatabaseIcon)\";const rH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"desktop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 13.5V15.5C4.5 16.0523 4.94772 16.5 5.5 16.5H12.5M4.5 13.5V6.5C4.5 5.94772 4.94772 5.5 5.5 5.5H19.5C20.0523 5.5 20.5 5.94772 20.5 6.5V13.5M4.5 13.5H20.5M20.5 13.5V15.5C20.5 16.0523 20.0523 16.5 19.5 16.5H12.5M12.5 16.5V19.5M12.5 19.5H8M12.5 19.5H17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));rH.displayName=\"ForwardRef(DesktopIcon)\";const oH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"diamond\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 10.5L12.5 21M21 10.5L18 5.5H11M21 10.5H16M12.5 21L4 10.5M12.5 21L9 10.5M12.5 21L16 10.5M4 10.5L7 5.5H11M4 10.5H9M9 10.5H12.5H16M9 10.5L11 5.5M16 10.5L14.5 5.5H11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));oH.displayName=\"ForwardRef(DiamondIcon)\";const iH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5L6.5 9.5M11.5 4.5L6.5 9.5M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));iH.displayName=\"ForwardRef(DocumentIcon)\";const aH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-pdf\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.7127 13.8012L12.7193 13.77C12.8488 13.2366 13.0117 12.5716 12.8845 11.969C12.7997 11.4937 12.4493 11.3084 12.1503 11.295C11.7977 11.2794 11.483 11.4803 11.4049 11.7726C11.2576 12.3082 11.3893 13.0402 11.6303 13.973C11.3268 14.6961 10.8425 15.7472 10.4877 16.3721C9.8271 16.7135 8.94113 17.2402 8.80946 17.9053C8.78268 18.028 8.81392 18.1842 8.88757 18.3248C8.97014 18.481 9.10181 18.6015 9.25579 18.6596C9.32274 18.6841 9.40308 18.7042 9.49681 18.7042C9.88959 18.7042 10.5256 18.3873 11.3736 16.9322C11.5031 16.8898 11.637 16.8452 11.7664 16.8006C12.3734 16.5953 13.0028 16.381 13.5718 16.2851C14.2012 16.622 14.9175 16.8385 15.404 16.8385C15.8861 16.8385 16.0758 16.5529 16.1472 16.381C16.2722 16.0797 16.2119 15.7004 16.0088 15.4973C15.7143 15.2072 14.9979 15.1313 13.882 15.2696C13.3331 14.9349 12.9738 14.4796 12.7127 13.8012ZM10.2645 17.1911C9.95431 17.6419 9.71998 17.8673 9.59278 17.9655C9.7423 17.691 10.0346 17.4009 10.2645 17.1911ZM12.2195 11.9355C12.3355 12.1341 12.3199 12.7345 12.2306 13.038C12.1213 12.5939 12.1056 11.9645 12.1704 11.8909L12.2195 11.9355ZM12.1837 14.6247C12.4225 15.0376 12.7238 15.3924 13.0563 15.6557C12.5743 15.7651 12.1346 15.9458 11.7419 16.1065C11.6481 16.1445 11.5566 16.1824 11.4674 16.2181C11.7642 15.6803 12.0119 15.071 12.1837 14.6247ZM15.6562 16.0864L15.6428 16.1065C15.6428 16.1065 15.4375 16.2315 14.6497 15.9213C15.5558 15.8789 15.6562 16.0864 15.6562 16.0864Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));aH.displayName=\"ForwardRef(DocumentPdfIcon)\";const sH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 14V20.5H18.5V14M6.5 11V9.5L11.5 4.5H18.5V11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));sH.displayName=\"ForwardRef(DocumentRemoveIcon)\";const lH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-sheet\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.4 19V16.4M10.4 16.4L10.4 13.4M10.4 16.4H8M10.4 16.4H14.4M10.4 13.4V11M10.4 13.4H8M10.4 13.4H14.4M14.4 19V16.4M14.4 16.4V13.4M14.4 16.4H17M14.4 13.4V11M14.4 13.4H17M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));lH.displayName=\"ForwardRef(DocumentSheetIcon)\";const cH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-text\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 13H9M14 16H9M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));cH.displayName=\"ForwardRef(DocumentTextIcon)\";const dH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-video\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 16.5V13.5L14 15L11.5 16.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));dH.displayName=\"ForwardRef(DocumentVideoIcon)\";const uH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-word\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.4699 13.4588H12.5263L13.6328 17H14.5435L16 12H14.9952L14.0656 15.7214H14.0129L12.929 12H12.0672L10.9984 15.7214H10.9419L10.0124 12H9L10.4565 17H11.371L12.4699 13.4588Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));uH.displayName=\"ForwardRef(DocumentWordIcon)\";const hH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"document-zip\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 4.5V9.5H6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 4.5L13.5 5L15.5 6L13.5 7L15.5 8L13.5 9L15.5 10L13.5 11L14.5 11.5V13M11.5 4.5H18.5V20.5H6.5V9.5L11.5 4.5ZM13.5 13H15.5L16 17H13L13.5 13Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));hH.displayName=\"ForwardRef(DocumentZipIcon)\";const pH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"documents\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 4.5V9.5H5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H19.5V21.5H8.5V18.5M10.5 4.5H16.5V18.5H5.5V9.5L10.5 4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));pH.displayName=\"ForwardRef(DocumentsIcon)\";const fH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"dot\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:2.5,fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2})})}));fH.displayName=\"ForwardRef(DotIcon)\";const gH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-down\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 8L12.5 12.5L8 8M17 13L12.5 17.5L8 13\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));gH.displayName=\"ForwardRef(DoubleChevronDownIcon)\";const mH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 17L7.5 12.5L12 8M17 17L12.5 12.5L17 8\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));mH.displayName=\"ForwardRef(DoubleChevronLeftIcon)\";const wH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 8L17.5 12.5L13 17M8 8L12.5 12.5L8 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wH.displayName=\"ForwardRef(DoubleChevronRightIcon)\";const vH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"double-chevron-up\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12L12.5 7.5L17 12M8 17L12.5 12.5L17 17\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vH.displayName=\"ForwardRef(DoubleChevronUpIcon)\";const yH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"download\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 17V19.5H5.5V17M12.5 16L12.5 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 11L12.5 16L7.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));yH.displayName=\"ForwardRef(DownloadIcon)\";const bH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"drag-handle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 8C10.3284 8 11 7.32843 11 6.5C11 5.67157 10.3284 5 9.5 5C8.67157 5 8 5.67157 8 6.5C8 7.32843 8.67157 8 9.5 8Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 14C10.3284 14 11 13.3284 11 12.5C11 11.6716 10.3284 11 9.5 11C8.67157 11 8 11.6716 8 12.5C8 13.3284 8.67157 14 9.5 14Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 18.5C11 19.3284 10.3284 20 9.5 20C8.67157 20 8 19.3284 8 18.5C8 17.6716 8.67157 17 9.5 17C10.3284 17 11 17.6716 11 18.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 8C16.3284 8 17 7.32843 17 6.5C17 5.67157 16.3284 5 15.5 5C14.6716 5 14 5.67157 14 6.5C14 7.32843 14.6716 8 15.5 8Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 12.5C17 13.3284 16.3284 14 15.5 14C14.6716 14 14 13.3284 14 12.5C14 11.6716 14.6716 11 15.5 11C16.3284 11 17 11.6716 17 12.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 20C16.3284 20 17 19.3284 17 18.5C17 17.6716 16.3284 17 15.5 17C14.6716 17 14 17.6716 14 18.5C14 19.3284 14.6716 20 15.5 20Z\",fill:\"currentColor\"})]})}));bH.displayName=\"ForwardRef(DragHandleIcon)\";const CH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"drop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 14.5C18.5 18 16 20.5 12.5 20.5C9 20.5 6.5 18 6.5 14.5C6.5 11 9.5 7.50001 12.5 4.5C15.5 7.5 18.5 11 18.5 14.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));CH.displayName=\"ForwardRef(DropIcon)\";const kH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"earth-americas\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 13L5.5 9L10 5H15V10L14 9H11L9.5 11L10.5 12H12V13L13 14.5H15.5L18.5 17L15.5 19.5L10.5 20V17L12.5 15L9 13L7 10.5V13Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"circle\",{cx:12.5,cy:12.5,r:8,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));kH.displayName=\"ForwardRef(EarthAmericasIcon)\";const xH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"earth-globe\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 16.5H19.5M5.5 8.5H19.5M4.5 12.5H20.5M12.5 20.5C12.5 20.5 8 18.5 8 12.5C8 6.5 12.5 4.5 12.5 4.5M12.5 4.5C12.5 4.5 17 6.5 17 12.5C17 18.5 12.5 20.5 12.5 20.5M12.5 4.5V20.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xH.displayName=\"ForwardRef(EarthGlobeIcon)\";const LH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"edit\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 7L18 10M6 19L7 15L17 5L20 8L10 18L6 19Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));LH.displayName=\"ForwardRef(EditIcon)\";const MH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ellipsis-horizontal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 11C7.32843 11 8 11.6716 8 12.5C8 13.3284 7.32843 14 6.5 14C5.67157 14 5 13.3284 5 12.5C5 11.6716 5.67157 11 6.5 11Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 11C13.3284 11 14 11.6716 14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11C19.3284 11 20 11.6716 20 12.5C20 13.3284 19.3284 14 18.5 14C17.6716 14 17 13.3284 17 12.5C17 11.6716 17.6716 11 18.5 11Z\",fill:\"currentColor\"})]})}));MH.displayName=\"ForwardRef(EllipsisHorizontalIcon)\";const HH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ellipsis-vertical\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 6.5C14 7.32843 13.3284 8 12.5 8C11.6716 8 11 7.32843 11 6.5C11 5.67157 11.6716 5 12.5 5C13.3284 5 14 5.67157 14 6.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 12.5C14 13.3284 13.3284 14 12.5 14C11.6716 14 11 13.3284 11 12.5C11 11.6716 11.6716 11 12.5 11C13.3284 11 14 11.6716 14 12.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 18.5C14 19.3284 13.3284 20 12.5 20C11.6716 20 11 19.3284 11 18.5C11 17.6716 11.6716 17 12.5 17C13.3284 17 14 17.6716 14 18.5Z\",fill:\"currentColor\"})]})}));HH.displayName=\"ForwardRef(EllipsisVerticalIcon)\";const VH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"empty\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 21V19.1111M8.25 19.8614L9.19445 18.2255M5.13878 16.7501L6.77461 15.8057M4 12.5H5.8889M5.13872 8.2499L6.77455 9.19436M8.25004 5.13876L9.19449 6.7746M12.5 5.88891V4M15.8055 6.77465L16.75 5.1388M18.2254 9.19449L19.8612 8.25004M19.1111 12.5001H21M18.2254 15.8056L19.8612 16.7501M15.8056 18.2255L16.75 19.8614\",stroke:\"currentColor\",strokeWidth:1.2})})}));VH.displayName=\"ForwardRef(EmptyIcon)\";const RH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"enter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 14.5H19.5V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 18.5L6 14.5L10 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));RH.displayName=\"ForwardRef(EnterIcon)\";const SH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"enter-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 14.5H5.5V7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 18.5L19 14.5L15 10.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));SH.displayName=\"ForwardRef(EnterRightIcon)\";const FH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"envelope\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5H4.5V6.5H20.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5L17.75 15.5L15 12.5M4.5 18.5L10 12.5M20.5 6.5L12.5 15L4.5 6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));FH.displayName=\"ForwardRef(EnvelopeIcon)\";const EH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"equal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 4.5H3.5V20.5H7.5\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 20.5L21.5 20.5L21.5 4.5L17.5 4.5\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 10.5H16\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 14.5H16\",stroke:\"currentColor\",strokeWidth:1.2})]})}));EH.displayName=\"ForwardRef(EqualIcon)\";const NH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"error-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5ZM13 14.5V16H12V14.5H13ZM12 9V13H13V9H12Z\",fill:\"currentColor\"})})}));NH.displayName=\"ForwardRef(ErrorFilledIcon)\";const IH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"error-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 16V14.5M12.5 9V13M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));IH.displayName=\"ForwardRef(ErrorOutlineIcon)\";const BH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"expand\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 6.5H18.5V11M11 18.5H6.5V14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 6.5L14 11M6.5 18.5L11 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));BH.displayName=\"ForwardRef(ExpandIcon)\";const jH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"eye-closed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 15.5L5.5 17.5M20.5 12.5C19.8612 13.5647 19.041 14.6294 18.0008 15.501M18.0008 15.501C16.5985 16.676 14.7965 17.5 12.5 17.5M18.0008 15.501L18 15.5M18.0008 15.501L19.5 17.5M12.5 17.5C8.5 17.5 6 15 4.5 12.5M12.5 17.5V20M15.5 17L16.5 19.5M9.5 17L8.5 19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));jH.displayName=\"ForwardRef(EyeClosedIcon)\";const $H=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"eye-open\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.39999 12.5C9.39999 10.7879 10.7879 9.39999 12.5 9.39999C14.2121 9.39999 15.6 10.7879 15.6 12.5C15.6 14.2121 14.2121 15.6 12.5 15.6C10.7879 15.6 9.39999 14.2121 9.39999 12.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 7.5C8.5 7.5 6 10 4.5 12.5C6 15 8.5 17.5 12.5 17.5C16.5 17.5 19 15 20.5 12.5C19 10 16.5 7.5 12.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));$H.displayName=\"ForwardRef(EyeOpenIcon)\";const AH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"filter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 12L6 7V6L19 6L19 7L14 12V17L11 19V12Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));AH.displayName=\"ForwardRef(FilterIcon)\";const TH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"folder\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 8.5H19.5V18.5H5.5V5.5H10.5L11.5 8.5ZM11.5 8.5H5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));TH.displayName=\"ForwardRef(FolderIcon)\";const PH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"generate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 5.30423C6.33576 6.60253 4.5 9.33688 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5V14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 11L12.5 14.5L9 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));PH.displayName=\"ForwardRef(GenerateIcon)\";const WH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"groq\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 13H21L13 21L13 13Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 12V4L4 12H12Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 13H4L12 21V13Z\",fill:\"currentColor\"})]})}));WH.displayName=\"ForwardRef(GroqIcon)\";const ZH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"hash\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M8.33894 16.1002H5.44615L5.63077 14.9002H8.52356L9.26202 10.1002H6.36923L6.55384 8.90018H9.44663L9.89281 6H11.1069L10.6608 8.90018H15.4466L15.8928 6H17.1069L16.6608 8.90018H19.5539L19.3693 10.1002H16.4761L15.7377 14.9002H18.6308L18.4462 16.1002H15.5531L15.1069 19H13.8928L14.3389 16.1002H9.55306L9.10693 19H7.89281L8.33894 16.1002ZM10.4761 10.1002L9.73767 14.9002H14.5236L15.262 10.1002H10.4761Z\",fill:\"currentColor\"})})}));ZH.displayName=\"ForwardRef(HashIcon)\";const DH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"heart-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));DH.displayName=\"ForwardRef(HeartFilledIcon)\";const zH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"heart\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 16C15.8 17.3235 12.5 20.5 12.5 20.5C12.5 20.5 9.2 17.3235 8 16C5.2 12.9118 4.5 11.7059 4.5 9.5C4.5 7.29412 6.1 5.5 8.5 5.5C10.5 5.5 11.7 6.82353 12.5 8.14706C13.3 6.82353 14.5 5.5 16.5 5.5C18.9 5.5 20.5 7.29412 20.5 9.5C20.5 11.7059 19.8 12.9118 17 16Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));zH.displayName=\"ForwardRef(HeartIcon)\";const OH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"help-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));OH.displayName=\"ForwardRef(HelpCircleIcon)\";const _H=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"highlight\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5311 13.7141L8.0245 8.22547M17.5311 13.7141L20.25 9.00478M17.5311 13.7141L16.5 15.5L13.232 16.134L12 18L11.4142 17.6485M8.0245 8.22547L10.75 3.50479M8.0245 8.22547L6.99999 9.99998L7.99998 13L6.99998 15L7.58576 15.3514M7.58576 15.3514L4.90192 20L10.0566 20L11.4142 17.6485M7.58576 15.3514L11.4142 17.6485M13 20H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_H.displayName=\"ForwardRef(HighlightIcon)\";const qH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"home\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 8.75V18.5H18.5V8.75M4.5 10L12.5 5L20.5 10M14.5 18.5V11.5H10.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qH.displayName=\"ForwardRef(HomeIcon)\";const UH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"ice-cream\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 13.5L12.5 20.5L15.5 13.5M12.5 8.26389C11.9692 7.78885 11.2684 7.5 10.5 7.5C8.84315 7.5 7.5 8.84315 7.5 10.5C7.5 12.1569 8.84315 13.5 10.5 13.5C11.2684 13.5 11.9692 13.2111 12.5 12.7361M9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5M17.5 10.5C17.5 12.1569 16.1569 13.5 14.5 13.5C12.8431 13.5 11.5 12.1569 11.5 10.5C11.5 8.84315 12.8431 7.5 14.5 7.5C16.1569 7.5 17.5 8.84315 17.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));UH.displayName=\"ForwardRef(IceCreamIcon)\";const GH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"image\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 15.5L8.79289 12.2071C9.18342 11.8166 9.81658 11.8166 10.2071 12.2071L12.8867 14.8867C13.2386 15.2386 13.7957 15.2782 14.1938 14.9796L15.1192 14.2856C15.3601 14.1049 15.6696 14.0424 15.9618 14.1154L19.5 15M5.5 6.5H19.5V18.5H5.5V6.5ZM15.5 10.5C15.5 11.0523 15.0523 11.5 14.5 11.5C13.9477 11.5 13.5 11.0523 13.5 10.5C13.5 9.94772 13.9477 9.5 14.5 9.5C15.0523 9.5 15.5 9.94772 15.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));GH.displayName=\"ForwardRef(ImageIcon)\";const YH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"image-remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 11V6.5H19.5V11M5.5 14V18.5H19.5V14M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));YH.displayName=\"ForwardRef(ImageRemoveIcon)\";const XH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"images\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 7.5H20.5V19.5H6.5V17.5M4.5 14.5L7.79289 11.2071C8.18342 10.8166 8.81658 10.8166 9.20711 11.2071L11.8867 13.8867C12.2386 14.2386 12.7957 14.2782 13.1938 13.9796L14.1192 13.2856C14.3601 13.1049 14.6696 13.0424 14.9618 13.1154L18.5 14M4.5 5.5H18.5V17.5H4.5V5.5ZM14.5 9.5C14.5 10.0523 14.0523 10.5 13.5 10.5C12.9477 10.5 12.5 10.0523 12.5 9.5C12.5 8.94772 12.9477 8.5 13.5 8.5C14.0523 8.5 14.5 8.94772 14.5 9.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));XH.displayName=\"ForwardRef(ImagesIcon)\";const KH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"info-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21 12.5C21 17.1944 17.1944 21 12.5 21C7.80558 21 4 17.1944 4 12.5C4 7.80558 7.80558 4 12.5 4C17.1944 4 21 7.80558 21 12.5ZM12 10.5V9H13V10.5H12ZM13 16V12H12V16H13Z\",fill:\"currentColor\"})})}));KH.displayName=\"ForwardRef(InfoFilledIcon)\";const JH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"info-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5V9M12.5 12V16M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));JH.displayName=\"ForwardRef(InfoOutlineIcon)\";const QH=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"inline-element\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5V20M19.5 5V20M8.5 6.5H16.5V18.5H8.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));QH.displayName=\"ForwardRef(InlineElementIcon)\";const eV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"inline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.5H19.5V18.5H12.5M12.5 6.5H5.5V18.5H12.5M12.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));eV.displayName=\"ForwardRef(InlineIcon)\";const tV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"insert-above\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 10.5556L10.5 10.5556M12.5 12.5L12.5 8.5M18.5 5.5L6.5 5.5M18.5 19.5L6.5 19.5L6.5 15.5L18.5 15.5L18.5 19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));tV.displayName=\"ForwardRef(InsertAboveIcon)\";const nV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"insert-below\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 14.5H14.5M12.5 12.5V16.5M6.5 19.5H18.5M6.5 5.5H18.5V9.5H6.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"square\",strokeLinejoin:\"round\"})})}));nV.displayName=\"ForwardRef(InsertBelowIcon)\";const rV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"italic\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.43 18H11.7276L13.4551 9.86763H12.1576L10.43 18ZM13.3043 8.29849C13.8022 8.29849 14.2095 7.89112 14.2095 7.39322C14.2095 6.89532 13.8022 6.48795 13.3043 6.48795C12.8064 6.48795 12.399 6.89532 12.399 7.39322C12.399 7.89112 12.8064 8.29849 13.3043 8.29849Z\",fill:\"currentColor\"})})}));rV.displayName=\"ForwardRef(ItalicIcon)\";const oV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"joystick\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 16V14.5H15.5V16M13.5 10.5V14.5M11.5 10.5V14.5M15.5 7.5C15.5 9.15685 14.1569 10.5 12.5 10.5C10.8431 10.5 9.5 9.15685 9.5 7.5C9.5 5.84315 10.8431 4.5 12.5 4.5C14.1569 4.5 15.5 5.84315 15.5 7.5ZM18.5 19.5H6.5C5.94772 19.5 5.5 19.0523 5.5 18.5V17.5C5.5 16.9477 5.94772 16.5 6.5 16.5H18.5C19.0523 16.5 19.5 16.9477 19.5 17.5V18.5C19.5 19.0523 19.0523 19.5 18.5 19.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));oV.displayName=\"ForwardRef(JoystickIcon)\";const iV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"json\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 5.5H9.5C8.39543 5.5 7.5 6.39543 7.5 7.5V12.5M7.5 12.5H4M7.5 12.5V17.5C7.5 18.6046 8.39543 19.5 9.5 19.5H11M14 5.5H15.5C16.6046 5.5 17.5 6.39543 17.5 7.5V12.5M17.5 12.5H21M17.5 12.5V17.5C17.5 18.6046 16.6046 19.5 15.5 19.5H14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));iV.displayName=\"ForwardRef(JsonIcon)\";const aV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"launch\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12 7.5H6.5V18.5H17.5V13M19.5 5.5L10.5 14.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 5.5H19.5V11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));aV.displayName=\"ForwardRef(LaunchIcon)\";const sV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"leave\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 15V18.5H5.5V6.5H14.5V10M9 12.5H21.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18 9L21.5 12.5L18 16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));sV.displayName=\"ForwardRef(LeaveIcon)\";const lV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"lemon\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.6569 10.3431L6.41422 14.5858C7.58579 15.7574 9.12132 16.3431 10.6569 16.3431M10.6569 10.3431L14.8995 6.1005C16.0711 7.27208 16.6569 8.80761 16.6569 10.3431M10.6569 10.3431L10.6569 16.3431M10.6569 10.3431L16.6569 10.3431M10.6569 10.3431L14.8995 14.5858M14.8995 14.5858C13.7279 15.7574 12.1924 16.3431 10.6569 16.3431M14.8995 14.5858C16.0711 13.4142 16.6569 11.8787 16.6569 10.3431M16.3137 4.68629C19.4379 7.81049 19.4379 12.8758 16.3137 16C13.1895 19.1242 8.12419 19.1242 5 16L16.3137 4.68629Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));lV.displayName=\"ForwardRef(LemonIcon)\";const cV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"link\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 12.5L12.5 14C13.281 14.781 14.719 14.781 15.5 14L18.5 11C19.281 10.219 19.281 8.78105 18.5 8L18 7.5C17.2189 6.71895 15.781 6.71895 15 7.5L13 9.5M12 15.5L10 17.5C9.21895 18.281 7.78105 18.281 7 17.5L6.5 17C5.71895 16.219 5.71896 14.781 6.5 14L9.50001 11C10.2811 10.219 11.719 10.2189 12.5 11L14 12.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));cV.displayName=\"ForwardRef(LinkIcon)\";const dV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"link-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11C19.281 10.219 19.281 8.78108 18.5 8.00003L18 7.50003C17.2189 6.71898 15.781 6.71898 15 7.50003L13 9.50003M15.5 14C14.7189 14.7811 13.281 14.7811 12.5 14M6.5 14C5.71895 14.7811 5.71894 16.219 6.49999 17L6.99999 17.5C7.78104 18.2811 9.21894 18.2811 9.99999 17.5L12 15.5M12.5 11C11.719 10.219 10.281 10.219 9.5 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));dV.displayName=\"ForwardRef(LinkRemovedIcon)\";const uV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"lock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.5 11.5V8.5C15.5 6.5 14 5.5 12.5 5.5C11 5.5 9.5 6.5 9.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));uV.displayName=\"ForwardRef(LockIcon)\";const hV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"logo-js\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20 5H5V20H20V5ZM12.5254 16.1572C12.5254 17.4189 11.7742 18.1536 10.4792 18.1536C9.24243 18.1536 8.49121 17.4189 8.45801 16.2942V16.261H9.67407V16.2859C9.69897 16.7466 9.9729 17.0703 10.4626 17.0703C10.9939 17.0703 11.272 16.7507 11.272 16.1489V12.011H12.5254V16.1572ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",fill:\"currentColor\"})})}));hV.displayName=\"ForwardRef(LogoJsIcon)\";const pV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"logo-ts\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M20 5H5V20H20V5ZM11.0769 18H9.82349V13.0444H8.02637V12.011H12.874V13.0444H11.0769V18ZM18.2893 16.2153C18.2893 17.4023 17.3679 18.1536 15.8738 18.1536C14.4419 18.1536 13.5371 17.4688 13.4666 16.4062L13.4624 16.3398H14.6702L14.6743 16.3813C14.72 16.8296 15.2056 17.1326 15.907 17.1326C16.5752 17.1326 17.0359 16.813 17.0359 16.3523V16.3481C17.0359 15.9539 16.7412 15.7339 15.9983 15.5803L15.3674 15.4517C14.1223 15.1985 13.5869 14.6174 13.5869 13.7085V13.7043C13.5869 12.592 14.5415 11.8574 15.8696 11.8574C17.2683 11.8574 18.0901 12.5962 18.1689 13.5964L18.1731 13.6504H16.9944L16.9861 13.6006C16.9155 13.1731 16.5005 12.8743 15.8696 12.8743C15.2512 12.8784 14.8403 13.1606 14.8403 13.6089V13.613C14.8403 14.0032 15.1309 14.2356 15.8364 14.3809L16.4714 14.5095C17.7373 14.771 18.2893 15.2773 18.2893 16.2112V16.2153Z\",fill:\"currentColor\"})})}));pV.displayName=\"ForwardRef(LogoTsIcon)\";const fV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"master-detail\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 9.5H10M11.5 6.5V18.5M7 12.5H10M13 9.5H18M7 15.5H10M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));fV.displayName=\"ForwardRef(MasterDetailIcon)\";const gV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"menu\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 7.5H19M6 17.5H19M6 12.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));gV.displayName=\"ForwardRef(MenuIcon)\";const mV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"mobile-device\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 6.5C7.5 5.39543 8.39543 4.5 9.5 4.5H15.5C16.6046 4.5 17.5 5.39543 17.5 6.5V18.5C17.5 19.6046 16.6046 20.5 15.5 20.5H9.5C8.39543 20.5 7.5 19.6046 7.5 18.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.5 17.5C13.5 18.0523 13.0523 18.5 12.5 18.5C11.9477 18.5 11.5 18.0523 11.5 17.5C11.5 16.9477 11.9477 16.5 12.5 16.5C13.0523 16.5 13.5 16.9477 13.5 17.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));mV.displayName=\"ForwardRef(MobileDeviceIcon)\";const wV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"moon\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.6065 16.1775C18.9417 16.387 18.234 16.5 17.5 16.5C13.634 16.5 10.5 13.366 10.5 9.5C10.5 7.54163 11.3042 5.77109 12.6004 4.50062C12.567 4.50021 12.5335 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C15.5924 20.5 18.275 18.7454 19.6065 16.1775Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wV.displayName=\"ForwardRef(MoonIcon)\";const vV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"number\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M21.0165 17.6336H3.83636V16.4336H21.0165V17.6336Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.09808 13.3967V7.508H5.74066L3.83636 8.78241V10.091L5.65277 8.88495H5.74066V13.3967H3.84125V14.5539H8.89984V13.3967H7.09808Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.81781 9.63202V9.66132H11.1069V9.62714C11.1069 8.95331 11.5756 8.49432 12.2739 8.49432C12.9575 8.49432 13.4018 8.89471 13.4018 9.50507C13.4018 9.9787 13.1528 10.3498 12.1909 11.3117L9.89594 13.5822V14.5539H14.8618V13.3869H11.7807V13.299L13.1577 11.9855C14.3491 10.843 14.7543 10.1838 14.7543 9.41229C14.7543 8.19159 13.7729 7.36639 12.3178 7.36639C10.8383 7.36639 9.81781 8.28436 9.81781 9.63202Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.6694 11.4631H18.5092C19.3198 11.4631 19.8422 11.8683 19.8422 12.4982C19.8422 13.1183 19.3295 13.5139 18.5239 13.5139C17.767 13.5139 17.2592 13.133 17.2104 12.5324H15.9262C15.9897 13.8508 17.0248 14.6955 18.5629 14.6955C20.1401 14.6955 21.2192 13.841 21.2192 12.591C21.2192 11.6584 20.6528 11.0334 19.7006 10.9211V10.8332C20.4721 10.6769 20.9457 10.0666 20.9457 9.23651C20.9457 8.12323 19.9741 7.36639 18.5434 7.36639C17.0541 7.36639 16.1118 8.17694 16.0629 9.50018H17.2983C17.3422 8.88007 17.8061 8.48456 18.4995 8.48456C19.2075 8.48456 19.6567 8.85565 19.6567 9.44159C19.6567 10.0324 19.1977 10.4182 18.4946 10.4182H17.6694V11.4631Z\",fill:\"currentColor\"})]})}));vV.displayName=\"ForwardRef(NumberIcon)\";const yV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"ok-hand\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.9957 11.5C14.8197 10.912 11.9957 9 10.4957 9C8.9957 9 5.17825 11.7674 6 13C7 14.5 9.15134 11.7256 10.4957 12C11.8401 12.2744 13 13.5 13 14.5C13 15.5 11.8401 16.939 10.4957 16.5C9.15134 16.061 8.58665 14.3415 7.4957 14C6.21272 13.5984 5.05843 14.6168 5.5 15.5C5.94157 16.3832 7.10688 17.6006 8.4957 19C9.74229 20.2561 11.9957 21.5 14.9957 20C17.9957 18.5 18.5 16.2498 18.5 13C18.5 11.5 13.7332 5.36875 11.9957 4.5C10.9957 4 10 5 10.9957 6.5C11.614 7.43149 13.5 9.27705 14 10.3751M15.5 8C15.5 8 15.3707 7.5 14.9957 6C14.4957 4 15.9957 3.5 16.4957 4.5C17.1281 5.76491 18.2872 10.9147 18.4957 13\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));yV.displayName=\"ForwardRef(OkHandIcon)\";const bV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"olist\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 7.5H19M10 12.5H19M10 17.5H19M5 18.5H7.5L7 17.5L7.5 16.5H5M5 6.5H6.5V8.5M5 8.5H6.5M6.5 8.5H8M8 13.5H6L7 11.5H5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));bV.displayName=\"ForwardRef(OlistIcon)\";const CV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"overage\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.5 11V6.5H14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 18.5L9 16L12 13L18.5 6.5M3 13.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));CV.displayName=\"ForwardRef(OverageIcon)\";const kV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"package\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13V22M12.5 13L4.5 8M12.5 13L20.5 8M8.5 5.5L16.5 10.5M4.5 8L12.5 3L20.5 8V17L12.5 22L4.5 17V8Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));kV.displayName=\"ForwardRef(PackageIcon)\";const xV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"panel-left\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 6.5H19.5V18.5H10.5M10.5 6.5H5.5V18.5H10.5M10.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xV.displayName=\"ForwardRef(PanelLeftIcon)\";const LV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"panel-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14.5 6.5H19.5V18.5H14.5M14.5 6.5H5.5V18.5H14.5M14.5 6.5V18.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));LV.displayName=\"ForwardRef(PanelRightIcon)\";const MV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pause\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 7.5H8.5V17.5H10.5V7.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H14.5V17.5H16.5V7.5Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 7.5H8.5V17.5H10.5V7.5Z\",stroke:\"currentColor\",strokeWidth:1.2}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 7.5H14.5V17.5H16.5V7.5Z\",stroke:\"currentColor\",strokeWidth:1.2})]})}));MV.displayName=\"ForwardRef(PauseIcon)\";const HV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"pin\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 14 15.5 17.5 12.5 20.5C9.5 17.5 6.5 14 6.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 10.5C14 11.3284 13.3284 12 12.5 12C11.6716 12 11 11.3284 11 10.5C11 9.67157 11.6716 9 12.5 9C13.3284 9 14 9.67157 14 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));HV.displayName=\"ForwardRef(PinIcon)\";const VV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"pin-removed\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.39787 14C8.51075 16.2897 10.5054 18.5054 12.5 20.5C14.4946 18.5054 16.4892 16.2897 17.6021 14M6.52009 11C6.50681 10.8334 6.5 10.6667 6.5 10.5C6.5 7 9 4.5 12.5 4.5C16 4.5 18.5 7 18.5 10.5C18.5 10.6667 18.4932 10.8334 18.4799 11M3 12.5H22\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));VV.displayName=\"ForwardRef(PinRemovedIcon)\";const RV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"play\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 18.5V6.5L17.5 12.5L7.5 18.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));RV.displayName=\"ForwardRef(PlayIcon)\";const SV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"plug\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.25 8.5L16.75 5M16.25 11.5L19.75 8M9.25 15.5L5.25 19.5M7.75 14L9.75 12C8.25 10 8.75 9 9.75 8C10.15 7.6 11.25 6.5 11.25 6.5L18.25 13.5C18.25 13.5 17.3825 14.3675 16.75 15C15.75 16 14.75 16.5 12.75 15L10.75 17L7.75 14Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));SV.displayName=\"ForwardRef(PlugIcon)\";const FV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"presentation\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 18H5.5V8.5H19.5V18H14.5M10.5 18L9 22M10.5 18H14.5M14.5 18L16 22M4.5 8.5H20.5V6.5H4.5V8.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));FV.displayName=\"ForwardRef(PresentationIcon)\";const EV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"progress-50\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17 12.5C17 14.9853 14.9853 17 12.5 17V8C14.9853 8 17 10.0147 17 12.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));EV.displayName=\"ForwardRef(Progress50Icon)\";const NV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"progress-75\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 17C14.9853 17 17 14.9853 17 12.5C17 10.0147 14.9853 8 12.5 8V12.5H8C8 14.9853 10.0147 17 12.5 17Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));NV.displayName=\"ForwardRef(Progress75Icon)\";const IV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"projects\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M21 17.5H14M17.5 14V21M5.5 14.5H10.5V19.5H5.5V14.5ZM14.5 5.5H19.5V10.5H14.5V5.5ZM5.5 5.5H10.5V10.5H5.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));IV.displayName=\"ForwardRef(ProjectsIcon)\";const BV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"publish\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.99997 5.50006H20M12.5 9.00005V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 14L12.5 9.00006L17.5 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));BV.displayName=\"ForwardRef(PublishIcon)\";const jV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"read-only\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 7L18 10M10 12L7 15L6 19L10 18L13 15M12 10L17 5L20 8L15 13M19 19L5 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));jV.displayName=\"ForwardRef(ReadOnlyIcon)\";const $V=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"redo\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L19 9.5L15 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));$V.displayName=\"ForwardRef(RedoIcon)\";const AV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"refresh\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 13.5C19.5 17.366 16.366 20.5 12.5 20.5C8.63401 20.5 5.5 17.366 5.5 13.5C5.5 9.63401 8.63401 6.5 12.5 6.5H15.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.5 10.5L15.5 6.5L11.5 2.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));AV.displayName=\"ForwardRef(RefreshIcon)\";const TV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"remove-circle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 12.4H17M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));TV.displayName=\"ForwardRef(RemoveCircleIcon)\";const PV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"remove\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 12.5H20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));PV.displayName=\"ForwardRef(RemoveIcon)\";const WV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"reset\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.56189 13.5L4.14285 13.9294C4.25676 14.0406 4.41017 14.1019 4.56932 14.1C4.72847 14.098 4.88032 14.0329 4.99144 13.9189L4.56189 13.5ZM9.92427 15.9243L15.9243 9.92427L15.0757 9.07574L9.07574 15.0757L9.92427 15.9243ZM9.07574 9.92426L15.0757 15.9243L15.9243 15.0757L9.92426 9.07574L9.07574 9.92426ZM19.9 12.5C19.9 16.5869 16.5869 19.9 12.5 19.9V21.1C17.2496 21.1 21.1 17.2496 21.1 12.5H19.9ZM5.1 12.5C5.1 8.41309 8.41309 5.1 12.5 5.1V3.9C7.75035 3.9 3.9 7.75035 3.9 12.5H5.1ZM12.5 5.1C16.5869 5.1 19.9 8.41309 19.9 12.5H21.1C21.1 7.75035 17.2496 3.9 12.5 3.9V5.1ZM5.15728 13.4258C5.1195 13.1227 5.1 12.8138 5.1 12.5H3.9C3.9 12.8635 3.92259 13.2221 3.9665 13.5742L5.15728 13.4258ZM12.5 19.9C9.9571 19.9 7.71347 18.6179 6.38048 16.6621L5.38888 17.3379C6.93584 19.6076 9.54355 21.1 12.5 21.1V19.9ZM4.99144 13.9189L7.42955 11.4189L6.57045 10.5811L4.13235 13.0811L4.99144 13.9189ZM4.98094 13.0706L2.41905 10.5706L1.58095 11.4294L4.14285 13.9294L4.98094 13.0706Z\",fill:\"currentColor\"})})}));WV.displayName=\"ForwardRef(ResetIcon)\";const ZV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"restore\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.88468 17C7.32466 19.1128 9.75033 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5C8.08172 4.5 4.5 8.08172 4.5 12.5V13.5M12.5 8V12.5L15.5 15.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 11L4.5 13.5L2 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));ZV.displayName=\"ForwardRef(RestoreIcon)\";const DV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"retrieve\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 14L12.5 10.5L9 14M5.5 7.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5L12.5 17.5M19.5 7.5V19.5H5.5V7.5L7.5 5.5H17.5L19.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));DV.displayName=\"ForwardRef(RetrieveIcon)\";const zV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"retry\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 9.5L10 9.5C7.51472 9.5 5.5 11.5147 5.5 14C5.5 16.4853 7.51472 18.5 10 18.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L19 9.5L15 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));zV.displayName=\"ForwardRef(RetryIcon)\";const OV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"revert\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 13.5L6 9.5L10 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));OV.displayName=\"ForwardRef(RevertIcon)\";const _V=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"robot\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 15.5V17.5M12.5 8.5V6.5M12.5 6.5C13.3284 6.5 14 5.82843 14 5C14 4.17157 13.3284 3.5 12.5 3.5C11.6716 3.5 11 4.17157 11 5C11 5.82843 11.6716 6.5 12.5 6.5ZM20.5 20.5V19.5C20.5 18.3954 19.6046 17.5 18.5 17.5H6.5C5.39543 17.5 4.5 18.3954 4.5 19.5V20.5H20.5ZM11.5 12C11.5 12.5523 11.0523 13 10.5 13C9.94772 13 9.5 12.5523 9.5 12C9.5 11.4477 9.94772 11 10.5 11C11.0523 11 11.5 11.4477 11.5 12ZM15.5 12C15.5 12.5523 15.0523 13 14.5 13C13.9477 13 13.5 12.5523 13.5 12C13.5 11.4477 13.9477 11 14.5 11C15.0523 11 15.5 11.4477 15.5 12ZM8.5 15.5H16.5C17.6046 15.5 18.5 14.6046 18.5 13.5V10.5C18.5 9.39543 17.6046 8.5 16.5 8.5H8.5C7.39543 8.5 6.5 9.39543 6.5 10.5V13.5C6.5 14.6046 7.39543 15.5 8.5 15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));_V.displayName=\"ForwardRef(RobotIcon)\";const qV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"rocket\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20.5L15.5 14M11 9.49999L4.5 12.5M9 14C9 14 7.54688 14.9531 6.5 16C5.5 17 4.5 20.5 4.5 20.5C4.5 20.5 8 19.5 9 18.5C10 17.5 11 16 11 16M9 14C9 14 10.1 9.9 12.5 7.5C15.5 4.5 20.5 4.5 20.5 4.5C20.5 4.5 20.5 9.5 17.5 12.5C15.7492 14.2508 11 16 11 16L9 14ZM16.5 9.99999C16.5 10.8284 15.8284 11.5 15 11.5C14.1716 11.5 13.5 10.8284 13.5 9.99999C13.5 9.17157 14.1716 8.49999 15 8.49999C15.8284 8.49999 16.5 9.17157 16.5 9.99999Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));qV.displayName=\"ForwardRef(RocketIcon)\";const UV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"schema\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 9.5V12.5M12.5 12.5H8.5V15.5M12.5 12.5H16.5V15.5M10.5 5.5H14.5V9.5H10.5V5.5ZM6.5 15.5H10.5V19.5H6.5V15.5ZM14.5 15.5H18.5V19.5H14.5V15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));UV.displayName=\"ForwardRef(SchemaIcon)\";const GV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"search\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15.0355 15.0355L20 20M16.5 11.5C16.5 14.2614 14.2614 16.5 11.5 16.5C8.73858 16.5 6.5 14.2614 6.5 11.5C6.5 8.73858 8.73858 6.5 11.5 6.5C14.2614 6.5 16.5 8.73858 16.5 11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));GV.displayName=\"ForwardRef(SearchIcon)\";const YV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"select\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 15L12.5 18.5L9 15M9 10L12.5 6.5L16 10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));YV.displayName=\"ForwardRef(SelectIcon)\";const XV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"share\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 10.5H18.5V19.5H6.5L6.5 10.5H10M12.5 16V3.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9 7L12.5 3.5L16 7\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));XV.displayName=\"ForwardRef(ShareIcon)\";const KV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sort\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 18.5V6M16.5 19V6.5M12 15L8.5 18.5L5 15M13 10L16.5 6.5L20 10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));KV.displayName=\"ForwardRef(SortIcon)\";const JV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sparkle\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 10.5C8.5 12.5 5 12.5 5 12.5C5 12.5 8.5 12.5 10.5 14.5C12.5 16.5 12.5 20 12.5 20C12.5 20 12.5 16.5 14.5 14.5C16.5 12.5 20 12.5 20 12.5C20 12.5 16.5 12.5 14.5 10.5C12.5 8.5 12.5 5 12.5 5C12.5 5 12.5 8.5 10.5 10.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));JV.displayName=\"ForwardRef(SparkleIcon)\";const QV=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sparkles\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 3.5V5M11 5V6.5M11 5H12.5M11 5H9.5M9.5 15C9.5 15 12.2308 14.7692 13.5 13.5C14.7692 12.2308 15 9.5 15 9.5C15 9.5 15.2308 12.2308 16.5 13.5C17.7692 14.7692 20.5 15 20.5 15C20.5 15 17.7692 15.2308 16.5 16.5C15.2308 17.7692 15 20.5 15 20.5C15 20.5 14.7692 17.7692 13.5 16.5C12.2308 15.2308 9.5 15 9.5 15ZM4.5 10C4.5 10 5.72308 9.87692 6.3 9.3C6.87692 8.72308 7 7.5 7 7.5C7 7.5 7.12308 8.72308 7.7 9.3C8.27692 9.87692 9.5 10 9.5 10C9.5 10 8.27692 10.1231 7.7 10.7C7.12308 11.2769 7 12.5 7 12.5C7 12.5 6.87692 11.2769 6.3 10.7C5.72308 10.1231 4.5 10 4.5 10Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinecap:\"round\",strokeLinejoin:\"round\"})})}));QV.displayName=\"ForwardRef(SparklesIcon)\";const eR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"spinner\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 12.5C4.5 16.9183 8.08172 20.5 12.5 20.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 8.08172 16.9183 4.5 12.5 4.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));eR.displayName=\"ForwardRef(SpinnerIcon)\";const tR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"split-horizontal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 10.5V20.5H5.5V10.5M19.5 10.5H5.5M19.5 10.5V4.5H5.5V10.5M12.5 13V15.5M12.5 18V15.5M12.5 15.5H15M12.5 15.5H10\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));tR.displayName=\"ForwardRef(SplitHorizontalIcon)\";const nR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"split-vertical\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.5 5.5V19.5M13 12.5H15.5M18 12.5H15.5M15.5 12.5V15M15.5 12.5V10M4.5 5.5H20.5V19.5H4.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));nR.displayName=\"ForwardRef(SplitVerticalIcon)\";const rR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"square\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:5.5,y:5.5,width:14,height:14,stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));rR.displayName=\"ForwardRef(SquareIcon)\";const oR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stack-compact\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 15.5V18.5H19.5V15.5M5.5 15.5H19.5M5.5 15.5V9.5M19.5 15.5V9.5M5.5 9.5V6.5H19.5V9.5M5.5 9.5H19.5M5.5 12.5H19.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));oR.displayName=\"ForwardRef(StackCompactIcon)\";const iR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stack\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 12.5H19.5M5.5 18.5H19.5V6.5H5.5V18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));iR.displayName=\"ForwardRef(StackIcon)\";const aR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"star-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5L14.522 10.217L20.1085 10.5279L15.7716 14.063L17.2023 19.4721L12.5 16.44L7.79772 19.4721L9.22837 14.063L4.89155 10.5279L10.478 10.217L12.5 5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeLinejoin:\"round\"})})}));aR.displayName=\"ForwardRef(StarFilledIcon)\";const sR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"star\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 5L14.522 10.217L20.1085 10.5279L15.7716 14.063L17.2023 19.4721L12.5 16.44L7.79772 19.4721L9.22837 14.063L4.89155 10.5279L10.478 10.217L12.5 5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));sR.displayName=\"ForwardRef(StarIcon)\";const lR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"stop\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:7.5,y:7.5,width:10,height:10,fill:\"currentColor\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));lR.displayName=\"ForwardRef(StopIcon)\";const cR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"strikethrough\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5656 7.73438C11.0656 7.73438 10.0734 8.48438 10.0734 9.625C10.0734 10.2317 10.3649 10.6613 11.0519 11H8.90358C8.71703 10.6199 8.62813 10.1801 8.62813 9.67188C8.62813 7.75781 10.2297 6.46094 12.6125 6.46094C14.7922 6.46094 16.4172 7.75781 16.5344 9.57812H15.1203C14.925 8.42188 13.9719 7.73438 12.5656 7.73438Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.4875 18.2656C10.0969 18.2656 8.44844 17 8.3 15.0547H9.72188C9.89375 16.2344 11.0188 16.9844 12.6203 16.9844C14.1359 16.9844 15.2531 16.1641 15.2531 15.0469C15.2531 14.6375 15.1255 14.292 14.8589 14H16.5912C16.6638 14.266 16.6984 14.5566 16.6984 14.875C16.6984 16.9453 15.0656 18.2656 12.4875 18.2656Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 13.1H18V11.9H7V13.1Z\",fill:\"currentColor\"})]})}));cR.displayName=\"ForwardRef(StrikethroughIcon)\";const dR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"string\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11.6748 15.5227H13.1855L9.87842 6.36304H8.34863L5.0415 15.5227H6.50146L7.3457 13.0916H10.8369L11.6748 15.5227ZM9.04053 8.02612H9.14844L10.4751 11.8982H7.70752L9.04053 8.02612Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.8101 14.488C16.0674 14.488 15.5278 14.1262 15.5278 13.5042C15.5278 12.8948 15.9595 12.571 16.9116 12.5076L18.6001 12.3997V12.9773C18.6001 13.8342 17.8384 14.488 16.8101 14.488ZM16.4609 15.637C17.3687 15.637 18.124 15.2434 18.5366 14.5515H18.6445V15.5227H19.9585V10.8C19.9585 9.34009 18.981 8.47681 17.248 8.47681C15.6802 8.47681 14.563 9.23853 14.4233 10.4255H15.7437C15.896 9.93677 16.4229 9.65747 17.1846 9.65747C18.1177 9.65747 18.6001 10.0701 18.6001 10.8V11.3967L16.7275 11.5046C15.0835 11.6062 14.1567 12.3235 14.1567 13.5676C14.1567 14.8308 15.1279 15.637 16.4609 15.637Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M19.9585 18.637L5.0415 18.637V17.437L19.9585 17.437V18.637Z\",fill:\"currentColor\"})]})}));dR.displayName=\"ForwardRef(StringIcon)\";const uR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"sun\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19 12.5H22M3 12.5H6M12.5 6V3M12.5 22V19M17.3891 7.61091L19.5104 5.48959M5.48959 19.5104L7.61091 17.3891M7.61091 7.61091L5.48959 5.48959M19.5104 19.5104L17.3891 17.3891M16 12.5C16 14.433 14.433 16 12.5 16C10.567 16 9 14.433 9 12.5C9 10.567 10.567 9 12.5 9C14.433 9 16 10.567 16 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));uR.displayName=\"ForwardRef(SunIcon)\";const hR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"sync\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13.5 4.5H12.5C8.08172 4.5 4.5 8.08172 4.5 12.5C4.5 15.6631 6.33576 18.3975 9 19.6958M11.5 20.5H12.5C16.9183 20.5 20.5 16.9183 20.5 12.5C20.5 9.33688 18.6642 6.60253 16 5.30423\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));hR.displayName=\"ForwardRef(SyncIcon)\";const pR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"tablet-device\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5.5 5.5C5.5 4.94772 5.94772 4.5 6.5 4.5H18.5C19.0523 4.5 19.5 4.94772 19.5 5.5V19.5C19.5 20.0523 19.0523 20.5 18.5 20.5H6.5C5.94772 20.5 5.5 20.0523 5.5 19.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M13 18C13 18.2761 12.7761 18.5 12.5 18.5C12.2239 18.5 12 18.2761 12 18C12 17.7239 12.2239 17.5 12.5 17.5C12.7761 17.5 13 17.7239 13 18Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));pR.displayName=\"ForwardRef(TabletDeviceIcon)\";const fR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"tag\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 20L5 20L5 12.5L12.5 5L20 12.5L12.5 20Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M11 15.5C11 16.3284 10.3284 17 9.5 17C8.67157 17 8 16.3284 8 15.5C8 14.6716 8.67157 14 9.5 14C10.3284 14 11 14.6716 11 15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));fR.displayName=\"ForwardRef(TagIcon)\";const gR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"tags\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.1562 7.93179L13.9717 6.11633L20.3553 12.5L13.9717 18.8836L10.6855 18.8836M11.0283 18.8836L17.4119 12.5L11.0283 6.11633L4.64462 12.5L4.64462 18.8836L11.0283 18.8836ZM9.75153 15.0534C9.75153 15.7585 9.17992 16.3302 8.47481 16.3302C7.76969 16.3302 7.19808 15.7585 7.19808 15.0534C7.19808 14.3483 7.76969 13.7767 8.47481 13.7767C9.17992 13.7767 9.75153 14.3483 9.75153 15.0534Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));gR.displayName=\"ForwardRef(TagsIcon)\";const mR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"task\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.88281 10.75V19.75H20.8828V10.75M4.88281 10.75V5.75H20.8828V10.75M4.88281 10.75H12.8828H20.8828M17.8828 8.25V3.25M7.88281 8.25V3.25\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10.083 14.7358L12.083 16.7358L15.683 13.1758\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));mR.displayName=\"ForwardRef(TaskIcon)\";const wR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"terminal\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8.5 9.5L11.5 12.5L8.5 15.5M13 15.5H17M5.5 6.5H19.5V18.5H5.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));wR.displayName=\"ForwardRef(TerminalIcon)\";const vR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"text\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 9V6.5H17.5V9M12.5 18.5V6.5M10 18.5H15\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));vR.displayName=\"ForwardRef(TextIcon)\";const yR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"th-large\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.5V12.5M12.5 12.5V18.5M12.5 12.5H20.5M12.5 12.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));yR.displayName=\"ForwardRef(ThLargeIcon)\";const bR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"th-list\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 6.5V10.5M9.5 10.5V14.5M9.5 10.5H20.5M9.5 10.5H4.5M9.5 14.5V18.5M9.5 14.5H20.5M9.5 14.5H4.5M4.5 6.5H20.5V18.5H4.5V6.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));bR.displayName=\"ForwardRef(ThListIcon)\";const CR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"tiers\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16.5 14.5L20.5 16.5L12.5 20.5L4.5 16.5L8.5 14.5M16.5 10.5L20.5 12.5L12.5 16.5L4.5 12.5L8.5 10.5M12.5 12.5L20.5 8.5L12.5 4.5L4.5 8.5L12.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));CR.displayName=\"ForwardRef(TiersIcon)\";const kR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"toggle-arrow-right\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 16.5V8.5L16 12.5L10 16.5Z\",fill:\"currentColor\",stroke:\"currentColor\",strokeLinejoin:\"round\"})})}));kR.displayName=\"ForwardRef(ToggleArrowRightIcon)\";const xR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"token\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5711 12.5C17.5711 15.2614 15.3325 17.5 12.5711 17.5M7.57107 12.5C7.57107 9.73858 9.80964 7.5 12.5711 7.5M20.5 12.5C20.5 16.9183 16.9183 20.5 12.5 20.5C8.08172 20.5 4.5 16.9183 4.5 12.5C4.5 8.08172 8.08172 4.5 12.5 4.5C16.9183 4.5 20.5 8.08172 20.5 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));xR.displayName=\"ForwardRef(TokenIcon)\";const LR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"transfer\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M19.5 16.5H6M5.5 8.5L19 8.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M16 13L19.5 16.5L16 20M9 12L5.5 8.5L9 5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));LR.displayName=\"ForwardRef(TransferIcon)\";const MR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"translate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M9.4 5.4H4V6.6H13.2189C13.1612 6.78478 13.0895 6.99578 13.0025 7.22211C12.7032 8.00031 12.2402 8.91125 11.5757 9.57574L10 11.1515L9.42426 10.5757C8.72102 9.8725 8.25297 9.16987 7.96199 8.64611C7.81668 8.38455 7.71617 8.16874 7.65305 8.02146C7.62151 7.94787 7.59937 7.89154 7.5857 7.85534C7.57886 7.83725 7.57415 7.8242 7.57144 7.81657L7.56886 7.80922C7.56886 7.80922 7.56921 7.81026 7 8C6.43079 8.18974 6.43091 8.19009 6.43091 8.19009L6.43133 8.19135L6.43206 8.19351L6.4341 8.19948L6.44052 8.21786C6.44587 8.23292 6.45336 8.25357 6.46313 8.27942C6.48266 8.33112 6.5113 8.40369 6.55008 8.49416C6.62758 8.67501 6.74582 8.92795 6.91301 9.22889C7.24703 9.83013 7.77898 10.6275 8.57574 11.4243L9.15147 12L4.57964 16.5718L4.57655 16.5749L4.57577 16.5757L5.4243 17.4242L5.42688 17.4216L10.0368 12.8117L12.6159 14.9609L13.3841 14.0391L10.8888 11.9597L12.4243 10.4243C13.2598 9.58875 13.7968 8.49969 14.1225 7.65289C14.2818 7.23863 14.395 6.87072 14.4696 6.6H16V5.4H10.6V4H9.4V5.4ZM17.4405 10L21.553 19.7672H20.2509L19.1279 17.1H14.8721L13.7491 19.7672H12.447L16.5595 10H17.4405ZM15.3773 15.9H18.6227L17 12.0462L15.3773 15.9Z\",fill:\"currentColor\"})})}));MR.displayName=\"ForwardRef(TranslateIcon)\";const HR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"trash\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 6.5H20M10 6.5V4.5C10 3.94772 10.4477 3.5 11 3.5H14C14.5523 3.5 15 3.94772 15 4.5V6.5M12.5 9V17M15.5 9L15 17M9.5 9L10 17M18.5 6.5L17.571 18.5767C17.5309 19.0977 17.0965 19.5 16.574 19.5H8.42603C7.90349 19.5 7.46905 19.0977 7.42898 18.5767L6.5 6.5H18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));HR.displayName=\"ForwardRef(TrashIcon)\";const VR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"trend-upward\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 18.5L11.5 10.5L13.5 14.5L20.5 6.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 11V6.5H16\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));VR.displayName=\"ForwardRef(TrendUpwardIcon)\";const RR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"triangle-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M20.5 18.5H4.5L12.5 5.5L20.5 18.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));RR.displayName=\"ForwardRef(TriangleOutlineIcon)\";const SR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"trolley\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 17.5L5.81763 6.26772C5.71013 5.81757 5.30779 5.5 4.84498 5.5H3M8 17.5H17M8 17.5C8.82843 17.5 9.5 18.1716 9.5 19C9.5 19.8284 8.82843 20.5 8 20.5C7.17157 20.5 6.5 19.8284 6.5 19C6.5 18.1716 7.17157 17.5 8 17.5ZM17 17.5C17.8284 17.5 18.5 18.1716 18.5 19C18.5 19.8284 17.8284 20.5 17 20.5C16.1716 20.5 15.5 19.8284 15.5 19C15.5 18.1716 16.1716 17.5 17 17.5ZM7.78357 14.5H17.5L19 7.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));SR.displayName=\"ForwardRef(TrolleyIcon)\";const FR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"truncate\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 12.5H20M8.5 19.5L12.5 15.5L16.5 19.5M16.5 5.5L12.5 9.5L8.5 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));FR.displayName=\"ForwardRef(TruncateIcon)\";const ER=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"twitter\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M18.8738 6.65751C18.1994 5.9447 17.2445 5.5 16.1857 5.5C14.1423 5.5 12.4857 7.15655 12.4857 9.2C12.4857 9.55263 12.535 9.89374 12.6272 10.2168C7.0826 9.56422 4.55703 6.02857 4.55703 6.02857C4.55703 6.02857 4.02846 9.2 6.14274 11.3143C5.08571 11.3143 4.55703 10.7857 4.55703 10.7857C4.55703 10.7857 4.55703 13.4286 7.19989 14.4857C6.67143 15.0143 5.61417 14.4857 5.61417 14.4857C5.97533 15.9303 7.45606 16.8562 8.82133 17.1358C6.67298 19.1676 3.5 18.7143 3.5 18.7143C5.14562 19.771 7.21334 20.3 9.31429 20.3C16.1214 20.3 19.8162 15.6315 19.8848 9.37762C20.8722 8.58943 22 7.08571 22 7.08571C22 7.08571 21.277 7.45458 19.6913 7.98315C21.277 6.92601 21.4714 5.5 21.4714 5.5C21.4714 5.5 20.4135 6.55789 18.8738 6.65751Z\",fill:\"currentColor\"})})}));ER.displayName=\"ForwardRef(TwitterIcon)\";const NR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"ulist\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 17.5001C7.10153 17.8323 6.83221 18.1016 6.5 18.1016C6.16778 18.1016 5.89847 17.8323 5.89847 17.5001C5.89847 17.1678 6.16778 16.8985 6.5 16.8985C6.83221 16.8985 7.10153 17.1678 7.10153 17.5001Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 7.5C7.10153 7.83221 6.83221 8.10153 6.5 8.10153C6.16778 8.10153 5.89847 7.83221 5.89847 7.5C5.89847 7.16778 6.16778 6.89847 6.5 6.89847C6.83221 6.89847 7.10153 7.16778 7.10153 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.10153 12.5C7.10153 12.8322 6.83221 13.1015 6.5 13.1015C6.16778 13.1015 5.89847 12.8322 5.89847 12.5C5.89847 12.1678 6.16778 11.8985 6.5 11.8985C6.83221 11.8985 7.10153 12.1678 7.10153 12.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 7.5H19M10 17.5H19M10 12.5H19\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));NR.displayName=\"ForwardRef(UlistIcon)\";const IR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"unarchive\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 10.5V18M20.5 7.5V20.5H4.5V7.5L7.5 4.5H17.5L20.5 7.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M4.5 7.5H20.5M16 14L12.5 10.5L9 14\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));IR.displayName=\"ForwardRef(UnarchiveIcon)\";const BR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"underline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.52791 7.11407H8.17V14.2582C8.17 16.5817 9.79195 18.2565 12.4927 18.2565C15.1934 18.2565 16.8154 16.5817 16.8154 14.2582V7.11407H15.4574V14.1677C15.4574 15.8122 14.3787 17.0042 12.4927 17.0042C10.6067 17.0042 9.52791 15.8122 9.52791 14.1677V7.11407Z\",fill:\"currentColor\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7 20.5H18\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));BR.displayName=\"ForwardRef(UnderlineIcon)\";const jR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"undo\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M6 9.5L15 9.5C17.4853 9.5 19.5 11.5147 19.5 14C19.5 16.4853 17.4853 18.5 15 18.5H6\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M10 13.5L6 9.5L10 5.5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));jR.displayName=\"ForwardRef(UndoIcon)\";const $R=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unknown\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 13C12.5 11 14 11.5 14 10C14 9.34375 13.5 8.5 12.5 8.5C11.5 8.5 11 9 10.5 9.5M12.5 16V14.5M5.5 5.5H19.5V19.5H5.5V5.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));$R.displayName=\"ForwardRef(UnknownIcon)\";const AR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unlink\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M15 13.5L17.5 11C18.281 10.219 18.281 8.78105 17.5 8L17 7.5C16.2189 6.71895 14.781 6.71895 14 7.5L11.5 10M10 11.5L7.5 14C6.71896 14.781 6.71895 16.219 7.5 17L8 17.5C8.78105 18.281 10.2189 18.281 11 17.5L13.5 15M9.5 8V5M8 9.5H5M17 15.5H20M15.5 17V20\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));AR.displayName=\"ForwardRef(UnlinkIcon)\";const TR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"unlock\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M9.5 11.5V8.5C9.5 6.5 8 5.5 6.5 5.5C5 5.5 3.5 6.5 3.5 8.5V11.5M7.5 11.5H17.5V19.5H7.5V11.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));TR.displayName=\"ForwardRef(UnlockIcon)\";const PR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"unpublish\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M5 19.5H20M12.5 16V5\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 11L12.5 16L7.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));PR.displayName=\"ForwardRef(UnpublishIcon)\";const WR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(n,r){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\",{\"data-sanity-icon\":\"upload\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:r,...n,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 6.00003V15.5M5.5 15.5H19.5V19.5H5.5V15.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M7.5 11L12.5 6.00003L17.5 11\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})]})}));WR.displayName=\"ForwardRef(UploadIcon)\";const ZR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"user\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M8 14.5C7 15 5.5 16 5.5 19.5H19.5C19.5 16 18.3416 15.1708 17 14.5C16 14 14 14 14 12.5C14 11 15 10.25 15 8.25C15 6.25 14 5.25 12.5 5.25C11 5.25 10 6.25 10 8.25C10 10.25 11 11 11 12.5C11 14 9 14 8 14.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));ZR.displayName=\"ForwardRef(UserIcon)\";const DR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"users\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.5 18.5H21.5C21.5 15 20.8416 14.1708 19.5 13.5C18.5 13 16.5 12.5 16.5 11C16.5 9.5 17.5 9 17.5 7C17.5 5 16.5 4 15 4C13.6628 4 12.723 4.79472 12.5347 6.38415M4.5 20.5C4.5 17 5.5 16 6.5 15.5C7.5 15 9.5 14.5 9.5 13C9.5 11.5 8.5 11 8.5 9C8.5 7 9.5 6 11 6C12.5 6 13.5 7 13.5 9C13.5 11 12.5 11.5 12.5 13C12.5 14.5 14.5 15 15.5 15.5C16.8416 16.1708 17.5 17 17.5 20.5H4.5Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));DR.displayName=\"ForwardRef(UsersIcon)\";const zR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"warning-filled\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{fillRule:\"evenodd\",clipRule:\"evenodd\",d:\"M14.741 5.12637C13.7357 3.41737 11.2643 3.41737 10.259 5.12637L3.7558 16.1818C2.73624 17.915 3.98595 20.1 5.99683 20.1H19.0032C21.014 20.1 22.2637 17.915 21.2442 16.1818L14.741 5.12637ZM11.9 9V13H13.1V9H11.9ZM13.1 16V14.5H11.9V16H13.1Z\",fill:\"currentColor\"})})}));zR.displayName=\"ForwardRef(WarningFilledIcon)\";const OR=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"warning-outline\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M12.5 9V13M12.5 16V14.5M14.2239 5.43058L20.727 16.486C21.5113 17.8192 20.55 19.5 19.0032 19.5H5.99683C4.45 19.5 3.48869 17.8192 4.27297 16.486L10.7761 5.43058C11.5494 4.11596 13.4506 4.11596 14.2239 5.43058Z\",stroke:\"currentColor\",strokeWidth:1.2,strokeLinejoin:\"round\"})})}));OR.displayName=\"ForwardRef(WarningOutlineIcon)\";const _R=(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{\"data-sanity-icon\":\"wrench\",width:\"1em\",height:\"1em\",viewBox:\"0 0 25 25\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",ref:n,...t,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\",{d:\"M17.0407 5.14624L17.4649 5.57051C17.6166 5.41887 17.6758 5.19783 17.6202 4.99071C17.5646 4.78359 17.4027 4.62189 17.1955 4.56656L17.0407 5.14624ZM14.4013 7.7856L13.9771 7.36134C13.8288 7.50959 13.7687 7.72447 13.8185 7.92813L14.4013 7.7856ZM12.8778 6.26211L12.4535 5.83784L12.4535 5.83784L12.8778 6.26211ZM11.8309 10.6568L12.2552 11.0811C12.4152 10.9211 12.4716 10.6847 12.401 10.4697L11.8309 10.6568ZM5.63925 16.8485L5.21498 16.4242L5.21498 16.4242L5.63925 16.8485ZM5.63925 19.935L6.06351 19.5108L6.06351 19.5108L5.63925 19.935ZM8.72581 19.935L9.15007 20.3593L9.15007 20.3593L8.72581 19.935ZM15.1184 13.5425L15.2301 12.953C15.0351 12.916 14.8344 12.9779 14.6941 13.1182L15.1184 13.5425ZM18.9718 12.3561L18.5475 11.9318L18.5475 11.9318L18.9718 12.3561ZM20.0877 8.19324L20.6674 8.03843C20.612 7.83124 20.4503 7.66934 20.2432 7.61375C20.0361 7.55816 19.815 7.61734 19.6634 7.76897L20.0877 8.19324ZM17.4483 10.8326L17.3058 11.4154C17.5094 11.4652 17.7243 11.4051 17.8726 11.2569L17.4483 10.8326ZM15 10.2339L14.4172 10.3764C14.4704 10.5938 14.6401 10.7635 14.8575 10.8167L15 10.2339ZM16.6164 4.72198L13.9771 7.36134L14.8256 8.20986L17.4649 5.57051L16.6164 4.72198ZM13.3021 6.68637C14.2723 5.71612 15.6467 5.39501 16.8859 5.72593L17.1955 4.56656C15.5595 4.12966 13.7389 4.55245 12.4535 5.83784L13.3021 6.68637ZM12.401 10.4697C11.9779 9.18109 12.2794 7.70907 13.3021 6.68637L12.4535 5.83784C11.0986 7.19284 10.7021 9.14217 11.2608 10.844L12.401 10.4697ZM11.4066 10.2326L5.21498 16.4242L6.06351 17.2727L12.2552 11.0811L11.4066 10.2326ZM5.21498 16.4242C4.12834 17.5109 4.12834 19.2727 5.21498 20.3593L6.06351 19.5108C5.4455 18.8928 5.4455 17.8908 6.06351 17.2727L5.21498 16.4242ZM5.21498 20.3593C6.30163 21.446 8.06343 21.446 9.15007 20.3593L8.30155 19.5108C7.68353 20.1288 6.68153 20.1288 6.06351 19.5108L5.21498 20.3593ZM9.15007 20.3593L15.5426 13.9668L14.6941 13.1182L8.30155 19.5108L9.15007 20.3593ZM18.5475 11.9318C17.6463 12.8331 16.3968 13.1742 15.2301 12.953L15.0066 14.132C16.5466 14.4239 18.2023 13.9741 19.3961 12.7804L18.5475 11.9318ZM19.508 8.34804C19.8389 9.58721 19.5178 10.9616 18.5475 11.9318L19.3961 12.7804C20.6815 11.495 21.1043 9.67445 20.6674 8.03843L19.508 8.34804ZM17.8726 11.2569L20.5119 8.6175L19.6634 7.76897L17.024 10.4083L17.8726 11.2569ZM14.8575 10.8167L17.3058 11.4154L17.5908 10.2498L15.1426 9.65106L14.8575 10.8167ZM13.8185 7.92813L14.4172 10.3764L15.5829 10.0914L14.9841 7.64307L13.8185 7.92813Z\",fill:\"currentColor\"})})}));_R.displayName=\"ForwardRef(WrenchIcon)\";const qR={\"access-denied\":KL,activity:JL,\"add-circle\":QL,\"add-comment\":eM,\"add-document\":tM,add:nM,\"add-user\":rM,api:oM,archive:iM,\"arrow-down\":aM,\"arrow-left\":sM,\"arrow-right\":lM,\"arrow-top-right\":cM,\"arrow-up\":dM,asterisk:uM,\"bar-chart\":hM,basket:pM,bell:fM,bill:gM,\"binary-document\":mM,\"block-content\":wM,\"block-element\":vM,blockquote:yM,bold:bM,bolt:CM,book:kM,bottle:xM,\"bulb-filled\":LM,\"bulb-outline\":MM,calendar:HM,case:VM,\"chart-upward\":RM,\"checkmark-circle\":SM,checkmark:FM,\"chevron-down\":EM,\"chevron-left\":NM,\"chevron-right\":IM,\"chevron-up\":BM,circle:jM,clipboard:$M,\"clipboard-image\":AM,clock:TM,\"close-circle\":PM,close:WM,\"code-block\":ZM,code:DM,cog:zM,collapse:OM,\"color-wheel\":_M,comment:qM,component:UM,compose:GM,confetti:YM,controls:XM,copy:KM,\"credit-card\":JM,crop:QM,cube:eH,dashboard:tH,database:nH,desktop:rH,diamond:oH,document:iH,\"document-pdf\":aH,\"document-remove\":sH,\"document-sheet\":lH,\"document-text\":cH,\"document-video\":dH,\"document-word\":uH,\"document-zip\":hH,documents:pH,dot:fH,\"double-chevron-down\":gH,\"double-chevron-left\":mH,\"double-chevron-right\":wH,\"double-chevron-up\":vH,download:yH,\"drag-handle\":bH,drop:CH,\"earth-americas\":kH,\"earth-globe\":xH,edit:LH,\"ellipsis-horizontal\":MH,\"ellipsis-vertical\":HH,empty:VH,enter:RH,\"enter-right\":SH,envelope:FH,equal:EH,\"error-filled\":NH,\"error-outline\":IH,expand:BH,\"eye-closed\":jH,\"eye-open\":$H,filter:AH,folder:TH,generate:PH,groq:WH,hash:ZH,\"heart-filled\":DH,heart:zH,\"help-circle\":OH,highlight:_H,home:qH,\"ice-cream\":UH,image:GH,\"image-remove\":YH,images:XH,\"info-filled\":KH,\"info-outline\":JH,\"inline-element\":QH,inline:eV,\"insert-above\":tV,\"insert-below\":nV,italic:rV,joystick:oV,json:iV,launch:aV,leave:sV,lemon:lV,link:cV,\"link-removed\":dV,lock:uV,\"logo-js\":hV,\"logo-ts\":pV,\"master-detail\":fV,menu:gV,\"mobile-device\":mV,moon:wV,number:vV,\"ok-hand\":yV,olist:bV,overage:CV,package:kV,\"panel-left\":xV,\"panel-right\":LV,pause:MV,pin:HV,\"pin-removed\":VV,play:RV,plug:SV,presentation:FV,\"progress-50\":EV,\"progress-75\":NV,projects:IV,publish:BV,\"read-only\":jV,redo:$V,refresh:AV,\"remove-circle\":TV,remove:PV,reset:WV,restore:ZV,retrieve:DV,retry:zV,revert:OV,robot:_V,rocket:qV,schema:UV,search:GV,select:YV,share:XV,sort:KV,sparkle:JV,sparkles:QV,spinner:eR,\"split-horizontal\":tR,\"split-vertical\":nR,square:rR,\"stack-compact\":oR,stack:iR,\"star-filled\":aR,star:sR,stop:lR,strikethrough:cR,string:dR,sun:uR,sync:hR,\"tablet-device\":pR,tag:fR,tags:gR,task:mR,terminal:wR,text:vR,\"th-large\":yR,\"th-list\":bR,tiers:CR,\"toggle-arrow-right\":kR,token:xR,transfer:LR,translate:MR,trash:HR,\"trend-upward\":VR,\"triangle-outline\":RR,trolley:SR,truncate:FR,twitter:ER,ulist:NR,unarchive:IR,underline:BR,undo:jR,unknown:$R,unlink:AR,unlock:TR,unpublish:PR,upload:WR,user:ZR,users:DR,\"warning-filled\":zR,\"warning-outline\":OR,wrench:_R};function UR(t){if(!t)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(eH,{});if(\"string\"===t.type)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dR,{});if(\"number\"===t.type)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vV,{});const{value:n}=t;if(\"icon\"in t&&t.icon)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{dangerouslySetInnerHTML:{__html:t.icon}});const{type:r}=n;if(\"string\"===r)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dR,{});if(\"boolean\"===r)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(SM,{});if(\"number\"===r)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vV,{});if(\"array\"===r||\"union\"===r)return(Array.isArray(n.of)?n.of:[n.of]).some((e=>\"name\"in e&&\"block\"===e.name))?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wM,{}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bR,{});if(\"object\"===r){if(\"image\"===t.name)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(GH,{});if(\"block\"===t.name)return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dR,{})}return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(eH,{})}(0,react__WEBPACK_IMPORTED_MODULE_1__.forwardRef)((function(t,n){const{symbol:r,...o}=t,i=qR[r];return i?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(i,{...o,ref:n}):null})).displayName=\"ForwardRef(Icon)\";const GR=zo.div`\n  height: 100%;\n  inset: 0;\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n  pointer-events: all;\n  position: fixed;\n  width: 100%;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n  &:before {\n    content: '';\n    display: block;\n    height: 101%;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: -1;\n  }\n`,YR=zo.div`\n  background: transparent;\n  height: 100%;\n  inset: 0;\n  position: absolute;\n  width: 100%;\n`,XR=n=>{const{children:r,onDismiss:o}=n;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(tx,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(GR,{\"data-sanity-overlay-element\":!0,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(YR,{onClickCapture:o}),r]})})},KR=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);function JR(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(KR);if(!e)throw new Error(\"Schema context is missing\");return e}function QR(e,t){if(!e.type)throw new Error(\"Node type is missing\");return()=>t.patch((({snapshot:t})=>{const{path:n,key:r}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.b)(e),o=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.e)(t,n).findIndex((e=>e._key===r));return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(n,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.truncate)(o,o+1))]}))}function eS(e,t,n,r){if(!e.type)throw new Error(\"Node type is missing\");return()=>t.patch((()=>{const{path:t,key:o}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.b)(e),i=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.f)();return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(t,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)([{_type:n,_key:i}],r,{_key:o}))]}))}function tS(e,t,n){if(!e.type)throw new Error(\"Node type is missing\");const{path:r,key:o}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.b)(e),i=t.get(r),a=t.get(e.path),s=i.findIndex((e=>e._key===o));let l=-1,c=\"before\";if(\"first\"===n){if(0===s)return[];l=0,c=\"before\"}else if(\"last\"===n){if(s===i.length-1)return[];l=-1,c=\"after\"}else if(\"next\"===n){if(s===i.length-1)return[];l=s,c=\"after\"}else if(\"previous\"===n){if(0===s)return[];l=s-1,c=\"before\"}return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(r,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.truncate)(s,s+1)),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(r,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(a,c,l))]}function nS(e,t){if(!e.type)throw new Error(\"Node type is missing\");return()=>t.patch((({snapshot:t})=>{const{path:n,key:r}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.b)(e),o={...(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.e)(t,e.path),_key:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.f)()};return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(n,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(o,\"after\",{_key:r}))]}))}function rS(e){const{node:t,field:n,parent:r,doc:o}=e;return\"arrayItem\"===n?.type?function(e){const{node:t,field:n,doc:r}=e,o=[];return o.push(...oS(e)),o.push(...iS(e)),o.push(...aS(e)),o.push({type:\"action\",label:\"Insert before\",icon:tV,action:eS(t,r,n.name,\"before\")}),o.push({type:\"action\",label:\"Insert after\",icon:nV,action:eS(t,r,n.name,\"after\")}),o}({node:t,field:n,doc:o}):\"union\"===r?.type?function(e){const{doc:t,node:n,parent:r}=e,o=[];return o.push(...oS(e)),o.push(...iS(e)),o.push(...aS(e)),o.push({type:\"group\",label:\"Insert before\",icon:tV,items:r.of.filter((e=>\"unionOption\"===e.type)).map((e=>({type:\"action\",icon:UR(e),label:\"block\"===e.name?\"Paragraph\":e.title||e.name,action:eS(n,t,e.name,\"before\")})))}),o.push({type:\"group\",label:\"Insert after\",icon:nV,items:r.of.filter((e=>\"unionOption\"===e.type)).map((e=>({type:\"action\",label:\"block\"===e.name?\"Paragraph\":e.title||e.name,icon:UR(e),action:()=>eS(n,t,e.name,\"after\")})))}),o}({node:t,parent:r,doc:o}):[]}function oS(e){const{node:t,doc:n}=e;return n?[{type:\"action\",label:\"Duplicate\",icon:KM,action:nS(t,n)}]:[]}function iS(e){const{node:t,doc:n}=e;return n?[{type:\"action\",label:\"Remove\",icon:PV,action:QR(t,n)}]:[]}function aS(e,t=!0){const{node:n,doc:r}=e;if(!r)return[];const o=[],i=[],a=tS(n,r,\"previous\"),s=tS(n,r,\"next\"),l=tS(n,r,\"first\"),c=tS(n,r,\"last\");return l.length&&i.push({type:\"action\",label:\"To top\",icon:BV,action:()=>r.patch(l)}),a.length&&i.push({type:\"action\",label:\"Up\",icon:dM,action:()=>r.patch(a)}),s.length&&i.push({type:\"action\",label:\"Down\",icon:aM,action:()=>r.patch(s)}),c.length&&i.push({type:\"action\",label:\"To bottom\",icon:PR,action:()=>r.patch(c)}),i.length&&(o.push({type:\"group\",label:\"Move\",icon:KV,items:i}),t&&o.push({type:\"divider\"})),o}const sS=[-4,4,-4,4];function lS(t){const{node:n}=t;return\"divider\"===n.type?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EL,{}):\"action\"===n.type?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(jL,{fontSize:1,hotkeys:n.hotkeys,icon:n.icon,padding:2,space:2,text:n.label,disabled:!n.action,onClick:n.action}):\"group\"===n.type?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BL,{fontSize:1,icon:n.icon,padding:2,popover:{arrow:!1,constrainSize:!0,placement:\"right-start\",preventOverflow:!0,__unstable_margins:sS},space:2,text:n.label,children:n.items.map(((t,n)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lS,{node:t},n)))}):null}const cS=n=>{const{node:r,onDismiss:o,position:{x:i,y:a}}=n,{getField:s}=JR(),{getDocument:l}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.a)(),{field:c,parent:d}=s(r),u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>c?.title||c?.name||\"Unknown type\"),[c]),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>UR(c)),[c]),p=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{const e=l(r.id);return e?rS({node:r,field:c,parent:d,doc:e}):[]}),[c,r,d,l]),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({getBoundingClientRect:()=>({bottom:a,left:i,right:i,top:a,width:0,height:0})})),[i,a]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(XR,{onDismiss:o,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ux,{__unstable_margins:sS,arrow:!1,open:!0,placement:\"right-start\",style:{pointerEvents:\"all\"},referenceElement:f,content:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(FL,{style:{minWidth:120,maxWidth:160},children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{gap:2,padding:2,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{flex:\"none\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:1,children:h})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Mx,{flex:1,space:2,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:1,weight:\"semibold\",children:u})})]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(EL,{}),p.map(((t,n)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(lS,{node:t},n)))]}),children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",left:i,top:a}},`${i}-${a}`)})})},dS=(0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);const uS=zo(sk)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`,hS=zo(YC)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`,pS=zo(sk)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`,fS=zo(YC)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n`,gS=zo(YC)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`;const mS=({children:t,style:n,...r})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{...n,pointerEvents:\"all\"},\"data-sanity-overlay-element\":!0,...r,children:t}),wS=t=>{const{components:n,element:r,node:o,parent:i}=t;return n.map(((t,n)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(t,{element:r,node:o,parent:i,PointerEvents:mS},n)))},vS=o=>{const{element:i,focused:a,componentResolver:s,node:l,showActions:c,draggable:d}=o,{getField:u,getType:h}=JR(),p=h(l),{field:m,parent:w}=u(l),v=\"path\"in l?function(e){const{id:t,type:n,path:o,baseUrl:i,tool:a,workspace:s}=e;return (0,_sanity_client_csm__WEBPACK_IMPORTED_MODULE_6__.createEditUrl)({baseUrl:i,workspace:s,tool:a,type:n,id:t,path:(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.p)(_sanity_client_csm__WEBPACK_IMPORTED_MODULE_6__.studioPath.fromString(o))})}(l):l.href,y=function(){const e=(0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(dS);if(!e)throw new Error(\"Preview Snapshots context is missing\");return e}(),b=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(\"path\"in l)return y.find((e=>e._id===l.id))?.title}),[l,y]),C=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>p?.icon?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{dangerouslySetInnerHTML:{__html:p.icon}}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(iH,{})),[p?.icon]),k=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{if(!(\"path\"in l))return;const e=m?.value.type;if(!e)return;const t=s?.({focused:!!a,node:l,type:e});if(!t)return;const n=Array.isArray(t)?t:[t];return n.length?{components:n,element:i,node:l,parent:w}:void 0}),[s,i,m,a,l,w]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[c?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(hS,{gap:1,paddingBottom:1,\"data-sanity-overlay-element\":!0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bS,{href:v})}):null,b&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(fS,{gap:1,paddingBottom:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(gS,{gap:2,padding:2,children:[d&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{marginRight:1,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{className:\"drag-handle\",size:0,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(bH,{})})}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:0,children:C}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:1,weight:\"medium\",children:b})]})}),k&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(wS,{...k})]})},yS=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const{focused:n,hovered:r,rect:o,wasMaybeCollapsed:i,enableScrollIntoView:a}=t,s=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),l=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(!1),c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({width:`${o.w}px`,height:`${o.h}px`,transform:`translate(${o.x}px, ${o.y}px)`})),[o]);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!l.current&&!i&&!0===n&&s.current&&a){const e=s.current;(0,scroll_into_view_if_needed__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(s.current,{behavior:t=>{0!==t.length&&e.scrollIntoView({behavior:\"smooth\",block:\"center\",inline:\"nearest\"})},scrollMode:\"if-needed\",block:\"center\",inline:\"nearest\"})}l.current=!0===n}),[n,i,a]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(uS,{\"data-focused\":n?\"\":void 0,\"data-hovered\":r?\"\":void 0,ref:s,style:c,children:r&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(vS,{...t})})})),bS=(0,react__WEBPACK_IMPORTED_MODULE_1__.memo)((function(t){const n=(0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=()=>e();return window.addEventListener(\"popstate\",t),()=>window.removeEventListener(\"popstate\",t)}),[]),(()=>window.location.href)),r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>{try{const e=new URL(t.href);return e.searchParams.set(\"preview\",n),e.toString()}catch{return t.href}}),[t.href,n]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(zC,{as:\"a\",href:r,target:\"_blank\",rel:\"noopener noreferrer\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(pS,{padding:2,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:1,weight:\"medium\",children:\"Open in Studio\"})})})})),CS=({dragGroupRect:t})=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",top:`${t.y}px`,left:`${t.x}px`,width:t.w-1+\"px\",height:t.h-1+\"px\",border:\"1px dashed #f0709b\",pointerEvents:\"none\"}});function kS(e,t,n){return e*(1-n)+t*n}const xS=({dragInsertPosition:t})=>{if(null===t)return;let n=0,r=0,o=0,i=0;const a=.0125;if(\"horizontal\"===(t?.left||t?.right?\"horizontal\":\"vertical\")){const{left:e,right:s}=t;if(o=6,s&&e){const t=e.rect.x+e.rect.w,o=s.rect.x,l=Math.min(s.rect.h,e.rect.h)*a;n=kS(t,o,.5)-3,r=e.rect.y+l,i=Math.min(s.rect.h,e.rect.h)-2*l}else if(s&&!e){const e=s.rect.h*a;n=s.rect.x-3,r=s.rect.y+e,i=s.rect.h-2*e}else if(e&&!s){const t=e.rect.h*a;n=e.rect.x+e.rect.w-3,r=e.rect.y+t,i=e.rect.h-2*t}}else{const{bottom:e,top:s}=t;if(e&&s){const t=Math.min(s.rect.x,e.rect.x),l=s.rect.y+s.rect.h,c=e.rect.y,d=Math.min(e.rect.w,s.rect.w)*a;i=6,n=t+d,r=kS(l,c,.5)-3,o=Math.max(e.rect.w,s.rect.w)-2*d}else if(e&&!s){const t=e.rect.w*a;n=e.rect.x+t,r=e.rect.y-3,o=e.rect.w-2*t,i=6}else if(s&&!e){const e=s.rect.w*a;n=s.rect.x+e,r=s.rect.y+s.rect.h-3,o=s.rect.w-2*e,i=6}}return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{style:{position:\"absolute\",width:`${o}px`,height:`${i}px`,transform:`translate(${n}px, ${r}px)`,background:\"#556bfc\",border:\"2px solid white\",borderRadius:\"999px\",zIndex:\"999999\"}})},LS=zo.div`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor:e,$width:t,$height:n})=>`translate(calc(var(--drag-preview-x) - ${t/2}px), calc(var(--drag-preview-y) - ${n/2}px)) scale(${e})`};\n  width: ${({$width:e})=>`${e}px`};\n  height: ${({$height:e})=>`${e}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`;const MS=({skeleton:t})=>{const n=Math.min(t.maxWidth,window.innerWidth/2),r=t.w>n?n/t.w:1,o=t.offsetX*r,i=t.offsetY*r,a=kb(),s=vb(),l=s.radius[(u=t.w,h=0,p=1920,f=1,g=s.radius.length-2,~~function(e,t,n){return e<t?t:e>n?n:e}((u-h)*(g-f)/(p-h)+f,f,g))],c=t.childRects.filter((e=>\"IMG\"===e.tagName)),d=t.childRects.filter((e=>\"IMG\"!==e.tagName));var u,h,p,f,g;return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(LS,{$width:t.w,$height:t.h,$offsetX:o,$offsetY:i,$scaleFactor:r,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sk,{radius:l,shadow:4,overflow:\"hidden\",tone:\"transparent\",scheme:a?\"dark\":\"light\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\",{className:\"drag-preview-content-wrapper\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"svg\",{className:\"drag-preview-skeleton\",viewBox:`0 0 ${t.w} ${t.h}`,children:[...c,...d].map(((t,n)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"rect\",{x:t.x,y:t.y,width:t.w,height:t.h,fill:s.color.skeleton.from},n)))})})})})},HS=zo(sk)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`,VS=()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(HS,{padding:2,shadow:2,radius:2,style:{zIndex:\"999999\"},children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(YC,{align:\"center\",gap:2,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(kL,{keys:[\"Shift\"]}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(qC,{size:1,children:\"Zoom Out\"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BH,{})]})}),RS=(e,t)=>{const{type:n}=t;switch(n){case\"element/register\":return e.find((e=>e.id===t.id))?e:[...e,{id:t.id,activated:!1,element:t.element,focused:!1,hovered:!1,rect:t.rect,sanity:t.sanity,dragDisabled:t.dragDisabled}];case\"element/activate\":return e.map((e=>e.id===t.id?{...e,activated:!0}:e));case\"element/update\":return e.map((e=>e.id===t.id?{...e,sanity:t.sanity,rect:t.rect}:e));case\"element/unregister\":return e.filter((e=>e.id!==t.id));case\"element/deactivate\":return e.map((e=>e.id===t.id?{...e,activated:!1,hovered:!1}:e));case\"element/mouseenter\":return e.map((e=>e.id===t.id?{...e,rect:t.rect,hovered:!0}:{...e,hovered:!1}));case\"element/mouseleave\":return e.map((e=>e.id===t.id?{...e,hovered:!1}:e));case\"element/updateRect\":return e.map((e=>e.id===t.id?{...e,rect:t.rect}:e));case\"element/click\":return e.map((e=>({...e,focused:e.id===t.id&&\"clicked\"})));case\"overlay/blur\":case\"presentation/blur\":return e.map((e=>({...e,focused:!1})));case\"presentation/focus\":{const n=e.find((e=>\"clicked\"===e.focused));return e.map((e=>{const r=\"path\"in e.sanity&&e.sanity.id===t.data.id&&e.sanity.path===t.data.path;return n&&e===n&&r?e:{...e,focused:r&&n?\"duplicate\":r}}))}default:return e}};function SS(e,t){const{type:n}=t;let{contextMenu:r,focusPath:o,perspective:i,isDragging:a,dragInsertPosition:s,dragShowMinimap:l,dragShowMinimapPrompt:c,dragSkeleton:d,dragMinimapTransition:u,dragGroupRect:h}=e,p=!1;if(\"presentation/focus\"===n){const n=e.focusPath;o=t.data.path,n!==o&&(p=n.slice(o.length).startsWith(\"[\"))}return\"presentation/perspective\"===n&&(i=t.data.perspective),\"element/contextmenu\"===n&&(r=\"sanity\"in t?{node:t.sanity,position:t.position}:null),(\"element/click\"===n||\"element/mouseleave\"===n||\"overlay/blur\"===n||\"presentation/blur\"===n||\"presentation/focus\"===n)&&(r=null),\"overlay/dragUpdateInsertPosition\"===n&&(s=t.insertPosition),\"overlay/dragStart\"===n&&(a=!0),\"overlay/dragUpdateSkeleton\"===t.type&&(d=t.skeleton),\"overlay/dragEnd\"===n&&(a=!1),\"overlay/dragToggleMinimapPrompt\"===t.type&&(c=t.display),\"overlay/dragStartMinimapTransition\"===n&&(u=!0),\"overlay/dragEndMinimapTransition\"===n&&(u=!1),\"overlay/dragUpdateGroupRect\"===n&&(h=t.groupRect),\"overlay/dragToggleMinimap\"===n&&(l=t.display),{...e,contextMenu:r,elements:RS(e.elements,t),dragInsertPosition:s,dragSkeleton:d,dragGroupRect:h,isDragging:a,focusPath:o,perspective:i,wasMaybeCollapsed:p,dragShowMinimap:l,dragShowMinimapPrompt:c,dragMinimapTransition:u}}const FS=function(t){const{comlink:n,children:r}=t,[o,i]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>n?.on(\"presentation/preview-snapshots\",(e=>{i(e.snapshots)}))),[n]);const a=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>o),[o]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(dS.Provider,{value:a,children:r})};function ES(e){return\"path\"in e}function NS(e){return\"document\"===e.type}function IS(e){return\"type\"===e.type}const BS=function(t){const{comlink:n,children:r,elements:o}=t,[i,a]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Map),[s,l]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>n?.on(\"presentation/schema\",(e=>{l(e.schema)}))),[n]);const c=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((async(e,t)=>{if(e.length&&n)try{const r=await n.fetch({type:\"visual-editing/schema-union-types\",data:{paths:e}},{signal:t});a(r.types),d.current=e}catch{}}),[n]),d=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)([]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=new AbortController,t=function(e){return e.reduce(((e,t)=>{const{sanity:n}=t;if(!(\"id\"in n)||!n.path.includes(\"[_key==\"))return e;const r=function(e){return e.split(\".\").toReversed().reduce(((e,t)=>e.length?[t,...e]:t.includes(\"[_key==\")?[t]:[]),[]).join(\".\")}(n.path);return e.find((e=>e.id===n.id&&e.path===r))||e.push({id:n.id,path:r}),e}),[])}(o);return t.some((e=>!d.current.find((({id:t,path:n})=>t===e.id&&n===e.path))))&&c(t,e.signal),()=>e.abort()}),[o,c]);const u=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t=\"document\")=>{if(!s||\"string\"!=typeof e&&(!ES(e)||!Array.isArray(s)))return;const n=\"string\"==typeof e?e:e.type,r=\"document\"===t?NS:IS;return s.filter(r).find((e=>e.name===n))}),[s]),h=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(!ES(e))return{field:void 0,parent:void 0};const t=u(e);if(!t)return{field:void 0,parent:void 0};return function t(n,r,o,a){if(!n)return{field:void 0,parent:void 0};const[s,...l]=r;if(\"fields\"in n){const e=n.fields[s];return l.length?t(e.value,l,n,s):{field:e,parent:o}}if(\"array\"===n.type)return t(n.of,r,n);if(\"arrayItem\"===n.type)return l.length?t(n.value,l,n):{field:n,parent:o};if(\"union\"===n.type){const r=s.startsWith(\"[_key==\")?i?.get(e.id)?.get([a,s].filter(Boolean).join(\"\")):s;return t(n.of.find((e=>\"unionOption\"===e.type?e.name===r:e)),l,n)}if(\"unionOption\"===n.type)return s?t(n.value,r,n):{field:n,parent:o};if(\"inline\"===n.type){return t(u(n.name,\"type\").value,r,n)}throw new Error(`No field could be resolved at path: \"${r.join(\".\")}\"`)}(t,e.path.split(\".\").flatMap((e=>e.includes(\"[\")?e.split(/(\\[.+\\])/,2):[e])),void 0)}),[u,i]),f=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>({getField:h,getType:u,resolvedTypes:i,schema:s||[]})),[h,u,i,s]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(KR.Provider,{value:f,children:r})};const jS=zo.div`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex:e})=>e??\"9999999\"};\n`;function $S(e){let t,n;return t=requestAnimationFrame((()=>{n=requestAnimationFrame(e)})),()=>{void 0!==t&&cancelAnimationFrame(t),void 0!==n&&cancelAnimationFrame(n)}}const AS=e=>{const{documentIds:t}=e,[n,r]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{r((e=>{const n=Array.from(new Set(t));return e.length===n.length&&0===e.reduce(((e,t)=>e.filter((e=>e!==t))),n)?.length?e:n}))}),[t]);const o=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.u)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{for(const e of n)o.send({type:\"observe\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.h)(e)}),o.send({type:\"observe\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.g)(e)});return()=>{for(const e of n)o.send({type:\"unobserve\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.h)(e)}),o.send({type:\"unobserve\",documentId:(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.g)(e)})}}),[o,n]),null},TS=e=>{const{comlink:t,dispatch:n,inFrame:r,onDrag:o,overlayEnabled:i,rootElement:a}=e,{dispatchDragEndEvent:s}=function(){const{getDocument:e}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.a)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const t=t=>{const{insertPosition:n,target:r,preventInsertDefault:o}=t.detail;if(o)return;const i=function(e){if(e){const{top:t,right:n,bottom:r,left:o}=e;if(o||t)return{node:(o??t).sanity,position:\"after\"};if(n||r)return{node:(n??r).sanity,position:\"before\"}}}(n);if(i){const t=e(r.id),{node:n,position:o}=i,{key:a}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.b)(r),{path:s,key:l}=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.b)(n);s&&l&&l!==a&&t.patch((({snapshot:e})=>{const t=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.e)(e,r.path);return[(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(s,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.remove)({_key:a})),(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.at)(s,(0,_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.insert)(t,o,{_key:l}))]}))}};return window.addEventListener(\"sanity/dragEnd\",t),()=>{window.removeEventListener(\"sanity/dragEnd\",t)}}),[e]),{dispatchDragEndEvent:(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{const t=new CustomEvent(\"sanity/dragEnd\",{detail:e,cancelable:!0});window.dispatchEvent(t)}),[])}}(),l=function(e,t,n){const r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)();return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(e)return r.current=(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.c)({handler:t,overlayElement:e,inFrame:n}),()=>{r.current?.destroy(),r.current=void 0}}),[e,t,n]),r}(a,(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((e=>{if(\"element/click\"===e.type){const{sanity:n}=e;t?.post({type:\"visual-editing/focus\",data:n})}else if(\"overlay/activate\"===e.type)t?.post({type:\"visual-editing/toggle\",data:{enabled:!0}});else if(\"overlay/deactivate\"===e.type)t?.post({type:\"visual-editing/toggle\",data:{enabled:!1}});else if(\"overlay/dragEnd\"===e.type){const{insertPosition:t,target:n,dragGroup:r,flow:o,preventInsertDefault:i}=e;s({insertPosition:t,target:n,dragGroup:r,flow:o,preventInsertDefault:i})}else{if(\"overlay/dragUpdateCursorPosition\"===e.type)return void o(e.x,e.y);if(\"overlay/setCursor\"===e.type){const{element:t,cursor:n}=e;t.style.cursor=n}}n(e)}),[t,n,s,o]),!!r);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{i?l.current?.activate():l.current?.deactivate()}),[l,i]),null},PS=r=>{const{comlink:s,componentResolver:l,inFrame:c,history:d,zIndex:u}=r,[h,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(),m=kb(),[{contextMenu:w,dragInsertPosition:v,dragShowMinimap:y,dragShowMinimapPrompt:C,dragSkeleton:x,elements:L,isDragging:H,perspective:V,wasMaybeCollapsed:R,dragMinimapTransition:S,dragGroupRect:F},N]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useReducer)(SS,{contextMenu:null,dragInsertPosition:null,dragShowMinimap:!1,dragShowMinimapPrompt:!1,dragSkeleton:null,elements:[],focusPath:\"\",isDragging:!1,perspective:\"published\",wasMaybeCollapsed:!1,dragMinimapTransition:!1,dragGroupRect:null}),[I,B]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[j,$]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=[s?.on(\"presentation/focus\",(e=>{N({type:\"presentation/focus\",data:e})})),s?.on(\"presentation/blur\",(e=>{N({type:\"presentation/blur\",data:e})})),s?.on(\"presentation/perspective\",(e=>{N({type:\"presentation/perspective\",data:e})})),s?.on(\"presentation/navigate\",(e=>{d?.update(e)})),s?.on(\"presentation/toggle-overlay\",(()=>{$((e=>!e))})),s?.onStatus((e=>{f(e)}))].filter(Boolean);return()=>e.forEach((e=>e()))}),[s,d]);const A=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0),T=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{s?.post({type:\"visual-editing/documents\",data:{documents:e,perspective:t}})}),[s]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=L.map((e=>{const{sanity:t}=e;return\"id\"in t?{...t,id:\"isDraft\"in t?`${_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.D}${t.id}`:t.id}:null})).filter((e=>!!e)),t=new Set(e.map((e=>e.id)));if(!A.current||!function(e,t){if(e===t)return!0;if(e.size!==t.size)return!1;for(const n of e)if(!t.has(n))return!1;return!0}(t,A.current.nodeIds)||V!==A.current.perspective){const n=Array.from(t).map((t=>{const n=e.find((e=>e.id===t)),{type:r,projectId:o,dataset:i}=n;return o&&i?{_id:t,_type:r,_projectId:o,_dataset:i}:{_id:t,_type:r}}));A.current={nodeIds:t,perspective:V},T(n,V)}}),[L,V,T]);const P=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(((e,t)=>{I&&(I.style.setProperty(\"--drag-preview-x\",`${e}px`),I.style.setProperty(\"--drag-preview-y\",t-window.scrollY+\"px\"))}),[I]);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{const e=e=>{const t=e.target;if((Pk(t)||Tk(t)&&t.closest(\"a\"))&&e.altKey){e.preventDefault(),e.stopPropagation();const t=new MouseEvent(e.type,{...e,altKey:!1,bubbles:!0,cancelable:!0});e.target?.dispatchEvent(t)}},t=e=>{(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.i)(e)&&$((e=>!e))},n=e=>{(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.i)(e)&&$((e=>!e)),(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.a)([\"mod\",\"\\\\\"],e)&&$((e=>!e))};return window.addEventListener(\"click\",e),window.addEventListener(\"keydown\",n),window.addEventListener(\"keyup\",t),()=>{window.removeEventListener(\"click\",e),window.removeEventListener(\"keydown\",n),window.removeEventListener(\"keyup\",t)}}),[$]),(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(d)return d.subscribe((e=>{e.title=e.title||document.title,s?.post({type:\"visual-editing/navigate\",data:e})}))}),[s,d]);const[W,Z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),[D,z]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(!1),O=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(void 0);(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(j)return $S((()=>{Z(!0),$S((()=>{z(!0),O.current=setTimeout((()=>{z(!1),Z(!1)}),1500)}))}));O.current&&(clearTimeout(O.current),Z(!1),z(!1))}),[j]);const _=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>c&&\"connected\"!==h?[]:L.filter((e=>e.activated||e.focused))),[L,c,h]),q=(0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((()=>L.flatMap((e=>\"id\"in e.sanity?[e.sanity.id]:[]))),[L]),U=(0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((()=>{N({type:\"overlay/blur\"})}),[]);return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(gb,{scheme:m?\"dark\":\"light\",theme:sy,tone:\"transparent\",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Uk,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(nx,{element:I,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(BS,{comlink:s,elements:L,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(FS,{comlink:s,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(jS,{\"data-fading-out\":D?\"\":void 0,\"data-overlays\":W?\"\":void 0,ref:B,$zIndex:u,children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(AS,{documentIds:q,perspective:V}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TS,{comlink:s,dispatch:N,inFrame:c,onDrag:P,overlayEnabled:j,rootElement:I}),w&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(cS,{...w,onDismiss:U}),!H&&_.map((({id:t,element:n,focused:r,hovered:o,rect:i,sanity:a,dragDisabled:s})=>{const d=!s&&L.some((e=>\"id\"in e.sanity&&\"id\"in a&&((0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.s)(e.sanity,a)&&e.sanity.path!==a.path)));return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(yS,{componentResolver:l,element:n,enableScrollIntoView:!H&&!S&&!y,focused:r,hovered:o,node:a,rect:i,showActions:!c,draggable:d,isDragging:H||S,wasMaybeCollapsed:r&&R},t)})),H&&!S&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[v&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(xS,{dragInsertPosition:v}),C&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(VS,{}),F&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(CS,{dragGroupRect:F})]}),H&&x&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(MS,{skeleton:x})]})})})})})})},WS=e=>{const{comlink:t,refresh:n}=e,r=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0),o=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(0);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>t.on(\"presentation/refresh\",(e=>{if(\"manual\"===e.source){clearTimeout(r.current);const o=n(e);if(!1===o)return;t.post({type:\"visual-editing/refreshing\",data:e});let i=!1;r.current=window.setTimeout((()=>{t.post({type:\"visual-editing/refreshed\",data:e}),i=!0}),3e3),o?.finally?.((()=>{i||(clearTimeout(r.current),t.post({type:\"visual-editing/refreshed\",data:e}))}))}else if(\"mutation\"===e.source){clearTimeout(o.current);const r=n(e);if(!1===r)return;t.post({type:\"visual-editing/refreshing\",data:e}),o.current=window.setTimeout((()=>{const r=n(e);!1!==r&&(t.post({type:\"visual-editing/refreshing\",data:e}),r?.finally?.((()=>{t.post({type:\"visual-editing/refreshed\",data:e})}))||t.post({type:\"visual-editing/refreshed\",data:e}))}),1e3),r?.finally?.((()=>{t.post({type:\"visual-editing/refreshed\",data:e})}))||t.post({type:\"visual-editing/refreshed\",data:e})}}))),[t,n]),null},ZS=r=>{const{components:o,history:i,refresh:a,zIndex:l}=r,u=window.self!==window.top||window.opener,[h,f]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(void 0);return (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(!u)return;const e=(0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_9__.createNode)({name:\"visual-editing\",connectTo:\"presentation\"},(0,_sanity_comlink__WEBPACK_IMPORTED_MODULE_9__.createNodeMachine)().provide({actors:(0,_chunks_es_create_data_attribute_js__WEBPACK_IMPORTED_MODULE_7__.b)()}));f(e);const t=function(e){const t=new rxjs__WEBPACK_IMPORTED_MODULE_10__.Subject;e.on(\"presentation/snapshot-event\",(e=>{t.next(e.event)}));const n=t.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)((e=>\"reconnect\"===e.type))),r=t.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)((e=>\"welcome\"===e.type))),o=t.pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)((e=>\"mutation\"===e.type))),i=(0,rxjs__WEBPACK_IMPORTED_MODULE_12__.merge)(r,n).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_13__.shareReplay)({bufferSize:1,refCount:!1})).pipe((0,rxjs__WEBPACK_IMPORTED_MODULE_11__.filter)((e=>\"welcome\"===e.type)));return (0,rxjs__WEBPACK_IMPORTED_MODULE_12__.merge)(i,o,n)}(e),n=(e=>{const t=(0,xstate__WEBPACK_IMPORTED_MODULE_14__.fromPromise)((async({input:t,signal:n})=>{const{id:r}=t,{snapshot:o}=await e.fetch({type:\"visual-editing/fetch-snapshot\",data:{documentId:r}},{signal:n});return o})),n=(0,xstate__WEBPACK_IMPORTED_MODULE_14__.fromPromise)((async({input:t})=>{const{transactions:n}=t;for(const t of n){const n=_sanity_mutate__WEBPACK_IMPORTED_MODULE_5__.SanityEncoder.encodeTransaction(t);return e.post({type:\"visual-editing/mutate\",data:n})}}));return _chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.d.provide({actors:{documentMutatorMachine:_sanity_mutate_unstable_machine__WEBPACK_IMPORTED_MODULE_15__.documentMutatorMachine.provide({actors:{\"fetch remote snapshot\":t,\"submit mutations as transactions\":n}})}})})(e),r=(0,xstate__WEBPACK_IMPORTED_MODULE_16__.A)(n,{input:{client:{withConfig:()=>{}},sharedListener:t}});(0,_chunks_es_mutations_js__WEBPACK_IMPORTED_MODULE_4__.j)(r),r.start(),e.start()}),[u]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PS,{componentResolver:o,comlink:h,inFrame:u,history:i,zIndex:l}),h&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(ce,{comlink:h}),h&&a&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(WS,{comlink:h,refresh:a})]})};ZS.displayName=\"VisualEditing\";//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/@sanity/visual-editing/dist/react/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/nanoid/index.browser.js":
/*!***********************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/nanoid/index.browser.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   customAlphabet: () => (/* binding */ customAlphabet),\n/* harmony export */   customRandom: () => (/* binding */ customRandom),\n/* harmony export */   nanoid: () => (/* binding */ nanoid),\n/* harmony export */   random: () => (/* binding */ random),\n/* harmony export */   urlAlphabet: () => (/* reexport safe */ _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__.urlAlphabet)\n/* harmony export */ });\n/* harmony import */ var _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url-alphabet/index.js */ \"(app-pages-browser)/./node_modules/next-sanity/node_modules/nanoid/url-alphabet/index.js\");\n\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << Math.log2(alphabet.length - 1)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step | 0\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length >= size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size | 0, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array((size |= 0)))\n  while (size--) {\n    id += _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__.urlAlphabet[bytes[size] & 63]\n  }\n  return id\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvbmFub2lkL2luZGV4LmJyb3dzZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBFO0FBQ3JCO0FBQzlDO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsVUFBVSwrREFBaUI7QUFDM0I7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvbmFub2lkL2luZGV4LmJyb3dzZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXJsQWxwaGFiZXQgYXMgc2NvcGVkVXJsQWxwaGFiZXQgfSBmcm9tICcuL3VybC1hbHBoYWJldC9pbmRleC5qcydcbmV4cG9ydCB7IHVybEFscGhhYmV0IH0gZnJvbSAnLi91cmwtYWxwaGFiZXQvaW5kZXguanMnXG5leHBvcnQgbGV0IHJhbmRvbSA9IGJ5dGVzID0+IGNyeXB0by5nZXRSYW5kb21WYWx1ZXMobmV3IFVpbnQ4QXJyYXkoYnl0ZXMpKVxuZXhwb3J0IGxldCBjdXN0b21SYW5kb20gPSAoYWxwaGFiZXQsIGRlZmF1bHRTaXplLCBnZXRSYW5kb20pID0+IHtcbiAgbGV0IG1hc2sgPSAoMiA8PCBNYXRoLmxvZzIoYWxwaGFiZXQubGVuZ3RoIC0gMSkpIC0gMVxuICBsZXQgc3RlcCA9IC1+KCgxLjYgKiBtYXNrICogZGVmYXVsdFNpemUpIC8gYWxwaGFiZXQubGVuZ3RoKVxuICByZXR1cm4gKHNpemUgPSBkZWZhdWx0U2l6ZSkgPT4ge1xuICAgIGxldCBpZCA9ICcnXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIGxldCBieXRlcyA9IGdldFJhbmRvbShzdGVwKVxuICAgICAgbGV0IGogPSBzdGVwIHwgMFxuICAgICAgd2hpbGUgKGotLSkge1xuICAgICAgICBpZCArPSBhbHBoYWJldFtieXRlc1tqXSAmIG1hc2tdIHx8ICcnXG4gICAgICAgIGlmIChpZC5sZW5ndGggPj0gc2l6ZSkgcmV0dXJuIGlkXG4gICAgICB9XG4gICAgfVxuICB9XG59XG5leHBvcnQgbGV0IGN1c3RvbUFscGhhYmV0ID0gKGFscGhhYmV0LCBzaXplID0gMjEpID0+XG4gIGN1c3RvbVJhbmRvbShhbHBoYWJldCwgc2l6ZSB8IDAsIHJhbmRvbSlcbmV4cG9ydCBsZXQgbmFub2lkID0gKHNpemUgPSAyMSkgPT4ge1xuICBsZXQgaWQgPSAnJ1xuICBsZXQgYnl0ZXMgPSBjcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKG5ldyBVaW50OEFycmF5KChzaXplIHw9IDApKSlcbiAgd2hpbGUgKHNpemUtLSkge1xuICAgIGlkICs9IHNjb3BlZFVybEFscGhhYmV0W2J5dGVzW3NpemVdICYgNjNdXG4gIH1cbiAgcmV0dXJuIGlkXG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/nanoid/index.browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next-sanity/node_modules/nanoid/url-alphabet/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next-sanity/node_modules/nanoid/url-alphabet/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   urlAlphabet: () => (/* binding */ urlAlphabet)\n/* harmony export */ });\nconst urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0LXNhbml0eS9ub2RlX21vZHVsZXMvbmFub2lkL3VybC1hbHBoYWJldC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUCIsInNvdXJjZXMiOlsiL1VzZXJzL21hYy9Eb2N1bWVudHMvQ3JhY2tlZC9Gcm9udC1lbmQvc3RhcnR1cC9ub2RlX21vZHVsZXMvbmV4dC1zYW5pdHkvbm9kZV9tb2R1bGVzL25hbm9pZC91cmwtYWxwaGFiZXQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHVybEFscGhhYmV0ID1cbiAgJ3VzZWFuZG9tLTI2VDE5ODM0MFBYNzVweEpBQ0tWRVJZTUlOREJVU0hXT0xGX0dRWmJmZ2hqa2xxdnd5enJpY3QnXG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next-sanity/node_modules/nanoid/url-alphabet/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/scroll-into-view-if-needed/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/scroll-into-view-if-needed/dist/index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ e)\n/* harmony export */ });\n/* harmony import */ var compute_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! compute-scroll-into-view */ \"(app-pages-browser)/./node_modules/compute-scroll-into-view/dist/index.js\");\nconst o=t=>!1===t?{block:\"end\",inline:\"nearest\"}:(t=>t===Object(t)&&0!==Object.keys(t).length)(t)?t:{block:\"start\",inline:\"nearest\"};function e(e,r){if(!e.isConnected||!(t=>{let o=t;for(;o&&o.parentNode;){if(o.parentNode===document)return!0;o=o.parentNode instanceof ShadowRoot?o.parentNode.host:o.parentNode}return!1})(e))return;const n=(t=>{const o=window.getComputedStyle(t);return{top:parseFloat(o.scrollMarginTop)||0,right:parseFloat(o.scrollMarginRight)||0,bottom:parseFloat(o.scrollMarginBottom)||0,left:parseFloat(o.scrollMarginLeft)||0}})(e);if((t=>\"object\"==typeof t&&\"function\"==typeof t.behavior)(r))return r.behavior((0,compute_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__.compute)(e,r));const l=\"boolean\"==typeof r||null==r?void 0:r.behavior;for(const{el:a,top:i,left:s}of (0,compute_scroll_into_view__WEBPACK_IMPORTED_MODULE_0__.compute)(e,o(r))){const t=i-n.top+n.bottom,o=s-n.left+n.right;a.scroll({top:t,left:o,behavior:l})}}//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zY3JvbGwtaW50by12aWV3LWlmLW5lZWRlZC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1ELG1CQUFtQiw2QkFBNkIscURBQXFELGdDQUFnQyxnQkFBZ0IseUJBQXlCLFFBQVEsS0FBSyxnQkFBZ0IsRUFBRSxvQ0FBb0Msb0VBQW9FLFNBQVMsWUFBWSxhQUFhLG1DQUFtQyxPQUFPLGlLQUFpSyxLQUFLLCtFQUErRSxpRUFBQyxPQUFPLHVEQUF1RCxVQUFVLGtCQUFrQixHQUFHLGlFQUFDLFVBQVUsNENBQTRDLFVBQVUsd0JBQXdCLEdBQXdCIiwic291cmNlcyI6WyIvVXNlcnMvbWFjL0RvY3VtZW50cy9DcmFja2VkL0Zyb250LWVuZC9zdGFydHVwL25vZGVfbW9kdWxlcy9zY3JvbGwtaW50by12aWV3LWlmLW5lZWRlZC9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydHtjb21wdXRlIGFzIHR9ZnJvbVwiY29tcHV0ZS1zY3JvbGwtaW50by12aWV3XCI7Y29uc3Qgbz10PT4hMT09PXQ/e2Jsb2NrOlwiZW5kXCIsaW5saW5lOlwibmVhcmVzdFwifToodD0+dD09PU9iamVjdCh0KSYmMCE9PU9iamVjdC5rZXlzKHQpLmxlbmd0aCkodCk/dDp7YmxvY2s6XCJzdGFydFwiLGlubGluZTpcIm5lYXJlc3RcIn07ZnVuY3Rpb24gZShlLHIpe2lmKCFlLmlzQ29ubmVjdGVkfHwhKHQ9PntsZXQgbz10O2Zvcig7byYmby5wYXJlbnROb2RlOyl7aWYoby5wYXJlbnROb2RlPT09ZG9jdW1lbnQpcmV0dXJuITA7bz1vLnBhcmVudE5vZGUgaW5zdGFuY2VvZiBTaGFkb3dSb290P28ucGFyZW50Tm9kZS5ob3N0Om8ucGFyZW50Tm9kZX1yZXR1cm4hMX0pKGUpKXJldHVybjtjb25zdCBuPSh0PT57Y29uc3Qgbz13aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSh0KTtyZXR1cm57dG9wOnBhcnNlRmxvYXQoby5zY3JvbGxNYXJnaW5Ub3ApfHwwLHJpZ2h0OnBhcnNlRmxvYXQoby5zY3JvbGxNYXJnaW5SaWdodCl8fDAsYm90dG9tOnBhcnNlRmxvYXQoby5zY3JvbGxNYXJnaW5Cb3R0b20pfHwwLGxlZnQ6cGFyc2VGbG9hdChvLnNjcm9sbE1hcmdpbkxlZnQpfHwwfX0pKGUpO2lmKCh0PT5cIm9iamVjdFwiPT10eXBlb2YgdCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5iZWhhdmlvcikocikpcmV0dXJuIHIuYmVoYXZpb3IodChlLHIpKTtjb25zdCBsPVwiYm9vbGVhblwiPT10eXBlb2Ygcnx8bnVsbD09cj92b2lkIDA6ci5iZWhhdmlvcjtmb3IoY29uc3R7ZWw6YSx0b3A6aSxsZWZ0OnN9b2YgdChlLG8ocikpKXtjb25zdCB0PWktbi50b3Arbi5ib3R0b20sbz1zLW4ubGVmdCtuLnJpZ2h0O2Euc2Nyb2xsKHt0b3A6dCxsZWZ0Om8sYmVoYXZpb3I6bH0pfX1leHBvcnR7ZSBhcyBkZWZhdWx0fTsvLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/scroll-into-view-if-needed/dist/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/valibot/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/valibot/dist/index.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BIC_REGEX: () => (/* binding */ BIC_REGEX),\n/* harmony export */   CUID2_REGEX: () => (/* binding */ CUID2_REGEX),\n/* harmony export */   DECIMAL_REGEX: () => (/* binding */ DECIMAL_REGEX),\n/* harmony export */   EMAIL_REGEX: () => (/* binding */ EMAIL_REGEX),\n/* harmony export */   EMOJI_REGEX: () => (/* binding */ EMOJI_REGEX),\n/* harmony export */   HEXADECIMAL_REGEX: () => (/* binding */ HEXADECIMAL_REGEX),\n/* harmony export */   HEX_COLOR_REGEX: () => (/* binding */ HEX_COLOR_REGEX),\n/* harmony export */   IMEI_REGEX: () => (/* binding */ IMEI_REGEX),\n/* harmony export */   IPV4_REGEX: () => (/* binding */ IPV4_REGEX),\n/* harmony export */   IPV6_REGEX: () => (/* binding */ IPV6_REGEX),\n/* harmony export */   IP_REGEX: () => (/* binding */ IP_REGEX),\n/* harmony export */   ISO_DATE_REGEX: () => (/* binding */ ISO_DATE_REGEX),\n/* harmony export */   ISO_DATE_TIME_REGEX: () => (/* binding */ ISO_DATE_TIME_REGEX),\n/* harmony export */   ISO_TIMESTAMP_REGEX: () => (/* binding */ ISO_TIMESTAMP_REGEX),\n/* harmony export */   ISO_TIME_REGEX: () => (/* binding */ ISO_TIME_REGEX),\n/* harmony export */   ISO_TIME_SECOND_REGEX: () => (/* binding */ ISO_TIME_SECOND_REGEX),\n/* harmony export */   ISO_WEEK_REGEX: () => (/* binding */ ISO_WEEK_REGEX),\n/* harmony export */   MAC48_REGEX: () => (/* binding */ MAC48_REGEX),\n/* harmony export */   MAC64_REGEX: () => (/* binding */ MAC64_REGEX),\n/* harmony export */   MAC_REGEX: () => (/* binding */ MAC_REGEX),\n/* harmony export */   OCTAL_REGEX: () => (/* binding */ OCTAL_REGEX),\n/* harmony export */   ULID_REGEX: () => (/* binding */ ULID_REGEX),\n/* harmony export */   UUID_REGEX: () => (/* binding */ UUID_REGEX),\n/* harmony export */   ValiError: () => (/* binding */ ValiError),\n/* harmony export */   _addIssue: () => (/* binding */ _addIssue),\n/* harmony export */   _isAllowedObjectKey: () => (/* binding */ _isAllowedObjectKey),\n/* harmony export */   _isLuhnAlgo: () => (/* binding */ _isLuhnAlgo),\n/* harmony export */   _stringify: () => (/* binding */ _stringify),\n/* harmony export */   any: () => (/* binding */ any),\n/* harmony export */   array: () => (/* binding */ array),\n/* harmony export */   arrayAsync: () => (/* binding */ arrayAsync),\n/* harmony export */   bic: () => (/* binding */ bic),\n/* harmony export */   bigint: () => (/* binding */ bigint),\n/* harmony export */   blob: () => (/* binding */ blob),\n/* harmony export */   boolean: () => (/* binding */ boolean),\n/* harmony export */   brand: () => (/* binding */ brand),\n/* harmony export */   bytes: () => (/* binding */ bytes),\n/* harmony export */   check: () => (/* binding */ check),\n/* harmony export */   checkAsync: () => (/* binding */ checkAsync),\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   creditCard: () => (/* binding */ creditCard),\n/* harmony export */   cuid2: () => (/* binding */ cuid2),\n/* harmony export */   custom: () => (/* binding */ custom),\n/* harmony export */   customAsync: () => (/* binding */ customAsync),\n/* harmony export */   date: () => (/* binding */ date),\n/* harmony export */   decimal: () => (/* binding */ decimal),\n/* harmony export */   deleteGlobalConfig: () => (/* binding */ deleteGlobalConfig),\n/* harmony export */   deleteGlobalMessage: () => (/* binding */ deleteGlobalMessage),\n/* harmony export */   deleteSchemaMessage: () => (/* binding */ deleteSchemaMessage),\n/* harmony export */   deleteSpecificMessage: () => (/* binding */ deleteSpecificMessage),\n/* harmony export */   email: () => (/* binding */ email),\n/* harmony export */   emoji: () => (/* binding */ emoji),\n/* harmony export */   empty: () => (/* binding */ empty),\n/* harmony export */   endsWith: () => (/* binding */ endsWith),\n/* harmony export */   entriesFromList: () => (/* binding */ entriesFromList),\n/* harmony export */   enum_: () => (/* binding */ enum_),\n/* harmony export */   every: () => (/* binding */ every),\n/* harmony export */   excludes: () => (/* binding */ excludes),\n/* harmony export */   fallback: () => (/* binding */ fallback),\n/* harmony export */   fallbackAsync: () => (/* binding */ fallbackAsync),\n/* harmony export */   finite: () => (/* binding */ finite),\n/* harmony export */   flatten: () => (/* binding */ flatten),\n/* harmony export */   forward: () => (/* binding */ forward),\n/* harmony export */   forwardAsync: () => (/* binding */ forwardAsync),\n/* harmony export */   getDefault: () => (/* binding */ getDefault),\n/* harmony export */   getDefaults: () => (/* binding */ getDefaults),\n/* harmony export */   getDefaultsAsync: () => (/* binding */ getDefaultsAsync),\n/* harmony export */   getDotPath: () => (/* binding */ getDotPath),\n/* harmony export */   getFallback: () => (/* binding */ getFallback),\n/* harmony export */   getFallbacks: () => (/* binding */ getFallbacks),\n/* harmony export */   getFallbacksAsync: () => (/* binding */ getFallbacksAsync),\n/* harmony export */   getGlobalConfig: () => (/* binding */ getGlobalConfig),\n/* harmony export */   getGlobalMessage: () => (/* binding */ getGlobalMessage),\n/* harmony export */   getSchemaMessage: () => (/* binding */ getSchemaMessage),\n/* harmony export */   getSpecificMessage: () => (/* binding */ getSpecificMessage),\n/* harmony export */   hash: () => (/* binding */ hash),\n/* harmony export */   hexColor: () => (/* binding */ hexColor),\n/* harmony export */   hexadecimal: () => (/* binding */ hexadecimal),\n/* harmony export */   imei: () => (/* binding */ imei),\n/* harmony export */   includes: () => (/* binding */ includes),\n/* harmony export */   instance: () => (/* binding */ instance),\n/* harmony export */   integer: () => (/* binding */ integer),\n/* harmony export */   intersect: () => (/* binding */ intersect),\n/* harmony export */   intersectAsync: () => (/* binding */ intersectAsync),\n/* harmony export */   ip: () => (/* binding */ ip),\n/* harmony export */   ipv4: () => (/* binding */ ipv4),\n/* harmony export */   ipv6: () => (/* binding */ ipv6),\n/* harmony export */   is: () => (/* binding */ is),\n/* harmony export */   isOfKind: () => (/* binding */ isOfKind),\n/* harmony export */   isOfType: () => (/* binding */ isOfType),\n/* harmony export */   isValiError: () => (/* binding */ isValiError),\n/* harmony export */   isoDate: () => (/* binding */ isoDate),\n/* harmony export */   isoDateTime: () => (/* binding */ isoDateTime),\n/* harmony export */   isoTime: () => (/* binding */ isoTime),\n/* harmony export */   isoTimeSecond: () => (/* binding */ isoTimeSecond),\n/* harmony export */   isoTimestamp: () => (/* binding */ isoTimestamp),\n/* harmony export */   isoWeek: () => (/* binding */ isoWeek),\n/* harmony export */   keyof: () => (/* binding */ keyof),\n/* harmony export */   lazy: () => (/* binding */ lazy),\n/* harmony export */   lazyAsync: () => (/* binding */ lazyAsync),\n/* harmony export */   length: () => (/* binding */ length),\n/* harmony export */   literal: () => (/* binding */ literal),\n/* harmony export */   looseObject: () => (/* binding */ looseObject),\n/* harmony export */   looseObjectAsync: () => (/* binding */ looseObjectAsync),\n/* harmony export */   looseTuple: () => (/* binding */ looseTuple),\n/* harmony export */   looseTupleAsync: () => (/* binding */ looseTupleAsync),\n/* harmony export */   mac: () => (/* binding */ mac),\n/* harmony export */   mac48: () => (/* binding */ mac48),\n/* harmony export */   mac64: () => (/* binding */ mac64),\n/* harmony export */   map: () => (/* binding */ map),\n/* harmony export */   mapAsync: () => (/* binding */ mapAsync),\n/* harmony export */   maxBytes: () => (/* binding */ maxBytes),\n/* harmony export */   maxLength: () => (/* binding */ maxLength),\n/* harmony export */   maxSize: () => (/* binding */ maxSize),\n/* harmony export */   maxValue: () => (/* binding */ maxValue),\n/* harmony export */   mimeType: () => (/* binding */ mimeType),\n/* harmony export */   minBytes: () => (/* binding */ minBytes),\n/* harmony export */   minLength: () => (/* binding */ minLength),\n/* harmony export */   minSize: () => (/* binding */ minSize),\n/* harmony export */   minValue: () => (/* binding */ minValue),\n/* harmony export */   multipleOf: () => (/* binding */ multipleOf),\n/* harmony export */   nan: () => (/* binding */ nan),\n/* harmony export */   never: () => (/* binding */ never),\n/* harmony export */   nonEmpty: () => (/* binding */ nonEmpty),\n/* harmony export */   nonNullable: () => (/* binding */ nonNullable),\n/* harmony export */   nonNullableAsync: () => (/* binding */ nonNullableAsync),\n/* harmony export */   nonNullish: () => (/* binding */ nonNullish),\n/* harmony export */   nonNullishAsync: () => (/* binding */ nonNullishAsync),\n/* harmony export */   nonOptional: () => (/* binding */ nonOptional),\n/* harmony export */   nonOptionalAsync: () => (/* binding */ nonOptionalAsync),\n/* harmony export */   notBytes: () => (/* binding */ notBytes),\n/* harmony export */   notLength: () => (/* binding */ notLength),\n/* harmony export */   notSize: () => (/* binding */ notSize),\n/* harmony export */   notValue: () => (/* binding */ notValue),\n/* harmony export */   null_: () => (/* binding */ null_),\n/* harmony export */   nullable: () => (/* binding */ nullable),\n/* harmony export */   nullableAsync: () => (/* binding */ nullableAsync),\n/* harmony export */   nullish: () => (/* binding */ nullish),\n/* harmony export */   nullishAsync: () => (/* binding */ nullishAsync),\n/* harmony export */   number: () => (/* binding */ number),\n/* harmony export */   object: () => (/* binding */ object),\n/* harmony export */   objectAsync: () => (/* binding */ objectAsync),\n/* harmony export */   objectWithRest: () => (/* binding */ objectWithRest),\n/* harmony export */   objectWithRestAsync: () => (/* binding */ objectWithRestAsync),\n/* harmony export */   octal: () => (/* binding */ octal),\n/* harmony export */   omit: () => (/* binding */ omit),\n/* harmony export */   optional: () => (/* binding */ optional),\n/* harmony export */   optionalAsync: () => (/* binding */ optionalAsync),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseAsync: () => (/* binding */ parseAsync),\n/* harmony export */   parser: () => (/* binding */ parser),\n/* harmony export */   parserAsync: () => (/* binding */ parserAsync),\n/* harmony export */   partial: () => (/* binding */ partial),\n/* harmony export */   partialAsync: () => (/* binding */ partialAsync),\n/* harmony export */   pick: () => (/* binding */ pick),\n/* harmony export */   picklist: () => (/* binding */ picklist),\n/* harmony export */   pipe: () => (/* binding */ pipe),\n/* harmony export */   pipeAsync: () => (/* binding */ pipeAsync),\n/* harmony export */   readonly: () => (/* binding */ readonly),\n/* harmony export */   record: () => (/* binding */ record),\n/* harmony export */   recordAsync: () => (/* binding */ recordAsync),\n/* harmony export */   regex: () => (/* binding */ regex),\n/* harmony export */   required: () => (/* binding */ required),\n/* harmony export */   requiredAsync: () => (/* binding */ requiredAsync),\n/* harmony export */   safeInteger: () => (/* binding */ safeInteger),\n/* harmony export */   safeParse: () => (/* binding */ safeParse),\n/* harmony export */   safeParseAsync: () => (/* binding */ safeParseAsync),\n/* harmony export */   safeParser: () => (/* binding */ safeParser),\n/* harmony export */   safeParserAsync: () => (/* binding */ safeParserAsync),\n/* harmony export */   set: () => (/* binding */ set),\n/* harmony export */   setAsync: () => (/* binding */ setAsync),\n/* harmony export */   setGlobalConfig: () => (/* binding */ setGlobalConfig),\n/* harmony export */   setGlobalMessage: () => (/* binding */ setGlobalMessage),\n/* harmony export */   setSchemaMessage: () => (/* binding */ setSchemaMessage),\n/* harmony export */   setSpecificMessage: () => (/* binding */ setSpecificMessage),\n/* harmony export */   size: () => (/* binding */ size),\n/* harmony export */   some: () => (/* binding */ some),\n/* harmony export */   startsWith: () => (/* binding */ startsWith),\n/* harmony export */   strictObject: () => (/* binding */ strictObject),\n/* harmony export */   strictObjectAsync: () => (/* binding */ strictObjectAsync),\n/* harmony export */   strictTuple: () => (/* binding */ strictTuple),\n/* harmony export */   strictTupleAsync: () => (/* binding */ strictTupleAsync),\n/* harmony export */   string: () => (/* binding */ string),\n/* harmony export */   symbol: () => (/* binding */ symbol),\n/* harmony export */   toLowerCase: () => (/* binding */ toLowerCase),\n/* harmony export */   toMaxValue: () => (/* binding */ toMaxValue),\n/* harmony export */   toMinValue: () => (/* binding */ toMinValue),\n/* harmony export */   toUpperCase: () => (/* binding */ toUpperCase),\n/* harmony export */   transform: () => (/* binding */ transform),\n/* harmony export */   transformAsync: () => (/* binding */ transformAsync),\n/* harmony export */   trim: () => (/* binding */ trim),\n/* harmony export */   trimEnd: () => (/* binding */ trimEnd),\n/* harmony export */   trimStart: () => (/* binding */ trimStart),\n/* harmony export */   tuple: () => (/* binding */ tuple),\n/* harmony export */   tupleAsync: () => (/* binding */ tupleAsync),\n/* harmony export */   tupleWithRest: () => (/* binding */ tupleWithRest),\n/* harmony export */   tupleWithRestAsync: () => (/* binding */ tupleWithRestAsync),\n/* harmony export */   ulid: () => (/* binding */ ulid),\n/* harmony export */   undefined_: () => (/* binding */ undefined_),\n/* harmony export */   union: () => (/* binding */ union),\n/* harmony export */   unionAsync: () => (/* binding */ unionAsync),\n/* harmony export */   unknown: () => (/* binding */ unknown),\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   url: () => (/* binding */ url),\n/* harmony export */   uuid: () => (/* binding */ uuid),\n/* harmony export */   value: () => (/* binding */ value),\n/* harmony export */   variant: () => (/* binding */ variant),\n/* harmony export */   variantAsync: () => (/* binding */ variantAsync),\n/* harmony export */   void_: () => (/* binding */ void_)\n/* harmony export */ });\n// src/regex.ts\nvar BIC_REGEX = /^[A-Z]{6}(?!00)[A-Z\\d]{2}(?:[A-Z\\d]{3})?$/u;\nvar CUID2_REGEX = /^[a-z][\\da-z]*$/u;\nvar DECIMAL_REGEX = /^\\d+$/u;\nvar EMAIL_REGEX = /^[\\w+-]+(?:\\.[\\w+-]+)*@[\\da-z]+(?:[.-][\\da-z]+)*\\.[a-z]{2,}$/iu;\nvar EMOJI_REGEX = /^[\\p{Extended_Pictographic}\\p{Emoji_Component}]+$/u;\nvar HEXADECIMAL_REGEX = /^(?:0h|0x)?[\\da-f]+$/iu;\nvar HEX_COLOR_REGEX = /^#(?:[\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/iu;\nvar IMEI_REGEX = /^\\d{15}$|^\\d{2}-\\d{6}-\\d{6}-\\d$/u;\nvar IPV4_REGEX = (\n  // eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive\n  /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$/u\n);\nvar IPV6_REGEX = /^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar IP_REGEX = /^(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])(?:\\.(?:(?:[1-9]|1\\d|2[0-4])?\\d|25[0-5])){3}$|^(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:|(?:[\\da-f]{1,4}:){1,6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,5}(?::[\\da-f]{1,4}){1,2}|(?:[\\da-f]{1,4}:){1,4}(?::[\\da-f]{1,4}){1,3}|(?:[\\da-f]{1,4}:){1,3}(?::[\\da-f]{1,4}){1,4}|(?:[\\da-f]{1,4}:){1,2}(?::[\\da-f]{1,4}){1,5}|[\\da-f]{1,4}:(?::[\\da-f]{1,4}){1,6}|:(?:(?::[\\da-f]{1,4}){1,7}|:)|fe80:(?::[\\da-f]{0,4}){0,4}%[\\da-z]+|::(?:f{4}(?::0{1,4})?:)?(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)|(?:[\\da-f]{1,4}:){1,4}:(?:(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d)\\.){3}(?:25[0-5]|(?:2[0-4]|1?\\d)?\\d))$/iu;\nvar ISO_DATE_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])$/u;\nvar ISO_DATE_TIME_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_REGEX = /^(?:0\\d|1\\d|2[0-3]):[0-5]\\d$/u;\nvar ISO_TIME_SECOND_REGEX = /^(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}$/u;\nvar ISO_TIMESTAMP_REGEX = /^\\d{4}-(?:0[1-9]|1[0-2])-(?:[12]\\d|0[1-9]|3[01])T(?:0\\d|1\\d|2[0-3])(?::[0-5]\\d){2}(?:\\.\\d{1,9})?(?:Z|[+-](?:0\\d|1\\d|2[0-3])(?::?[0-5]\\d)?)$/u;\nvar ISO_WEEK_REGEX = /^\\d{4}-W(?:0[1-9]|[1-4]\\d|5[0-3])$/u;\nvar MAC48_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$/iu;\nvar MAC64_REGEX = /^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar MAC_REGEX = /^(?:[\\da-f]{2}:){5}[\\da-f]{2}$|^(?:[\\da-f]{2}-){5}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){2}[\\da-f]{4}$|^(?:[\\da-f]{2}:){7}[\\da-f]{2}$|^(?:[\\da-f]{2}-){7}[\\da-f]{2}$|^(?:[\\da-f]{4}\\.){3}[\\da-f]{4}$|^(?:[\\da-f]{4}:){3}[\\da-f]{4}$/iu;\nvar OCTAL_REGEX = /^(?:0o)?[0-7]+$/iu;\nvar ULID_REGEX = /^[\\da-hjkmnp-tv-z]{26}$/iu;\nvar UUID_REGEX = /^[\\da-f]{8}(?:-[\\da-f]{4}){3}-[\\da-f]{12}$/iu;\n\n// src/storages/globalConfig/globalConfig.ts\nvar store;\nfunction setGlobalConfig(config2) {\n  store = { ...store, ...config2 };\n}\nfunction getGlobalConfig(config2) {\n  return {\n    lang: config2?.lang ?? store?.lang,\n    message: config2?.message,\n    abortEarly: config2?.abortEarly ?? store?.abortEarly,\n    abortPipeEarly: config2?.abortPipeEarly ?? store?.abortPipeEarly,\n    skipPipe: config2?.skipPipe\n  };\n}\nfunction deleteGlobalConfig() {\n  store = void 0;\n}\n\n// src/storages/globalMessage/globalMessage.ts\nvar store2;\nfunction setGlobalMessage(message, lang) {\n  if (!store2)\n    store2 = /* @__PURE__ */ new Map();\n  store2.set(lang, message);\n}\nfunction getGlobalMessage(lang) {\n  return store2?.get(lang);\n}\nfunction deleteGlobalMessage(lang) {\n  store2?.delete(lang);\n}\n\n// src/storages/schemaMessage/schemaMessage.ts\nvar store3;\nfunction setSchemaMessage(message, lang) {\n  if (!store3)\n    store3 = /* @__PURE__ */ new Map();\n  store3.set(lang, message);\n}\nfunction getSchemaMessage(lang) {\n  return store3?.get(lang);\n}\nfunction deleteSchemaMessage(lang) {\n  store3?.delete(lang);\n}\n\n// src/storages/specificMessage/specificMessage.ts\nvar store4;\nfunction setSpecificMessage(reference, message, lang) {\n  if (!store4)\n    store4 = /* @__PURE__ */ new Map();\n  if (!store4.get(reference))\n    store4.set(reference, /* @__PURE__ */ new Map());\n  store4.get(reference).set(lang, message);\n}\nfunction getSpecificMessage(reference, lang) {\n  return store4?.get(reference)?.get(lang);\n}\nfunction deleteSpecificMessage(reference, lang) {\n  store4?.get(reference)?.delete(lang);\n}\n\n// src/utils/_stringify/_stringify.ts\nfunction _stringify(input) {\n  let type = typeof input;\n  if (type === \"object\") {\n    type = (input && Object.getPrototypeOf(input)?.constructor?.name) ?? \"null\";\n  }\n  return type === \"string\" ? `\"${input}\"` : type === \"number\" || type === \"bigint\" || type === \"boolean\" ? `${input}` : type;\n}\n\n// src/utils/_addIssue/_addIssue.ts\nfunction _addIssue(context, label, dataset, config2, other) {\n  const input = other && \"input\" in other ? other.input : dataset.value;\n  const expected = other?.expected ?? context.expects;\n  const received = other?.received ?? _stringify(input);\n  const issue = {\n    kind: context.kind,\n    type: context.type,\n    input,\n    expected,\n    received,\n    message: `Invalid ${label}: ${expected ? `Expected ${expected} but r` : \"R\"}eceived ${received}`,\n    // @ts-expect-error\n    requirement: context.requirement,\n    path: other?.path,\n    issues: other?.issues,\n    lang: config2.lang,\n    abortEarly: config2.abortEarly,\n    abortPipeEarly: config2.abortPipeEarly,\n    skipPipe: config2.skipPipe\n  };\n  const isSchema = context.kind === \"schema\";\n  const message = (\n    // @ts-expect-error\n    context.message ?? getSpecificMessage(context.reference, issue.lang) ?? (isSchema ? getSchemaMessage(issue.lang) : null) ?? config2.message ?? getGlobalMessage(issue.lang)\n  );\n  if (message) {\n    issue.message = typeof message === \"function\" ? message(issue) : message;\n  }\n  if (isSchema) {\n    dataset.typed = false;\n  }\n  if (dataset.issues) {\n    dataset.issues.push(issue);\n  } else {\n    dataset.issues = [issue];\n  }\n}\n\n// src/utils/_isAllowedObjectKey/_isAllowedObjectKey.ts\nfunction _isAllowedObjectKey(key) {\n  return key !== \"__proto__\" && key !== \"prototype\" && key !== \"constructor\";\n}\n\n// src/utils/_isLuhnAlgo/_isLuhnAlgo.ts\nvar NON_DIGIT_REGEX = /\\D/gu;\nfunction _isLuhnAlgo(input) {\n  const number2 = input.replace(NON_DIGIT_REGEX, \"\");\n  let length2 = number2.length;\n  let bit = 1;\n  let sum = 0;\n  while (length2) {\n    const value2 = +number2[--length2];\n    bit ^= 1;\n    sum += bit ? [0, 2, 4, 6, 8, 1, 3, 5, 7, 9][value2] : value2;\n  }\n  return sum % 10 === 0;\n}\n\n// src/utils/entriesFromList/entriesFromList.ts\nfunction entriesFromList(list, schema) {\n  const entries = {};\n  for (const key of list) {\n    entries[key] = schema;\n  }\n  return entries;\n}\n\n// src/utils/getDotPath/getDotPath.ts\nfunction getDotPath(issue) {\n  if (issue.path) {\n    let key = \"\";\n    for (const item of issue.path) {\n      if (\"key\" in item && (typeof item.key === \"string\" || typeof item.key === \"number\")) {\n        if (key) {\n          key += `.${item.key}`;\n        } else {\n          key += item.key;\n        }\n      } else {\n        return null;\n      }\n    }\n    return key;\n  }\n  return null;\n}\n\n// src/utils/isOfKind/isOfKind.ts\nfunction isOfKind(kind, object2) {\n  return object2.kind === kind;\n}\n\n// src/utils/isOfType/isOfType.ts\nfunction isOfType(type, object2) {\n  return object2.type === type;\n}\n\n// src/utils/isValiError/isValiError.ts\nfunction isValiError(error) {\n  return error instanceof ValiError;\n}\n\n// src/utils/ValiError/ValiError.ts\nvar ValiError = class extends Error {\n  /**\n   * The error issues.\n   */\n  issues;\n  /**\n   * Creates a Valibot error with useful information.\n   *\n   * @param issues The error issues.\n   */\n  constructor(issues) {\n    super(issues[0].message);\n    this.name = \"ValiError\";\n    this.issues = issues;\n  }\n};\n\n// src/actions/bic/bic.ts\nfunction bic(message) {\n  return {\n    kind: \"validation\",\n    type: \"bic\",\n    reference: bic,\n    async: false,\n    expects: null,\n    requirement: BIC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"BIC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/bytes/bytes.ts\nfunction bytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"bytes\",\n    reference: bytes,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 !== this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/brand/brand.ts\nfunction brand(name) {\n  return {\n    kind: \"transformation\",\n    type: \"brand\",\n    reference: brand,\n    async: false,\n    name,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/check.ts\nfunction check(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: check,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/check/checkAsync.ts\nfunction checkAsync(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"check\",\n    reference: checkAsync,\n    async: true,\n    expects: null,\n    requirement,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.typed && !await this.requirement(dataset.value)) {\n        _addIssue(this, \"input\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/creditCard/creditCard.ts\nvar CREDIT_CARD_REGEX = /^(?:\\d{14,19}|\\d{4}(?: \\d{3,6}){2,4}|\\d{4}(?:-\\d{3,6}){2,4})$/u;\nvar SANITIZE_REGEX = /[- ]/gu;\nvar PROVIDER_REGEX_LIST = [\n  // American Express\n  /^3[47]\\d{13}$/u,\n  // Diners Club\n  /^3(?:0[0-5]|[68]\\d)\\d{11,13}$/u,\n  // Discover\n  /^6(?:011|5\\d{2})\\d{12,15}$/u,\n  // JCB\n  /^(?:2131|1800|35\\d{3})\\d{11}$/u,\n  // Mastercard\n  /^5[1-5]\\d{2}|(?:222\\d|22[3-9]\\d|2[3-6]\\d{2}|27[01]\\d|2720)\\d{12}$/u,\n  // UnionPay\n  /^(?:6[27]\\d{14,17}|81\\d{14,17})$/u,\n  // Visa\n  /^4\\d{12}(?:\\d{3,6})?$/u\n];\nfunction creditCard(message) {\n  return {\n    kind: \"validation\",\n    type: \"credit_card\",\n    reference: creditCard,\n    async: false,\n    expects: null,\n    requirement(input) {\n      let sanitized;\n      return CREDIT_CARD_REGEX.test(input) && // Remove any hyphens and blanks\n      (sanitized = input.replace(SANITIZE_REGEX, \"\")) && // Check if it matches a provider\n      PROVIDER_REGEX_LIST.some((regex2) => regex2.test(sanitized)) && // Check if passes luhn algorithm\n      _isLuhnAlgo(sanitized);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"credit card\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/cuid2/cuid2.ts\nfunction cuid2(message) {\n  return {\n    kind: \"validation\",\n    type: \"cuid2\",\n    reference: cuid2,\n    async: false,\n    expects: null,\n    requirement: CUID2_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"Cuid2\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/decimal/decimal.ts\nfunction decimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"decimal\",\n    reference: decimal,\n    async: false,\n    expects: null,\n    requirement: DECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"decimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/email/email.ts\nfunction email(message) {\n  return {\n    kind: \"validation\",\n    type: \"email\",\n    reference: email,\n    expects: null,\n    async: false,\n    requirement: EMAIL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"email\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/emoji/emoji.ts\nfunction emoji(message) {\n  return {\n    kind: \"validation\",\n    type: \"emoji\",\n    reference: emoji,\n    async: false,\n    expects: null,\n    requirement: EMOJI_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"emoji\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/empty/empty.ts\nfunction empty(message) {\n  return {\n    kind: \"validation\",\n    type: \"empty\",\n    reference: empty,\n    async: false,\n    expects: \"0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/endsWith/endsWith.ts\nfunction endsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"ends_with\",\n    reference: endsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.endsWith(this.requirement)) {\n        _addIssue(this, \"end\", dataset, config2, {\n          received: `\"${dataset.value.slice(-this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/every/every.ts\nfunction every(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"every\",\n    reference: every,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.every(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/excludes/excludes.ts\nfunction excludes(requirement, message) {\n  const received = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"excludes\",\n    reference: excludes,\n    async: false,\n    expects: `!${received}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, { received });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/finite/finite.ts\nfunction finite(message) {\n  return {\n    kind: \"validation\",\n    type: \"finite\",\n    reference: finite,\n    async: false,\n    expects: null,\n    requirement: Number.isFinite,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"finite\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hash/hash.ts\nvar HASH_LENGTHS = {\n  md4: 32,\n  md5: 32,\n  sha1: 40,\n  sha256: 64,\n  sha384: 96,\n  sha512: 128,\n  ripemd128: 32,\n  ripemd160: 40,\n  tiger128: 32,\n  tiger160: 40,\n  tiger192: 48,\n  crc32: 8,\n  crc32b: 8,\n  adler32: 8\n};\nfunction hash(types, message) {\n  return {\n    kind: \"validation\",\n    type: \"hash\",\n    reference: hash,\n    expects: null,\n    async: false,\n    requirement: RegExp(\n      types.map((type) => `^[a-f0-9]{${HASH_LENGTHS[type]}}$`).join(\"|\"),\n      \"iu\"\n    ),\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hash\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexadecimal/hexadecimal.ts\nfunction hexadecimal(message) {\n  return {\n    kind: \"validation\",\n    type: \"hexadecimal\",\n    reference: hexadecimal,\n    async: false,\n    expects: null,\n    requirement: HEXADECIMAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hexadecimal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/hexColor/hexColor.ts\nfunction hexColor(message) {\n  return {\n    kind: \"validation\",\n    type: \"hex_color\",\n    reference: hexColor,\n    async: false,\n    expects: null,\n    requirement: HEX_COLOR_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"hex color\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/imei/imei.ts\nfunction imei(message) {\n  return {\n    kind: \"validation\",\n    type: \"imei\",\n    reference: imei,\n    async: false,\n    expects: null,\n    requirement(input) {\n      return IMEI_REGEX.test(input) && _isLuhnAlgo(input);\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"IMEI\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/includes/includes.ts\nfunction includes(requirement, message) {\n  const expects = _stringify(requirement);\n  return {\n    kind: \"validation\",\n    type: \"includes\",\n    reference: includes,\n    async: false,\n    expects,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.includes(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2, {\n          received: `!${expects}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/integer/integer.ts\nfunction integer(message) {\n  return {\n    kind: \"validation\",\n    type: \"integer\",\n    reference: integer,\n    async: false,\n    expects: null,\n    requirement: Number.isInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ip/ip.ts\nfunction ip(message) {\n  return {\n    kind: \"validation\",\n    type: \"ip\",\n    reference: ip,\n    async: false,\n    expects: null,\n    requirement: IP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IP\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv4/ipv4.ts\nfunction ipv4(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv4\",\n    reference: ipv4,\n    async: false,\n    expects: null,\n    requirement: IPV4_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv4\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ipv6/ipv6.ts\nfunction ipv6(message) {\n  return {\n    kind: \"validation\",\n    type: \"ipv6\",\n    reference: ipv6,\n    async: false,\n    expects: null,\n    requirement: IPV6_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"IPv6\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDate/isoDate.ts\nfunction isoDate(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date\",\n    reference: isoDate,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoDateTime/isoDateTime.ts\nfunction isoDateTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_date_time\",\n    reference: isoDateTime,\n    async: false,\n    expects: null,\n    requirement: ISO_DATE_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"date-time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTime/isoTime.ts\nfunction isoTime(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time\",\n    reference: isoTime,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimeSecond/isoTimeSecond.ts\nfunction isoTimeSecond(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_time_second\",\n    reference: isoTimeSecond,\n    async: false,\n    expects: null,\n    requirement: ISO_TIME_SECOND_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"time-second\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoTimestamp/isoTimestamp.ts\nfunction isoTimestamp(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_timestamp\",\n    reference: isoTimestamp,\n    async: false,\n    expects: null,\n    requirement: ISO_TIMESTAMP_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"timestamp\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/isoWeek/isoWeek.ts\nfunction isoWeek(message) {\n  return {\n    kind: \"validation\",\n    type: \"iso_week\",\n    reference: isoWeek,\n    async: false,\n    expects: null,\n    requirement: ISO_WEEK_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"week\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/length/length.ts\nfunction length(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"length\",\n    reference: length,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length !== this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac/mac.ts\nfunction mac(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac\",\n    reference: mac,\n    async: false,\n    expects: null,\n    requirement: MAC_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac48/mac48.ts\nfunction mac48(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac48\",\n    reference: mac48,\n    async: false,\n    expects: null,\n    requirement: MAC48_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"48-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mac64/mac64.ts\nfunction mac64(message) {\n  return {\n    kind: \"validation\",\n    type: \"mac64\",\n    reference: mac64,\n    async: false,\n    expects: null,\n    requirement: MAC64_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"64-bit MAC\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxBytes/maxBytes.ts\nfunction maxBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_bytes\",\n    reference: maxBytes,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 > this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxLength/maxLength.ts\nfunction maxLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_length\",\n    reference: maxLength,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length > this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxSize/maxSize.ts\nfunction maxSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_size\",\n    reference: maxSize,\n    async: false,\n    expects: `<=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size > this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/maxValue/maxValue.ts\nfunction maxValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"max_value\",\n    reference: maxValue,\n    async: false,\n    expects: `<=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value > this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/mimeType/mimeType.ts\nfunction mimeType(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"mime_type\",\n    reference: mimeType,\n    async: false,\n    expects: requirement.map((option) => `\"${option}\"`).join(\" | \") || \"never\",\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.includes(dataset.value.type)) {\n        _addIssue(this, \"MIME type\", dataset, config2, {\n          received: `\"${dataset.value.type}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minBytes/minBytes.ts\nfunction minBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_bytes\",\n    reference: minBytes,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 < this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minLength/minLength.ts\nfunction minLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_length\",\n    reference: minLength,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length < this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minSize/minSize.ts\nfunction minSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_size\",\n    reference: minSize,\n    async: false,\n    expects: `>=${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size < this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/minValue/minValue.ts\nfunction minValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"min_value\",\n    reference: minValue,\n    async: false,\n    expects: `>=${requirement instanceof Date ? requirement.toJSON() : _stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value < this.requirement) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/multipleOf/multipleOf.ts\nfunction multipleOf(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"multiple_of\",\n    reference: multipleOf,\n    async: false,\n    expects: `%${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value % this.requirement !== 0) {\n        _addIssue(this, \"multiple\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/nonEmpty/nonEmpty.ts\nfunction nonEmpty(message) {\n  return {\n    kind: \"validation\",\n    type: \"non_empty\",\n    reference: nonEmpty,\n    async: false,\n    expects: \"!0\",\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === 0) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: \"0\"\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notBytes/notBytes.ts\nfunction notBytes(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_bytes\",\n    reference: notBytes,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed) {\n        const length2 = new TextEncoder().encode(dataset.value).length;\n        if (length2 === this.requirement) {\n          _addIssue(this, \"bytes\", dataset, config2, {\n            received: `${length2}`\n          });\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notLength/notLength.ts\nfunction notLength(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_length\",\n    reference: notLength,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.length === this.requirement) {\n        _addIssue(this, \"length\", dataset, config2, {\n          received: `${dataset.value.length}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notSize/notSize.ts\nfunction notSize(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_size\",\n    reference: notSize,\n    async: false,\n    expects: `!${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size === this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/notValue/notValue.ts\nfunction notValue(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"not_value\",\n    reference: notValue,\n    async: false,\n    expects: requirement instanceof Date ? `!${requirement.toJSON()}` : `!${_stringify(requirement)}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && this.requirement <= dataset.value && this.requirement >= dataset.value) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/octal/octal.ts\nfunction octal(message) {\n  return {\n    kind: \"validation\",\n    type: \"octal\",\n    reference: octal,\n    async: false,\n    expects: null,\n    requirement: OCTAL_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"octal\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/readonly/readonly.ts\nfunction readonly() {\n  return {\n    kind: \"transformation\",\n    type: \"readonly\",\n    reference: readonly,\n    async: false,\n    _run(dataset) {\n      return dataset;\n    }\n  };\n}\n\n// src/actions/regex/regex.ts\nfunction regex(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"regex\",\n    reference: regex,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"format\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/safeInteger/safeInteger.ts\nfunction safeInteger(message) {\n  return {\n    kind: \"validation\",\n    type: \"safe_integer\",\n    reference: safeInteger,\n    async: false,\n    expects: null,\n    requirement: Number.isSafeInteger,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"safe integer\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/size/size.ts\nfunction size(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"size\",\n    reference: size,\n    async: false,\n    expects: `${requirement}`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && dataset.value.size !== this.requirement) {\n        _addIssue(this, \"size\", dataset, config2, {\n          received: `${dataset.value.size}`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/some/some.ts\nfunction some(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"some\",\n    reference: some,\n    async: false,\n    expects: null,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.some(this.requirement)) {\n        _addIssue(this, \"content\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/startsWith/startsWith.ts\nfunction startsWith(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"starts_with\",\n    reference: startsWith,\n    async: false,\n    expects: `\"${requirement}\"`,\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !dataset.value.startsWith(this.requirement)) {\n        _addIssue(this, \"start\", dataset, config2, {\n          received: `\"${dataset.value.slice(0, this.requirement.length)}\"`\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toLowerCase/toLowerCase.ts\nfunction toLowerCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_lower_case\",\n    reference: toLowerCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toLowerCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMaxValue/toMaxValue.ts\nfunction toMaxValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_max_value\",\n    reference: toMaxValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value > this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toMinValue/toMinValue.ts\nfunction toMinValue(requirement) {\n  return {\n    kind: \"transformation\",\n    type: \"to_min_value\",\n    reference: toMinValue,\n    async: false,\n    requirement,\n    _run(dataset) {\n      dataset.value = dataset.value < this.requirement ? this.requirement : dataset.value;\n      return dataset;\n    }\n  };\n}\n\n// src/actions/toUpperCase/toUpperCase.ts\nfunction toUpperCase() {\n  return {\n    kind: \"transformation\",\n    type: \"to_upper_case\",\n    reference: toUpperCase,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.toUpperCase();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transform.ts\nfunction transform(action) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transform,\n    async: false,\n    action,\n    _run(dataset) {\n      dataset.value = action(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/transform/transformAsync.ts\nfunction transformAsync(action) {\n  return {\n    kind: \"transformation\",\n    type: \"transform\",\n    reference: transformAsync,\n    async: true,\n    action,\n    async _run(dataset) {\n      dataset.value = await action(dataset.value);\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trim/trim.ts\nfunction trim() {\n  return {\n    kind: \"transformation\",\n    type: \"trim\",\n    reference: trim,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trim();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimEnd/trimEnd.ts\nfunction trimEnd() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_end\",\n    reference: trimEnd,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimEnd();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/trimStart/trimStart.ts\nfunction trimStart() {\n  return {\n    kind: \"transformation\",\n    type: \"trim_start\",\n    reference: trimStart,\n    async: false,\n    _run(dataset) {\n      dataset.value = dataset.value.trimStart();\n      return dataset;\n    }\n  };\n}\n\n// src/actions/ulid/ulid.ts\nfunction ulid(message) {\n  return {\n    kind: \"validation\",\n    type: \"ulid\",\n    reference: ulid,\n    async: false,\n    expects: null,\n    requirement: ULID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"ULID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/url/url.ts\nfunction url(message) {\n  return {\n    kind: \"validation\",\n    type: \"url\",\n    reference: url,\n    async: false,\n    expects: null,\n    requirement(input) {\n      try {\n        new URL(input);\n        return true;\n      } catch {\n        return false;\n      }\n    },\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement(dataset.value)) {\n        _addIssue(this, \"URL\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/uuid/uuid.ts\nfunction uuid(message) {\n  return {\n    kind: \"validation\",\n    type: \"uuid\",\n    reference: uuid,\n    async: false,\n    expects: null,\n    requirement: UUID_REGEX,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !this.requirement.test(dataset.value)) {\n        _addIssue(this, \"UUID\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/actions/value/value.ts\nfunction value(requirement, message) {\n  return {\n    kind: \"validation\",\n    type: \"value\",\n    reference: value,\n    async: false,\n    expects: requirement instanceof Date ? requirement.toJSON() : _stringify(requirement),\n    requirement,\n    message,\n    _run(dataset, config2) {\n      if (dataset.typed && !(this.requirement <= dataset.value && this.requirement >= dataset.value)) {\n        _addIssue(this, \"value\", dataset, config2, {\n          received: dataset.value instanceof Date ? dataset.value.toJSON() : _stringify(dataset.value)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/config/config.ts\nfunction config(schema, config2) {\n  return {\n    ...schema,\n    _run(dataset, config_) {\n      return schema._run(dataset, { ...config_, ...config2 });\n    }\n  };\n}\n\n// src/methods/getFallback/getFallback.ts\nfunction getFallback(schema, dataset, config2) {\n  return typeof schema.fallback === \"function\" ? (\n    // @ts-expect-error\n    schema.fallback(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.fallback\n  );\n}\n\n// src/methods/fallback/fallback.ts\nfunction fallback(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    _run(dataset, config2) {\n      schema._run(dataset, config2);\n      return dataset.issues ? { typed: true, value: getFallback(this, dataset, config2) } : dataset;\n    }\n  };\n}\n\n// src/methods/fallback/fallbackAsync.ts\nfunction fallbackAsync(schema, fallback2) {\n  return {\n    ...schema,\n    fallback: fallback2,\n    async: true,\n    async _run(dataset, config2) {\n      schema._run(dataset, config2);\n      return dataset.issues ? (\n        // @ts-expect-error\n        { typed: true, value: await getFallback(this, dataset, config2) }\n      ) : dataset;\n    }\n  };\n}\n\n// src/methods/flatten/flatten.ts\nfunction flatten(issues) {\n  const flatErrors = {};\n  for (const issue of issues) {\n    if (issue.path) {\n      const dotPath = getDotPath(issue);\n      if (dotPath) {\n        if (!flatErrors.nested) {\n          flatErrors.nested = {};\n        }\n        if (flatErrors.nested[dotPath]) {\n          flatErrors.nested[dotPath].push(issue.message);\n        } else {\n          flatErrors.nested[dotPath] = [issue.message];\n        }\n      } else {\n        if (flatErrors.other) {\n          flatErrors.other.push(issue.message);\n        } else {\n          flatErrors.other = [issue.message];\n        }\n      }\n    } else {\n      if (flatErrors.root) {\n        flatErrors.root.push(issue.message);\n      } else {\n        flatErrors.root = [issue.message];\n      }\n    }\n  }\n  return flatErrors;\n}\n\n// src/methods/forward/forward.ts\nfunction forward(action, pathKeys) {\n  return {\n    ...action,\n    _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/forward/forwardAsync.ts\nfunction forwardAsync(action, pathKeys) {\n  return {\n    ...action,\n    async: true,\n    async _run(dataset, config2) {\n      const prevIssues = dataset.issues && [...dataset.issues];\n      await action._run(dataset, config2);\n      if (dataset.issues) {\n        for (const issue of dataset.issues) {\n          if (!prevIssues?.includes(issue)) {\n            let pathInput = dataset.value;\n            for (const key of pathKeys) {\n              const pathValue = pathInput[key];\n              const pathItem = {\n                type: \"unknown\",\n                origin: \"value\",\n                input: pathInput,\n                key,\n                value: pathValue\n              };\n              if (issue.path) {\n                issue.path.push(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              if (!pathValue) {\n                break;\n              }\n              pathInput = pathValue;\n            }\n          }\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/getDefault/getDefault.ts\nfunction getDefault(schema, dataset, config2) {\n  return typeof schema.default === \"function\" ? (\n    // @ts-expect-error\n    schema.default(dataset, config2)\n  ) : (\n    // @ts-expect-error\n    schema.default\n  );\n}\n\n// src/methods/getDefaults/getDefaults.ts\nfunction getDefaults(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getDefaults(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getDefaults);\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getDefaults/getDefaultsAsync.ts\nasync function getDefaultsAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getDefaultsAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getDefaultsAsync));\n  }\n  return getDefault(schema);\n}\n\n// src/methods/getFallbacks/getFallbacks.ts\nfunction getFallbacks(schema) {\n  if (\"entries\" in schema) {\n    const object2 = {};\n    for (const key in schema.entries) {\n      object2[key] = getFallbacks(schema.entries[key]);\n    }\n    return object2;\n  }\n  if (\"items\" in schema) {\n    return schema.items.map(getFallbacks);\n  }\n  return getFallback(schema);\n}\n\n// src/methods/getFallbacks/getFallbacksAsync.ts\nasync function getFallbacksAsync(schema) {\n  if (\"entries\" in schema) {\n    return Object.fromEntries(\n      await Promise.all(\n        Object.entries(schema.entries).map(async ([key, value2]) => [\n          key,\n          await getFallbacksAsync(value2)\n        ])\n      )\n    );\n  }\n  if (\"items\" in schema) {\n    return Promise.all(schema.items.map(getFallbacksAsync));\n  }\n  return getFallback(schema);\n}\n\n// src/methods/is/is.ts\nfunction is(schema, input) {\n  return !schema._run({ typed: false, value: input }, { abortEarly: true }).issues;\n}\n\n// src/schemas/any/any.ts\nfunction any() {\n  return {\n    kind: \"schema\",\n    type: \"any\",\n    reference: any,\n    expects: \"any\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/array.ts\nfunction array(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: array,\n    expects: \"Array\",\n    async: false,\n    item,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < input.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.item._run({ typed: false, value: value2 }, config2);\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/array/arrayAsync.ts\nfunction arrayAsync(item, message) {\n  return {\n    kind: \"schema\",\n    type: \"array\",\n    reference: arrayAsync,\n    expects: \"Array\",\n    async: true,\n    item,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          input.map((value2) => this.item._run({ typed: false, value: value2 }, config2))\n        );\n        for (let key = 0; key < itemDatasets.length; key++) {\n          const itemDataset = itemDatasets[key];\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"array\",\n              origin: \"value\",\n              input,\n              key,\n              value: input[key]\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/bigint/bigint.ts\nfunction bigint(message) {\n  return {\n    kind: \"schema\",\n    type: \"bigint\",\n    reference: bigint,\n    expects: \"bigint\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"bigint\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/blob/blob.ts\nfunction blob(message) {\n  return {\n    kind: \"schema\",\n    type: \"blob\",\n    reference: blob,\n    expects: \"Blob\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Blob) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/boolean/boolean.ts\nfunction boolean(message) {\n  return {\n    kind: \"schema\",\n    type: \"boolean\",\n    reference: boolean,\n    expects: \"boolean\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"boolean\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/custom.ts\nfunction custom(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: custom,\n    expects: \"unknown\",\n    async: false,\n    check: check2,\n    message,\n    _run(dataset, config2) {\n      if (this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/custom/customAsync.ts\nfunction customAsync(check2, message) {\n  return {\n    kind: \"schema\",\n    type: \"custom\",\n    reference: customAsync,\n    expects: \"unknown\",\n    async: true,\n    check: check2,\n    message,\n    async _run(dataset, config2) {\n      if (await this.check(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/date/date.ts\nfunction date(message) {\n  return {\n    kind: \"schema\",\n    type: \"date\",\n    reference: date,\n    expects: \"Date\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof Date && !isNaN(dataset.value.getTime())) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/enum/enum.ts\nfunction enum_(enum__, message) {\n  const options = Object.entries(enum__).filter(([key]) => isNaN(+key)).map(([, value2]) => value2);\n  return {\n    kind: \"schema\",\n    type: \"enum\",\n    reference: enum_,\n    expects: options.map(_stringify).join(\" | \") || \"never\",\n    async: false,\n    enum: enum__,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/instance/instance.ts\nfunction instance(class_, message) {\n  return {\n    kind: \"schema\",\n    type: \"instance\",\n    reference: instance,\n    expects: class_.name,\n    async: false,\n    class: class_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value instanceof this.class) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/utils/_merge/_merge.ts\nfunction _merge(value1, value2) {\n  if (typeof value1 === typeof value2) {\n    if (value1 === value2 || value1 instanceof Date && value2 instanceof Date && +value1 === +value2) {\n      return { value: value1 };\n    }\n    if (value1 && value2 && value1.constructor === Object && value2.constructor === Object) {\n      for (const key in value2) {\n        if (key in value1) {\n          const dataset = _merge(value1[key], value2[key]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[key] = dataset.value;\n        } else {\n          value1[key] = value2[key];\n        }\n      }\n      return { value: value1 };\n    }\n    if (Array.isArray(value1) && Array.isArray(value2)) {\n      if (value1.length === value2.length) {\n        for (let index = 0; index < value1.length; index++) {\n          const dataset = _merge(value1[index], value2[index]);\n          if (dataset.issue) {\n            return dataset;\n          }\n          value1[index] = dataset.value;\n        }\n        return { value: value1 };\n      }\n    }\n  }\n  return { issue: true };\n}\n\n// src/schemas/intersect/intersect.ts\nfunction intersect(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersect,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        for (const schema of this.options) {\n          const optionDataset = schema._run(\n            { typed: false, value: input },\n            config2\n          );\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/intersect/intersectAsync.ts\nfunction intersectAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"intersect\",\n    reference: intersectAsync,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" & \") || \"never\",\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      if (this.options.length) {\n        const input = dataset.value;\n        let outputs;\n        dataset.typed = true;\n        const optionDatasets = await Promise.all(\n          this.options.map(\n            (schema) => schema._run({ typed: false, value: input }, config2)\n          )\n        );\n        for (const optionDataset of optionDatasets) {\n          if (optionDataset.issues) {\n            if (dataset.issues) {\n              dataset.issues.push(...optionDataset.issues);\n            } else {\n              dataset.issues = optionDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!optionDataset.typed) {\n            dataset.typed = false;\n          }\n          if (dataset.typed) {\n            if (outputs) {\n              outputs.push(optionDataset.value);\n            } else {\n              outputs = [optionDataset.value];\n            }\n          }\n        }\n        if (dataset.typed) {\n          dataset.value = outputs[0];\n          for (let index = 1; index < outputs.length; index++) {\n            const mergeDataset = _merge(dataset.value, outputs[index]);\n            if (mergeDataset.issue) {\n              _addIssue(this, \"type\", dataset, config2, {\n                received: \"unknown\"\n              });\n              break;\n            }\n            dataset.value = mergeDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/lazy/lazy.ts\nfunction lazy(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazy,\n    expects: \"unknown\",\n    async: false,\n    getter,\n    _run(dataset, config2) {\n      return this.getter(dataset.value)._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/lazy/lazyAsync.ts\nfunction lazyAsync(getter) {\n  return {\n    kind: \"schema\",\n    type: \"lazy\",\n    reference: lazyAsync,\n    expects: \"unknown\",\n    async: true,\n    getter,\n    async _run(dataset, config2) {\n      return (await this.getter(dataset.value))._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/literal/literal.ts\nfunction literal(literal_, message) {\n  return {\n    kind: \"schema\",\n    type: \"literal\",\n    reference: literal,\n    expects: _stringify(literal_),\n    async: false,\n    literal: literal_,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === this.literal) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObject.ts\nfunction looseObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isAllowedObjectKey(key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseObject/looseObjectAsync.ts\nfunction looseObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_object\",\n    reference: looseObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isAllowedObjectKey(key) && !(key in this.entries)) {\n              dataset.value[key] = input[key];\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTuple.ts\nfunction looseTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/looseTuple/looseTupleAsync.ts\nfunction looseTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"loose_tuple\",\n    reference: looseTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = items.length; key < input.length; key++) {\n            dataset.value.push(input[key]);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/map.ts\nfunction map(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: map,\n    expects: \"Map\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        for (const [inputKey, inputValue] of input) {\n          const keyDataset = this.key._run(\n            { typed: false, value: inputKey },\n            config2\n          );\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/map/mapAsync.ts\nfunction mapAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"map\",\n    reference: mapAsync,\n    expects: \"Map\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Map) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Map();\n        const datasets = await Promise.all(\n          [...input].map(\n            ([inputKey, inputValue]) => Promise.all([\n              inputKey,\n              inputValue,\n              this.key._run({ typed: false, value: inputKey }, config2),\n              this.value._run({ typed: false, value: inputValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          inputKey,\n          inputValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"key\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of keyDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"map\",\n              origin: \"value\",\n              input,\n              key: inputKey,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.set(keyDataset.value, valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nan/nan.ts\nfunction nan(message) {\n  return {\n    kind: \"schema\",\n    type: \"nan\",\n    reference: nan,\n    expects: \"NaN\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (Number.isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/never/never.ts\nfunction never(message) {\n  return {\n    kind: \"schema\",\n    type: \"never\",\n    reference: never,\n    expects: \"never\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      _addIssue(this, \"type\", dataset, config2);\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullable.ts\nfunction nonNullable(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullable,\n    expects: \"!null\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullable/nonNullableAsync.ts\nfunction nonNullableAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullable\",\n    reference: nonNullableAsync,\n    expects: \"!null\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullish.ts\nfunction nonNullish(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullish,\n    expects: \"!null & !undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonNullish/nonNullishAsync.ts\nfunction nonNullishAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_nullish\",\n    reference: nonNullishAsync,\n    expects: \"!null & !undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptional.ts\nfunction nonOptional(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptional,\n    expects: \"!undefined\",\n    async: false,\n    wrapped,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/nonOptional/nonOptionalAsync.ts\nfunction nonOptionalAsync(wrapped, message) {\n  return {\n    kind: \"schema\",\n    type: \"non_optional\",\n    reference: nonOptionalAsync,\n    expects: \"!undefined\",\n    async: true,\n    wrapped,\n    message,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        _addIssue(this, \"type\", dataset, config2);\n        return dataset;\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n}\n\n// src/schemas/null/null.ts\nfunction null_(message) {\n  return {\n    kind: \"schema\",\n    type: \"null\",\n    reference: null_,\n    expects: \"null\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/nullable/nullable.ts\nfunction nullable(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullable,\n    expects: `${wrapped.expects} | null`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullable/nullableAsync.ts\nfunction nullableAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullable\",\n    reference: nullableAsync,\n    expects: `${wrapped.expects} | null`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullish.ts\nfunction nullish(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullish,\n    expects: `${wrapped.expects} | null | undefined`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/nullish/nullishAsync.ts\nfunction nullishAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"nullish\",\n    reference: nullishAsync,\n    expects: `${wrapped.expects} | null | undefined`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === null || dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === null || dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/number/number.ts\nfunction number(message) {\n  return {\n    kind: \"schema\",\n    type: \"number\",\n    reference: number,\n    expects: \"number\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"number\" && !isNaN(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/object.ts\nfunction object(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: object,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/object/objectAsync.ts\nfunction objectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"object\",\n    reference: objectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRest.ts\nfunction objectWithRest(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRest,\n    expects: \"Object\",\n    async: false,\n    entries,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (_isAllowedObjectKey(key) && !(key in this.entries)) {\n              const value2 = input[key];\n              const valueDataset = this.rest._run(\n                { typed: false, value: value2 },\n                config2\n              );\n              if (valueDataset.issues) {\n                const pathItem = {\n                  type: \"object\",\n                  origin: \"value\",\n                  input,\n                  key,\n                  value: value2\n                };\n                for (const issue of valueDataset.issues) {\n                  if (issue.path) {\n                    issue.path.unshift(pathItem);\n                  } else {\n                    issue.path = [pathItem];\n                  }\n                  dataset.issues?.push(issue);\n                }\n                if (!dataset.issues) {\n                  dataset.issues = valueDataset.issues;\n                }\n                if (config2.abortEarly) {\n                  dataset.typed = false;\n                  break;\n                }\n              }\n              if (!valueDataset.typed) {\n                dataset.typed = false;\n              }\n              dataset.value[key] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/objectWithRest/objectWithRestAsync.ts\nfunction objectWithRestAsync(entries, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"object_with_rest\",\n    reference: objectWithRestAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal entry\n          Promise.all(\n            Object.entries(this.entries).map(async ([key, schema]) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await schema._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other entries with rest schema\n          Promise.all(\n            Object.entries(input).filter(\n              ([key]) => _isAllowedObjectKey(key) && !(key in this.entries)\n            ).map(\n              async ([key, value2]) => [\n                key,\n                value2,\n                await this.rest._run({ typed: false, value: value2 }, config2)\n              ]\n            )\n          )\n        ]);\n        for (const [key, value2, valueDataset] of normalDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, valueDataset] of restDatasets) {\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"object\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!valueDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/optional/optional.ts\nfunction optional(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optional,\n    expects: `${wrapped.expects} | undefined`,\n    async: false,\n    wrapped,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/optional/optionalAsync.ts\nfunction optionalAsync(wrapped, ...args) {\n  const schema = {\n    kind: \"schema\",\n    type: \"optional\",\n    reference: optionalAsync,\n    expects: `${wrapped.expects} | undefined`,\n    async: true,\n    wrapped,\n    async _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        if (\"default\" in this) {\n          dataset.value = await getDefault(\n            this,\n            dataset,\n            config2\n          );\n        }\n        if (dataset.value === void 0) {\n          dataset.typed = true;\n          return dataset;\n        }\n      }\n      return this.wrapped._run(dataset, config2);\n    }\n  };\n  if (0 in args) {\n    schema.default = args[0];\n  }\n  return schema;\n}\n\n// src/schemas/picklist/picklist.ts\nfunction picklist(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"picklist\",\n    reference: picklist,\n    expects: options.map(_stringify).join(\" | \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      if (this.options.includes(dataset.value)) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/record.ts\nfunction record(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: record,\n    expects: \"Object\",\n    async: false,\n    key,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const entryKey in input) {\n          if (_isAllowedObjectKey(entryKey)) {\n            const entryValue = input[entryKey];\n            const keyDataset = this.key._run(\n              { typed: false, value: entryKey },\n              config2\n            );\n            if (keyDataset.issues) {\n              const pathItem = {\n                type: \"record\",\n                origin: \"key\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of keyDataset.issues) {\n                issue.path = [pathItem];\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = keyDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            const valueDataset = this.value._run(\n              { typed: false, value: entryValue },\n              config2\n            );\n            if (valueDataset.issues) {\n              const pathItem = {\n                type: \"record\",\n                origin: \"value\",\n                input,\n                key: entryKey,\n                value: entryValue\n              };\n              for (const issue of valueDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = valueDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!keyDataset.typed || !valueDataset.typed) {\n              dataset.typed = false;\n            }\n            if (keyDataset.typed) {\n              dataset.value[keyDataset.value] = valueDataset.value;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/record/recordAsync.ts\nfunction recordAsync(key, value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"record\",\n    reference: recordAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const datasets = await Promise.all(\n          Object.entries(input).filter(([key2]) => _isAllowedObjectKey(key2)).map(\n            ([entryKey, entryValue]) => Promise.all([\n              entryKey,\n              entryValue,\n              this.key._run({ typed: false, value: entryKey }, config2),\n              this.value._run({ typed: false, value: entryValue }, config2)\n            ])\n          )\n        );\n        for (const [\n          entryKey,\n          entryValue,\n          keyDataset,\n          valueDataset\n        ] of datasets) {\n          if (keyDataset.issues) {\n            const pathItem = {\n              type: \"record\",\n              origin: \"key\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of keyDataset.issues) {\n              issue.path = [pathItem];\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = keyDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"record\",\n              origin: \"value\",\n              input,\n              key: entryKey,\n              value: entryValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!keyDataset.typed || !valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (keyDataset.typed) {\n            dataset.value[keyDataset.value] = valueDataset.value;\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/set.ts\nfunction set(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: set,\n    expects: \"Set\",\n    async: false,\n    value: value2,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        for (const inputValue of input) {\n          const valueDataset = this.value._run(\n            { typed: false, value: inputValue },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/set/setAsync.ts\nfunction setAsync(value2, message) {\n  return {\n    kind: \"schema\",\n    type: \"set\",\n    reference: setAsync,\n    expects: \"Set\",\n    async: true,\n    value: value2,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input instanceof Set) {\n        dataset.typed = true;\n        dataset.value = /* @__PURE__ */ new Set();\n        const valueDatasets = await Promise.all(\n          [...input].map(\n            async (inputValue) => [\n              inputValue,\n              await this.value._run(\n                { typed: false, value: inputValue },\n                config2\n              )\n            ]\n          )\n        );\n        for (const [inputValue, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"set\",\n              origin: \"value\",\n              input,\n              value: inputValue\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.add(valueDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObject.ts\nfunction strictObject(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObject,\n    expects: \"Object\",\n    async: false,\n    entries,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        for (const key in this.entries) {\n          const value2 = input[key];\n          const valueDataset = this.entries[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictObject/strictObjectAsync.ts\nfunction strictObjectAsync(entries, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_object\",\n    reference: strictObjectAsync,\n    expects: \"Object\",\n    async: true,\n    entries,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        dataset.typed = true;\n        dataset.value = {};\n        const valueDatasets = await Promise.all(\n          Object.entries(this.entries).map(async ([key, schema]) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await schema._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, valueDataset] of valueDatasets) {\n          if (valueDataset.issues) {\n            const pathItem = {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of valueDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = valueDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!valueDataset.typed) {\n            dataset.typed = false;\n          }\n          if (valueDataset.value !== void 0 || key in input) {\n            dataset.value[key] = valueDataset.value;\n          }\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const key in input) {\n            if (!(key in this.entries)) {\n              const value2 = input[key];\n              _addIssue(this, \"type\", dataset, config2, {\n                input: value2,\n                expected: \"never\",\n                path: [\n                  {\n                    type: \"object\",\n                    origin: \"value\",\n                    input,\n                    key,\n                    value: value2\n                  }\n                ]\n              });\n              break;\n            }\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTuple.ts\nfunction strictTuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key: items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/strictTuple/strictTupleAsync.ts\nfunction strictTupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"strict_tuple\",\n    reference: strictTupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!(dataset.issues && config2.abortEarly) && items.length < input.length) {\n          const value2 = input[items.length];\n          _addIssue(this, \"type\", dataset, config2, {\n            input: value2,\n            expected: \"never\",\n            path: [\n              {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key: items.length,\n                value: value2\n              }\n            ]\n          });\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/string/string.ts\nfunction string(message) {\n  return {\n    kind: \"schema\",\n    type: \"string\",\n    reference: string,\n    expects: \"string\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"string\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/symbol/symbol.ts\nfunction symbol(message) {\n  return {\n    kind: \"schema\",\n    type: \"symbol\",\n    reference: symbol,\n    expects: \"symbol\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (typeof dataset.value === \"symbol\") {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tuple.ts\nfunction tuple(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tuple,\n    expects: \"Array\",\n    async: false,\n    items,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tuple/tupleAsync.ts\nfunction tupleAsync(items, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple\",\n    reference: tupleAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const itemDatasets = await Promise.all(\n          items.map(async (item, key) => {\n            const value2 = input[key];\n            return [\n              key,\n              value2,\n              await item._run({ typed: false, value: value2 }, config2)\n            ];\n          })\n        );\n        for (const [key, value2, itemDataset] of itemDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRest.ts\nfunction tupleWithRest(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRest,\n    expects: \"Array\",\n    async: false,\n    items,\n    rest,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        for (let key = 0; key < items.length; key++) {\n          const value2 = input[key];\n          const itemDataset = this.items[key]._run(\n            { typed: false, value: value2 },\n            config2\n          );\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (let key = items.length; key < input.length; key++) {\n            const value2 = input[key];\n            const itemDataset = this.rest._run({ typed: false, value: value2 }, config2);\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/tupleWithRest/tupleWithRestAsync.ts\nfunction tupleWithRestAsync(items, rest, message) {\n  return {\n    kind: \"schema\",\n    type: \"tuple_with_rest\",\n    reference: tupleWithRestAsync,\n    expects: \"Array\",\n    async: true,\n    items,\n    rest,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (Array.isArray(input)) {\n        dataset.typed = true;\n        dataset.value = [];\n        const [normalDatasets, restDatasets] = await Promise.all([\n          // Parse schema of each normal item\n          Promise.all(\n            items.map(async (item, key) => {\n              const value2 = input[key];\n              return [\n                key,\n                value2,\n                await item._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          ),\n          // Parse other items with rest schema\n          Promise.all(\n            input.slice(items.length).map(async (value2, key) => {\n              return [\n                key + items.length,\n                value2,\n                await rest._run({ typed: false, value: value2 }, config2)\n              ];\n            })\n          )\n        ]);\n        for (const [key, value2, itemDataset] of normalDatasets) {\n          if (itemDataset.issues) {\n            const pathItem = {\n              type: \"tuple\",\n              origin: \"value\",\n              input,\n              key,\n              value: value2\n            };\n            for (const issue of itemDataset.issues) {\n              if (issue.path) {\n                issue.path.unshift(pathItem);\n              } else {\n                issue.path = [pathItem];\n              }\n              dataset.issues?.push(issue);\n            }\n            if (!dataset.issues) {\n              dataset.issues = itemDataset.issues;\n            }\n            if (config2.abortEarly) {\n              dataset.typed = false;\n              break;\n            }\n          }\n          if (!itemDataset.typed) {\n            dataset.typed = false;\n          }\n          dataset.value.push(itemDataset.value);\n        }\n        if (!dataset.issues || !config2.abortEarly) {\n          for (const [key, value2, itemDataset] of restDatasets) {\n            if (itemDataset.issues) {\n              const pathItem = {\n                type: \"tuple\",\n                origin: \"value\",\n                input,\n                key,\n                value: value2\n              };\n              for (const issue of itemDataset.issues) {\n                if (issue.path) {\n                  issue.path.unshift(pathItem);\n                } else {\n                  issue.path = [pathItem];\n                }\n                dataset.issues?.push(issue);\n              }\n              if (!dataset.issues) {\n                dataset.issues = itemDataset.issues;\n              }\n              if (config2.abortEarly) {\n                dataset.typed = false;\n                break;\n              }\n            }\n            if (!itemDataset.typed) {\n              dataset.typed = false;\n            }\n            dataset.value.push(itemDataset.value);\n          }\n        }\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/undefined/undefined.ts\nfunction undefined_(message) {\n  return {\n    kind: \"schema\",\n    type: \"undefined\",\n    reference: undefined_,\n    expects: \"undefined\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/utils/_subIssues/_subIssues.ts\nfunction _subIssues(datasets) {\n  let issues;\n  if (datasets) {\n    for (const dataset of datasets) {\n      if (issues) {\n        issues.push(...dataset.issues);\n      } else {\n        issues = dataset.issues;\n      }\n    }\n  }\n  return issues;\n}\n\n// src/schemas/union/union.ts\nfunction union(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: union,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \") || \"never\",\n    async: false,\n    options,\n    message,\n    _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/union/unionAsync.ts\nfunction unionAsync(options, message) {\n  return {\n    kind: \"schema\",\n    type: \"union\",\n    reference: unionAsync,\n    expects: [...new Set(options.map((option) => option.expects))].join(\" | \") || \"never\",\n    async: true,\n    options,\n    message,\n    async _run(dataset, config2) {\n      let validDataset;\n      let typedDatasets;\n      let untypedDatasets;\n      for (const schema of this.options) {\n        const optionDataset = await schema._run(\n          { typed: false, value: dataset.value },\n          config2\n        );\n        if (optionDataset.typed) {\n          if (optionDataset.issues) {\n            if (typedDatasets) {\n              typedDatasets.push(optionDataset);\n            } else {\n              typedDatasets = [optionDataset];\n            }\n          } else {\n            validDataset = optionDataset;\n            break;\n          }\n        } else {\n          if (untypedDatasets) {\n            untypedDatasets.push(optionDataset);\n          } else {\n            untypedDatasets = [optionDataset];\n          }\n        }\n      }\n      if (validDataset) {\n        return validDataset;\n      }\n      if (typedDatasets) {\n        if (typedDatasets.length === 1) {\n          return typedDatasets[0];\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(typedDatasets)\n        });\n        dataset.typed = true;\n      } else if (untypedDatasets?.length === 1) {\n        return untypedDatasets[0];\n      } else {\n        _addIssue(this, \"type\", dataset, config2, {\n          issues: _subIssues(untypedDatasets)\n        });\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/unknown/unknown.ts\nfunction unknown() {\n  return {\n    kind: \"schema\",\n    type: \"unknown\",\n    reference: unknown,\n    expects: \"unknown\",\n    async: false,\n    _run(dataset) {\n      dataset.typed = true;\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/utils/_discriminators/_discriminators.ts\nfunction _discriminators(key, options, set2 = /* @__PURE__ */ new Set()) {\n  for (const schema of options) {\n    if (schema.type === \"variant\") {\n      _discriminators(key, schema.options, set2);\n    } else {\n      set2.add(schema.entries[key].expects);\n    }\n  }\n  return set2;\n}\n\n// src/schemas/variant/variant.ts\nfunction variant(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variant,\n    expects: \"Object\",\n    async: false,\n    key,\n    options,\n    message,\n    _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            ).issues) {\n              const optionDataset = schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = [..._discriminators(this.key, this.options)].join(\" | \") || \"never\";\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/variant/variantAsync.ts\nfunction variantAsync(key, options, message) {\n  let expectedDiscriminators;\n  return {\n    kind: \"schema\",\n    type: \"variant\",\n    reference: variantAsync,\n    expects: \"Object\",\n    async: true,\n    key,\n    options,\n    message,\n    async _run(dataset, config2) {\n      const input = dataset.value;\n      if (input && typeof input === \"object\") {\n        const discriminator = input[this.key];\n        if (this.key in input) {\n          let outputDataset;\n          for (const schema of this.options) {\n            if (schema.type === \"variant\" || !(await schema.entries[this.key]._run(\n              { typed: false, value: discriminator },\n              config2\n            )).issues) {\n              const optionDataset = await schema._run(\n                { typed: false, value: input },\n                config2\n              );\n              if (!optionDataset.issues) {\n                return optionDataset;\n              }\n              if (!outputDataset || !outputDataset.typed && optionDataset.typed) {\n                outputDataset = optionDataset;\n              }\n            }\n          }\n          if (outputDataset) {\n            return outputDataset;\n          }\n        }\n        if (!expectedDiscriminators) {\n          expectedDiscriminators = [..._discriminators(this.key, this.options)].join(\" | \") || \"never\";\n        }\n        _addIssue(this, \"type\", dataset, config2, {\n          input: discriminator,\n          expected: expectedDiscriminators,\n          path: [\n            {\n              type: \"object\",\n              origin: \"value\",\n              input,\n              key: this.key,\n              value: discriminator\n            }\n          ]\n        });\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/schemas/void/void.ts\nfunction void_(message) {\n  return {\n    kind: \"schema\",\n    type: \"void\",\n    reference: void_,\n    expects: \"void\",\n    async: false,\n    message,\n    _run(dataset, config2) {\n      if (dataset.value === void 0) {\n        dataset.typed = true;\n      } else {\n        _addIssue(this, \"type\", dataset, config2);\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/keyof/keyof.ts\nfunction keyof(schema, message) {\n  return picklist(Object.keys(schema.entries), message);\n}\n\n// src/methods/omit/omit.ts\nfunction omit(schema, keys) {\n  const entries = {\n    ...schema.entries\n  };\n  for (const key of keys) {\n    delete entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/parse/parse.ts\nfunction parse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parse/parseAsync.ts\nasync function parseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  if (dataset.issues) {\n    throw new ValiError(dataset.issues);\n  }\n  return dataset.value;\n}\n\n// src/methods/parser/parser.ts\nfunction parser(schema, config2) {\n  const func = (input) => parse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/parser/parserAsync.ts\nfunction parserAsync(schema, config2) {\n  const func = (input) => parseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/partial/partial.ts\nfunction partial(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optional(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/partial/partialAsync.ts\nfunction partialAsync(schema, keys) {\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? optionalAsync(schema.entries[key]) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pick/pick.ts\nfunction pick(schema, keys) {\n  const entries = {};\n  for (const key of keys) {\n    entries[key] = schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/pipe/pipe.ts\nfunction pipe(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    _run(dataset, config2) {\n      for (let index = 0; index < pipe2.length; index++) {\n        dataset = pipe2[index]._run(dataset, config2);\n        const nextAction = pipe2[index + 1];\n        if (config2.skipPipe || dataset.issues && (config2.abortEarly || config2.abortPipeEarly || // TODO: This behavior must be documented!\n        nextAction?.kind === \"schema\" || nextAction?.kind === \"transformation\")) {\n          dataset.typed = false;\n          break;\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/pipe/pipeAsync.ts\nfunction pipeAsync(...pipe2) {\n  return {\n    ...pipe2[0],\n    pipe: pipe2,\n    async: true,\n    async _run(dataset, config2) {\n      for (let index = 0; index < pipe2.length; index++) {\n        dataset = await pipe2[index]._run(dataset, config2);\n        const nextAction = pipe2[index + 1];\n        if (config2.skipPipe || dataset.issues && (config2.abortEarly || config2.abortPipeEarly || // TODO: This behavior must be documented!\n        nextAction?.kind === \"schema\" || nextAction?.kind === \"transformation\")) {\n          dataset.typed = false;\n          break;\n        }\n      }\n      return dataset;\n    }\n  };\n}\n\n// src/methods/required/required.ts\nfunction required(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptional(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/required/requiredAsync.ts\nfunction requiredAsync(schema, arg2, arg3) {\n  const keys = Array.isArray(arg2) ? arg2 : void 0;\n  const message = Array.isArray(arg2) ? arg3 : arg2;\n  const entries = {};\n  for (const key in schema.entries) {\n    entries[key] = !keys || keys.includes(key) ? nonOptionalAsync(schema.entries[key], message) : schema.entries[key];\n  }\n  return { ...schema, entries };\n}\n\n// src/methods/safeParse/safeParse.ts\nfunction safeParse(schema, input, config2) {\n  const dataset = schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParse/safeParseAsync.ts\nasync function safeParseAsync(schema, input, config2) {\n  const dataset = await schema._run(\n    { typed: false, value: input },\n    getGlobalConfig(config2)\n  );\n  return {\n    typed: dataset.typed,\n    success: !dataset.issues,\n    output: dataset.value,\n    issues: dataset.issues\n  };\n}\n\n// src/methods/safeParser/safeParser.ts\nfunction safeParser(schema, config2) {\n  const func = (input) => safeParse(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/safeParser/safeParserAsync.ts\nfunction safeParserAsync(schema, config2) {\n  const func = (input) => safeParseAsync(schema, input, config2);\n  func.schema = schema;\n  func.config = config2;\n  return func;\n}\n\n// src/methods/unwrap/unwrap.ts\nfunction unwrap(schema) {\n  return schema.wrapped;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/valibot/dist/index.js\n"));

/***/ })

}]);